{"version":3,"file":"component---src-pages-search-js-c3143e01ae0197557a18.js","mappings":"+JACWA,EAAqB,iDCMjB,SAASC,IACtB,OACEC,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKC,UAAWC,GAA8B,OAC9CF,EAAAA,cAAA,OAAKC,UAAWC,GAA8B,sBAC9CF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,oDAAgDJ,UAAWC,GAA8B,+BAC3GF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,4DAAwDJ,UAAWC,GAA8B,uCACnHF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,mDAA+CJ,UAAWC,GAA8B,8BAC1GF,EAAAA,cAAA,OAAKC,UAAWC,GAA8B,OAC9CF,EAAAA,cAAA,OAAKC,UAAWC,GAA8B,eAC9CF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,wCAAoCJ,UAAWC,GAA8B,mBAC/FF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,4CAAwCJ,UAAWC,GAA8B,uBACnGF,EAAAA,cAAA,OAAKC,UAAWC,GAA8B,OAC9CF,EAAAA,cAAA,WAAKA,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAOC,yCAAqCJ,UAAWC,GAA8B,cAGtG,C,mGCtBW,EAAY,qCACZI,EAAmB,4CCOf,SAASC,IACtB,OACEP,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAACG,EAAAA,KAAI,CAACC,GAAIC,qCAA+BJ,UAAWC,GAA4B,gBAChFF,EAAAA,cAACD,EAAAA,EAAY,MACbC,EAAAA,cAAA,OAAKQ,MAAO,CAACC,MAAM,QAAQT,EAAAA,cAACU,EAAAA,EAAU,OAG5C,C,+EChBWC,EAAa,uCACbC,EAAmB,6CACnBC,EAA0B,oDCKtB,SAASH,IACtB,MAAM,EAACI,EAAM,EAACC,IAAYC,EAAAA,EAAAA,UAAS,IAenC,OACEhB,EAAAA,cAAA,OAAKC,UAAWC,GACdF,EAAAA,cAAA,QAAMC,UAAWC,EAA4Be,GAAG,SAASC,SAf7D,SAAkBC,GAGhB,GAFAA,EAAMC,iBAEQ,KAAVN,EACF,OAGF,MAAMO,EAAS,IAAIC,gBACnBD,EAAOE,OAAO,QAAST,GACvB,MAAMU,EAAG,WAAcH,EAAOI,YAC9BC,EAAAA,EAAAA,UAASF,EACX,GAKMxB,EAAAA,cAAA,SAAOC,UAAWC,EAAmCyB,YAAY,qBAAqBC,SAAWC,GAAKd,EAASc,EAAEC,OAAOC,UAIhI,C,4PC/BA,MAAMC,EAAeC,OAAOC,OAAO,MACnCF,EAAmB,KAAI,IACvBA,EAAoB,MAAI,IACxBA,EAAmB,KAAI,IACvBA,EAAmB,KAAI,IACvBA,EAAsB,QAAI,IAC1BA,EAAsB,QAAI,IAC1BA,EAAmB,KAAI,IACvB,MAAMG,EAAuBF,OAAOC,OAAO,MAC3CD,OAAOG,KAAKJ,GAAcK,SAAQC,IAC9BH,EAAqBH,EAAaM,IAAQA,CAAG,IAEjD,MAAMC,EAAe,CAAEC,KAAM,QAASC,KAAM,gBCXtCC,EAAiC,mBAATC,MACT,oBAATA,MACqC,6BAAzCV,OAAOW,UAAUnB,SAASoB,KAAKF,MACjCG,EAA+C,mBAAhBC,YAE/BC,EAASC,GAC0B,mBAAvBF,YAAYC,OACpBD,YAAYC,OAAOC,GACnBA,GAAOA,EAAIC,kBAAkBH,YAEjCI,EAAe,EAAGX,OAAMC,QAAQW,EAAgBC,IAC9CX,GAAkBD,aAAgBE,KAC9BS,EACOC,EAASZ,GAGTa,EAAmBb,EAAMY,GAG/BP,IACJL,aAAgBM,aAAeC,EAAOP,IACnCW,EACOC,EAASZ,GAGTa,EAAmB,IAAIX,KAAK,CAACF,IAAQY,GAI7CA,EAASrB,EAAaQ,IAASC,GAAQ,KAE5Ca,EAAqB,CAACb,EAAMY,KAC9B,MAAME,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAChB,MAAMC,EAAUH,EAAWI,OAAOC,MAAM,KAAK,GAC7CP,EAAS,KAAOK,GAAW,IAC/B,EACOH,EAAWM,cAAcpB,EAAK,EAEzC,SAASqB,EAAQrB,GACb,OAAIA,aAAgBsB,WACTtB,EAEFA,aAAgBM,YACd,IAAIgB,WAAWtB,GAGf,IAAIsB,WAAWtB,EAAKS,OAAQT,EAAKuB,WAAYvB,EAAKwB,WAEjE,CACA,IAAIC,EClDJ,MAAMC,EAAQ,mEAERC,EAA+B,oBAAfL,WAA6B,GAAK,IAAIA,WAAW,KACvE,IAAK,IAAIM,GAAI,EAAGA,GAAIF,GAAcE,KAC9BD,EAAOD,EAAMG,WAAWD,KAAMA,GAE3B,MCLD,EAA+C,mBAAhBtB,YACxBwB,EAAe,CAACC,EAAeC,KACxC,GAA6B,iBAAlBD,EACP,MAAO,CACHhC,KAAM,UACNC,KAAMiC,EAAUF,EAAeC,IAGvC,MAAMjC,EAAOgC,EAAcG,OAAO,GAClC,GAAa,MAATnC,EACA,MAAO,CACHA,KAAM,UACNC,KAAMmC,EAAmBJ,EAAcK,UAAU,GAAIJ,IAI7D,OADmBtC,EAAqBK,GAIjCgC,EAAcM,OAAS,EACxB,CACEtC,KAAML,EAAqBK,GAC3BC,KAAM+B,EAAcK,UAAU,IAEhC,CACErC,KAAML,EAAqBK,IARxBD,CASN,EAEHqC,EAAqB,CAACnC,EAAMgC,KAC9B,GAAI,EAAuB,CACvB,MAAMM,EDTQ,CAACC,IACnB,IAA8DX,EAAUY,EAAUC,EAAUC,EAAUC,EAAlGC,EAA+B,IAAhBL,EAAOF,OAAeQ,EAAMN,EAAOF,OAAWS,EAAI,EACnC,MAA9BP,EAAOA,EAAOF,OAAS,KACvBO,IACkC,MAA9BL,EAAOA,EAAOF,OAAS,IACvBO,KAGR,MAAMG,EAAc,IAAIzC,YAAYsC,GAAeI,EAAQ,IAAI1B,WAAWyB,GAC1E,IAAKnB,EAAI,EAAGA,EAAIiB,EAAKjB,GAAK,EACtBY,EAAWb,EAAOY,EAAOV,WAAWD,IACpCa,EAAWd,EAAOY,EAAOV,WAAWD,EAAI,IACxCc,EAAWf,EAAOY,EAAOV,WAAWD,EAAI,IACxCe,EAAWhB,EAAOY,EAAOV,WAAWD,EAAI,IACxCoB,EAAMF,KAAQN,GAAY,EAAMC,GAAY,EAC5CO,EAAMF,MAAoB,GAAXL,IAAkB,EAAMC,GAAY,EACnDM,EAAMF,MAAoB,EAAXJ,IAAiB,EAAiB,GAAXC,EAE1C,OAAOI,CAAW,ECTEE,CAAOjD,GACvB,OAAOiC,EAAUK,EAASN,EAC9B,CAEI,MAAO,CAAEO,QAAQ,EAAMvC,OAC3B,EAEEiC,EAAY,CAACjC,EAAMgC,IAEZ,SADDA,EAEIhC,aAAgBE,KAETF,EAIA,IAAIE,KAAK,CAACF,IAIjBA,aAAgBM,YAETN,EAIAA,EAAKS,OCvDtByC,EAAYC,OAAOC,aAAa,IA4B/B,SAASC,IACZ,OAAO,IAAIC,gBAAgB,CACvB,SAAAC,CAAUC,EAAQC,IHmBnB,SAA8BD,EAAQ5C,GACrCX,GAAkBuD,EAAOxD,gBAAgBE,KAClCsD,EAAOxD,KACT0D,cACAC,KAAKtC,GACLsC,KAAK/C,GAELP,IACJmD,EAAOxD,gBAAgBM,aAAeC,EAAOiD,EAAOxD,OAC9CY,EAASS,EAAQmC,EAAOxD,OAEnCU,EAAa8C,GAAQ,GAAOI,IACnBnC,IACDA,EAAe,IAAIoC,aAEvBjD,EAASa,EAAaqC,OAAOF,GAAS,GAE9C,CGnCYG,CAAqBP,GAAQzB,IACzB,MAAMiC,EAAgBjC,EAAcM,OACpC,IAAI4B,EAEJ,GAAID,EAAgB,IAChBC,EAAS,IAAI3C,WAAW,GACxB,IAAI4C,SAASD,EAAOxD,QAAQ0D,SAAS,EAAGH,QAEvC,GAAIA,EAAgB,MAAO,CAC5BC,EAAS,IAAI3C,WAAW,GACxB,MAAM8C,EAAO,IAAIF,SAASD,EAAOxD,QACjC2D,EAAKD,SAAS,EAAG,KACjBC,EAAKC,UAAU,EAAGL,EACtB,KACK,CACDC,EAAS,IAAI3C,WAAW,GACxB,MAAM8C,EAAO,IAAIF,SAASD,EAAOxD,QACjC2D,EAAKD,SAAS,EAAG,KACjBC,EAAKE,aAAa,EAAGC,OAAOP,GAChC,CAEIR,EAAOxD,MAA+B,iBAAhBwD,EAAOxD,OAC7BiE,EAAO,IAAM,KAEjBR,EAAWe,QAAQP,GACnBR,EAAWe,QAAQzC,EAAc,GAEzC,GAER,CACA,IAAI0C,EACJ,SAASC,EAAYC,GACjB,OAAOA,EAAOC,QAAO,CAACC,EAAKC,IAAUD,EAAMC,EAAMzC,QAAQ,EAC7D,CACA,SAAS0C,EAAaJ,EAAQK,GAC1B,GAAIL,EAAO,GAAGtC,SAAW2C,EACrB,OAAOL,EAAOM,QAElB,MAAMxE,EAAS,IAAIa,WAAW0D,GAC9B,IAAIE,EAAI,EACR,IAAK,IAAItD,EAAI,EAAGA,EAAIoD,EAAMpD,IACtBnB,EAAOmB,GAAK+C,EAAO,GAAGO,KAClBA,IAAMP,EAAO,GAAGtC,SAChBsC,EAAOM,QACPC,EAAI,GAMZ,OAHIP,EAAOtC,QAAU6C,EAAIP,EAAO,GAAGtC,SAC/BsC,EAAO,GAAKA,EAAO,GAAGQ,MAAMD,IAEzBzE,CACX,CC/EO,SAAS2E,EAAQ5E,GACtB,GAAIA,EAAK,OAWX,SAAeA,GACb,IAAK,IAAIX,KAAOuF,EAAQjF,UACtBK,EAAIX,GAAOuF,EAAQjF,UAAUN,GAE/B,OAAOW,CACT,CAhBkB6E,CAAM7E,EACxB,CA0BA4E,EAAQjF,UAAUmF,GAClBF,EAAQjF,UAAUoF,iBAAmB,SAAS7G,EAAO8G,GAInD,OAHAC,KAAKC,WAAaD,KAAKC,YAAc,CAAC,GACrCD,KAAKC,WAAW,IAAMhH,GAAS+G,KAAKC,WAAW,IAAMhH,IAAU,IAC7DiH,KAAKH,GACDC,IACT,EAYAL,EAAQjF,UAAUyF,KAAO,SAASlH,EAAO8G,GACvC,SAASF,IACPG,KAAKI,IAAInH,EAAO4G,GAChBE,EAAGM,MAAML,KAAMM,UACjB,CAIA,OAFAT,EAAGE,GAAKA,EACRC,KAAKH,GAAG5G,EAAO4G,GACRG,IACT,EAYAL,EAAQjF,UAAU0F,IAClBT,EAAQjF,UAAU6F,eAClBZ,EAAQjF,UAAU8F,mBAClBb,EAAQjF,UAAU+F,oBAAsB,SAASxH,EAAO8G,GAItD,GAHAC,KAAKC,WAAaD,KAAKC,YAAc,CAAC,EAGlC,GAAKK,UAAU1D,OAEjB,OADAoD,KAAKC,WAAa,CAAC,EACZD,KAIT,IAUIU,EAVAC,EAAYX,KAAKC,WAAW,IAAMhH,GACtC,IAAK0H,EAAW,OAAOX,KAGvB,GAAI,GAAKM,UAAU1D,OAEjB,cADOoD,KAAKC,WAAW,IAAMhH,GACtB+G,KAKT,IAAK,IAAI7D,EAAI,EAAGA,EAAIwE,EAAU/D,OAAQT,IAEpC,IADAuE,EAAKC,EAAUxE,MACJ4D,GAAMW,EAAGX,KAAOA,EAAI,CAC7BY,EAAUC,OAAOzE,EAAG,GACpB,KACF,CASF,OAJyB,IAArBwE,EAAU/D,eACLoD,KAAKC,WAAW,IAAMhH,GAGxB+G,IACT,EAUAL,EAAQjF,UAAUmG,KAAO,SAAS5H,GAChC+G,KAAKC,WAAaD,KAAKC,YAAc,CAAC,EAKtC,IAHA,IAAIa,EAAO,IAAIC,MAAMT,UAAU1D,OAAS,GACpC+D,EAAYX,KAAKC,WAAW,IAAMhH,GAE7BkD,EAAI,EAAGA,EAAImE,UAAU1D,OAAQT,IACpC2E,EAAK3E,EAAI,GAAKmE,UAAUnE,GAG1B,GAAIwE,EAEG,CAAIxE,EAAI,EAAb,IAAK,IAAWiB,GADhBuD,EAAYA,EAAUjB,MAAM,IACI9C,OAAQT,EAAIiB,IAAOjB,EACjDwE,EAAUxE,GAAGkE,MAAML,KAAMc,EADKlE,CAKlC,OAAOoD,IACT,EAGAL,EAAQjF,UAAUsG,aAAerB,EAAQjF,UAAUmG,KAUnDlB,EAAQjF,UAAUuG,UAAY,SAAShI,GAErC,OADA+G,KAAKC,WAAaD,KAAKC,YAAc,CAAC,EAC/BD,KAAKC,WAAW,IAAMhH,IAAU,EACzC,EAUA0G,EAAQjF,UAAUwG,aAAe,SAASjI,GACxC,QAAU+G,KAAKiB,UAAUhI,GAAO2D,MAClC,ECxKO,MAAMuE,EACW,oBAATC,KACAA,KAEgB,oBAAXC,OACLA,OAGAC,SAAS,cAATA,GCPR,SAASC,EAAKxG,KAAQyG,GACzB,OAAOA,EAAKrC,QAAO,CAACC,EAAKqC,KACjB1G,EAAI2G,eAAeD,KACnBrC,EAAIqC,GAAK1G,EAAI0G,IAEVrC,IACR,CAAC,EACR,CAEA,MAAMuC,EAAqB,EAAWC,WAChCC,EAAuB,EAAWC,aACjC,SAASC,EAAsBhH,EAAKiH,GACnCA,EAAKC,iBACLlH,EAAImH,aAAeP,EAAmBQ,KAAK,GAC3CpH,EAAIqH,eAAiBP,EAAqBM,KAAK,KAG/CpH,EAAImH,aAAe,EAAWN,WAAWO,KAAK,GAC9CpH,EAAIqH,eAAiB,EAAWN,aAAaK,KAAK,GAE1D,CCjBO,MAAME,UAAuBC,MAChC,WAAAC,CAAYC,EAAQC,EAAaC,GAC7BC,MAAMH,GACNxC,KAAKyC,YAAcA,EACnBzC,KAAK0C,QAAUA,EACf1C,KAAK1F,KAAO,gBAChB,EAEG,MAAMsI,UAAkBjD,EAO3B,WAAA4C,CAAYP,GACRW,QACA3C,KAAK6C,UAAW,EAChBd,EAAsB/B,KAAMgC,GAC5BhC,KAAKgC,KAAOA,EACZhC,KAAKpH,MAAQoJ,EAAKpJ,MAClBoH,KAAK8C,OAASd,EAAKc,MACvB,CAUA,OAAAC,CAAQP,EAAQC,EAAaC,GAEzB,OADAC,MAAM3B,aAAa,QAAS,IAAIqB,EAAeG,EAAQC,EAAaC,IAC7D1C,IACX,CAIA,IAAAgD,GAGI,OAFAhD,KAAKiD,WAAa,UAClBjD,KAAKkD,SACElD,IACX,CAIA,KAAAmD,GAKI,MAJwB,YAApBnD,KAAKiD,YAAgD,SAApBjD,KAAKiD,aACtCjD,KAAKoD,UACLpD,KAAKqD,WAEFrD,IACX,CAMA,IAAAsD,CAAKC,GACuB,SAApBvD,KAAKiD,YACLjD,KAAKwD,MAAMD,EAKnB,CAMA,MAAAE,GACIzD,KAAKiD,WAAa,OAClBjD,KAAK6C,UAAW,EAChBF,MAAM3B,aAAa,OACvB,CAOA,MAAA0C,CAAOnJ,GACH,MAAMwD,EAAS1B,EAAa9B,EAAMyF,KAAK8C,OAAOvG,YAC9CyD,KAAK2D,SAAS5F,EAClB,CAMA,QAAA4F,CAAS5F,GACL4E,MAAM3B,aAAa,SAAUjD,EACjC,CAMA,OAAAsF,CAAQO,GACJ5D,KAAKiD,WAAa,SAClBN,MAAM3B,aAAa,QAAS4C,EAChC,CAMA,KAAAC,CAAMC,GAAW,CACjB,SAAAC,CAAUC,EAAQpL,EAAQ,CAAC,GACvB,OAAQoL,EACJ,MACAhE,KAAKiE,YACLjE,KAAKkE,QACLlE,KAAKgC,KAAKmC,KACVnE,KAAKoE,OAAOxL,EACpB,CACA,SAAAqL,GACI,MAAMI,EAAWrE,KAAKgC,KAAKqC,SAC3B,OAAkC,IAA3BA,EAASC,QAAQ,KAAcD,EAAW,IAAMA,EAAW,GACtE,CACA,KAAAH,GACI,OAAIlE,KAAKgC,KAAKuC,OACRvE,KAAKgC,KAAKwC,QAAUC,OAA0B,MAAnBzE,KAAKgC,KAAKuC,QACjCvE,KAAKgC,KAAKwC,QAAqC,KAA3BC,OAAOzE,KAAKgC,KAAKuC,OACpC,IAAMvE,KAAKgC,KAAKuC,KAGhB,EAEf,CACA,MAAAH,CAAOxL,GACH,MAAM8L,ECjIP,SAAgB3J,GACnB,IAAI4J,EAAM,GACV,IAAK,IAAIxI,KAAKpB,EACNA,EAAI2G,eAAevF,KACfwI,EAAI/H,SACJ+H,GAAO,KACXA,GAAOC,mBAAmBzI,GAAK,IAAMyI,mBAAmB7J,EAAIoB,KAGpE,OAAOwI,CACX,CDuH6B,CAAO/L,GAC5B,OAAO8L,EAAa9H,OAAS,IAAM8H,EAAe,EACtD,EEzIJ,MAAMG,EAAW,mEAAmEnJ,MAAM,IAAK,EAAS,GAAIoJ,EAAM,CAAC,EACnH,IAAqBC,EAAjBC,EAAO,EAAG7I,EAAI,EAQX,SAAS,EAAO8I,GACnB,IAAI9G,EAAU,GACd,GACIA,EAAU0G,EAASI,EAAM,GAAU9G,EACnC8G,EAAMC,KAAKC,MAAMF,EAAM,SAClBA,EAAM,GACf,OAAO9G,CACX,CAqBO,SAASiH,IACZ,MAAMC,EAAM,GAAQ,IAAIC,MACxB,OAAID,IAAQN,GACDC,EAAO,EAAGD,EAAOM,GACrBA,EAAM,IAAM,EAAOL,IAC9B,CAIA,KAAO7I,EAAI,EAAQA,IACf2I,EAAID,EAAS1I,IAAMA,EChDvB,IAAItC,GAAQ,EACZ,IACIA,EAAkC,oBAAnB0L,gBACX,oBAAqB,IAAIA,cACjC,CACA,MAAOC,IAGP,CACO,MAAMC,EAAU5L,ECPhB,SAAS6L,EAAI1D,GAChB,MAAM2D,EAAU3D,EAAK2D,QAErB,IACI,GAAI,oBAAuBJ,kBAAoBI,GAAWF,GACtD,OAAO,IAAIF,cAEnB,CACA,MAAO5L,GAAK,CACZ,IAAKgM,EACD,IACI,OAAO,IAAI,EAAW,CAAC,UAAUC,OAAO,UAAUC,KAAK,OAAM,oBACjE,CACA,MAAOlM,GAAK,CAEpB,CCXA,SAASmM,IAAU,CACnB,MAAMC,EAIK,MAHK,IAAI,EAAe,CAC3BJ,SAAS,IAEMK,aAkNhB,MAAMC,UAAgBtG,EAOzB,WAAA4C,CAAY2D,EAAKlE,GACbW,QACAZ,EAAsB/B,KAAMgC,GAC5BhC,KAAKgC,KAAOA,EACZhC,KAAKmG,OAASnE,EAAKmE,QAAU,MAC7BnG,KAAKkG,IAAMA,EACXlG,KAAKzF,UAAO6L,IAAcpE,EAAKzH,KAAOyH,EAAKzH,KAAO,KAClDyF,KAAKhG,QACT,CAMA,MAAAA,GACI,IAAIqM,EACJ,MAAMrE,EAAOT,EAAKvB,KAAKgC,KAAM,QAAS,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,aACjHA,EAAK2D,UAAY3F,KAAKgC,KAAKsE,GAC3B,MAAMC,EAAOvG,KAAKuG,IAAM,IAAI,EAAevE,GAC3C,IACIuE,EAAIvD,KAAKhD,KAAKmG,OAAQnG,KAAKkG,KAAK,GAChC,IACI,GAAIlG,KAAKgC,KAAKwE,aAAc,CACxBD,EAAIE,uBAAyBF,EAAIE,uBAAsB,GACvD,IAAK,IAAItK,KAAK6D,KAAKgC,KAAKwE,aAChBxG,KAAKgC,KAAKwE,aAAa9E,eAAevF,IACtCoK,EAAIG,iBAAiBvK,EAAG6D,KAAKgC,KAAKwE,aAAarK,GAG3D,CACJ,CACA,MAAOxC,GAAK,CACZ,GAAI,SAAWqG,KAAKmG,OAChB,IACII,EAAIG,iBAAiB,eAAgB,2BACzC,CACA,MAAO/M,GAAK,CAEhB,IACI4M,EAAIG,iBAAiB,SAAU,MACnC,CACA,MAAO/M,GAAK,CACmB,QAA9B0M,EAAKrG,KAAKgC,KAAK2E,iBAA8B,IAAPN,GAAyBA,EAAGO,WAAWL,GAE1E,oBAAqBA,IACrBA,EAAIM,gBAAkB7G,KAAKgC,KAAK6E,iBAEhC7G,KAAKgC,KAAK8E,iBACVP,EAAIQ,QAAU/G,KAAKgC,KAAK8E,gBAE5BP,EAAIS,mBAAqB,KACrB,IAAIX,EACmB,IAAnBE,EAAItD,aAC2B,QAA9BoD,EAAKrG,KAAKgC,KAAK2E,iBAA8B,IAAPN,GAAyBA,EAAGY,aAAaV,IAEhF,IAAMA,EAAItD,aAEV,MAAQsD,EAAIW,QAAU,OAASX,EAAIW,OACnClH,KAAKmH,SAKLnH,KAAKkC,cAAa,KACdlC,KAAK+C,QAA8B,iBAAfwD,EAAIW,OAAsBX,EAAIW,OAAS,EAAE,GAC9D,GACP,EAEJX,EAAIjD,KAAKtD,KAAKzF,KAClB,CACA,MAAOZ,GAOH,YAHAqG,KAAKkC,cAAa,KACdlC,KAAK+C,QAAQpJ,EAAE,GAChB,EAEP,CACwB,oBAAbyN,WACPpH,KAAKqH,MAAQpB,EAAQqB,gBACrBrB,EAAQsB,SAASvH,KAAKqH,OAASrH,KAEvC,CAMA,OAAA+C,CAAQyC,GACJxF,KAAKgB,aAAa,QAASwE,EAAKxF,KAAKuG,KACrCvG,KAAKwH,SAAQ,EACjB,CAMA,OAAAA,CAAQC,GACJ,QAAI,IAAuBzH,KAAKuG,KAAO,OAASvG,KAAKuG,IAArD,CAIA,GADAvG,KAAKuG,IAAIS,mBAAqBlB,EAC1B2B,EACA,IACIzH,KAAKuG,IAAImB,OACb,CACA,MAAO/N,GAAK,CAEQ,oBAAbyN,iBACAnB,EAAQsB,SAASvH,KAAKqH,OAEjCrH,KAAKuG,IAAM,IAXX,CAYJ,CAMA,MAAAY,GACI,MAAM5M,EAAOyF,KAAKuG,IAAIoB,aACT,OAATpN,IACAyF,KAAKgB,aAAa,OAAQzG,GAC1ByF,KAAKgB,aAAa,WAClBhB,KAAKwH,UAEb,CAMA,KAAAE,GACI1H,KAAKwH,SACT,EASJ,GAPAvB,EAAQqB,cAAgB,EACxBrB,EAAQsB,SAAW,CAAC,EAMI,oBAAbH,SAEP,GAA2B,mBAAhBQ,YAEPA,YAAY,WAAYC,QAEvB,GAAgC,mBAArB/H,iBAAiC,CAE7CA,iBADyB,eAAgB,EAAa,WAAa,SAChC+H,GAAe,EACtD,CAEJ,SAASA,IACL,IAAK,IAAI1L,KAAK8J,EAAQsB,SACdtB,EAAQsB,SAAS7F,eAAevF,IAChC8J,EAAQsB,SAASpL,GAAGuL,OAGhC,CCpYO,MAAMI,EACqC,mBAAZC,SAAqD,mBAApBA,QAAQC,QAE/DtH,GAAOqH,QAAQC,UAAU9J,KAAKwC,GAG/B,CAACA,EAAIwB,IAAiBA,EAAaxB,EAAI,GAGzCuH,EAAY,EAAWA,WAAa,EAAWC,aCJtDC,EAAqC,oBAAdC,WACI,iBAAtBA,UAAUC,SACmB,gBAApCD,UAAUC,QAAQC,cCLf,MAAMC,GAAa,CACtBC,UDKG,cAAiB5F,EAOpB,WAAAL,CAAYP,GACRW,MAAMX,GACNhC,KAAK9E,gBAAkB8G,EAAKyG,WAChC,CACA,QAAIC,GACA,MAAO,WACX,CACA,MAAAxF,GACI,IAAKlD,KAAK2I,QAEN,OAEJ,MAAMzC,EAAMlG,KAAKkG,MACX0C,EAAY5I,KAAKgC,KAAK4G,UAEtB5G,EAAOmG,EACP,CAAC,EACD5G,EAAKvB,KAAKgC,KAAM,QAAS,oBAAqB,MAAO,MAAO,aAAc,OAAQ,KAAM,UAAW,qBAAsB,eAAgB,kBAAmB,SAAU,aAAc,SAAU,uBAChMhC,KAAKgC,KAAKwE,eACVxE,EAAK6G,QAAU7I,KAAKgC,KAAKwE,cAE7B,IACIxG,KAAK8I,GACyBX,EAIpB,IAAIF,EAAU/B,EAAK0C,EAAW5G,GAH9B4G,EACI,IAAIX,EAAU/B,EAAK0C,GACnB,IAAIX,EAAU/B,EAEhC,CACA,MAAOV,IACH,OAAOxF,KAAKgB,aAAa,QAASwE,GACtC,CACAxF,KAAK8I,GAAGvM,WAAayD,KAAK8C,OAAOvG,WACjCyD,KAAK+I,mBACT,CAMA,iBAAAA,GACI/I,KAAK8I,GAAGE,OAAS,KACThJ,KAAKgC,KAAKiH,WACVjJ,KAAK8I,GAAGI,QAAQC,QAEpBnJ,KAAKyD,QAAQ,EAEjBzD,KAAK8I,GAAGM,QAAWC,GAAerJ,KAAKqD,QAAQ,CAC3CZ,YAAa,8BACbC,QAAS2G,IAEbrJ,KAAK8I,GAAGQ,UAAaC,GAAOvJ,KAAK0D,OAAO6F,EAAGhP,MAC3CyF,KAAK8I,GAAGU,QAAW7P,GAAMqG,KAAK+C,QAAQ,kBAAmBpJ,EAC7D,CACA,KAAA6J,CAAMD,GACFvD,KAAK6C,UAAW,EAGhB,IAAK,IAAI1G,EAAI,EAAGA,EAAIoH,EAAQ3G,OAAQT,IAAK,CACrC,MAAM4B,EAASwF,EAAQpH,GACjBsN,EAAatN,IAAMoH,EAAQ3G,OAAS,EAC1C3B,EAAa8C,EAAQiC,KAAK9E,gBAAiBX,IAmBvC,IAGQyF,KAAK8I,GAAGxF,KAAK/I,EAKrB,CACA,MAAOZ,GACP,CACI8P,GAGA3B,GAAS,KACL9H,KAAK6C,UAAW,EAChB7C,KAAKgB,aAAa,QAAQ,GAC3BhB,KAAKkC,aACZ,GAER,CACJ,CACA,OAAAkB,QAC2B,IAAZpD,KAAK8I,KACZ9I,KAAK8I,GAAG3F,QACRnD,KAAK8I,GAAK,KAElB,CAMA,GAAA5C,GACI,MAAMlC,EAAShE,KAAKgC,KAAKwC,OAAS,MAAQ,KACpC5L,EAAQoH,KAAKpH,OAAS,CAAC,EAS7B,OAPIoH,KAAKgC,KAAK0H,oBACV9Q,EAAMoH,KAAKgC,KAAK2H,gBAAkBvE,KAGjCpF,KAAK9E,iBACNtC,EAAMgR,IAAM,GAET5J,KAAK+D,UAAUC,EAAQpL,EAClC,CAOA,KAAA+P,GACI,QAASV,CACb,GCjJA4B,aCFG,cAAiBjH,EACpB,QAAI8F,GACA,MAAO,cACX,CACA,MAAAxF,GAEgC,mBAAjB4G,eAIX9J,KAAK+J,UAAY,IAAID,aAAa9J,KAAK+D,UAAU,SAAU/D,KAAKgC,KAAKgI,iBAAiBhK,KAAK0I,OAC3F1I,KAAK+J,UAAUE,OACV/L,MAAK,KACN8B,KAAKqD,SAAS,IAEb6G,OAAO1E,IACRxF,KAAK+C,QAAQ,qBAAsByC,EAAI,IAG3CxF,KAAK+J,UAAUI,MAAMjM,MAAK,KACtB8B,KAAK+J,UAAUK,4BAA4BlM,MAAMmM,IAC7C,MAAMC,Eb8Df,SAAmCC,EAAYhO,GAC7CyC,IACDA,EAAe,IAAIwL,aAEvB,MAAMtL,EAAS,GACf,IAAIuL,EAAQ,EACRC,GAAkB,EAClBC,GAAW,EACf,OAAO,IAAI9M,gBAAgB,CACvB,SAAAC,CAAUuB,EAAOrB,GAEb,IADAkB,EAAOgB,KAAKb,KACC,CACT,GAAc,IAAVoL,EAA+B,CAC/B,GAAIxL,EAAYC,GAAU,EACtB,MAEJ,MAAMV,EAASc,EAAaJ,EAAQ,GACpCyL,EAAkC,MAAV,IAAZnM,EAAO,IACnBkM,EAA6B,IAAZlM,EAAO,GAEpBiM,EADAC,EAAiB,IACT,EAEgB,MAAnBA,EACG,EAGA,CAEhB,MACK,GAAc,IAAVD,EAA2C,CAChD,GAAIxL,EAAYC,GAAU,EACtB,MAEJ,MAAM0L,EAActL,EAAaJ,EAAQ,GACzCwL,EAAiB,IAAIjM,SAASmM,EAAY5P,OAAQ4P,EAAY9O,WAAY8O,EAAYhO,QAAQiO,UAAU,GACxGJ,EAAQ,CACZ,MACK,GAAc,IAAVA,EAA2C,CAChD,GAAIxL,EAAYC,GAAU,EACtB,MAEJ,MAAM0L,EAActL,EAAaJ,EAAQ,GACnCP,EAAO,IAAIF,SAASmM,EAAY5P,OAAQ4P,EAAY9O,WAAY8O,EAAYhO,QAC5EkO,EAAInM,EAAKoM,UAAU,GACzB,GAAID,EAAI5F,KAAK8F,IAAI,EAAG,IAAW,EAAG,CAE9BhN,EAAWe,QAAQ1E,GACnB,KACJ,CACAqQ,EAAiBI,EAAI5F,KAAK8F,IAAI,EAAG,IAAMrM,EAAKoM,UAAU,GACtDN,EAAQ,CACZ,KACK,CACD,GAAIxL,EAAYC,GAAUwL,EACtB,MAEJ,MAAMnQ,EAAO+E,EAAaJ,EAAQwL,GAClC1M,EAAWe,QAAQ1C,EAAasO,EAAWpQ,EAAOyE,EAAaxB,OAAOjD,GAAOgC,IAC7EkO,EAAQ,CACZ,CACA,GAAuB,IAAnBC,GAAwBA,EAAiBH,EAAY,CACrDvM,EAAWe,QAAQ1E,GACnB,KACJ,CACJ,CACJ,GAER,CajIsC4Q,CAA0BxG,OAAOyG,iBAAkBlL,KAAK8C,OAAOvG,YAC/E4O,EAASd,EAAOe,SAASC,YAAYf,GAAegB,YACpDC,EAAgB3N,IACtB2N,EAAcH,SAASI,OAAOnB,EAAOxH,UACrC7C,KAAKyL,OAASF,EAAc1I,SAAS6I,YACrC,MAAMC,EAAO,KACTR,EACKQ,OACAzN,MAAK,EAAG0N,OAAM/R,YACX+R,IAGJ5L,KAAK2D,SAAS9J,GACd8R,IAAM,IAELzB,OAAO1E,IAAD,GACT,EAENmG,IACA,MAAM5N,EAAS,CAAEzD,KAAM,QACnB0F,KAAKpH,MAAMiT,MACX9N,EAAOxD,KAAO,WAAWyF,KAAKpH,MAAMiT,SAExC7L,KAAKyL,OAAOjI,MAAMzF,GAAQG,MAAK,IAAM8B,KAAKyD,UAAS,GACrD,IAEV,CACA,KAAAD,CAAMD,GACFvD,KAAK6C,UAAW,EAChB,IAAK,IAAI1G,EAAI,EAAGA,EAAIoH,EAAQ3G,OAAQT,IAAK,CACrC,MAAM4B,EAASwF,EAAQpH,GACjBsN,EAAatN,IAAMoH,EAAQ3G,OAAS,EAC1CoD,KAAKyL,OAAOjI,MAAMzF,GAAQG,MAAK,KACvBuL,GACA3B,GAAS,KACL9H,KAAK6C,UAAW,EAChB7C,KAAKgB,aAAa,QAAQ,GAC3BhB,KAAKkC,aACZ,GAER,CACJ,CACA,OAAAkB,GACI,IAAIiD,EACsB,QAAzBA,EAAKrG,KAAK+J,iBAA8B,IAAP1D,GAAyBA,EAAGlD,OAClE,GD/DA2I,QHQG,cAAsBlJ,EAOzB,WAAAL,CAAYP,GAGR,GAFAW,MAAMX,GACNhC,KAAK8L,SAAU,EACS,oBAAbC,SAA0B,CACjC,MAAMC,EAAQ,WAAaD,SAASE,SACpC,IAAI1H,EAAOwH,SAASxH,KAEfA,IACDA,EAAOyH,EAAQ,MAAQ,MAE3BhM,KAAKsG,GACoB,oBAAbyF,UACJ/J,EAAKqC,WAAa0H,SAAS1H,UAC3BE,IAASvC,EAAKuC,IAC1B,CAIA,MAAMkE,EAAczG,GAAQA,EAAKyG,YACjCzI,KAAK9E,eAAiB6K,IAAY0C,EAC9BzI,KAAKgC,KAAK6E,kBACV7G,KAAK2G,eAAYuF,EAEzB,CACA,QAAIxD,GACA,MAAO,SACX,CAOA,MAAAxF,GACIlD,KAAKmM,MACT,CAOA,KAAAtI,CAAMC,GACF9D,KAAKiD,WAAa,UAClB,MAAMY,EAAQ,KACV7D,KAAKiD,WAAa,SAClBa,GAAS,EAEb,GAAI9D,KAAK8L,UAAY9L,KAAK6C,SAAU,CAChC,IAAIuJ,EAAQ,EACRpM,KAAK8L,UACLM,IACApM,KAAKG,KAAK,gBAAgB,aACpBiM,GAASvI,GACf,KAEC7D,KAAK6C,WACNuJ,IACApM,KAAKG,KAAK,SAAS,aACbiM,GAASvI,GACf,IAER,MAEIA,GAER,CAMA,IAAAsI,GACInM,KAAK8L,SAAU,EACf9L,KAAKqM,SACLrM,KAAKgB,aAAa,OACtB,CAMA,MAAA0C,CAAOnJ,GTpFW,EAAC+R,EAAgB/P,KACnC,MAAMgQ,EAAiBD,EAAe5Q,MAAM+B,GACtC8F,EAAU,GAChB,IAAK,IAAIpH,EAAI,EAAGA,EAAIoQ,EAAe3P,OAAQT,IAAK,CAC5C,MAAMqQ,EAAgBnQ,EAAakQ,EAAepQ,GAAII,GAEtD,GADAgH,EAAQrD,KAAKsM,GACc,UAAvBA,EAAclS,KACd,KAER,CACA,OAAOiJ,CAAO,ESyFVkJ,CAAclS,EAAMyF,KAAK8C,OAAOvG,YAAYpC,SAd1B4D,IAMd,GAJI,YAAciC,KAAKiD,YAA8B,SAAhBlF,EAAOzD,MACxC0F,KAAKyD,SAGL,UAAY1F,EAAOzD,KAEnB,OADA0F,KAAKqD,QAAQ,CAAEZ,YAAa,oCACrB,EAGXzC,KAAK2D,SAAS5F,EAAO,IAKrB,WAAaiC,KAAKiD,aAElBjD,KAAK8L,SAAU,EACf9L,KAAKgB,aAAa,gBACd,SAAWhB,KAAKiD,YAChBjD,KAAKmM,OAKjB,CAMA,OAAA/I,GACI,MAAMD,EAAQ,KACVnD,KAAKwD,MAAM,CAAC,CAAElJ,KAAM,UAAW,EAE/B,SAAW0F,KAAKiD,WAChBE,IAKAnD,KAAKG,KAAK,OAAQgD,EAE1B,CAOA,KAAAK,CAAMD,GACFvD,KAAK6C,UAAW,ETxJF,EAACU,EAASpI,KAE5B,MAAMyB,EAAS2G,EAAQ3G,OACjB2P,EAAiB,IAAIxL,MAAMnE,GACjC,IAAI8P,EAAQ,EACZnJ,EAAQpJ,SAAQ,CAAC4D,EAAQ5B,KAErBlB,EAAa8C,GAAQ,GAAOzB,IACxBiQ,EAAepQ,GAAKG,IACdoQ,IAAU9P,GACZzB,EAASoR,EAAe1G,KAAKpI,GACjC,GACF,GACJ,ES4IEkP,CAAcpJ,GAAUhJ,IACpByF,KAAK4M,QAAQrS,GAAM,KACfyF,KAAK6C,UAAW,EAChB7C,KAAKgB,aAAa,QAAQ,GAC5B,GAEV,CAMA,GAAAkF,GACI,MAAMlC,EAAShE,KAAKgC,KAAKwC,OAAS,QAAU,OACtC5L,EAAQoH,KAAKpH,OAAS,CAAC,EAQ7B,OANI,IAAUoH,KAAKgC,KAAK0H,oBACpB9Q,EAAMoH,KAAKgC,KAAK2H,gBAAkBvE,KAEjCpF,KAAK9E,gBAAmBtC,EAAMiT,MAC/BjT,EAAMgR,IAAM,GAET5J,KAAK+D,UAAUC,EAAQpL,EAClC,CAOA,OAAAiU,CAAQ7K,EAAO,CAAC,GAEZ,OADAjI,OAAO+S,OAAO9K,EAAM,CAAEsE,GAAItG,KAAKsG,GAAIK,UAAW3G,KAAK2G,WAAa3G,KAAKgC,MAC9D,IAAIiE,EAAQjG,KAAKkG,MAAOlE,EACnC,CAQA,OAAA4K,CAAQrS,EAAMwF,GACV,MAAMgN,EAAM/M,KAAK6M,QAAQ,CACrB1G,OAAQ,OACR5L,KAAMA,IAEVwS,EAAIlN,GAAG,UAAWE,GAClBgN,EAAIlN,GAAG,SAAS,CAACmN,EAAWtK,KACxB1C,KAAK+C,QAAQ,iBAAkBiK,EAAWtK,EAAQ,GAE1D,CAMA,MAAA2J,GACI,MAAMU,EAAM/M,KAAK6M,UACjBE,EAAIlN,GAAG,OAAQG,KAAK0D,OAAOvB,KAAKnC,OAChC+M,EAAIlN,GAAG,SAAS,CAACmN,EAAWtK,KACxB1C,KAAK+C,QAAQ,iBAAkBiK,EAAWtK,EAAQ,IAEtD1C,KAAKiN,QAAUF,CACnB,IKzMEG,GAAK,sPACLC,GAAQ,CACV,SAAU,WAAY,YAAa,WAAY,OAAQ,WAAY,OAAQ,OAAQ,WAAY,OAAQ,YAAa,OAAQ,QAAS,UAElI,SAASC,GAAMzI,GAClB,GAAIA,EAAI/H,OAAS,IACb,KAAM,eAEV,MAAMyQ,EAAM1I,EAAK2I,EAAI3I,EAAIL,QAAQ,KAAM3K,EAAIgL,EAAIL,QAAQ,MAC7C,GAANgJ,IAAiB,GAAN3T,IACXgL,EAAMA,EAAIhI,UAAU,EAAG2Q,GAAK3I,EAAIhI,UAAU2Q,EAAG3T,GAAG4T,QAAQ,KAAM,KAAO5I,EAAIhI,UAAUhD,EAAGgL,EAAI/H,SAE9F,IAAI4Q,EAAIN,GAAGO,KAAK9I,GAAO,IAAKuB,EAAM,CAAC,EAAG/J,EAAI,GAC1C,KAAOA,KACH+J,EAAIiH,GAAMhR,IAAMqR,EAAErR,IAAM,GAU5B,OARU,GAANmR,IAAiB,GAAN3T,IACXuM,EAAIwH,OAASL,EACbnH,EAAIyH,KAAOzH,EAAIyH,KAAKhR,UAAU,EAAGuJ,EAAIyH,KAAK/Q,OAAS,GAAG2Q,QAAQ,KAAM,KACpErH,EAAI0H,UAAY1H,EAAI0H,UAAUL,QAAQ,IAAK,IAAIA,QAAQ,IAAK,IAAIA,QAAQ,KAAM,KAC9ErH,EAAI2H,SAAU,GAElB3H,EAAI4H,UAIR,SAAmB/S,EAAKoJ,GACpB,MAAM4J,EAAO,WAAYC,EAAQ7J,EAAKoJ,QAAQQ,EAAM,KAAKrS,MAAM,KACvC,KAApByI,EAAKzE,MAAM,EAAG,IAA6B,IAAhByE,EAAKvH,QAChCoR,EAAMpN,OAAO,EAAG,GAEE,KAAlBuD,EAAKzE,OAAO,IACZsO,EAAMpN,OAAOoN,EAAMpR,OAAS,EAAG,GAEnC,OAAOoR,CACX,CAboBF,CAAU5H,EAAKA,EAAU,MACzCA,EAAI+H,SAaR,SAAkB/H,EAAKtN,GACnB,MAAM2B,EAAO,CAAC,EAMd,OALA3B,EAAM2U,QAAQ,6BAA6B,SAAUW,EAAIC,EAAIC,GACrDD,IACA5T,EAAK4T,GAAMC,EAEnB,IACO7T,CACX,CArBmB0T,CAAS/H,EAAKA,EAAW,OACjCA,CACX,CCrCO,MAAMmI,WAAe1O,EAOxB,WAAA4C,CAAY2D,EAAKlE,EAAO,CAAC,GACrBW,QACA3C,KAAKzD,WLJoB,cKKzByD,KAAKsO,YAAc,GACfpI,GAAO,iBAAoBA,IAC3BlE,EAAOkE,EACPA,EAAM,MAENA,GACAA,EAAMkH,GAAMlH,GACZlE,EAAKqC,SAAW6B,EAAIyH,KACpB3L,EAAKwC,OAA0B,UAAjB0B,EAAI+F,UAAyC,QAAjB/F,EAAI+F,SAC9CjK,EAAKuC,KAAO2B,EAAI3B,KACZ2B,EAAItN,QACJoJ,EAAKpJ,MAAQsN,EAAItN,QAEhBoJ,EAAK2L,OACV3L,EAAKqC,SAAW+I,GAAMpL,EAAK2L,MAAMA,MAErC5L,EAAsB/B,KAAMgC,GAC5BhC,KAAKwE,OACD,MAAQxC,EAAKwC,OACPxC,EAAKwC,OACe,oBAAbuH,UAA4B,WAAaA,SAASE,SAC/DjK,EAAKqC,WAAarC,EAAKuC,OAEvBvC,EAAKuC,KAAOvE,KAAKwE,OAAS,MAAQ,MAEtCxE,KAAKqE,SACDrC,EAAKqC,WACoB,oBAAb0H,SAA2BA,SAAS1H,SAAW,aAC/DrE,KAAKuE,KACDvC,EAAKuC,OACoB,oBAAbwH,UAA4BA,SAASxH,KACvCwH,SAASxH,KACTvE,KAAKwE,OACD,MACA,MAClBxE,KAAKuI,WAAavG,EAAKuG,YAAc,CACjC,UACA,YACA,gBAEJvI,KAAKsO,YAAc,GACnBtO,KAAKuO,cAAgB,EACrBvO,KAAKgC,KAAOjI,OAAO+S,OAAO,CACtB3I,KAAM,aACNqK,OAAO,EACP3H,iBAAiB,EACjB4H,SAAS,EACT9E,eAAgB,IAChB+E,iBAAiB,EACjBC,kBAAkB,EAClBC,oBAAoB,EACpBC,kBAAmB,CACfC,UAAW,MAEf9E,iBAAkB,CAAC,EACnB+E,qBAAqB,GACtB/M,GACHhC,KAAKgC,KAAKmC,KACNnE,KAAKgC,KAAKmC,KAAKoJ,QAAQ,MAAO,KACzBvN,KAAKgC,KAAK2M,iBAAmB,IAAM,IACb,iBAApB3O,KAAKgC,KAAKpJ,QACjBoH,KAAKgC,KAAKpJ,MVrDf,SAAgBoW,GACnB,IAAIC,EAAM,CAAC,EACPC,EAAQF,EAAGtT,MAAM,KACrB,IAAK,IAAIS,EAAI,EAAGgT,EAAID,EAAMtS,OAAQT,EAAIgT,EAAGhT,IAAK,CAC1C,IAAIiT,EAAOF,EAAM/S,GAAGT,MAAM,KAC1BuT,EAAII,mBAAmBD,EAAK,KAAOC,mBAAmBD,EAAK,GAC/D,CACA,OAAOH,CACX,CU6C8B,CAAOjP,KAAKgC,KAAKpJ,QAGvCoH,KAAKjH,GAAK,KACViH,KAAKsP,SAAW,KAChBtP,KAAKuP,aAAe,KACpBvP,KAAKwP,YAAc,KAEnBxP,KAAKyP,iBAAmB,KACQ,mBAArB3P,mBACHE,KAAKgC,KAAK+M,sBAIV/O,KAAK0P,0BAA4B,KACzB1P,KAAK+J,YAEL/J,KAAK+J,UAAUvJ,qBACfR,KAAK+J,UAAU5G,QACnB,EAEJrD,iBAAiB,eAAgBE,KAAK0P,2BAA2B,IAE/C,cAAlB1P,KAAKqE,WACLrE,KAAK2P,qBAAuB,KACxB3P,KAAKqD,QAAQ,kBAAmB,CAC5BZ,YAAa,2BACf,EAEN3C,iBAAiB,UAAWE,KAAK2P,sBAAsB,KAG/D3P,KAAKgD,MACT,CAQA,eAAA4M,CAAgBlH,GACZ,MAAM9P,EAAQmB,OAAO+S,OAAO,CAAC,EAAG9M,KAAKgC,KAAKpJ,OAE1CA,EAAMiX,IfgCU,Ee9BhBjX,EAAMmR,UAAYrB,EAEd1I,KAAKjH,KACLH,EAAMiT,IAAM7L,KAAKjH,IACrB,MAAMiJ,EAAOjI,OAAO+S,OAAO,CAAC,EAAG9M,KAAKgC,KAAM,CACtCpJ,QACAkK,OAAQ9C,KACRqE,SAAUrE,KAAKqE,SACfG,OAAQxE,KAAKwE,OACbD,KAAMvE,KAAKuE,MACZvE,KAAKgC,KAAKgI,iBAAiBtB,IAC9B,OAAO,IAAIH,GAAWG,GAAM1G,EAChC,CAMA,IAAAgB,GACI,IAAI+G,EACJ,GAAI/J,KAAKgC,KAAK0M,iBACVL,GAAOyB,wBACmC,IAA1C9P,KAAKuI,WAAWjE,QAAQ,aACxByF,EAAY,gBAEX,IAAI,IAAM/J,KAAKuI,WAAW3L,OAK3B,YAHAoD,KAAKkC,cAAa,KACdlC,KAAKgB,aAAa,QAAS,0BAA0B,GACtD,GAIH+I,EAAY/J,KAAKuI,WAAW,EAChC,CACAvI,KAAKiD,WAAa,UAElB,IACI8G,EAAY/J,KAAK4P,gBAAgB7F,EACrC,CACA,MAAOpQ,GAGH,OAFAqG,KAAKuI,WAAW/I,aAChBQ,KAAKgD,MAET,CACA+G,EAAU/G,OACVhD,KAAK+P,aAAahG,EACtB,CAMA,YAAAgG,CAAahG,GACL/J,KAAK+J,WACL/J,KAAK+J,UAAUvJ,qBAGnBR,KAAK+J,UAAYA,EAEjBA,EACKlK,GAAG,QAASG,KAAKgQ,QAAQ7N,KAAKnC,OAC9BH,GAAG,SAAUG,KAAK2D,SAASxB,KAAKnC,OAChCH,GAAG,QAASG,KAAK+C,QAAQZ,KAAKnC,OAC9BH,GAAG,SAAU2C,GAAWxC,KAAKqD,QAAQ,kBAAmBb,IACjE,CAOA,KAAAyN,CAAMvH,GACF,IAAIqB,EAAY/J,KAAK4P,gBAAgBlH,GACjCwH,GAAS,EACb7B,GAAOyB,uBAAwB,EAC/B,MAAMK,EAAkB,KAChBD,IAEJnG,EAAUzG,KAAK,CAAC,CAAEhJ,KAAM,OAAQC,KAAM,WACtCwP,EAAU5J,KAAK,UAAWiQ,IACtB,IAAIF,EAEJ,GAAI,SAAWE,EAAI9V,MAAQ,UAAY8V,EAAI7V,KAAM,CAG7C,GAFAyF,KAAKqQ,WAAY,EACjBrQ,KAAKgB,aAAa,YAAa+I,IAC1BA,EACD,OACJsE,GAAOyB,sBAAwB,cAAgB/F,EAAUrB,KACzD1I,KAAK+J,UAAUlG,OAAM,KACbqM,GAEA,WAAalQ,KAAKiD,aAEtBuE,IACAxH,KAAK+P,aAAahG,GAClBA,EAAUzG,KAAK,CAAC,CAAEhJ,KAAM,aACxB0F,KAAKgB,aAAa,UAAW+I,GAC7BA,EAAY,KACZ/J,KAAKqQ,WAAY,EACjBrQ,KAAKsQ,QAAO,GAEpB,KACK,CACD,MAAM9K,EAAM,IAAIlD,MAAM,eAEtBkD,EAAIuE,UAAYA,EAAUrB,KAC1B1I,KAAKgB,aAAa,eAAgBwE,EACtC,KACF,EAEN,SAAS+K,IACDL,IAGJA,GAAS,EACT1I,IACAuC,EAAU5G,QACV4G,EAAY,KAChB,CAEA,MAAMP,EAAWhE,IACb,MAAMgL,EAAQ,IAAIlO,MAAM,gBAAkBkD,GAE1CgL,EAAMzG,UAAYA,EAAUrB,KAC5B6H,IACAvQ,KAAKgB,aAAa,eAAgBwP,EAAM,EAE5C,SAASC,IACLjH,EAAQ,mBACZ,CAEA,SAASJ,IACLI,EAAQ,gBACZ,CAEA,SAASkH,EAAUxY,GACX6R,GAAa7R,EAAGwQ,OAASqB,EAAUrB,MACnC6H,GAER,CAEA,MAAM/I,EAAU,KACZuC,EAAUxJ,eAAe,OAAQ4P,GACjCpG,EAAUxJ,eAAe,QAASiJ,GAClCO,EAAUxJ,eAAe,QAASkQ,GAClCzQ,KAAKI,IAAI,QAASgJ,GAClBpJ,KAAKI,IAAI,YAAasQ,EAAU,EAEpC3G,EAAU5J,KAAK,OAAQgQ,GACvBpG,EAAU5J,KAAK,QAASqJ,GACxBO,EAAU5J,KAAK,QAASsQ,GACxBzQ,KAAKG,KAAK,QAASiJ,GACnBpJ,KAAKG,KAAK,YAAauQ,IACwB,IAA3C1Q,KAAKsP,SAAShL,QAAQ,iBACb,iBAAToE,EAEA1I,KAAKkC,cAAa,KACTgO,GACDnG,EAAU/G,MACd,GACD,KAGH+G,EAAU/G,MAElB,CAMA,MAAAS,GAOI,GANAzD,KAAKiD,WAAa,OAClBoL,GAAOyB,sBAAwB,cAAgB9P,KAAK+J,UAAUrB,KAC9D1I,KAAKgB,aAAa,QAClBhB,KAAKsQ,QAGD,SAAWtQ,KAAKiD,YAAcjD,KAAKgC,KAAKyM,QAAS,CACjD,IAAItS,EAAI,EACR,MAAMgT,EAAInP,KAAKsP,SAAS1S,OACxB,KAAOT,EAAIgT,EAAGhT,IACV6D,KAAKiQ,MAAMjQ,KAAKsP,SAASnT,GAEjC,CACJ,CAMA,QAAAwH,CAAS5F,GACL,GAAI,YAAciC,KAAKiD,YACnB,SAAWjD,KAAKiD,YAChB,YAAcjD,KAAKiD,WAKnB,OAJAjD,KAAKgB,aAAa,SAAUjD,GAE5BiC,KAAKgB,aAAa,aAClBhB,KAAK2Q,mBACG5S,EAAOzD,MACX,IAAK,OACD0F,KAAK4Q,YAAYC,KAAKzD,MAAMrP,EAAOxD,OACnC,MACJ,IAAK,OACDyF,KAAK8Q,WAAW,QAChB9Q,KAAKgB,aAAa,QAClBhB,KAAKgB,aAAa,QAClB,MACJ,IAAK,QACD,MAAMwE,EAAM,IAAIlD,MAAM,gBAEtBkD,EAAIuL,KAAOhT,EAAOxD,KAClByF,KAAK+C,QAAQyC,GACb,MACJ,IAAK,UACDxF,KAAKgB,aAAa,OAAQjD,EAAOxD,MACjCyF,KAAKgB,aAAa,UAAWjD,EAAOxD,MAMpD,CAOA,WAAAqW,CAAYrW,GACRyF,KAAKgB,aAAa,YAAazG,GAC/ByF,KAAKjH,GAAKwB,EAAKsR,IACf7L,KAAK+J,UAAUnR,MAAMiT,IAAMtR,EAAKsR,IAChC7L,KAAKsP,SAAWtP,KAAKgR,eAAezW,EAAK+U,UACzCtP,KAAKuP,aAAehV,EAAKgV,aACzBvP,KAAKwP,YAAcjV,EAAKiV,YACxBxP,KAAKuK,WAAahQ,EAAKgQ,WACvBvK,KAAKyD,SAED,WAAazD,KAAKiD,YAEtBjD,KAAK2Q,kBACT,CAMA,gBAAAA,GACI3Q,KAAKoC,eAAepC,KAAKyP,kBACzBzP,KAAKyP,iBAAmBzP,KAAKkC,cAAa,KACtClC,KAAKqD,QAAQ,eAAe,GAC7BrD,KAAKuP,aAAevP,KAAKwP,aACxBxP,KAAKgC,KAAKiH,WACVjJ,KAAKyP,iBAAiBtG,OAE9B,CAMA,OAAA6G,GACIhQ,KAAKsO,YAAY1N,OAAO,EAAGZ,KAAKuO,eAIhCvO,KAAKuO,cAAgB,EACjB,IAAMvO,KAAKsO,YAAY1R,OACvBoD,KAAKgB,aAAa,SAGlBhB,KAAKsQ,OAEb,CAMA,KAAAA,GACI,GAAI,WAAatQ,KAAKiD,YAClBjD,KAAK+J,UAAUlH,WACd7C,KAAKqQ,WACNrQ,KAAKsO,YAAY1R,OAAQ,CACzB,MAAM2G,EAAUvD,KAAKiR,qBACrBjR,KAAK+J,UAAUzG,KAAKC,GAGpBvD,KAAKuO,cAAgBhL,EAAQ3G,OAC7BoD,KAAKgB,aAAa,QACtB,CACJ,CAOA,kBAAAiQ,GAII,KAH+BjR,KAAKuK,YACR,YAAxBvK,KAAK+J,UAAUrB,MACf1I,KAAKsO,YAAY1R,OAAS,GAE1B,OAAOoD,KAAKsO,YAEhB,IAAI4C,EAAc,EAClB,IAAK,IAAI/U,EAAI,EAAGA,EAAI6D,KAAKsO,YAAY1R,OAAQT,IAAK,CAC9C,MAAM5B,EAAOyF,KAAKsO,YAAYnS,GAAG5B,KAIjC,GAHIA,IACA2W,GZzZO,iBADInW,EY0ZeR,GZnZ1C,SAAoBoK,GAChB,IAAIwM,EAAI,EAAGvU,EAAS,EACpB,IAAK,IAAIT,EAAI,EAAGgT,EAAIxK,EAAI/H,OAAQT,EAAIgT,EAAGhT,IACnCgV,EAAIxM,EAAIvI,WAAWD,GACfgV,EAAI,IACJvU,GAAU,EAELuU,EAAI,KACTvU,GAAU,EAELuU,EAAI,OAAUA,GAAK,MACxBvU,GAAU,GAGVT,IACAS,GAAU,GAGlB,OAAOA,CACX,CAxBewU,CAAWrW,GAGfmK,KAAKmM,KAPQ,MAOFtW,EAAIgB,YAAchB,EAAIwE,QYuZ5BpD,EAAI,GAAK+U,EAAclR,KAAKuK,WAC5B,OAAOvK,KAAKsO,YAAY5O,MAAM,EAAGvD,GAErC+U,GAAe,CACnB,CZhaD,IAAoBnW,EYianB,OAAOiF,KAAKsO,WAChB,CASA,KAAA9K,CAAM4M,EAAKkB,EAASvR,GAEhB,OADAC,KAAK8Q,WAAW,UAAWV,EAAKkB,EAASvR,GAClCC,IACX,CACA,IAAAsD,CAAK8M,EAAKkB,EAASvR,GAEf,OADAC,KAAK8Q,WAAW,UAAWV,EAAKkB,EAASvR,GAClCC,IACX,CAUA,UAAA8Q,CAAWxW,EAAMC,EAAM+W,EAASvR,GAS5B,GARI,mBAAsBxF,IACtBwF,EAAKxF,EACLA,OAAO6L,GAEP,mBAAsBkL,IACtBvR,EAAKuR,EACLA,EAAU,MAEV,YAActR,KAAKiD,YAAc,WAAajD,KAAKiD,WACnD,QAEJqO,EAAUA,GAAW,CAAC,GACdC,UAAW,IAAUD,EAAQC,SACrC,MAAMxT,EAAS,CACXzD,KAAMA,EACNC,KAAMA,EACN+W,QAASA,GAEbtR,KAAKgB,aAAa,eAAgBjD,GAClCiC,KAAKsO,YAAYpO,KAAKnC,GAClBgC,GACAC,KAAKG,KAAK,QAASJ,GACvBC,KAAKsQ,OACT,CAIA,KAAAnN,GACI,MAAMA,EAAQ,KACVnD,KAAKqD,QAAQ,gBACbrD,KAAK+J,UAAU5G,OAAO,EAEpBqO,EAAkB,KACpBxR,KAAKI,IAAI,UAAWoR,GACpBxR,KAAKI,IAAI,eAAgBoR,GACzBrO,GAAO,EAELsO,EAAiB,KAEnBzR,KAAKG,KAAK,UAAWqR,GACrBxR,KAAKG,KAAK,eAAgBqR,EAAgB,EAqB9C,MAnBI,YAAcxR,KAAKiD,YAAc,SAAWjD,KAAKiD,aACjDjD,KAAKiD,WAAa,UACdjD,KAAKsO,YAAY1R,OACjBoD,KAAKG,KAAK,SAAS,KACXH,KAAKqQ,UACLoB,IAGAtO,GACJ,IAGCnD,KAAKqQ,UACVoB,IAGAtO,KAGDnD,IACX,CAMA,OAAA+C,CAAQyC,GACJ6I,GAAOyB,uBAAwB,EAC/B9P,KAAKgB,aAAa,QAASwE,GAC3BxF,KAAKqD,QAAQ,kBAAmBmC,EACpC,CAMA,OAAAnC,CAAQb,EAAQC,GACR,YAAczC,KAAKiD,YACnB,SAAWjD,KAAKiD,YAChB,YAAcjD,KAAKiD,aAEnBjD,KAAKoC,eAAepC,KAAKyP,kBAEzBzP,KAAK+J,UAAUvJ,mBAAmB,SAElCR,KAAK+J,UAAU5G,QAEfnD,KAAK+J,UAAUvJ,qBACoB,mBAAxBC,sBACPA,oBAAoB,eAAgBT,KAAK0P,2BAA2B,GACpEjP,oBAAoB,UAAWT,KAAK2P,sBAAsB,IAG9D3P,KAAKiD,WAAa,SAElBjD,KAAKjH,GAAK,KAEViH,KAAKgB,aAAa,QAASwB,EAAQC,GAGnCzC,KAAKsO,YAAc,GACnBtO,KAAKuO,cAAgB,EAE7B,CAOA,cAAAyC,CAAe1B,GACX,MAAMoC,EAAmB,GACzB,IAAIvV,EAAI,EACR,MAAMsD,EAAI6P,EAAS1S,OACnB,KAAOT,EAAIsD,EAAGtD,KACL6D,KAAKuI,WAAWjE,QAAQgL,EAASnT,KAClCuV,EAAiBxR,KAAKoP,EAASnT,IAEvC,OAAOuV,CACX,EAEJrD,GAAOpC,SfvbiB,EgBxJAoC,GAAOpC,SCF/B,MAAM,GAA+C,mBAAhBpR,YAC/B,GAAUE,GACyB,mBAAvBF,YAAYC,OACpBD,YAAYC,OAAOC,GACnBA,EAAIC,kBAAkBH,YAE1B,GAAWd,OAAOW,UAAUnB,SAC5B,GAAiC,mBAATkB,MACT,oBAATA,MACoB,6BAAxB,GAASE,KAAKF,MAChBkX,GAAiC,mBAATC,MACT,oBAATA,MACoB,6BAAxB,GAASjX,KAAKiX,MAMf,SAASjH,GAAS5P,GACrB,OAAS,KAA0BA,aAAeF,aAAe,GAAOE,KACnE,IAAkBA,aAAeN,MACjCkX,IAAkB5W,aAAe6W,IAC1C,CACO,SAASC,GAAU9W,EAAK+W,GAC3B,IAAK/W,GAAsB,iBAARA,EACf,OAAO,EAEX,GAAIgG,MAAMgR,QAAQhX,GAAM,CACpB,IAAK,IAAIoB,EAAI,EAAGgT,EAAIpU,EAAI6B,OAAQT,EAAIgT,EAAGhT,IACnC,GAAI0V,GAAU9W,EAAIoB,IACd,OAAO,EAGf,OAAO,CACX,CACA,GAAIwO,GAAS5P,GACT,OAAO,EAEX,GAAIA,EAAI+W,QACkB,mBAAf/W,EAAI+W,QACU,IAArBxR,UAAU1D,OACV,OAAOiV,GAAU9W,EAAI+W,UAAU,GAEnC,IAAK,MAAM1X,KAAOW,EACd,GAAIhB,OAAOW,UAAUgH,eAAe/G,KAAKI,EAAKX,IAAQyX,GAAU9W,EAAIX,IAChE,OAAO,EAGf,OAAO,CACX,CCzCO,SAAS4X,GAAkBjU,GAC9B,MAAMkU,EAAU,GACVC,EAAanU,EAAOxD,KACpB4X,EAAOpU,EAGb,OAFAoU,EAAK5X,KAAO6X,GAAmBF,EAAYD,GAC3CE,EAAKE,YAAcJ,EAAQrV,OACpB,CAAEmB,OAAQoU,EAAMF,QAASA,EACpC,CACA,SAASG,GAAmB7X,EAAM0X,GAC9B,IAAK1X,EACD,OAAOA,EACX,GAAIoQ,GAASpQ,GAAO,CAChB,MAAMd,EAAc,CAAE6Y,cAAc,EAAMrN,IAAKgN,EAAQrV,QAEvD,OADAqV,EAAQ/R,KAAK3F,GACNd,CACX,CACK,GAAIsH,MAAMgR,QAAQxX,GAAO,CAC1B,MAAMgY,EAAU,IAAIxR,MAAMxG,EAAKqC,QAC/B,IAAK,IAAIT,EAAI,EAAGA,EAAI5B,EAAKqC,OAAQT,IAC7BoW,EAAQpW,GAAKiW,GAAmB7X,EAAK4B,GAAI8V,GAE7C,OAAOM,CACX,CACK,GAAoB,iBAAThY,KAAuBA,aAAgB+K,MAAO,CAC1D,MAAMiN,EAAU,CAAC,EACjB,IAAK,MAAMnY,KAAOG,EACVR,OAAOW,UAAUgH,eAAe/G,KAAKJ,EAAMH,KAC3CmY,EAAQnY,GAAOgY,GAAmB7X,EAAKH,GAAM6X,IAGrD,OAAOM,CACX,CACA,OAAOhY,CACX,CASO,SAASiY,GAAkBzU,EAAQkU,GAGtC,OAFAlU,EAAOxD,KAAOkY,GAAmB1U,EAAOxD,KAAM0X,UACvClU,EAAOsU,YACPtU,CACX,CACA,SAAS0U,GAAmBlY,EAAM0X,GAC9B,IAAK1X,EACD,OAAOA,EACX,GAAIA,IAA8B,IAAtBA,EAAK+X,aAAuB,CAIpC,GAHyC,iBAAb/X,EAAK0K,KAC7B1K,EAAK0K,KAAO,GACZ1K,EAAK0K,IAAMgN,EAAQrV,OAEnB,OAAOqV,EAAQ1X,EAAK0K,KAGpB,MAAM,IAAI3C,MAAM,sBAExB,CACK,GAAIvB,MAAMgR,QAAQxX,GACnB,IAAK,IAAI4B,EAAI,EAAGA,EAAI5B,EAAKqC,OAAQT,IAC7B5B,EAAK4B,GAAKsW,GAAmBlY,EAAK4B,GAAI8V,QAGzC,GAAoB,iBAAT1X,EACZ,IAAK,MAAMH,KAAOG,EACVR,OAAOW,UAAUgH,eAAe/G,KAAKJ,EAAMH,KAC3CG,EAAKH,GAAOqY,GAAmBlY,EAAKH,GAAM6X,IAItD,OAAO1X,CACX,CC5EA,MAAMmY,GAAkB,CACpB,UACA,gBACA,aACA,gBACA,cACA,kBAOS,GAAW,EACjB,IAAIC,IACX,SAAWA,GACPA,EAAWA,EAAoB,QAAI,GAAK,UACxCA,EAAWA,EAAuB,WAAI,GAAK,aAC3CA,EAAWA,EAAkB,MAAI,GAAK,QACtCA,EAAWA,EAAgB,IAAI,GAAK,MACpCA,EAAWA,EAA0B,cAAI,GAAK,gBAC9CA,EAAWA,EAAyB,aAAI,GAAK,eAC7CA,EAAWA,EAAuB,WAAI,GAAK,YAC9C,CARD,CAQGA,KAAeA,GAAa,CAAC,IAIzB,MAAMC,GAMT,WAAArQ,CAAYsQ,GACR7S,KAAK6S,SAAWA,CACpB,CAOA,MAAAxU,CAAOtD,GACH,OAAIA,EAAIT,OAASqY,GAAWG,OAAS/X,EAAIT,OAASqY,GAAWI,MACrDlB,GAAU9W,GAWX,CAACiF,KAAKgT,eAAejY,IAVbiF,KAAKiT,eAAe,CACvB3Y,KAAMS,EAAIT,OAASqY,GAAWG,MACxBH,GAAWO,aACXP,GAAWQ,WACjBC,IAAKrY,EAAIqY,IACT7Y,KAAMQ,EAAIR,KACVxB,GAAIgC,EAAIhC,IAKxB,CAIA,cAAAia,CAAejY,GAEX,IAAI4J,EAAM,GAAK5J,EAAIT,KAmBnB,OAjBIS,EAAIT,OAASqY,GAAWO,cACxBnY,EAAIT,OAASqY,GAAWQ,aACxBxO,GAAO5J,EAAIsX,YAAc,KAIzBtX,EAAIqY,KAAO,MAAQrY,EAAIqY,MACvBzO,GAAO5J,EAAIqY,IAAM,KAGjB,MAAQrY,EAAIhC,KACZ4L,GAAO5J,EAAIhC,IAGX,MAAQgC,EAAIR,OACZoK,GAAOkM,KAAKwC,UAAUtY,EAAIR,KAAMyF,KAAK6S,WAElClO,CACX,CAMA,cAAAsO,CAAelY,GACX,MAAMuY,EAAiBtB,GAAkBjX,GACnCoX,EAAOnS,KAAKgT,eAAeM,EAAevV,QAC1CkU,EAAUqB,EAAerB,QAE/B,OADAA,EAAQsB,QAAQpB,GACTF,CACX,EAGJ,SAASuB,GAAS3Z,GACd,MAAiD,oBAA1CE,OAAOW,UAAUnB,SAASoB,KAAKd,EAC1C,CAMO,MAAM4Z,WAAgB9T,EAMzB,WAAA4C,CAAYmR,GACR/Q,QACA3C,KAAK0T,QAAUA,CACnB,CAMA,GAAAC,CAAI5Y,GACA,IAAIgD,EACJ,GAAmB,iBAARhD,EAAkB,CACzB,GAAIiF,KAAK4T,cACL,MAAM,IAAItR,MAAM,mDAEpBvE,EAASiC,KAAK6T,aAAa9Y,GAC3B,MAAM+Y,EAAgB/V,EAAOzD,OAASqY,GAAWO,aAC7CY,GAAiB/V,EAAOzD,OAASqY,GAAWQ,YAC5CpV,EAAOzD,KAAOwZ,EAAgBnB,GAAWG,MAAQH,GAAWI,IAE5D/S,KAAK4T,cAAgB,IAAIG,GAAoBhW,GAElB,IAAvBA,EAAOsU,aACP1P,MAAM3B,aAAa,UAAWjD,IAKlC4E,MAAM3B,aAAa,UAAWjD,EAEtC,KACK,KAAI4M,GAAS5P,KAAQA,EAAI+B,OAe1B,MAAM,IAAIwF,MAAM,iBAAmBvH,GAbnC,IAAKiF,KAAK4T,cACN,MAAM,IAAItR,MAAM,oDAGhBvE,EAASiC,KAAK4T,cAAcI,eAAejZ,GACvCgD,IAEAiC,KAAK4T,cAAgB,KACrBjR,MAAM3B,aAAa,UAAWjD,GAM1C,CACJ,CAOA,YAAA8V,CAAalP,GACT,IAAIxI,EAAI,EAER,MAAMkB,EAAI,CACN/C,KAAMmK,OAAOE,EAAIlI,OAAO,KAE5B,QAA2B2J,IAAvBuM,GAAWtV,EAAE/C,MACb,MAAM,IAAIgI,MAAM,uBAAyBjF,EAAE/C,MAG/C,GAAI+C,EAAE/C,OAASqY,GAAWO,cACtB7V,EAAE/C,OAASqY,GAAWQ,WAAY,CAClC,MAAMc,EAAQ9X,EAAI,EAClB,KAA2B,MAApBwI,EAAIlI,SAASN,IAAcA,GAAKwI,EAAI/H,SAC3C,MAAMsX,EAAMvP,EAAIhI,UAAUsX,EAAO9X,GACjC,GAAI+X,GAAOzP,OAAOyP,IAA0B,MAAlBvP,EAAIlI,OAAON,GACjC,MAAM,IAAImG,MAAM,uBAEpBjF,EAAEgV,YAAc5N,OAAOyP,EAC3B,CAEA,GAAI,MAAQvP,EAAIlI,OAAON,EAAI,GAAI,CAC3B,MAAM8X,EAAQ9X,EAAI,EAClB,OAASA,GAAG,CAER,GAAI,MADMwI,EAAIlI,OAAON,GAEjB,MACJ,GAAIA,IAAMwI,EAAI/H,OACV,KACR,CACAS,EAAE+V,IAAMzO,EAAIhI,UAAUsX,EAAO9X,EACjC,MAEIkB,EAAE+V,IAAM,IAGZ,MAAMe,EAAOxP,EAAIlI,OAAON,EAAI,GAC5B,GAAI,KAAOgY,GAAQ1P,OAAO0P,IAASA,EAAM,CACrC,MAAMF,EAAQ9X,EAAI,EAClB,OAASA,GAAG,CACR,MAAMgV,EAAIxM,EAAIlI,OAAON,GACrB,GAAI,MAAQgV,GAAK1M,OAAO0M,IAAMA,EAAG,GAC3BhV,EACF,KACJ,CACA,GAAIA,IAAMwI,EAAI/H,OACV,KACR,CACAS,EAAEtE,GAAK0L,OAAOE,EAAIhI,UAAUsX,EAAO9X,EAAI,GAC3C,CAEA,GAAIwI,EAAIlI,SAASN,GAAI,CACjB,MAAMiY,EAAUpU,KAAKqU,SAAS1P,EAAI2P,OAAOnY,IACzC,IAAIsX,GAAQc,eAAelX,EAAE/C,KAAM8Z,GAI/B,MAAM,IAAI9R,MAAM,mBAHhBjF,EAAE9C,KAAO6Z,CAKjB,CACA,OAAO/W,CACX,CACA,QAAAgX,CAAS1P,GACL,IACI,OAAOkM,KAAKzD,MAAMzI,EAAK3E,KAAK0T,QAChC,CACA,MAAO/Z,GACH,OAAO,CACX,CACJ,CACA,qBAAO4a,CAAeja,EAAM8Z,GACxB,OAAQ9Z,GACJ,KAAKqY,GAAW6B,QACZ,OAAOhB,GAASY,GACpB,KAAKzB,GAAW8B,WACZ,YAAmBrO,IAAZgO,EACX,KAAKzB,GAAW+B,cACZ,MAA0B,iBAAZN,GAAwBZ,GAASY,GACnD,KAAKzB,GAAWG,MAChB,KAAKH,GAAWO,aACZ,OAAQnS,MAAMgR,QAAQqC,KACK,iBAAfA,EAAQ,IACW,iBAAfA,EAAQ,KAC6B,IAAzC1B,GAAgBpO,QAAQ8P,EAAQ,KAChD,KAAKzB,GAAWI,IAChB,KAAKJ,GAAWQ,WACZ,OAAOpS,MAAMgR,QAAQqC,GAEjC,CAIA,OAAAO,GACQ3U,KAAK4T,gBACL5T,KAAK4T,cAAcgB,yBACnB5U,KAAK4T,cAAgB,KAE7B,EAUJ,MAAMG,GACF,WAAAxR,CAAYxE,GACRiC,KAAKjC,OAASA,EACdiC,KAAKiS,QAAU,GACfjS,KAAK6U,UAAY9W,CACrB,CASA,cAAAiW,CAAec,GAEX,GADA9U,KAAKiS,QAAQ/R,KAAK4U,GACd9U,KAAKiS,QAAQrV,SAAWoD,KAAK6U,UAAUxC,YAAa,CAEpD,MAAMtU,EAASyU,GAAkBxS,KAAK6U,UAAW7U,KAAKiS,SAEtD,OADAjS,KAAK4U,yBACE7W,CACX,CACA,OAAO,IACX,CAIA,sBAAA6W,GACI5U,KAAK6U,UAAY,KACjB7U,KAAKiS,QAAU,EACnB,ECrTG,SAASpS,GAAG9E,EAAKwO,EAAIxJ,GAExB,OADAhF,EAAI8E,GAAG0J,EAAIxJ,GACJ,WACHhF,EAAIqF,IAAImJ,EAAIxJ,EAChB,CACJ,CCEA,MAAM,GAAkBhG,OAAOgb,OAAO,CAClCC,QAAS,EACTC,cAAe,EACfC,WAAY,EACZC,cAAe,EAEfC,YAAa,EACb7U,eAAgB,IA0Bb,MAAM,WAAeZ,EAIxB,WAAA4C,CAAY8S,EAAIjC,EAAKpR,GACjBW,QAeA3C,KAAKsV,WAAY,EAKjBtV,KAAKuV,WAAY,EAIjBvV,KAAKwV,cAAgB,GAIrBxV,KAAKyV,WAAa,GAOlBzV,KAAK0V,OAAS,GAKd1V,KAAK2V,UAAY,EACjB3V,KAAK4V,IAAM,EACX5V,KAAK6V,KAAO,CAAC,EACb7V,KAAK8V,MAAQ,CAAC,EACd9V,KAAKqV,GAAKA,EACVrV,KAAKoT,IAAMA,EACPpR,GAAQA,EAAK+T,OACb/V,KAAK+V,KAAO/T,EAAK+T,MAErB/V,KAAKgW,MAAQjc,OAAO+S,OAAO,CAAC,EAAG9K,GAC3BhC,KAAKqV,GAAGY,cACRjW,KAAKgD,MACb,CAeA,gBAAIkT,GACA,OAAQlW,KAAKsV,SACjB,CAMA,SAAAa,GACI,GAAInW,KAAKoW,KACL,OACJ,MAAMf,EAAKrV,KAAKqV,GAChBrV,KAAKoW,KAAO,CACRvW,GAAGwV,EAAI,OAAQrV,KAAKgJ,OAAO7G,KAAKnC,OAChCH,GAAGwV,EAAI,SAAUrV,KAAKqW,SAASlU,KAAKnC,OACpCH,GAAGwV,EAAI,QAASrV,KAAKwJ,QAAQrH,KAAKnC,OAClCH,GAAGwV,EAAI,QAASrV,KAAKoJ,QAAQjH,KAAKnC,OAE1C,CAkBA,UAAIsW,GACA,QAAStW,KAAKoW,IAClB,CAWA,OAAApB,GACI,OAAIhV,KAAKsV,YAETtV,KAAKmW,YACAnW,KAAKqV,GAAkB,eACxBrV,KAAKqV,GAAGrS,OACR,SAAWhD,KAAKqV,GAAGkB,aACnBvW,KAAKgJ,UALEhJ,IAOf,CAIA,IAAAgD,GACI,OAAOhD,KAAKgV,SAChB,CAgBA,IAAA1R,IAAQxC,GAGJ,OAFAA,EAAKyS,QAAQ,WACbvT,KAAKa,KAAKR,MAAML,KAAMc,GACfd,IACX,CAkBA,IAAAa,CAAK0I,KAAOzI,GACR,GAAI,GAAgBY,eAAe6H,GAC/B,MAAM,IAAIjH,MAAM,IAAMiH,EAAGhQ,WAAa,8BAG1C,GADAuH,EAAKyS,QAAQhK,GACTvJ,KAAKgW,MAAMQ,UAAYxW,KAAK8V,MAAMW,YAAczW,KAAK8V,MAAMY,SAE3D,OADA1W,KAAK2W,YAAY7V,GACVd,KAEX,MAAMjC,EAAS,CACXzD,KAAMqY,GAAWG,MACjBvY,KAAMuG,EAEV/C,QAAiB,CAAC,GAGlB,GAFAA,EAAOuT,QAAQC,UAAmC,IAAxBvR,KAAK8V,MAAMvE,SAEjC,mBAAsBzQ,EAAKA,EAAKlE,OAAS,GAAI,CAC7C,MAAM7D,EAAKiH,KAAK4V,MACVgB,EAAM9V,EAAK+V,MACjB7W,KAAK8W,qBAAqB/d,EAAI6d,GAC9B7Y,EAAOhF,GAAKA,CAChB,CACA,MAAMge,EAAsB/W,KAAKqV,GAAG2B,QAChChX,KAAKqV,GAAG2B,OAAOjN,WACf/J,KAAKqV,GAAG2B,OAAOjN,UAAUlH,SAY7B,OAXsB7C,KAAK8V,MAAMY,YAAcK,IAAwB/W,KAAKsV,aAGnEtV,KAAKsV,WACVtV,KAAKiX,wBAAwBlZ,GAC7BiC,KAAKjC,OAAOA,IAGZiC,KAAKyV,WAAWvV,KAAKnC,IAEzBiC,KAAK8V,MAAQ,CAAC,EACP9V,IACX,CAIA,oBAAA8W,CAAqB/d,EAAI6d,GACrB,IAAIvQ,EACJ,MAAMU,EAAwC,QAA7BV,EAAKrG,KAAK8V,MAAM/O,eAA4B,IAAPV,EAAgBA,EAAKrG,KAAKgW,MAAMkB,WACtF,QAAgB9Q,IAAZW,EAEA,YADA/G,KAAK6V,KAAK9c,GAAM6d,GAIpB,MAAMO,EAAQnX,KAAKqV,GAAGnT,cAAa,YACxBlC,KAAK6V,KAAK9c,GACjB,IAAK,IAAIoD,EAAI,EAAGA,EAAI6D,KAAKyV,WAAW7Y,OAAQT,IACpC6D,KAAKyV,WAAWtZ,GAAGpD,KAAOA,GAC1BiH,KAAKyV,WAAW7U,OAAOzE,EAAG,GAGlCya,EAAIjc,KAAKqF,KAAM,IAAIsC,MAAM,2BAA2B,GACrDyE,GACH/G,KAAK6V,KAAK9c,GAAM,IAAI+H,KAEhBd,KAAKqV,GAAGjT,eAAe+U,GACvBP,EAAIvW,MAAML,KAAM,CAAC,QAASc,GAAM,CAExC,CAiBA,WAAAsW,CAAY7N,KAAOzI,GAEf,MAAMuW,OAAiCjR,IAAvBpG,KAAK8V,MAAM/O,cAAmDX,IAA1BpG,KAAKgW,MAAMkB,WAC/D,OAAO,IAAInP,SAAQ,CAACC,EAASsP,KACzBxW,EAAKZ,MAAK,CAACqX,EAAMC,IACTH,EACOE,EAAOD,EAAOC,GAAQvP,EAAQwP,GAG9BxP,EAAQuP,KAGvBvX,KAAKa,KAAK0I,KAAOzI,EAAK,GAE9B,CAMA,WAAA6V,CAAY7V,GACR,IAAI8V,EACiC,mBAA1B9V,EAAKA,EAAKlE,OAAS,KAC1Bga,EAAM9V,EAAK+V,OAEf,MAAM9Y,EAAS,CACXhF,GAAIiH,KAAK2V,YACT8B,SAAU,EACVC,SAAS,EACT5W,OACAgV,MAAO/b,OAAO+S,OAAO,CAAE2J,WAAW,GAAQzW,KAAK8V,QAEnDhV,EAAKZ,MAAK,CAACsF,KAAQmS,KACf,GAAI5Z,IAAWiC,KAAK0V,OAAO,GAEvB,OAkBJ,OAhByB,OAARlQ,EAETzH,EAAO0Z,SAAWzX,KAAKgW,MAAMQ,UAC7BxW,KAAK0V,OAAOlW,QACRoX,GACAA,EAAIpR,KAKZxF,KAAK0V,OAAOlW,QACRoX,GACAA,EAAI,QAASe,IAGrB5Z,EAAO2Z,SAAU,EACV1X,KAAK4X,aAAa,IAE7B5X,KAAK0V,OAAOxV,KAAKnC,GACjBiC,KAAK4X,aACT,CAOA,WAAAA,CAAYC,GAAQ,GAChB,IAAK7X,KAAKsV,WAAoC,IAAvBtV,KAAK0V,OAAO9Y,OAC/B,OAEJ,MAAMmB,EAASiC,KAAK0V,OAAO,GACvB3X,EAAO2Z,UAAYG,IAGvB9Z,EAAO2Z,SAAU,EACjB3Z,EAAO0Z,WACPzX,KAAK8V,MAAQ/X,EAAO+X,MACpB9V,KAAKa,KAAKR,MAAML,KAAMjC,EAAO+C,MACjC,CAOA,MAAA/C,CAAOA,GACHA,EAAOqV,IAAMpT,KAAKoT,IAClBpT,KAAKqV,GAAGyC,QAAQ/Z,EACpB,CAMA,MAAAiL,GAC4B,mBAAbhJ,KAAK+V,KACZ/V,KAAK+V,MAAMxb,IACPyF,KAAK+X,mBAAmBxd,EAAK,IAIjCyF,KAAK+X,mBAAmB/X,KAAK+V,KAErC,CAOA,kBAAAgC,CAAmBxd,GACfyF,KAAKjC,OAAO,CACRzD,KAAMqY,GAAW6B,QACjBja,KAAMyF,KAAKgY,KACLje,OAAO+S,OAAO,CAAEmL,IAAKjY,KAAKgY,KAAME,OAAQlY,KAAKmY,aAAe5d,GAC5DA,GAEd,CAOA,OAAAiP,CAAQhE,GACCxF,KAAKsV,WACNtV,KAAKgB,aAAa,gBAAiBwE,EAE3C,CAQA,OAAA4D,CAAQ5G,EAAQC,GACZzC,KAAKsV,WAAY,SACVtV,KAAKjH,GACZiH,KAAKgB,aAAa,aAAcwB,EAAQC,EAC5C,CAOA,QAAA4T,CAAStY,GAEL,GADsBA,EAAOqV,MAAQpT,KAAKoT,IAG1C,OAAQrV,EAAOzD,MACX,KAAKqY,GAAW6B,QACRzW,EAAOxD,MAAQwD,EAAOxD,KAAKsR,IAC3B7L,KAAKoY,UAAUra,EAAOxD,KAAKsR,IAAK9N,EAAOxD,KAAK0d,KAG5CjY,KAAKgB,aAAa,gBAAiB,IAAIsB,MAAM,8LAEjD,MACJ,KAAKqQ,GAAWG,MAChB,KAAKH,GAAWO,aACZlT,KAAKqY,QAAQta,GACb,MACJ,KAAK4U,GAAWI,IAChB,KAAKJ,GAAWQ,WACZnT,KAAKsY,MAAMva,GACX,MACJ,KAAK4U,GAAW8B,WACZzU,KAAKuY,eACL,MACJ,KAAK5F,GAAW+B,cACZ1U,KAAK2U,UACL,MAAMnP,EAAM,IAAIlD,MAAMvE,EAAOxD,KAAKie,SAElChT,EAAIjL,KAAOwD,EAAOxD,KAAKA,KACvByF,KAAKgB,aAAa,gBAAiBwE,GAG/C,CAOA,OAAA6S,CAAQta,GACJ,MAAM+C,EAAO/C,EAAOxD,MAAQ,GACxB,MAAQwD,EAAOhF,IACf+H,EAAKZ,KAAKF,KAAK4W,IAAI7Y,EAAOhF,KAE1BiH,KAAKsV,UACLtV,KAAKyY,UAAU3X,GAGfd,KAAKwV,cAActV,KAAKnG,OAAOgb,OAAOjU,GAE9C,CACA,SAAA2X,CAAU3X,GACN,GAAId,KAAK0Y,eAAiB1Y,KAAK0Y,cAAc9b,OAAQ,CACjD,MAAMqE,EAAYjB,KAAK0Y,cAAchZ,QACrC,IAAK,MAAMiZ,KAAY1X,EACnB0X,EAAStY,MAAML,KAAMc,EAE7B,CACA6B,MAAM9B,KAAKR,MAAML,KAAMc,GACnBd,KAAKgY,MAAQlX,EAAKlE,QAA2C,iBAA1BkE,EAAKA,EAAKlE,OAAS,KACtDoD,KAAKmY,YAAcrX,EAAKA,EAAKlE,OAAS,GAE9C,CAMA,GAAAga,CAAI7d,GACA,MAAMqI,EAAOpB,KACb,IAAI4Y,GAAO,EACX,OAAO,YAAa9X,GAEZ8X,IAEJA,GAAO,EACPxX,EAAKrD,OAAO,CACRzD,KAAMqY,GAAWI,IACjBha,GAAIA,EACJwB,KAAMuG,IAEd,CACJ,CAOA,KAAAwX,CAAMva,GACF,MAAM6Y,EAAM5W,KAAK6V,KAAK9X,EAAOhF,IACzB,mBAAsB6d,IACtBA,EAAIvW,MAAML,KAAMjC,EAAOxD,aAChByF,KAAK6V,KAAK9X,EAAOhF,IAIhC,CAMA,SAAAqf,CAAUrf,EAAIkf,GACVjY,KAAKjH,GAAKA,EACViH,KAAKuV,UAAY0C,GAAOjY,KAAKgY,OAASC,EACtCjY,KAAKgY,KAAOC,EACZjY,KAAKsV,WAAY,EACjBtV,KAAK6Y,eACL7Y,KAAKgB,aAAa,WAClBhB,KAAK4X,aAAY,EACrB,CAMA,YAAAiB,GACI7Y,KAAKwV,cAAcrb,SAAS2G,GAASd,KAAKyY,UAAU3X,KACpDd,KAAKwV,cAAgB,GACrBxV,KAAKyV,WAAWtb,SAAS4D,IACrBiC,KAAKiX,wBAAwBlZ,GAC7BiC,KAAKjC,OAAOA,EAAO,IAEvBiC,KAAKyV,WAAa,EACtB,CAMA,YAAA8C,GACIvY,KAAK2U,UACL3U,KAAKoJ,QAAQ,uBACjB,CAQA,OAAAuL,GACQ3U,KAAKoW,OAELpW,KAAKoW,KAAKjc,SAAS2e,GAAeA,MAClC9Y,KAAKoW,UAAOhQ,GAEhBpG,KAAKqV,GAAa,SAAErV,KACxB,CAiBA,UAAAkV,GAUI,OATIlV,KAAKsV,WACLtV,KAAKjC,OAAO,CAAEzD,KAAMqY,GAAW8B,aAGnCzU,KAAK2U,UACD3U,KAAKsV,WAELtV,KAAKoJ,QAAQ,wBAEVpJ,IACX,CAMA,KAAAmD,GACI,OAAOnD,KAAKkV,YAChB,CAUA,QAAA3D,CAASA,GAEL,OADAvR,KAAK8V,MAAMvE,SAAWA,EACfvR,IACX,CAUA,YAAI0W,GAEA,OADA1W,KAAK8V,MAAMY,UAAW,EACf1W,IACX,CAcA,OAAA+G,CAAQA,GAEJ,OADA/G,KAAK8V,MAAM/O,QAAUA,EACd/G,IACX,CAYA,KAAA+Y,CAAMJ,GAGF,OAFA3Y,KAAK0Y,cAAgB1Y,KAAK0Y,eAAiB,GAC3C1Y,KAAK0Y,cAAcxY,KAAKyY,GACjB3Y,IACX,CAYA,UAAAgZ,CAAWL,GAGP,OAFA3Y,KAAK0Y,cAAgB1Y,KAAK0Y,eAAiB,GAC3C1Y,KAAK0Y,cAAcnF,QAAQoF,GACpB3Y,IACX,CAmBA,MAAAiZ,CAAON,GACH,IAAK3Y,KAAK0Y,cACN,OAAO1Y,KAEX,GAAI2Y,EAAU,CACV,MAAM1X,EAAYjB,KAAK0Y,cACvB,IAAK,IAAIvc,EAAI,EAAGA,EAAI8E,EAAUrE,OAAQT,IAClC,GAAIwc,IAAa1X,EAAU9E,GAEvB,OADA8E,EAAUL,OAAOzE,EAAG,GACb6D,IAGnB,MAEIA,KAAK0Y,cAAgB,GAEzB,OAAO1Y,IACX,CAKA,YAAAkZ,GACI,OAAOlZ,KAAK0Y,eAAiB,EACjC,CAcA,aAAAS,CAAcR,GAGV,OAFA3Y,KAAKoZ,sBAAwBpZ,KAAKoZ,uBAAyB,GAC3DpZ,KAAKoZ,sBAAsBlZ,KAAKyY,GACzB3Y,IACX,CAcA,kBAAAqZ,CAAmBV,GAGf,OAFA3Y,KAAKoZ,sBAAwBpZ,KAAKoZ,uBAAyB,GAC3DpZ,KAAKoZ,sBAAsB7F,QAAQoF,GAC5B3Y,IACX,CAmBA,cAAAsZ,CAAeX,GACX,IAAK3Y,KAAKoZ,sBACN,OAAOpZ,KAEX,GAAI2Y,EAAU,CACV,MAAM1X,EAAYjB,KAAKoZ,sBACvB,IAAK,IAAIjd,EAAI,EAAGA,EAAI8E,EAAUrE,OAAQT,IAClC,GAAIwc,IAAa1X,EAAU9E,GAEvB,OADA8E,EAAUL,OAAOzE,EAAG,GACb6D,IAGnB,MAEIA,KAAKoZ,sBAAwB,GAEjC,OAAOpZ,IACX,CAKA,oBAAAuZ,GACI,OAAOvZ,KAAKoZ,uBAAyB,EACzC,CAQA,uBAAAnC,CAAwBlZ,GACpB,GAAIiC,KAAKoZ,uBAAyBpZ,KAAKoZ,sBAAsBxc,OAAQ,CACjE,MAAMqE,EAAYjB,KAAKoZ,sBAAsB1Z,QAC7C,IAAK,MAAMiZ,KAAY1X,EACnB0X,EAAStY,MAAML,KAAMjC,EAAOxD,KAEpC,CACJ,ECzzBG,SAASif,GAAQxX,GACpBA,EAAOA,GAAQ,CAAC,EAChBhC,KAAKyZ,GAAKzX,EAAK0X,KAAO,IACtB1Z,KAAK2Z,IAAM3X,EAAK2X,KAAO,IACvB3Z,KAAK4Z,OAAS5X,EAAK4X,QAAU,EAC7B5Z,KAAK6Z,OAAS7X,EAAK6X,OAAS,GAAK7X,EAAK6X,QAAU,EAAI7X,EAAK6X,OAAS,EAClE7Z,KAAK8Z,SAAW,CACpB,CAOAN,GAAQ9e,UAAUqf,SAAW,WACzB,IAAIN,EAAKzZ,KAAKyZ,GAAKvU,KAAK8F,IAAIhL,KAAK4Z,OAAQ5Z,KAAK8Z,YAC9C,GAAI9Z,KAAK6Z,OAAQ,CACb,IAAIG,EAAO9U,KAAK+U,SACZC,EAAYhV,KAAKC,MAAM6U,EAAOha,KAAK6Z,OAASJ,GAChDA,EAAoC,IAAN,EAAxBvU,KAAKC,MAAa,GAAP6U,IAAuBP,EAAKS,EAAYT,EAAKS,CAClE,CACA,OAAgC,EAAzBhV,KAAKwU,IAAID,EAAIzZ,KAAK2Z,IAC7B,EAMAH,GAAQ9e,UAAUyf,MAAQ,WACtBna,KAAK8Z,SAAW,CACpB,EAMAN,GAAQ9e,UAAU0f,OAAS,SAAUV,GACjC1Z,KAAKyZ,GAAKC,CACd,EAMAF,GAAQ9e,UAAU2f,OAAS,SAAUV,GACjC3Z,KAAK2Z,IAAMA,CACf,EAMAH,GAAQ9e,UAAU4f,UAAY,SAAUT,GACpC7Z,KAAK6Z,OAASA,CAClB,EC3DO,MAAMU,WAAgB5a,EACzB,WAAA4C,CAAY2D,EAAKlE,GACb,IAAIqE,EACJ1D,QACA3C,KAAKwa,KAAO,CAAC,EACbxa,KAAKoW,KAAO,GACRlQ,GAAO,iBAAoBA,IAC3BlE,EAAOkE,EACPA,OAAME,IAEVpE,EAAOA,GAAQ,CAAC,GACXmC,KAAOnC,EAAKmC,MAAQ,aACzBnE,KAAKgC,KAAOA,EACZD,EAAsB/B,KAAMgC,GAC5BhC,KAAKya,cAAmC,IAAtBzY,EAAKyY,cACvBza,KAAK0a,qBAAqB1Y,EAAK0Y,sBAAwBC,KACvD3a,KAAK4a,kBAAkB5Y,EAAK4Y,mBAAqB,KACjD5a,KAAK6a,qBAAqB7Y,EAAK6Y,sBAAwB,KACvD7a,KAAK8a,oBAAwD,QAAnCzU,EAAKrE,EAAK8Y,2BAAwC,IAAPzU,EAAgBA,EAAK,IAC1FrG,KAAK+a,QAAU,IAAIvB,GAAQ,CACvBE,IAAK1Z,KAAK4a,oBACVjB,IAAK3Z,KAAK6a,uBACVhB,OAAQ7Z,KAAK8a,wBAEjB9a,KAAK+G,QAAQ,MAAQ/E,EAAK+E,QAAU,IAAQ/E,EAAK+E,SACjD/G,KAAKuW,YAAc,SACnBvW,KAAKkG,IAAMA,EACX,MAAM8U,EAAUhZ,EAAKiZ,QAAU,EAC/Bjb,KAAKkb,QAAU,IAAIF,EAAQpI,QAC3B5S,KAAKmb,QAAU,IAAIH,EAAQvH,QAC3BzT,KAAKiW,cAAoC,IAArBjU,EAAKoZ,YACrBpb,KAAKiW,cACLjW,KAAKgD,MACb,CACA,YAAAyX,CAAaY,GACT,OAAK/a,UAAU1D,QAEfoD,KAAKsb,gBAAkBD,EAChBrb,MAFIA,KAAKsb,aAGpB,CACA,oBAAAZ,CAAqBW,GACjB,YAAUjV,IAANiV,EACOrb,KAAKub,uBAChBvb,KAAKub,sBAAwBF,EACtBrb,KACX,CACA,iBAAA4a,CAAkBS,GACd,IAAIhV,EACJ,YAAUD,IAANiV,EACOrb,KAAKwb,oBAChBxb,KAAKwb,mBAAqBH,EACF,QAAvBhV,EAAKrG,KAAK+a,eAA4B,IAAP1U,GAAyBA,EAAG+T,OAAOiB,GAC5Drb,KACX,CACA,mBAAA8a,CAAoBO,GAChB,IAAIhV,EACJ,YAAUD,IAANiV,EACOrb,KAAKyb,sBAChBzb,KAAKyb,qBAAuBJ,EACJ,QAAvBhV,EAAKrG,KAAK+a,eAA4B,IAAP1U,GAAyBA,EAAGiU,UAAUe,GAC/Drb,KACX,CACA,oBAAA6a,CAAqBQ,GACjB,IAAIhV,EACJ,YAAUD,IAANiV,EACOrb,KAAK0b,uBAChB1b,KAAK0b,sBAAwBL,EACL,QAAvBhV,EAAKrG,KAAK+a,eAA4B,IAAP1U,GAAyBA,EAAGgU,OAAOgB,GAC5Drb,KACX,CACA,OAAA+G,CAAQsU,GACJ,OAAK/a,UAAU1D,QAEfoD,KAAK2b,SAAWN,EACTrb,MAFIA,KAAK2b,QAGpB,CAOA,oBAAAC,IAES5b,KAAK6b,eACN7b,KAAKsb,eACqB,IAA1Btb,KAAK+a,QAAQjB,UAEb9Z,KAAK8b,WAEb,CAQA,IAAA9Y,CAAKjD,GACD,IAAKC,KAAKuW,YAAYjS,QAAQ,QAC1B,OAAOtE,KACXA,KAAKgX,OAAS,IAAI,GAAOhX,KAAKkG,IAAKlG,KAAKgC,MACxC,MAAMc,EAAS9C,KAAKgX,OACd5V,EAAOpB,KACbA,KAAKuW,YAAc,UACnBvW,KAAK+b,eAAgB,EAErB,MAAMC,EAAiBnc,GAAGiD,EAAQ,QAAQ,WACtC1B,EAAK4H,SACLjJ,GAAMA,GACV,IACMgD,EAAWyC,IACbxF,KAAKwH,UACLxH,KAAKuW,YAAc,SACnBvW,KAAKgB,aAAa,QAASwE,GACvBzF,EACAA,EAAGyF,GAIHxF,KAAK4b,sBACT,EAGEK,EAAWpc,GAAGiD,EAAQ,QAASC,GACrC,IAAI,IAAU/C,KAAK2b,SAAU,CACzB,MAAM5U,EAAU/G,KAAK2b,SAEfxE,EAAQnX,KAAKkC,cAAa,KAC5B8Z,IACAjZ,EAAQ,IAAIT,MAAM,YAClBQ,EAAOK,OAAO,GACf4D,GACC/G,KAAKgC,KAAKiH,WACVkO,EAAMhO,QAEVnJ,KAAKoW,KAAKlW,MAAK,KACXF,KAAKoC,eAAe+U,EAAM,GAElC,CAGA,OAFAnX,KAAKoW,KAAKlW,KAAK8b,GACfhc,KAAKoW,KAAKlW,KAAK+b,GACRjc,IACX,CAOA,OAAAgV,CAAQjV,GACJ,OAAOC,KAAKgD,KAAKjD,EACrB,CAMA,MAAAiJ,GAEIhJ,KAAKwH,UAELxH,KAAKuW,YAAc,OACnBvW,KAAKgB,aAAa,QAElB,MAAM8B,EAAS9C,KAAKgX,OACpBhX,KAAKoW,KAAKlW,KAAKL,GAAGiD,EAAQ,OAAQ9C,KAAKkc,OAAO/Z,KAAKnC,OAAQH,GAAGiD,EAAQ,OAAQ9C,KAAKmc,OAAOha,KAAKnC,OAAQH,GAAGiD,EAAQ,QAAS9C,KAAKwJ,QAAQrH,KAAKnC,OAAQH,GAAGiD,EAAQ,QAAS9C,KAAKoJ,QAAQjH,KAAKnC,OAAQH,GAAGG,KAAKmb,QAAS,UAAWnb,KAAKoc,UAAUja,KAAKnC,OACvP,CAMA,MAAAkc,GACIlc,KAAKgB,aAAa,OACtB,CAMA,MAAAmb,CAAO5hB,GACH,IACIyF,KAAKmb,QAAQxH,IAAIpZ,EACrB,CACA,MAAOZ,GACHqG,KAAKoJ,QAAQ,cAAezP,EAChC,CACJ,CAMA,SAAAyiB,CAAUre,GAEN+J,GAAS,KACL9H,KAAKgB,aAAa,SAAUjD,EAAO,GACpCiC,KAAKkC,aACZ,CAMA,OAAAsH,CAAQhE,GACJxF,KAAKgB,aAAa,QAASwE,EAC/B,CAOA,MAAA1C,CAAOsQ,EAAKpR,GACR,IAAIc,EAAS9C,KAAKwa,KAAKpH,GAQvB,OAPKtQ,EAII9C,KAAKiW,eAAiBnT,EAAOwT,QAClCxT,EAAOkS,WAJPlS,EAAS,IAAI,GAAO9C,KAAMoT,EAAKpR,GAC/BhC,KAAKwa,KAAKpH,GAAOtQ,GAKdA,CACX,CAOA,QAAAuZ,CAASvZ,GACL,MAAM0X,EAAOzgB,OAAOG,KAAK8F,KAAKwa,MAC9B,IAAK,MAAMpH,KAAOoH,EAAM,CAEpB,GADexa,KAAKwa,KAAKpH,GACdkD,OACP,MAER,CACAtW,KAAKsc,QACT,CAOA,OAAAxE,CAAQ/Z,GACJ,MAAMwO,EAAiBvM,KAAKkb,QAAQ7c,OAAON,GAC3C,IAAK,IAAI5B,EAAI,EAAGA,EAAIoQ,EAAe3P,OAAQT,IACvC6D,KAAKgX,OAAOxT,MAAM+I,EAAepQ,GAAI4B,EAAOuT,QAEpD,CAMA,OAAA9J,GACIxH,KAAKoW,KAAKjc,SAAS2e,GAAeA,MAClC9Y,KAAKoW,KAAKxZ,OAAS,EACnBoD,KAAKmb,QAAQxG,SACjB,CAMA,MAAA2H,GACItc,KAAK+b,eAAgB,EACrB/b,KAAK6b,eAAgB,EACrB7b,KAAKoJ,QAAQ,gBACTpJ,KAAKgX,QACLhX,KAAKgX,OAAO7T,OACpB,CAMA,UAAA+R,GACI,OAAOlV,KAAKsc,QAChB,CAMA,OAAAlT,CAAQ5G,EAAQC,GACZzC,KAAKwH,UACLxH,KAAK+a,QAAQZ,QACbna,KAAKuW,YAAc,SACnBvW,KAAKgB,aAAa,QAASwB,EAAQC,GAC/BzC,KAAKsb,gBAAkBtb,KAAK+b,eAC5B/b,KAAK8b,WAEb,CAMA,SAAAA,GACI,GAAI9b,KAAK6b,eAAiB7b,KAAK+b,cAC3B,OAAO/b,KACX,MAAMoB,EAAOpB,KACb,GAAIA,KAAK+a,QAAQjB,UAAY9Z,KAAKub,sBAC9Bvb,KAAK+a,QAAQZ,QACbna,KAAKgB,aAAa,oBAClBhB,KAAK6b,eAAgB,MAEpB,CACD,MAAMU,EAAQvc,KAAK+a,QAAQhB,WAC3B/Z,KAAK6b,eAAgB,EACrB,MAAM1E,EAAQnX,KAAKkC,cAAa,KACxBd,EAAK2a,gBAET/b,KAAKgB,aAAa,oBAAqBI,EAAK2Z,QAAQjB,UAEhD1Y,EAAK2a,eAET3a,EAAK4B,MAAMwC,IACHA,GACApE,EAAKya,eAAgB,EACrBza,EAAK0a,YACL9b,KAAKgB,aAAa,kBAAmBwE,IAGrCpE,EAAKob,aACT,IACF,GACHD,GACCvc,KAAKgC,KAAKiH,WACVkO,EAAMhO,QAEVnJ,KAAKoW,KAAKlW,MAAK,KACXF,KAAKoC,eAAe+U,EAAM,GAElC,CACJ,CAMA,WAAAqF,GACI,MAAMC,EAAUzc,KAAK+a,QAAQjB,SAC7B9Z,KAAK6b,eAAgB,EACrB7b,KAAK+a,QAAQZ,QACbna,KAAKgB,aAAa,YAAayb,EACnC,EC9VJ,MAAMC,GAAQ,CAAC,EACf,SAAS,GAAOxW,EAAKlE,GACE,iBAARkE,IACPlE,EAAOkE,EACPA,OAAME,GAGV,MAAMuW,ECHH,SAAazW,EAAK/B,EAAO,GAAIyY,GAChC,IAAI7hB,EAAMmL,EAEV0W,EAAMA,GAA4B,oBAAb7Q,UAA4BA,SAC7C,MAAQ7F,IACRA,EAAM0W,EAAI3Q,SAAW,KAAO2Q,EAAIjP,MAEjB,iBAARzH,IACH,MAAQA,EAAIzJ,OAAO,KAEfyJ,EADA,MAAQA,EAAIzJ,OAAO,GACbmgB,EAAI3Q,SAAW/F,EAGf0W,EAAIjP,KAAOzH,GAGpB,sBAAsB2W,KAAK3W,KAExBA,OADA,IAAuB0W,EACjBA,EAAI3Q,SAAW,KAAO/F,EAGtB,WAAaA,GAI3BnL,EAAMqS,GAAMlH,IAGXnL,EAAIwJ,OACD,cAAcsY,KAAK9hB,EAAIkR,UACvBlR,EAAIwJ,KAAO,KAEN,eAAesY,KAAK9hB,EAAIkR,YAC7BlR,EAAIwJ,KAAO,QAGnBxJ,EAAIoJ,KAAOpJ,EAAIoJ,MAAQ,IACvB,MACMwJ,GADkC,IAA3B5S,EAAI4S,KAAKrJ,QAAQ,KACV,IAAMvJ,EAAI4S,KAAO,IAAM5S,EAAI4S,KAS/C,OAPA5S,EAAIhC,GAAKgC,EAAIkR,SAAW,MAAQ0B,EAAO,IAAM5S,EAAIwJ,KAAOJ,EAExDpJ,EAAI+hB,KACA/hB,EAAIkR,SACA,MACA0B,GACCiP,GAAOA,EAAIrY,OAASxJ,EAAIwJ,KAAO,GAAK,IAAMxJ,EAAIwJ,MAChDxJ,CACX,CD7CmBzB,CAAI4M,GADnBlE,EAAOA,GAAQ,CAAC,GACamC,MAAQ,cAC/BuJ,EAASiP,EAAOjP,OAChB3U,EAAK4jB,EAAO5jB,GACZoL,EAAOwY,EAAOxY,KACd4Y,EAAgBL,GAAM3jB,IAAOoL,KAAQuY,GAAM3jB,GAAU,KAK3D,IAAIsc,EAaJ,OAjBsBrT,EAAKgb,UACvBhb,EAAK,0BACL,IAAUA,EAAKib,WACfF,EAGA1H,EAAK,IAAIkF,GAAQ7M,EAAQ1L,IAGpB0a,GAAM3jB,KACP2jB,GAAM3jB,GAAM,IAAIwhB,GAAQ7M,EAAQ1L,IAEpCqT,EAAKqH,GAAM3jB,IAEX4jB,EAAO/jB,QAAUoJ,EAAKpJ,QACtBoJ,EAAKpJ,MAAQ+jB,EAAO1O,UAEjBoH,EAAGvS,OAAO6Z,EAAOxY,KAAMnC,EAClC,CAGAjI,OAAO+S,OAAO,GAAQ,CAClByN,QAAO,GACPlM,OAAM,GACNgH,GAAI,GACJL,QAAS,KEzCb,MAEalS,GAASuS,GAFV,yC,qCCUG,SAAS6H,KACtB,MAAMnR,GAAWoR,EAAAA,EAAAA,eAGXvkB,EADe,IAAIQ,gBAAgB2S,EAASqR,QACvBC,IAAI,UACzB,EAACC,EAAa,EAACC,IAAmBzkB,EAAAA,EAAAA,WAAS,IAC3C,EAAC0kB,EAAY,EAACC,IAAkB3kB,EAAAA,EAAAA,WAAS,GAE/C,SAAS4kB,EAAe7jB,GACtB0jB,EAAgB1jB,EAClB,EAEA8jB,EAAAA,EAAAA,YAAU,KACRJ,GAAgB,GAChBE,GAAe,GACf3a,GAAOjD,GAAG,eAAgB6d,GAC1B5a,GAAOiE,QAAQ,KAAMlG,KAAK,QAAS,CAAC,MAAQjI,IAE5C,MAAMglB,EAAWC,aAAY,KACtB/a,GAAOwS,WACVmI,GAAe,EACjB,GACC,KAEH,MAAO,KACL3a,GAAO1C,IAAI,eAAgBsd,GAC3BI,cAAcF,EAAS,CACxB,GACA,CAAChlB,EAAOkK,GAAOwS,YAElB,IAAIyI,EAAe,GAUnB,OATKP,EAEO1a,GAAOwS,UAGTgI,IACRS,EAAY,IAAOnlB,EAAK,YAHxBmlB,EAAe,eAFfA,EAAe,yBAQZT,EAcHxlB,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IACdF,EAAAA,cAACO,GAAAA,EAAS,MACVP,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,KAChBF,EAAAA,cAAA,OAAKQ,MAAO,CAACC,MAAM,OAAQylB,YAAY,QACrClmB,EAAAA,cAACU,GAAAA,EAAU,OAEbV,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IAA8B,IAAEY,EAAM,kBACtDd,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IACbslB,EAAa7hB,OAAOqJ,KAAI,SAASmZ,GAChC,MAAM9Z,EAAO8Z,EAAK9Z,KAAKoJ,QAAQ,QAAS,IAAIA,QAAQ,MAAO,IAC3D,OAAQzV,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IACtBF,EAAAA,cAACG,EAAAA,KAAI,CAACF,UAAWC,GAAAA,GAA0CE,GAAOC,sCAAiCgM,GAASA,EAAKoJ,QAAQ,IAAK,QAC9HzV,EAAAA,cAAA,WAAKA,EAAAA,cAAA,WACLA,EAAAA,cAAA,QAAMC,UAAWC,GAAAA,IAA4C,aAC5DimB,EAAKC,MAAMpZ,KAAKqZ,GAAarmB,EAAAA,cAAA,YAAOqmB,EAAQ,QAEjD,MA5BFrmB,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IACdF,EAAAA,cAACO,GAAAA,EAAS,MACVP,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,KAChBF,EAAAA,cAAA,OAAKQ,MAAO,CAACC,MAAM,OAAQylB,YAAY,QACrClmB,EAAAA,cAACU,GAAAA,EAAU,OAEbV,EAAAA,cAAA,OAAKC,UAAWC,GAAAA,IAA+B+lB,GA0BvD,C,wPCrFO,IAAIK,EAAW,mCACXC,EAAuB,+CACvBC,EAAqB,6CACrBC,EAAoB,4CACpBC,EAA0B,kDAC1BC,EAAkC,0DAClCC,EAAgC,wDAChCC,EAAmC,2DACnCC,EAAiC,wD","sources":["webpack://my-blog/./src/styles/ContentsTree.module.css","webpack://my-blog/./src/components/ContentsTree.js","webpack://my-blog/./src/styles/Navigator.module.css","webpack://my-blog/./src/components/Navigator.js","webpack://my-blog/./src/styles/QueryInput.module.css","webpack://my-blog/./src/components/QueryInput.js","webpack://my-blog/./node_modules/engine.io-parser/build/esm/commons.js","webpack://my-blog/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://my-blog/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://my-blog/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://my-blog/./node_modules/engine.io-parser/build/esm/index.js","webpack://my-blog/./node_modules/@socket.io/component-emitter/index.mjs","webpack://my-blog/./node_modules/engine.io-client/build/esm/globalThis.browser.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/util.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transport.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/contrib/yeast.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/socket.js","webpack://my-blog/./node_modules/engine.io-client/build/esm/index.js","webpack://my-blog/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://my-blog/./node_modules/socket.io-parser/build/esm/binary.js","webpack://my-blog/./node_modules/socket.io-parser/build/esm/index.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/on.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/socket.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/manager.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/index.js","webpack://my-blog/./node_modules/gatsby/node_modules/socket.io-client/build/esm/url.js","webpack://my-blog/./src/components/socket.js","webpack://my-blog/./src/pages/search.js","webpack://my-blog/./src/styles/PostList.module.css"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport var contentsTree__leaf = \"ContentsTree-module--contentsTree__leaf--8208d\";","import React from \"react\";\r\nimport { Link } from \"gatsby\";\r\n\r\nimport * as styles from \"../styles/ContentsTree.module.css\";\r\n\r\n/** Dummy table of contents component.\r\n    To be modified later. */\r\nexport default function ContentsTree() {\r\n  return (\r\n    <div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;├── SideProjects</div>    \r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/myblog-dev-log`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── myblog-dev-log</Link></div>\r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/markdown-search-engine`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── markdown-search-engine</Link></div>\r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/tadak-dev-log`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── tadak-dev-log</Link></div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;├── Study</div>\r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/AI`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── AI</Link></div>\r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/devops`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── devops</Link></div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div><Link to={`${process.env.GATSBY_PUBLIC_URL}/etc`} className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;└── etc</Link></div>\r\n    </div>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport var navigator = \"Navigator-module--navigator--6deb4\";\nexport var navigator__title = \"Navigator-module--navigator__title--3580b\";","import React from 'react';\r\nimport { Link } from 'gatsby';\r\n\r\nimport ContentsTree from \"../components/ContentsTree\"\r\nimport QueryInput from './QueryInput';\r\n\r\nimport * as styles from \"../styles/Navigator.module.css\";\r\n\r\n/** Navigator component for blog. */\r\nexport default function Navigator() {\r\n  return (\r\n    <nav className={styles[\"navigator\"]}>\r\n      <Link to={process.env.GATSBY_PUBLIC_URL} className={styles[\"navigator__title\"]}>bill0077.log</Link>\r\n      <ContentsTree />\r\n      <div style={{width:'80%'}}><QueryInput /></div>\r\n    </nav>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var queryInput = \"QueryInput-module--queryInput--400c2\";\nexport var queryInput__form = \"QueryInput-module--queryInput__form--24dc3\";\nexport var queryInput__form__input = \"QueryInput-module--queryInput__form__input--28ac4\";","import React, { useState } from 'react';\r\nimport { navigate } from \"gatsby\"\r\n\r\nimport * as styles from '../styles/QueryInput.module.css';\r\n\r\n/** Input component that gets search query and navigate to search page with query as params.\r\n   Empty query is ignored \r\n*/\r\nexport default function QueryInput() {\r\n  const [query, setQuery] = useState('');\r\n\r\n  function onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if (query === '') {\r\n      return\r\n    }\r\n    \r\n    const params = new URLSearchParams()\r\n    params.append('query', query)\r\n    const url = `/search?${params.toString()}`\r\n    navigate(url)\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"queryInput\"]}>\r\n      <form className={styles[\"queryInput__form\"]} id=\"search\" onSubmit={ onSubmit }>\r\n        <input className={styles[\"queryInput__form__input\"]} placeholder=\"search posts here!\" onChange={ e => setQuery(e.target.value) } />\r\n      </form>\r\n    </div>\r\n  )\r\n}","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 2000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { io } from 'socket.io-client';\r\n\r\nconst URL = 'http://mybackendserverdomain.com:5000';\r\n\r\nexport const socket = io(URL);","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"gatsby\";\r\nimport { useLocation } from \"@reach/router\";\r\nimport { socket } from \"../components/socket\";\r\n\r\nimport Navigator from \"../components/Navigator\"\r\nimport QueryInput from \"../components/QueryInput\";\r\n\r\nimport * as styles from \"../styles/PostList.module.css\";\r\n\r\n/** Component for searching post.\r\n  Use url params to get query.*/\r\nexport default function Search() {\r\n  const location = useLocation()\r\n\r\n  const searchParams = new URLSearchParams(location.search)\r\n  const query = searchParams.get(\"query\")\r\n  const [searchResult, setSearchResult] = useState(false);\r\n  const [isConnected, setIsConnected] = useState(true)\r\n\r\n  function onSearchResult(value) {\r\n    setSearchResult(value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setSearchResult(false)\r\n    setIsConnected(true)\r\n    socket.on(\"searchResult\", onSearchResult);\r\n    socket.timeout(5000).emit(\"query\", {\"query\":query});\r\n\r\n    const interval = setInterval(() => {\r\n      if (!socket.connected) {\r\n        setIsConnected(false);\r\n      }\r\n    }, 5000);\r\n\r\n    return () => {\r\n      socket.off(\"searchResult\", onSearchResult);\r\n      clearInterval(interval);\r\n    };\r\n  }, [query, socket.connected]);\r\n\r\n  var searchStatus = ''\r\n  if (!isConnected) {\r\n    searchStatus = '현재 검색 서버와 연결되지 않습니다 :('\r\n  } else if (!socket.connected) {\r\n    searchStatus = '검색 서버 연결중...'\r\n  }  \r\n  else if (!searchResult) {\r\n    searchStatus = `'${query}' 검색중...`\r\n  }\r\n\r\n  if (!searchResult) {\r\n    return (\r\n      <div className={styles[\"postList\"]}>\r\n        <Navigator />\r\n        <div className={styles[\"postList__background\"]} />\r\n        <div style={{width:\"40vw\", paddingLeft:\"30%\"}}>\r\n          <QueryInput />\r\n        </div>\r\n        <div className={styles[\"postList__category\"]}>{searchStatus}</div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"postList\"]}>\r\n      <Navigator />\r\n      <div className={styles[\"postList__background\"]} />\r\n      <div style={{width:\"40vw\", paddingLeft:\"30%\"}}>\r\n        <QueryInput />\r\n      </div>\r\n      <div className={styles[\"postList__category\"]}>'{query}'에 대한 검색 결과입니다</div>\r\n      <div className={styles[\"postList__content\"]}>\r\n        {searchResult.result.map(function(post) { \r\n          const path = post.path.replace(\"root/\", \"\").replace(\".md\", \"\")\r\n          return (<div className={styles[\"postList__content__post\"]}>\r\n            <Link className={styles[\"postList__content__post__title\"]} to={`${process.env.GATSBY_PUBLIC_URL}/${path}`}>{path.replace(\"/\", \" > \")}</Link>\r\n            <br/><br/>\r\n            <span className={styles[\"postList__content__post__excerpt\"]}>keyword: </span>\r\n            {post.elems.map((keyword) => (<span>{keyword}, </span>))}\r\n          </div>)\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","// extracted by mini-css-extract-plugin\nexport var postList = \"PostList-module--postList--5fcc0\";\nexport var postList__background = \"PostList-module--postList__background--0a42f\";\nexport var postList__category = \"PostList-module--postList__category--af01a\";\nexport var postList__content = \"PostList-module--postList__content--99772\";\nexport var postList__content__post = \"PostList-module--postList__content__post--c72c0\";\nexport var postList__content__post__author = \"PostList-module--postList__content__post__author--0fbc7\";\nexport var postList__content__post__date = \"PostList-module--postList__content__post__date--1f2f3\";\nexport var postList__content__post__excerpt = \"PostList-module--postList__content__post__excerpt--23e54\";\nexport var postList__content__post__title = \"PostList-module--postList__content__post__title--43639\";"],"names":["contentsTree__leaf","ContentsTree","React","className","styles","Link","to","process","navigator__title","Navigator","style","width","QueryInput","queryInput","queryInput__form","queryInput__form__input","query","setQuery","useState","id","onSubmit","event","preventDefault","params","URLSearchParams","append","url","toString","navigate","placeholder","onChange","e","target","value","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","chars","lookup","i","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","sid","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","emitWithAck","withErr","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","listener","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","sameNamespace","forceNew","multiplex","Search","useLocation","search","get","searchResult","setSearchResult","isConnected","setIsConnected","onSearchResult","useEffect","interval","setInterval","clearInterval","searchStatus","paddingLeft","post","elems","keyword","postList","postList__background","postList__category","postList__content","postList__content__post","postList__content__post__author","postList__content__post__date","postList__content__post__excerpt","postList__content__post__title"],"sourceRoot":""}