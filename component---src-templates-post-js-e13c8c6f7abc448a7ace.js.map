{"version":3,"file":"component---src-templates-post-js-e13c8c6f7abc448a7ace.js","mappings":"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,EAAKu5B,sBAAuB4tB,EAC/D,GCzKEC,GAAqB,OACrBC,GAAkB,sBAClBC,GAAwB,6DACxBC,GAAiC,CACnC,6CACA,6CACA,uDACA,kCACA,kCACA,yCACA,yCACA,iCACA,0BACA,2BACA,0BACA,gCACA,0BACA,wBACA,8BACA,8BACA,8BACA,8BACA,qCACA,qCACA,qCACA,qCACA,6BACA,sBACA,2CACA,wDACA,iDACA,mDACA,wDACA,iDACA,mDACA,sCACA,6CACA,6CACA,sDACA,8DACA,8CACA,iFACA,wEACA,uCACA,gDACA,uDACA,kCACA,+BACA,+BACA,yBACA,gCACA,kCACA,sCACA,2CACA,yCACA,wBACA,4BACA,sCACA,mCAEEC,GAA8C,IAC7CD,GACH,mCACA,wCAEEE,GAAyB,IAAI1lD,IAAI,CACnC,uCACA,qCACA,SAEE2lD,GAAoC,CAAC,mCAAoC,wCACzEC,GAAmD,IAClDD,GACH,mCACA,wCAGJ,SAASE,GAAUptB,EAAUqtB,GACzB,OAAOA,EAASC,MAAMv6D,GAAWitC,EAASsC,WAAWvvC,IACzD,CC/EA,MAAMw6D,GAAa,CACfC,UAAW,YACXC,gBAAiB,yBAGfC,GAAsB,gBACtBC,GAA+B,gBAC/BC,GAA2B,IAAIxmD,IAAI,CACrC,gBACA,gBACA,gBACA,cACA,WACA,gBACA,kBACA,WACA,cACA,WACA,oBACA,gBACA,eACA,mBACA,YACA,aACA,WACA,eACA,oBACA,eACA,cACA,cACA,mBACA,YACA,aACA,aACA,sBACA,mBACA,eACA,YACA,YACA,YACA,gBACA,sBACA,iBACA,OACA,OACA,cACA,YACA,qBACA,mBACA,mBACA,mBACA,eACA,cACA,eACA,cACA,eACA,iBACA,cACA,UACA,UACA,aACA,UACA,aACA,mBACA,mBACA,cACFwQ,KAAK6zC,GAAS,CAACA,EAAKxwE,cAAewwE,MAC/BoC,GAA2B,IAAIzmD,IAAI,CACrC,CAAC,gBAAiB,CAAErU,OAAQ,QAASvb,KAAM,UAAWmiD,UAAW,GAAGsW,QACpE,CAAC,gBAAiB,CAAEl9C,OAAQ,QAA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Km5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C,EAAI,IAAK,GAAGm5C,OAAOn5C,EAAI,GAAI,KAAKm5C,OAAOn5C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AAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,KAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,KAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,MAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3BS,EAAUT,SAAS,EAAQ,OAC3B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zD,EACIyyG,EAAmB,SAAUp2G,GAC/B,OAAO,IAAIi2C,OAAO,aAAej2C,EAAIghC,IAAI4C,GAAQ3gC,KAAK,KAAO,aAC/D,EACIozG,EAAW,CACb,iBAAkB,CAChB,KACA,QACA,QACA,OACA,UACA,MACA,WACA,kBACA,MACA,OACA,YACA,aACA,OACA,WACA,OACA,OACA,QACA,WACA,OACA,QACA,OACA,MACA,IACA,IACA,QACA,QACA,QACA,OACA,kBACA,MACA,SACA,MACA,QACA,OACA,QACA,SACA,OACA,UACA,UACA,OACA,UACA,MACA,gBACA,WACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,MACA,OACA,OACA,QACA,UACA,YACA,OACA,QACA,OACA,SACA,gBACA,SACA,QACA,YACA,WACA,oBACA,kBACA,OACA,YACA,MACA,QACA,MACA,QACA,MACA,iBACA,WAEF,uBAAwB,CAEtB,UACA,YACA,YACA,KACA,SACA,MACA,IACA,WACA,KACA,SACA,QACA,SACA,YACA,aACA,WACA,SACA,UACA,gBACA,oBACA,YACA,UACA,mBACA,KACA,WACA,IACA,KACA,MAEF,oBAAqB,CACnB,aACA,WACA,SACA,mBACA,SACA,aACA,aACA,YACA,mBACA,kBACA,WACA,aACA,OACA,WACA,UACA,aACA,YACA,WACA,OACA,OACA,MACA,WACA,UACA,SACA,UACA,aACA,aACA,SACA,QACA,UACA,oBACA,aACA,cACA,OACA,SACA,gBACA,oBACA,gCACA,iCACA,YACA,UACA,WACA,SACA,aACA,aACA,UACA,SACA,OACA,eACA,eACA,QACA,OACA,SACA,YACA,UACA,QACA,WACA,cACA,WACA,QACA,YACA,aACA,aACA,qBACA,SACA,SACA,WACA,eACA,UACA,aACA,OACA,UACA,QACA,SACA,SACA,OACA,aACA,WACA,YACA,MACA,aACA,UACA,aACA,SACA,cACA,YACA,OACA,YACA,SACA,YACA,iBACA,UACA,eACA,UACA,gBACA,eACA,YACA,mBACA,UACA,SACA,WACA,OACA,aACA,oBACA,YACA,UACA,UACA,YACA,WACA,WACA,aACA,OACA,cACA,iBACA,QACA,UACA,YACA,gBACA,cACA,oBACA,MACA,UACA,OACA,SACA,OACA,sBACA,aACA,aACA,mBACA,UACA,cACA,SACA,aACA,WACA,kBACA,OACA,OACA,QACA,QACA,QACA,YACA,SACA,eACA,eACA,WACA,WACA,MACA,aACA,YACA,WACA,QACA,oBACA,eACA,OACA,cACA,QACA,UACA,UACA,OACA,cACA,SACA,OACA,gBACA,YACA,eAEF,eAAgB,CACd,UACA,kBACA,MACA,cACA,iBACA,aACA,UACA,eACA,UACA,WACA,cACA,MACA,IACA,IACA,cACA,IACA,MACA,IACA,KACA,SACA,cACA,wBACA,OACA,IACA,OACA,IACA,WACA,SACA,cACA,KACA,QACA,aACA,SACA,QACA,SACA,QACA,QACA,QACA,UACA,SACA,UACA,WACA,KACA,iBACA,KACA,MACA,UACA,aACA,KACA,KACA,MACA,QACA,WACA,SACA,KACA,UACA,UACA,MACA,SACA,KACA,SACA,QACA,OACA,WACA,aACA,UACA,WACA,OACA,YACA,cACA,QACA,MACA,iBACA,YACA,yBACA,aACA,QACA,aACA,QACA,UACA,MACA,SACA,wBACA,MACA,OACA,KACA,OACA,WACA,QACA,YACA,cAGJ92G,OAAO6F,KAAKixG,GAAUtb,SAAQ,SAAUt0E,GACtCsvF,EAAOtvF,GAAG1Q,QAAUqgG,EAAiBC,EAAS5vF,GAChD,IAyNAsvF,EAAOI,YAAYpgG,QAAUqgG,EAxNX,CAEhB,MACA,QACA,OACA,MACA,OACA,QACA,QACA,OACA,QACA,UACA,MACA,MACA,OACA,QACA,QACA,UACA,SACA,OACA,OACA,QACA,QACA,MACA,SACA,KACA,UACA,YACA,MACA,OACA,YACA,QACA,OACA,QACA,OACA,QACA,UACA,KACA,QACA,OACA,SACA,aACA,aACA,WACA,QACA,UACA,OACA,KACA,OACA,SACA,QACA,OACA,SACA,MACA,OACA,SACA,MACA,WACA,YACA,iBACA,kBACA,SACA,YACA,QACA,YACA,YACA,WACA,cACA,UACA,YACA,gBACA,mBACA,SACA,MACA,UACA,cACA,aACA,SACA,cACA,OACA,eACA,YACA,UACA,eACA,eACA,aACA,kBACA,QACA,aACA,SACA,eACA,YACA,eACA,WACA,SACA,WACA,aACA,OACA,YACA,gBACA,eACA,OACA,UACA,UACA,YACA,gBACA,iBACA,kBACA,gBACA,UACA,OACA,YACA,cACA,UACA,cACA,aACA,OACA,aACA,iBACA,aACA,OACA,eACA,cACA,WACA,gBACA,YACA,UACA,QACA,aACA,QACA,OACA,aACA,UACA,aACA,aACA,QACA,OACA,YACA,iBACA,YACA,UACA,eACA,cACA,iBACA,YACA,oBACA,kBACA,QACA,iBACA,eACA,gBACA,kBACA,cACA,gBACA,gBACA,kBACA,cACA,OACA,UACA,YACA,YACA,UACA,eACA,iBACA,aACA,OACA,SACA,cACA,qBACA,SACA,mBACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,gBACA,cACA,iBACA,cACA,eACA,aACA,cACA,WACA,iBACA,oBACA,cACA,qBACA,WACA,eACA,mBACA,oBACA,iBACA,UACA,iBACA,iBACA,cACA,SACA,gBACA,eACA,eACA,aACA,aACA,UACA,oBACA,eACA,YACA,cACA,wBACA,oBAGFlQ,EAAMW,UAAUkP,OAASA,CAC1B,CAr5BA,CAq5BE7P,EACL,CA15BA/kG,EAAOC,QAAU20G,EACjBA,EAAOvQ,YAAc,SACrBuQ,EAAOtO,QAAU,iCCCjB,SAAS6O,EAAOpQ,IACb,SAAWA,GAMVA,EAAMW,UAAiB,MAAI,CACzBj7D,QAAS,CACP71B,QAAS,aAEX2V,OAAQ,CACN3V,QAAS,UACT6xF,QAAQ,GAEV,iBAAkB,CAChB7xF,QAAS,mBACTgxF,MAAO,UAET,iBAAkB,CAChBhxF,QAAS,OACTgxF,MAAO,aAETpiG,OAAQ,MACR2jB,SAAU,gCACVk/E,YAAa,QACbQ,SAAU,QACV,eAAgB,CACdjyF,QAAS,YACTgxF,MAAO,QAGZ,CA/BA,CA+BEb,EACL,CApCA/kG,EAAOC,QAAUk1G,EACjBA,EAAO9Q,YAAc,SACrB8Q,EAAO7O,QAAU,kCCCjB,SAAS8O,EAAuBrQ,GAC9BA,EAAMW,UAAU,4BAA8BX,EAAMW,UAAUxlG,OAC5D,QACA,CACEuqC,QAAS,SACT27D,QACE,oEACFj/E,SAAU,kDAGP49E,EAAMW,UAAU,4BAA4B,cACnDX,EAAMW,UAAUjzB,aAAa,2BAA4B,UAAW,CAClE/qD,KAAM,CACJ9S,QACE,gGACFuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNgmE,SAAU,CACRjyF,QAAS,yDACTisB,OAAQ,CACN1Z,SAAU,IACVi/E,QAAS,OACTC,YAAa,aAGjBA,YAAa,OAGjB33F,OAAQ,CAENkG,QAAS,kDACTuxF,YAAY,EACZP,MAAO,UACP/kE,OAAQ,CACNwlE,YAAa,OAIrB,CA1CArmG,EAAOC,QAAUm1G,EACjBA,EAAuB/Q,YAAc,yBACrC+Q,EAAuB9O,QAAU,kCCCjC,SAASnrE,EAAK4pE,IACX,SAAWA,GACVA,EAAMW,UAAUvqE,KAAO4pE,EAAMW,UAAUxlG,OAAO,aAAc,CAAC,GAC7D6kG,EAAMW,UAAUjzB,aAAa,OAAQ,UAAW,CAC9Cx7D,KAAM,CACJ,CACErC,QACE,sEACFgxF,MAAO,UAIbb,EAAMW,UAAUvqE,KAAK,qBAAqBvmB,QACxC,8KACKmwF,EAAMW,UAAUvqE,KAAgB,UACvC4pE,EAAMW,UAAUjzB,aAAa,OAAQ,WAAY,CAC/C,mBAAoB,CAClB79D,QAAS,YACTgxF,MAAO,iBAGN9mG,MAAMF,QAAQmmG,EAAMW,UAAUvqE,KAAKirE,WACtCrB,EAAMW,UAAUvqE,KAAKirE,QAAU,CAACrB,EAAMW,UAAUvqE,KAAKirE,UAEvDrB,EAAMW,UAAUvqE,KAAKirE,QAAQpxE,QAC3B,CACEpgB,QAAS,kDACTuxF,YAAY,GAEd,CACEvxF,QACE,wGACFuxF,YAAY,GAGjB,CAlCA,CAkCEpB,EACL,CAvCA/kG,EAAOC,QAAUk7B,EACjBA,EAAKkpE,YAAc,OACnBlpE,EAAKmrE,QAAU,kCCCf,SAAS+O,EAAQtQ,GACfA,EAAMW,UAAU2P,QAAU,CACxB,gBAAiB,CACfzgG,QAAS,0BACTgxF,MAAO,UAETr7E,OAAQ,CACN3V,QACE,gGACFisB,OAAQ,CACN4J,QAAS,CACP71B,QAAS,wBACTuxF,YAAY,KAIlB17D,QAAS,CACP71B,QAAS,MACT6xF,QAAQ,GAEVpjG,QAAS,+BACTG,OAAQ,yDACR4iG,QAAS,CAEP,oEACA,gIACA,4VACA,+JAEFj/E,SAAU,CACR,qDACA,CAEEvS,QAAS,sBACTuxF,YAAY,IAGhBE,YAAa,qBAEjB,CA1CArmG,EAAOC,QAAUo1G,EACjBA,EAAQhR,YAAc,UACtBgR,EAAQ/O,QAAU,kCCClB,SAASgP,EAAOvQ,GACdA,EAAMW,UAAU4P,OAASvQ,EAAMW,UAAUxlG,OAAO,QAAS,CACvDuqC,QAAS,CACP,CACE71B,QAAS,kCACTuxF,YAAY,EACZM,QAAQ,GAEV,CACE7xF,QAAS,mBACTuxF,YAAY,EACZM,QAAQ,IAGZl8E,OAAQ,CACN3V,QAAS,8DACT6xF,QAAQ,GAEV,aAAc,CACZ7xF,QACE,yHACFuxF,YAAY,EACZtlE,OAAQ,CACN1Z,SAAU,QACVk/E,YAAa,OAGjBD,QACE,ooBACF5iG,OAAQ,CACN,iCACA,uBACA,oDACA,kCAEF2jB,SACE,6GAEJ49E,EAAMW,UAAUjzB,aAAa,SAAU,UAAW,CAChDzX,aAAc,CACZpmD,QAAS,gBACTuxF,YAAY,EACZP,MAAO,WACP/kE,OAAQ,CACN6oE,UAAW,CACT90F,QAAS,8CACTuxF,YAAY,EACZP,MAAO,eAKfb,EAAMW,UAAUjzB,aAAa,SAAU,cAAe,CACpD,yBAA0B,CACxB79D,QAAS,wBACTgxF,MAAO,aAGXb,EAAMW,UAAUjzB,aAAa,SAAU,SAAU,CAC/C00B,WAAY,CACVvyF,QAAS,YACT6xF,QAAQ,EACR5lE,OAAQ,CACNwlE,YAAa,YACb,aAAc,CACZzxF,QAAS,+BACTuxF,YAAY,GAEd,qBAAsB,CACpBvxF,QAAS,UACTisB,OAAQkkE,EAAMW,UAAU4P,UAI9Br9F,KAAM,CACJrD,QACE,4EACF6xF,QAAQ,IAGd,CAnFAzmG,EAAOC,QAAUq1G,EACjBA,EAAOjR,YAAc,SACrBiR,EAAOhP,QAAU,sCCHjB,IAAImM,EAA4B,EAAQ,MAIxC,SAAS8C,EAAIxQ,GACXA,EAAMS,SAASiN,GACd,SAAW1N,GAMV,IAHA,IAAIyQ,EACF,iGACG7mF,OACInuB,EAAI,EAAGA,EAAI,EAAGA,IACrBg1G,EAAWA,EAAShzG,QAAQ,WAAW,WACrC,OAAOgzG,CACT,IAEFA,EAAWA,EAAShzG,QAAQ,UAAW,UAAUmsB,QACjD,IAAI4mF,EAAM,CACR9qE,QAAS,kBACTlgB,OAAQ,CACN,CAEE3V,QAAS,iCACT6xF,QAAQ,GAEV,CACE7xF,QAASkgC,OACP,+DAA+DnmB,OAAOnsB,QACpE,WACA,WACE,OAAOgzG,CACT,KAGJ/O,QAAQ,EACR5lE,OAAQ,CACN2qE,cAAe,CACb52F,QAASkgC,OACP,oDAAoDnmB,OAAOnsB,QACzD,WACA,WACE,OAAOgzG,CACT,KAGJrP,YAAY,EACZtlE,OAAQ,CACN,4BAA6B,CAC3BjsB,QAAS,YACTgxF,MAAO,eAET94E,KAAM,UAMhBs5E,QAAS,aACT/iG,QAAS,qBACT,mBAAoB,CAClBuR,QAAS,uBACTuxF,YAAY,EACZP,MAAO,YAETmB,SAAU,iBACVvjG,OAAQ,oBACR2jB,SACE,4EACFk/E,YAAa,iBAEfkP,EAAIhrF,OAAO,GAAGsW,OAAO2qE,cAAc3qE,OAAO/T,KAAOyoF,EACjDxQ,EAAMW,UAAU6P,IAAM,CACpB,cAAe,CAEb3gG,QAAS,eACTgxF,MAAO,WAET,gBAAiB,CACfhxF,QAAS,cACTisB,OAAQ,CACN6oE,UAAW,CACT90F,QAAS,uBACTuxF,YAAY,EACZP,MAAO,WAETS,YAAa,cACbr7F,QAAS,CACP4J,QAAS,eACTgxF,MAAO,MACP/kE,OAAQ00E,KAId,oBAAqB,CACnB3gG,QAAS,kBACTisB,OAAQ,CACNwlE,YAAa,YACbr7F,QAAS,CACP4J,QAAS,eACTgxF,MAAO,MACP/kE,OAAQ00E,MAKhBxQ,EAAMiB,MAAMruE,IAAI,mBAAmB,SAAU0c,GAE3C,IAAIz/B,EAAUkgC,OACZ,mEAAmEnmB,OAAOnsB,QACxE,WACA,WACE,OAAOgzG,CACT,IAEF,MAEFzQ,EAAMW,UAAU,qBAAqBkN,kBACnCv+D,EACA,MACAz/B,EAEJ,IACAmwF,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GAC1C0wD,EAAMW,UAAU,qBAAqBmN,qBAAqBx+D,EAAK,MACjE,GACD,CAxHA,CAwHE0wD,EACL,CA9HA/kG,EAAOC,QAAUs1G,EACjBA,EAAIlR,YAAc,MAClBkR,EAAIjP,QAAU,kCCCd,SAASmP,EAAI1Q,GAGXA,EAAMW,UAAU+P,IAAM,CACpBxK,MAAO,CACLr2F,QAAS,sCACT6xF,QAAQ,EACR5lE,OAAQ,CACN40E,IAAK,CACH7gG,QAAS,0CACTuxF,YAAY,EACZtlE,OAAQ,MAEVwlE,YAAa,UAGjB57D,QAAS,CACP71B,QAAS,MACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QACE,sFACFuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN9G,aAAc,CACZnlB,QAAS,YACTuxF,YAAY,EACZP,MAAO,iBAIbQ,QACE,wMACF/iG,QAAS,qBACT0jG,SAAU,wBACVvjG,OAAQ,CACNoR,QACE,uFACFuxF,YAAY,GAEdpsE,aAAc,CACZnlB,QAAS,YACTuxF,YAAY,EACZP,MAAO,eAETz+E,SAAU,kCACVk/E,YAAa,iBAEftB,EAAMW,UAAU+P,IAAIxK,MAAMpqE,OAAO40E,IAAI50E,OAASkkE,EAAMW,UAAU+P,GAChE,CAtDAz1G,EAAOC,QAAUw1G,EACjBA,EAAIpR,YAAc,MAClBoR,EAAInP,QAAU,kCCCd,SAASoP,EAAM3Q,GACbA,EAAMW,UAAUgQ,MAAQ,CACtBjrE,QAAS,kBACTlgB,OAAQ,CACN3V,QAAS,iBACT6xF,QAAQ,GAEVL,QAAS,wBACT1jG,SAAU,UACVizG,SAAU,CACR/gG,QAAS,UACTuxF,YAAY,EACZP,MAAO,UAGTS,YAAa,OAEjB,CApBArmG,EAAOC,QAAUy1G,EACjBA,EAAMrR,YAAc,QACpBqR,EAAMpP,QAAU,kCCChB,SAASsP,EAAS7Q,GAChBA,EAAMW,UAAUkQ,SAAW,CACzBnrE,QAAS,MACTlgB,OAAQ,CACN3V,QACE,6EACF6xF,QAAQ,GAEV,aAAc,CAMZ7xF,QACE,6IACFuxF,YAAY,GAEdC,QACE,4QACFW,SAAU,2BACVF,SAAU,QACVrjG,OAAQ,CACN,4FACA,0BAEF4jG,SAAU,qBACV/jG,QAAS,qBACT8jB,SAAU,2CACVk/E,YAAa,gBAEjB,CAlCArmG,EAAOC,QAAU21G,EACjBA,EAASvR,YAAc,WACvBuR,EAAStP,QAAU,kCCCnB,SAASuP,EAAO9Q,GACdA,EAAMW,UAAUmQ,OAAS,CACvB,aAAc,CAEZjhG,QACE,mFACFuxF,YAAY,EACZtlE,OAAQ,CACNsrE,QAAS,CACPv3F,QAAS,yDACTgxF,MAAO,cAIbxd,IAAK,CAEHxzE,QACE,gFACFuxF,YAAY,EACZP,MAAO,UAETuH,MAAO,CACLv4F,QAAS,gBACTuxF,YAAY,EACZP,MAAO,UAETuG,QAAS,CACPv3F,QAAS,uDACTgxF,MAAO,YAGb,CAlCA5lG,EAAOC,QAAU41G,EACjBA,EAAOxR,YAAc,SACrBwR,EAAOvP,QAAU,kCCCjB,SAASwP,EAAQ/Q,IACd,SAAWA,GACV,IAAIxqD,EAAW,uCAAuC5rB,OACtDo2E,EAAMW,UAAUoQ,QAAU,CACxBC,SAAU,CACRnhG,QAAS,sBACTgxF,MAAO,UAETn7D,QAAS,CACP71B,QAAS,gBACTuxF,YAAY,GAEd/d,IAAK,CACHxzE,QAAS,iBACTuxF,YAAY,GAEd6P,QAAS,CACPphG,QACE,k+BACFuxF,YAAY,EACZtlE,OAAQ,CACNqpE,UAAW,CACTt1F,QAAS,cACTuxF,YAAY,GAEdC,QAAS,eAGb6P,SAAU,CACRrhG,QACE,skGACFuxF,YAAY,EACZtlE,OAAQ,CACNqpE,UAAW,CACTt1F,QAAS,cACTuxF,YAAY,GAEdC,QAAS,eAGb,aAAc,CAEZxxF,QAASkgC,OAAO,IAAMyF,EAAW,OAASA,EAAW,MACrD4rD,YAAY,EACZtlE,OAAQ,CACNq1E,QAAS,CACPthG,QAAS,UACTgxF,MAAO,YAETuQ,GAAI,CACFvhG,QAAS,iBACTgxF,MAAO,UAETS,YAAa,OAGjB,aAAc,CACZzxF,QAASkgC,OAAOyF,GAChB1Z,OAAQ,CACNu1E,GAAI,CACFxhG,QAAS,iBACTgxF,MAAO,YAETS,YAAa,OAGjBkL,OAAQ,CACN38F,QACE,i5EACFuxF,YAAY,GAEd57E,OAAQ,CACN3V,QAAS,8CACTisB,OAAQ,CACNq1E,QAAS,CACPthG,QAAS,UACTgxF,MAAO,cAIbsQ,QAAS,CACPthG,QAAS,UACTgxF,MAAO,YAGZ,CApFA,CAoFEb,EACL,CAzFA/kG,EAAOC,QAAU61G,EACjBA,EAAQzR,YAAc,UACtByR,EAAQxP,QAAU,kCCClB,SAAS+P,EAAItR,GACXA,EAAMW,UAAU2Q,IAAM,CAUpB5rE,QAAS,QAIT6rE,QAAS,WACTrJ,SAAU,SAIV1iF,OAAQ,kCAMR28E,QAAS,CACPtyF,QAAS,iBACTisB,OAAQ,CAONuqE,UAAW,aAgBfkH,MAAO,YAWP,cAAe,mBAEnB,CAnEAtyG,EAAOC,QAAUo2G,EACjBA,EAAIhS,YAAc,MAClBgS,EAAI/P,QAAU,sCCHd,IAAIuF,EAAa,EAAQ,MAIzB,SAAS0K,EAAKxR,GACZA,EAAMS,SAASqG,GACf9G,EAAMW,UAAU6Q,KAAOxR,EAAMW,UAAUxlG,OAAO,IAAK,CACjDkmG,QACE,+gCAEN,CATApmG,EAAOC,QAAUs2G,EACjBA,EAAKlS,YAAc,OACnBkS,EAAKjQ,QAAU,kCCCf,SAASkQ,EAAIzR,GACXA,EAAMW,UAAU+Q,kBAAoB1R,EAAMW,UAAU8Q,IAClDzR,EAAMW,UAAUxlG,OAAO,QAAS,CAC9BkmG,QACE,8GACF5iG,OACE,wEACF2jB,SACE,+FACFigF,SACE,s5LACFP,SACE,4rDAER,CAjBA7mG,EAAOC,QAAUu2G,EACjBA,EAAInS,YAAc,MAClBmS,EAAIlQ,QAAU,iCCCd,SAASoQ,EAAG3R,GAEVA,EAAMW,UAAUgR,GAAK,CACnBjsE,QAAS,CACP71B,QAAS,MACT6xF,QAAQ,GAEV,iBAAkB,CAChB7xF,QAAS,kCACTuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN2qE,cAAe,CACb52F,QACE,0EACFuxF,YAAY,EACZtlE,OAAQ,CACNr9B,OAAQ,kBACRqjG,SAAU,UACV,4BAA6B,CAC3BjyF,QAAS,YACTgxF,MAAO,eAETvzE,WAAY,CACVzd,QAAS,UACTisB,OAAQ,QAIdtW,OAAQ,YAGZ67E,QAAS,kBACT/iG,QAAS,qBACT,mBAAoB,CAElBuR,QACE,mFACFgxF,MAAO,WAETmB,SAAU,wBACVK,SACE,kLACF5jG,OAAQ,YACR2jB,SAAU,qBACVk/E,YAAa,eAEftB,EAAMW,UAAUgR,GAAG,kBAAkB71E,OAAsB,cAAEA,OAE7D,WAAEA,OAASkkE,EAAMW,UAAUgR,GAC3B3R,EAAMW,UAAUiR,IAAM5R,EAAMW,UAAUgR,EACxC,CAtDA12G,EAAOC,QAAUy2G,EACjBA,EAAGrS,YAAc,KACjBqS,EAAGpQ,QAAU,CAAC,qCCCd,SAASsQ,EAAS7R,GAEhBA,EAAMW,UAAU,UAAYX,EAAMW,UAAU,aAAe,CACzDj7D,QAAS,CACP71B,QAAS,SACT6xF,QAAQ,GAEVlsF,QAAS,CACP3F,QAAS,+DACTuxF,YAAY,EACZP,MAAO,UAET,aAAc,CACZhxF,QAAS,mCACTuxF,YAAY,EACZP,MAAO,UAETQ,QAAS,CACPxxF,QAAS,4DACTuxF,YAAY,GAEdh/E,SAAU,KACVk/E,YAAa,WAEjB,CA3BArmG,EAAOC,QAAU22G,EACjBA,EAASvS,YAAc,WACvBuS,EAAStQ,QAAU,kCCCnB,SAASjnE,EAAG0lE,GACVA,EAAMW,UAAUrmE,GAAK0lE,EAAMW,UAAUxlG,OAAO,QAAS,CACnDqqB,OAAQ,CACN3V,QAAS,yCACTuxF,YAAY,EACZM,QAAQ,GAEVL,QACE,sKACF/iG,QAAS,gCACTG,OAAQ,CAEN,+BACA,gFACA,sEAEF2jB,SACE,wFACFmhF,QACE,6LAEJvD,EAAMW,UAAUjzB,aAAa,KAAM,SAAU,CAC3Cx6D,KAAM,CACJrD,QAAS,6BACT6xF,QAAQ,YAGL1B,EAAMW,UAAUrmE,GAAG,aAC5B,CA/BAr/B,EAAOC,QAAUo/B,EACjBA,EAAGglE,YAAc,KACjBhlE,EAAGinE,QAAU,kCCCb,SAASuQ,EAAQ9R,GACfA,EAAMW,UAAUmR,QAAU,CACxBpsE,QAAS,MACTqsE,YAAa,CACXliG,QACE,mEACF6xF,QAAQ,EACRb,MAAO,SACP/kE,OAAQ,CACN,oBAAqB,CACnBjsB,QAAS,kCACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqR,YAI9BxsF,OAAQ,CACN3V,QAAS,iDACT6xF,QAAQ,GAEVjjG,OAAQ,2CACRH,QAAS,qBACTwjG,SAAU,eACV6C,UAAW,CACT90F,QAAS,cACTgxF,MAAO,YAET,YAAa,CACXhxF,QAAS,iEACT6xF,QAAQ,GAEV,aAAc,CACZ7xF,QAAS,oBACTgxF,MAAO,cAEToR,OAAQ,sCACR5P,SAAU,qBACV,aAAc,CACZxyF,QACE,kFACFuxF,YAAY,GAEdhzD,SAAU,CACRv+B,QAAS,+CACTuxF,YAAY,EACZP,MAAO,YAET,sBAAuB,CACrBhxF,QAAS,8BACTuxF,YAAY,EACZP,MAAO,YAET,mBAAoB,CAClBhxF,QAAS,2BACTuxF,YAAY,EACZP,MAAO,YAETQ,QACE,uIACFj/E,SAAU,eACV,iBAAkB,eAClBzN,OAAQ,eACR2sF,YAAa,iBACb3jG,SAAU,OAEZqiG,EAAMiB,MAAMruE,IAAI,kBAAkB,SAA8B0c,GAC9D,GAAqB,YAAjBA,EAAIpmC,SAwFR,IA/EA,IAAIgpG,EAAc5iE,EAAIrzC,OAAO8iB,QAAO,SAAUviB,GAC5C,MACmB,iBAAVA,GACQ,YAAfA,EAAM0V,MACS,WAAf1V,EAAM0V,IAEV,IACIigG,EAAe,EAwEZA,EAAeD,EAAYx2G,QAAU,CAC1C,IAAI02G,EAAaF,EAAYC,KAC7B,GAAwB,YAApBC,EAAWlgG,MAA6C,aAAvBkgG,EAAWnsG,QAAwB,CAEtE,IAAIosG,EAAiB,GACrB,GACEC,EAAY,CAAC,sBAAuB,iBACZ,MAAxBC,EAAS,GAAGtsG,QACZ,CAEAksG,GAAgB,EAChB,IAAIK,EAAgBC,EAAmB,OAAQ,QAC/C,IAAuB,IAAnBD,EACF,SAEF,KAAOL,EAAeK,EAAeL,IAAgB,CACnD,IAAIO,EAAIH,EAAS,GACF,aAAXG,EAAExgG,OACJygG,EAASD,EAAG,kBACZL,EAAe11G,KAAK+1G,EAAEzsG,SAE1B,CACAksG,EAAeK,EAAgB,CACjC,CACA,GACEF,EAAY,CAAC,cAAe,oBACJ,MAAxBC,EAAS,GAAGtsG,UAEZksG,IACAQ,EAASJ,EAAS,GAAI,qBAClBF,EAAe32G,OAAS,GAAG,CAC7B,IAAIk3G,EAAcH,EAAmB,OAAQ,QAC7C,IAAqB,IAAjBG,EACF,SAEF,IAAK,IAAIn3G,EAAI02G,EAAc12G,EAAIm3G,EAAan3G,IAAK,CAC/C,IAAIo3G,EAAWX,EAAYz2G,GAEP,aAAlBo3G,EAAS3gG,MACTmgG,EAAeh2G,QAAQw2G,EAAS5sG,UAAY,GAE5C0sG,EAASE,EAAU,iBAEvB,CACF,CAEJ,CACF,CAhHA,SAASN,EAASrwF,GAChB,OAAOgwF,EAAYC,EAAejwF,EACpC,CAQA,SAASowF,EAAY5S,EAAOx9E,GAC1BA,EAASA,GAAU,EACnB,IAAK,IAAIzmB,EAAI,EAAGA,EAAIikG,EAAMhkG,OAAQD,IAAK,CACrC,IAAIe,EAAQ+1G,EAAS92G,EAAIymB,GACzB,IAAK1lB,GAASA,EAAM0V,OAASwtF,EAAMjkG,GACjC,OAAO,CAEX,CACA,OAAO,CACT,CAYA,SAASg3G,EAAmB9iG,EAAM0zB,GAEhC,IADA,IAAIyvE,EAAc,EACTr3G,EAAI02G,EAAc12G,EAAIy2G,EAAYx2G,OAAQD,IAAK,CACtD,IAAIe,EAAQ01G,EAAYz2G,GACpBwK,EAAUzJ,EAAMyJ,QACpB,GAAmB,gBAAfzJ,EAAM0V,MAA6C,iBAAZjM,EACzC,GAAI0J,EAAKrS,KAAK2I,GACZ6sG,SACK,GAAIzvE,EAAM/lC,KAAK2I,IAEA,MADpB6sG,EAEE,OAAOr3G,CAIf,CACA,OAAQ,CACV,CAQA,SAASk3G,EAASn2G,EAAOqkG,GACvB,IAAIU,EAAU/kG,EAAMqkG,MACfU,EAEOxnG,MAAMF,QAAQ0nG,KACxB/kG,EAAMqkG,MAAQU,EAAU,CAACA,IAFzB/kG,EAAMqkG,MAAQU,EAAU,GAI1BA,EAAQ5kG,KAAKkkG,EACf,CAiDF,GACF,CA9MA5lG,EAAOC,QAAU42G,EACjBA,EAAQxS,YAAc,UACtBwS,EAAQvQ,QAAU,kCCClB,SAASwR,EAAO/S,GACdA,EAAMW,UAAUoS,OAAS/S,EAAMW,UAAUxlG,OAAO,QAAS,CACvDqqB,OAAQ,CACN,CAEE3V,QACE,kFACF6xF,QAAQ,GAEV,CAGE7xF,QAAS,oCACT6xF,QAAQ,IAGZL,QACE,6WACF5iG,OACE,6FACF2jB,SAAU,CACRvS,QACE,oJACFuxF,YAAY,GAEdE,YAAa,sBAEftB,EAAMW,UAAUjzB,aAAa,SAAU,SAAU,CAC/Cs4B,QAAS,CACPn2F,QAAS,OACTgxF,MAAO,aAGXb,EAAMW,UAAUjzB,aAAa,SAAU,cAAe,CACpD,cAAe,0DAEjBsyB,EAAMW,UAAUjzB,aAAa,SAAU,WAAY,CACjD00B,WAAY,CACVvyF,QAAS,eACTuxF,YAAY,EACZP,MAAO,iBAGXb,EAAMiB,MAAMruE,IAAI,QAAQ,SAAU0c,GAChC,GAAqB,WAAjBA,EAAIpmC,UAAsC,WAAbomC,EAAIp9B,KAAmB,CACtD,IAAI80F,EAAY13D,EAAIrpC,QAAQpL,MAAM,GAClC,GAAiB,KAAbmsG,EAAkB,CACpB,IAAIn3F,EAAU,kCACI,MAAdm3F,IACFn3F,EAAU,mCAEZy/B,EAAIrpC,QAAQpL,MAAQy0C,EAAIrpC,QAAQpL,MAC7B4C,QAAQ,QAAS,KACjBA,QAAQ,SAAU,KACrB6xC,EAAIrpC,QAAU+5F,EAAMnE,UAAUvsD,EAAIrpC,QAAQpL,MAAO,CAC/CyyB,WAAY,CACVzd,QAASA,EACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUoS,UAG5BzjE,EAAI0mD,QAAQr5F,KAAmB,MAAdqqG,EAAoB,QAAU,UACjD,CACF,CACF,GACF,CApEA/rG,EAAOC,QAAU63G,EACjBA,EAAOzT,YAAc,SACrByT,EAAOxR,QAAU,sCCHjB,IAAIyH,EAAgB,EAAQ,MAI5B,SAASgK,EAAKhT,GACZA,EAAMS,SAASuI,GAOd,SAAWhJ,GACVA,EAAMW,UAAUqS,KAAO,CAErB,oBAAqB,CACnBnjG,QACE,gEACFuxF,YAAY,EACZP,MAAO,WAET,iBAAkB,CAChB,CACEhxF,QACE,6GACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUuI,MAE1B,CACEr5F,QACE,sFACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUuI,OAI5BnqF,OAAQ,CACNlP,QACE,iFACFuxF,YAAY,EACZtlE,OAAQ,CACN,cAAe,CACbjsB,QAAS,WACTgxF,MAAO,YAIbV,OAAQ,CACNtwF,QAAS,4BACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUR,QAE1B8S,QAAS,CACPpjG,QAAS,oCACTuxF,YAAY,GAEd/d,IAAK,CAEHxzE,QACE,sGACFuxF,YAAY,EACZtlE,OAAQ,CACN/7B,WAAY,CACV,CAGE8P,QAAS,mCACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUuI,MAE1B,CACEr5F,QAAS,YACTisB,OAAQ,CACN,aAAc,CACZjsB,QAAS,0CACTuxF,YAAY,GAEd,YAAa,4BACbE,YAAa,WAGjB,CACEzxF,QAAS,aACTisB,OAAQkkE,EAAMW,UAAUuI,OAG5B5H,YAAa,SAGjBhuF,KAAM,CACJzD,QAAS,0CACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUuI,MAG1BzC,cAAe,CACb52F,QAAS,aACTisB,OAAQ,CACNkrE,UAAW,CACTn3F,QAAS,WACTgxF,MAAO,eAETqI,KAAM,CACJr5F,QAAS,UACTisB,OAAQkkE,EAAMW,UAAUuI,QAI9B5H,YAAa,CACXzxF,QAAS,kCACTuxF,YAAY,IAoBhB,IAjBA,IAEI8R,EAAU,CACZ,MACA,CACEn0F,OAAQ,SACR7V,SAAU,gBAEZ,MACA,aACA,OACA,WACA,OACA,OACA,WAEEiqG,EAAc,CAAC,EACV13G,EAAI,EAAG+oG,EAAI0O,EAAQx3G,OAAQD,EAAI+oG,EAAG/oG,IAAK,CAC9C,IAAIsjB,EAASm0F,EAAQz3G,GACrBsjB,EACoB,iBAAXA,EACH,CACEA,OAAQA,EACR7V,SAAU6V,GAEZA,EACFihF,EAAMW,UAAU5hF,EAAO7V,YACzBiqG,EAAY,UAAYp0F,EAAOA,QAAU,CACvClP,QAASkgC,OA3Bb,uGA4BqBtyC,QAAQ,mBAAmB,WACxC,OAAOshB,EAAOA,MAChB,KAEFqiF,YAAY,EACZtlE,OAAQ,CACN,cAAe,CACbjsB,QAAS,WACTgxF,MAAO,UAETxrF,KAAM,CACJxF,QAAS,UACTgxF,MAAO,CAAC9hF,EAAO7V,SAAU,YAAc6V,EAAO7V,UAC9C4yB,OAAQkkE,EAAMW,UAAU5hF,EAAO7V,aAKzC,CACA82F,EAAMW,UAAUjzB,aAAa,OAAQ,SAAUylC,EAChD,CAtJA,CAsJEnT,EACL,CAlKA/kG,EAAOC,QAAU83G,EACjBA,EAAK1T,YAAc,OACnB0T,EAAKzR,QAAU,sCCHf,IAAImM,EAA4B,EAAQ,MAIxC,SAAS0F,EAAWpT,GAClBA,EAAMS,SAASiN,GACd,SAAW1N,GACVA,EAAMW,UAAUyS,WAAa,CAC3B1tE,QAAS,oBACTshE,UAAW,CACTn3F,QAAS,oBACTgxF,MAAO,eAETr7E,OAAQ,mCACR/mB,OAAQ,iEACRH,QAAS,qBACTutG,MAAO,CACLh8F,QAAS,+CACTuxF,YAAY,EACZP,MAAO,WAETwS,SAAU,CACRxjG,QAAS,aACTisB,OAAQ,CACNwlE,YAAa,QACbQ,SAAU,YAGdR,YAAa,qCACbQ,SAAU,wCAEZ9B,EAAMiB,MAAMruE,IAAI,mBAAmB,SAAU0c,GAE3C0wD,EAAMW,UAAU,qBAAqBkN,kBACnCv+D,EACA,aAHsB,yCAM1B,IACA0wD,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GAC1C0wD,EAAMW,UAAU,qBAAqBmN,qBACnCx+D,EACA,aAEJ,IACA0wD,EAAMW,UAAU2S,IAAMtT,EAAMW,UAAUyS,UACvC,CAxCA,CAwCEpT,EACL,CA9CA/kG,EAAOC,QAAUk4G,EACjBA,EAAW9T,YAAc,aACzB8T,EAAW7R,QAAU,CAAC,sCCCtB,SAASgS,EAAQvT,GACfA,EAAMW,UAAU4S,QAAU,CACxB7tE,QAAS,CACP71B,QACE,4FACFuxF,YAAY,GAEdluF,KAAM,CACJrD,QACE,sMACFgxF,MAAO,UAETr7E,OAAQ,CACN3V,QAAS,+BACT6xF,QAAQ,GAEVL,QACE,wHACF,mBAAoB,CAIlBxxF,QACE,sIACFuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,qCACTC,YAAa,OAIjBiC,QACE,yoDAEF9kG,OAAQ,4DACR2jB,SAAU,CACR,CAEEvS,QAAS,mCACT6xF,QAAQ,GAEV,CAEE7xF,QAAS,eACTuxF,YAAY,GAQd,gFAGFiO,UAAW,CACTx/F,QAAS,mCACTisB,OAAQ,CACNwlE,YAAa,OAGjBe,SAAU,CACRxyF,QAAS,kCACTisB,OAAQ,CACNwlE,YAAa,OAGjBA,YAAa,iBAEftB,EAAMW,UAAU6S,GAAKxT,EAAMW,UAAU4S,OACvC,CAzEAt4G,EAAOC,QAAUq4G,EACjBA,EAAQjU,YAAc,UACtBiU,EAAQhS,QAAU,CAAC,qCCCnB,SAASkS,EAAKzT,GACZA,EAAMW,UAAU8S,KAAOzT,EAAMW,UAAUxlG,OAAO,QAAS,CACrDqqB,OAAQ,CAEN3V,QAAS,yBACT6xF,QAAQ,GAEV,aAAc,CACZ,CACE7xF,QACE,mFACFuxF,YAAY,GAEd,cAGFC,QACE,gUACFW,SAAU,CACRnyF,QAAS,wCACT6xF,QAAQ,GAEVt/E,SAAU,oEAEZ49E,EAAMW,UAAUjzB,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CACtB79D,QAAS,yBACT6xF,QAAQ,EACR5lE,OAAQ,CACN2qE,cAAe,CACb52F,QAAS,gCACTuxF,YAAY,EACZtlE,OAAQ,CACN,4BAA6B,CAC3BjsB,QAAS,aACTgxF,MAAO,eAETvzE,WAAY,CACVzd,QAAS,UACTisB,OAAQkkE,EAAMW,UAAU8S,QAI9BjuF,OAAQ,cAIdw6E,EAAMW,UAAUjzB,aAAa,OAAQ,aAAc,CACjDh6C,MAAO,CACL7jB,QAAS,kCACT6xF,QAAQ,EACR5lE,OAAQ,CACN,cAAe,YACf,eAAgB,CACdjsB,QAAS,uBACTuxF,YAAY,EACZP,MAAO,iBACP/kE,OAAQkkE,EAAMW,UAAUjtE,OAE1B,kBAAmB,eAIzBssE,EAAMW,UAAUjzB,aAAa,OAAQ,UAAW,CAC9CzX,aAAc,CACZpmD,QAAS,8BACTgxF,MAAO,YAETgG,SAAU,CACRh3F,QAAS,YACTgxF,MAAO,UAET6S,YAAa,CACX7jG,QAAS,mBACTgxF,MAAO,cAGb,CAhFA5lG,EAAOC,QAAUu4G,EACjBA,EAAKnU,YAAc,OACnBmU,EAAKlS,QAAU,kCCCf,SAASoS,EAAI3T,GACXA,EAAMW,UAAUgT,IAAM,CACpBjuE,QAAS,sCACTkuE,QAAS,CACP/jG,QAAS,gCACT6xF,QAAQ,EACRb,MAAO,UAETQ,QAAS,CACP,CACExxF,QACE,sEACFisB,OAAQ,CACN5pB,KAAM,CACJrC,QAAS,iDACTuxF,YAAY,EACZP,MAAO,cAIb,CACEhxF,QACE,wGACFisB,OAAQ,CACN5pB,KAAM,CACJrC,QACE,gGACFuxF,YAAY,EACZP,MAAO,cAIb,mBAEFljG,SAAU,CAAC,wBAAyB,qCACpC6nB,OAAQ,CACN3V,QACE,gGACF6xF,QAAQ,EACR5lE,OAAQ,CACN2qE,cAAe,CACb52F,QAAS,mDACTuxF,YAAY,EACZtlE,OAAQ,CACN5pB,KAAM,CACJrC,QACE,sEACFuxF,YAAY,EACZP,MAAO,YAETQ,QAAS,2DACTW,SAAU,YACVx8E,OAAQ,CACN3V,QAAS,yBACT6xF,QAAQ,GAEVjjG,OAAQ,gDACR6iG,YAAa,2CAKrB7iG,OAAQ,gDACRH,QAAS,sBACTgjG,YAAa,YAEjB,CArEArmG,EAAOC,QAAUy4G,EACjBA,EAAIrU,YAAc,MAClBqU,EAAIpS,QAAU,sCCHd,IAAIuF,EAAa,EAAQ,MAIzB,SAAS+M,EAAK7T,GACZA,EAAMS,SAASqG,GACf9G,EAAMW,UAAUkT,KAAO7T,EAAMW,UAAUxlG,OAAO,IAAK,CAKjD,aAAc,CACZ6kG,EAAMW,UAAUr6C,EAAE,cAClB,wgBAEF+6C,QAAS,CAEP,gyBACA,gHAGF5iG,OACE,gFACFH,QAAS,sBAEb,CAxBArD,EAAOC,QAAU24G,EACjBA,EAAKvU,YAAc,OACnBuU,EAAKtS,QAAU,iCCCf,SAASuS,EAAK9T,GACZA,EAAMW,UAAUmT,KAAO,CACrBpuE,QAAS,CACP71B,QAAS,OACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,kBACT6xF,QAAQ,GAEVW,SAAU,qBACV,aAAc,+BACdL,SAAU,kDACVX,QACE,+NAEN,CAnBApmG,EAAOC,QAAU44G,EACjBA,EAAKxU,YAAc,OACnBwU,EAAKvS,QAAU,kCCCf,SAASwS,EAAK/T,GAMZA,EAAMW,UAAUoT,KAAO,CACrBpP,UAAW,CACT90F,QACE,8FACFgxF,MAAO,YAETz+E,SAAU,IACVk/E,YAAa,IAEjB,CAlBArmG,EAAOC,QAAU64G,EACjBA,EAAKzU,YAAc,OACnByU,EAAKxS,QAAU,iCCCf,SAASyS,EAAKhU,GAMZA,EAAMW,UAAUqT,KAAO,CACrBrP,UAAW,CACT90F,QAAS,uDACTgxF,MAAO,YAETz+E,SAAU,IACVk/E,YAAa,IAEjB,CAjBArmG,EAAOC,QAAU84G,EACjBA,EAAK1U,YAAc,OACnB0U,EAAKzS,QAAU,kCCCf,SAAS0S,EAAKjU,IACX,SAAWA,GAKV,SAASkU,EAAcx5G,GACrB,OAAOq1C,OAAO,QAAUr1C,EAAO,yBAA0B,IAC3D,CACAslG,EAAMW,UAAUsT,KAAO,CACrB,eAAgB,CACdpkG,QACE,6GACFisB,OAAQ,CAENnyB,OAAQ,CACNkG,QAAS,YACTgxF,MAAO,YAGT,iBAAkB,CAChBhxF,QAAS,mCACTuxF,YAAY,EACZP,MAAO,MACP/kE,OAAQkkE,EAAMW,UAAUwT,KAG1B,eAAgB,CACdtkG,QAAS,oBACTuxF,YAAY,EACZP,MAAO,cAIb,kBAAmB,CACjBhxF,QAAS,wBACTisB,OAAQ,CAEN,eAAgB,CACdjsB,QAAS,gBACTgxF,MAAO,YAGT,cAAe,CACbhxF,QAAS,iBACTuxF,YAAY,EACZP,MAAO,UAGT,gBAAiB,CACfhxF,QAAS,UACTuxF,YAAY,EACZP,MAAO,YAIbuT,OAAQ,CACNvkG,QAAS,sCACTisB,OAAQ,CACN,eAAgB,CACd,CACEjsB,QAASqkG,EAAc,0BAA0BtqF,QACjDw3E,YAAY,EACZP,MAAO,CAAC,MAAO,iBACf/kE,OAAQkkE,EAAMW,UAAUoL,KAE1B,CACEl8F,QAASqkG,EAAc,mCAAmCtqF,QAC1Dw3E,YAAY,EACZP,MAAO,CAAC,OAAQ,kBAChB/kE,OAAQkkE,EAAMW,UAAUoT,MAE1B,CACElkG,QAASqkG,EAAc,4BAA4BtqF,QACnDw3E,YAAY,EACZP,MAAO,CAAC,OAAQ,kBAChB/kE,OAAQkkE,EAAMW,UAAUqT,MAE1B,CACEnkG,QAASqkG,EAAc,QAAQtqF,QAC/Bw3E,YAAY,IAGhB,cAAe,CACbvxF,QAAS,SACTgxF,MAAO,WAETS,YAAa,QAInB,IA0BI7mG,EA1BA45G,EAAQrU,EAAMW,UACd2T,EAAgB,CAClB,yBAA0BD,EAAMrP,WAChC,mBAAoBqP,EAAM9jE,MAAQ8jE,EAAMrP,WACxC,kBAAmBqP,EAAM3zG,IACzB,WAAY2zG,EAAM3zG,IAClB,YAAa2zG,EAAMhwG,KACnB,WAAYgwG,EAAMjU,IAClB,aAAciU,EAAME,OAElBC,EAAc,CAChB,oBAAoB,EACpB,mBAAmB,GAQrB,SAASC,EAAiB7jF,GACxB,IAAI2iB,EAAS3iB,EAAYnzB,QAAQ,YAAa,IAE9C,MAAO,MAAQmzB,EAAc,KADT,wBAA0B2iB,EAAS,gBACJ,GACrD,CAGA,IAAK,IAAI3iB,KAAe0jF,EACtB,GAAIA,EAAc1jF,GAAc,CAC9Bn2B,EAAUA,GAAW,CAAC,EACtB,IAAIoV,EAAU2kG,EAAY5jF,GACtB6jF,EAAiB7jF,GACjBA,EACJn2B,EAAQm2B,EAAYnzB,QAAQ,MAAO,MAAQ,CACzCoS,QAASkgC,OACP,IACE,mBAAmBnmB,OACnB/Z,EACA,iDAAiD+Z,OACjD,IAKA,mBAAmBA,OACrB,KAEFw3E,YAAY,EACZtlE,OAAQw4E,EAAc1jF,GAE1B,CAEEn2B,GACFulG,EAAMW,UAAUjzB,aAAa,OAAQ,SAAUjzE,EAElD,CAjJA,CAiJEulG,EACL,CAtJA/kG,EAAOC,QAAU+4G,EACjBA,EAAK3U,YAAc,OACnB2U,EAAK1S,QAAU,iCCCf,SAASmT,EAAU1U,GAGjBA,EAAMW,UAAU+T,UAAY,CAC1BhvE,QAAS,2BACTlgB,OAAQ,CACN3V,QAAS,yCACT6xF,QAAQ,GAEVjjG,OAAQ,mEACR4iG,QACE,mSACFW,SACE,sIACFh5F,MAAO,aACPoZ,SAAU,wDACVk/E,YAAa,cAEjB,CArBArmG,EAAOC,QAAUw5G,EACjBA,EAAUpV,YAAc,YACxBoV,EAAUnT,QAAU,kCCCpB,SAAS9xE,EAAKuwE,GACZA,EAAMW,UAAUlxE,KAAO,CACrBiW,QAAS,MACTlgB,OAAQ,CACN3V,QAAS,2DACT6xF,QAAQ,GAEVjjG,OAAQ,4DACR,kBAAmB,CACjBoR,QACE,kRACFgxF,MAAO,YAET8D,UAAW,CACT90F,QAAS,QACTgxF,MAAO,WAETQ,QACE,mLACFW,SAAU,mCACV5/E,SACE,8GACFk/E,YAAa,eAEjB,CA3BArmG,EAAOC,QAAUu0B,EACjBA,EAAK6vE,YAAc,OACnB7vE,EAAK8xE,QAAU,kCCCf,SAASoT,EAAiB3U,IAGvB,SAAWA,GAMV,SAASqJ,EAAOz/E,EAAQw+E,GACtB,OAAIA,GAAS,EACJ,KAAKx+E,OAELA,EAAOnsB,QAAQ,WAAW,WAC/B,OAAO4rG,EAAOz/E,EAAQw+E,EAAQ,EAChC,GAEJ,CACA,IAAIwM,EAAgB,6BAChBl3E,EAAS,CACX7tB,QAAS,KACT6xF,QAAQ,EACRb,MAAO,YAELr7E,EAAS,CACX3V,QAAS+kG,EACTlT,QAAQ,EACR5lE,OAAQ,CACN4B,OAAQA,IAGRm3E,EAAiBxL,EACnB,8CAA8Cz/E,OAAOnsB,QACnD,UACA,WACE,OAAOm3G,EAAchrF,MACvB,IAEF,GAEEkrF,EAAgB,CAClBjlG,QAASkgC,OAAO8kE,GAChB/4E,OAAQ,CACNpS,QAAS,CACP7Z,QAAS,sBACTuxF,YAAY,EACZtlE,OAAQ,MAEV,oBAAqB,CACnBjsB,QAAS,IACTgxF,MAAO,iBAIbb,EAAMW,UAAU,sBAAwB,CACtC/yE,SAAU,CACR/d,QAASkgC,OAAO8kE,GAChBnT,QAAQ,EACR5lE,OAAQ,CACN71B,QAAS,CACP4J,QAAS,sBACTuxF,YAAY,EACZtlE,OAAQ,CACN,gBAAiB,CACfjsB,QAAS,oBACTuxF,YAAY,GAEd,eAAgB,CAEdvxF,QAAS,0CACTuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,KACb9O,MAAO,CACL3iF,QAAS,mDACTuxF,YAAY,EACZtlE,OAAQ,CACN1Z,SAAU,aACV3jB,OAAQ,QAGZspB,KAAM,OAGV,eAAgB,CAEdlY,QACE,4DACFuxF,YAAY,EACZtlE,OAAQ,CACN5Z,OAAQ,iBACR,iBAAkB4yF,EAClBn0D,SAAU,CACR9wC,QAAS,mBACTisB,OAAQ,CACNulE,QAAS,wCAKjB,eAAgB,CAEdxxF,QAAS,0CACTuxF,YAAY,EACZtlE,OAAQ,CACN,iBAAkBg5E,EAClBn0D,SAAU,CACR9wC,QAAS,cACTisB,OAAQ,CACNulE,QAAS,cAKjBA,QAAS,6CACT,WAAY,CACVxxF,QAAS,qDACTgxF,MAAO,WAET,eAAgB,CACdhxF,QAAS,sBACTuxF,YAAY,GAEd,YAAa,CACXvxF,QACE,oEACFuxF,YAAY,GAEd,iBAAkB,CAChBvxF,QAASkgC,OACP,mBAAmBnmB,OACjBy/E,EAAO,sCAAsCz/E,OAAQ,GACrD,KAEJw3E,YAAY,EACZP,MAAO,UAETS,YAAa,MAGjB,qBAAsB,CACpBzxF,QAAS,IACTgxF,MAAO,cAIbnjE,OAAQA,EACRlY,OAAQA,GAEVsvF,EAAch5E,OAAOpS,QAAQoS,OAASkkE,EAAMW,UAAU,sBACtDX,EAAMW,UAAU,sBAAsB/yE,SAASkO,OAAO71B,QAAQ61B,OAC5D,gBACAA,OAAO/T,KAAOi4E,EAAMW,UAAU,qBACjC,CAtJA,CAsJEX,EACL,CA7JA/kG,EAAOC,QAAUy5G,EACjBA,EAAiBrV,YAAc,mBAC/BqV,EAAiBpT,QAAU,sCCH3B,IAAIwT,EAAmB,EAAQ,MAI/B,SAASC,EAAMhV,GACbA,EAAMS,SAASsU,GACf/U,EAAMW,UAAUqU,MAAQhV,EAAMW,UAAUxlG,OAAO,UAAW,CACxDuqC,QAAS,CACP71B,QAAS,wCAEXwxF,QACE,kTACFkC,aAASz6E,IAEXk3E,EAAMW,UAAUjzB,aAAa,QAAS,UAAW,CAC/C,mBAAoB,CAClB79D,QAAS,oDACTuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,SAInBtB,EAAMW,UAAUsU,IAAMjV,EAAMW,UAAUqU,KACxC,CAvBA/5G,EAAOC,QAAU85G,EACjBA,EAAM1V,YAAc,QACpB0V,EAAMzT,QAAU,CAAC,oCCCjB,SAAS2T,EAAMlV,GACbA,EAAMW,UAAUuU,MAAQ,CACtBxvE,QAAS,CACP,CACE71B,QACE,gFACFuxF,YAAY,EACZM,QAAQ,GAEV,CACE7xF,QAAS,mBACTuxF,YAAY,EACZM,QAAQ,IAGZl8E,OAAQ,CACN3V,QAAS,iDACT6xF,QAAQ,GAEVL,QAAS,CACP,yPACA,yPAEF,aACE,4HACF8T,QAAS,CACPtlG,QAAS,kCACTgxF,MAAO,UAETpiG,OACE,oIACFH,QAAS,0BACT8jB,SACE,4FACF4/E,SAAU,wBACVV,YAAa,aAEjB,CAxCArmG,EAAOC,QAAUg6G,EACjBA,EAAM5V,YAAc,QACpB4V,EAAM3T,QAAU,kCCChB,SAAS1rD,EAAOmqD,IACb,SAAWA,GACVA,EAAMW,UAAU9qD,OAAS,CAEvBnQ,QAAS,QACTjP,MAAO,CACL5mB,QAAS,0BACTgxF,MAAO,SACP/kE,OAAQ,CACN1Z,SAAU,cACVsR,MAAO,CACL7jB,QAAS,wBACTuxF,YAAY,GAEdE,YAAa,QAInBtB,EAAMW,UAAUyU,UAAYpV,EAAMW,UAAU9qD,OAC5CmqD,EAAMW,UAAU0U,SAAWrV,EAAMW,UAAU9qD,OAC3CmqD,EAAMW,UAAU2U,UAAYtV,EAAMW,UAAU9qD,MAC7C,CApBA,CAoBEmqD,EACL,CAzBA/kG,EAAOC,QAAU26C,EACjBA,EAAOypD,YAAc,SACrBzpD,EAAO0rD,QAAU,CAAC,YAAa,WAAY,4CCC3C,SAASgU,EAAQvV,GACfA,EAAMW,UAAU4U,QAAU,CACxB/vF,OAAQ,CACN3V,QAAS,UACTisB,OAAQ,CACN05E,aAAc,CACZ3lG,QAAS,eACTisB,OAAQ,CACNkrE,UAAW,CACTn3F,QAAS,QACTgxF,MAAO,mBAMjBn7D,QAAS,CACP71B,QAAS,eACT6xF,QAAQ,GAEV1vF,MAAO,CACLnC,QAAS,iEACTgxF,MAAO,aAETpiG,OAAQ,CACNoR,QACE,mIACFuxF,YAAY,GAEdqU,KAAM,CACJ5lG,QACE,ovBACFuxF,YAAY,EACZP,MAAO,YAETQ,QAAS,CACPxxF,QACE,iVACFuxF,YAAY,GAEdzjG,SAAU,CACRkS,QACE,4tBACFuxF,YAAY,EACZP,MAAO,UAETl4E,SAAU,CACR9Y,QACE,yQACFuxF,YAAY,EACZP,MAAO,WAET3uF,KAAM,CACJrC,QACE,kWACFuxF,YAAY,EACZP,MAAO,YAETS,YAAa,cAEftB,EAAMW,UAAU4U,QAAgB,OAAEz5E,OAAqB,aAAEA,OAAO/T,KAC9Di4E,EAAMW,UAAU4U,QAClBvV,EAAMW,UAAU4U,QAAgB,OAAEz5E,OAAqB,aAAEA,OAAO/T,KAAK1S,KAAO,CAC1ExF,QAAS,eACTgxF,MAAO,UAEX,CArEA5lG,EAAOC,QAAUq6G,EACjBA,EAAQjW,YAAc,UACtBiW,EAAQhU,QAAU,kCCClB,SAASmU,EAAI1V,GACXA,EAAMW,UAAU+U,IAAM,CAMpBhwE,QAAS,CACP71B,QAAS,6BACTuxF,YAAY,GAEd0N,QAAS,CACPj/F,QAAS,gCACTuxF,YAAY,EACZtlE,OAAQ,CACN,eAAgB,CACdjsB,QAAS,2DACTuxF,YAAY,EACZP,MAAO,YAETS,YAAa,UAGjBnnG,IAAK,CACH0V,QACE,+EACFuxF,YAAY,EACZP,MAAO,aAEThmG,MAAO,CACLgV,QAAS,6DACTuxF,YAAY,EACZP,MAAO,aACP/kE,OAAQ,CACN,cAAe,CACbjsB,QAAS,kBACTuxF,YAAY,KAIlBE,YAAa,IAEjB,CA7CArmG,EAAOC,QAAUw6G,EACjBA,EAAIpW,YAAc,MAClBoW,EAAInU,QAAU,iCCCd,SAASoU,EAAG3V,GACVA,EAAMW,UAAUgV,GAAK,CACnBjwE,QAAS,CACP71B,QAAS,iDACTuxF,YAAY,EACZM,QAAQ,GAEV,uBAAwB,CACtB7xF,QAAS,mCACT6xF,QAAQ,EACRb,MAAO,UAETr7E,OAAQ,CACN3V,QAAS,wBACT6xF,QAAQ,GAEVL,QACE,6kBACFkC,QACE,imBACFjlG,QAAS,yBACTG,OAAQ,yDACR2jB,SACE,8GACFk/E,YAAa,gBAEjB,CA7BArmG,EAAOC,QAAUy6G,EACjBA,EAAGrW,YAAc,KACjBqW,EAAGpU,QAAU,kCCCb,SAAS3yB,EAAEoxB,GACTA,EAAMW,UAAU/xB,EAAI,CAClBlpC,QAAS,CACP71B,QAAS,WACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,qBACT6xF,QAAQ,GAEVL,QACE,mNACFoU,KAAM,CAGJ5lG,QACE,8IACFgxF,MAAO,WAETpiG,OACE,4GACFm3G,OAAQ,CACN/lG,QAAS,+BACTgxF,MAAO,WAETz+E,SAAU,eACVyzF,YAAa,CACXhmG,QAAS,0DACTgxF,MAAO,YAETS,YAAa,OAEjB,CAnCArmG,EAAOC,QAAU0zE,EACjBA,EAAE0wB,YAAc,IAChB1wB,EAAE2yB,QAAU,kCCCZ,SAASuU,EAAK9V,IACX,SAAWA,GACV,IAAI0C,EACF,idACEqT,EAAkB,uDACnBnsF,OACC9tB,EAAY,CACd+T,QAASkgC,OAAOgmE,EAAkB,gCAAgCnsF,QAClEw3E,YAAY,EACZtlE,OAAQ,CACN+gB,UAAW,CACThtC,QAAS,2CACTisB,OAAQ,CACNwlE,YAAa,OAGjBA,YAAa,OAGjBtB,EAAMW,UAAUmV,KAAO9V,EAAMW,UAAUxlG,OAAO,QAAS,CACrDqqB,OAAQ,CACN3V,QAAS,iCACTuxF,YAAY,EACZM,QAAQ,GAEV,aAAc,CACZ5lG,EACA,CAGE+T,QAASkgC,OACPgmE,EAAkB,+BAA+BnsF,QAEnDw3E,YAAY,EACZtlE,OAAQhgC,EAAUggC,SAGtBulE,QAASqB,EACTV,SAAU,CACRhC,EAAMW,UAAUN,MAAM2B,SACtB,CACEnyF,QAAS,mBACTuxF,YAAY,IAGhB3iG,OACE,8IACF2jB,SAAU,CACRvS,QACE,wEACFuxF,YAAY,KAGhBpB,EAAMW,UAAUjzB,aAAa,OAAQ,SAAU,CAC7C,uBAAwB,CAEtB79D,QAAS,iDACT6xF,QAAQ,EACRb,MAAO,UAET3tF,KAAM,CACJrD,QAAS,4BACT6xF,QAAQ,KAGZ1B,EAAMW,UAAUjzB,aAAa,OAAQ,aAAc,CACjD00B,WAAY,CACVvyF,QAAS,+BACTuxF,YAAY,EACZP,MAAO,eAETmM,SAAU,CACRn9F,QACE,kGACFisB,OAAQ,CACN,aAAchgC,EACdulG,QAASqB,EACTpB,YAAa,YACbl/E,SAAU,UAGdy6B,UAAW,CACThtC,QAASkgC,OACP,qJAAqJnmB,OAAOnsB,QAC1J,cACA,WACE,OAAOilG,EAAS94E,MAClB,KAGJw3E,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,QAIpB,CA/FA,CA+FEtB,EACL,CApGA/kG,EAAOC,QAAU46G,EACjBA,EAAKxW,YAAc,OACnBwW,EAAKvU,QAAU,sCCHf,IAAIyU,EAAgB,EAAQ,MACxBC,EAAuB,EAAQ,MAInC,SAASC,EAAQlW,GACfA,EAAMS,SAASuV,GACfhW,EAAMS,SAASwV,GACd,SAAWjW,GACV,IAAImW,EAAkB,oCAClBC,EAAkB,4BAA4BxsF,OAC9C6f,EACF,0DAA0D7f,OAAOnsB,QAC/D,UACA,WACE,OAAO24G,CACT,IAEJpW,EAAMW,UAAUuV,QAAUlW,EAAMW,UAAUxlG,OAAO,cAAe,CAAC,GACjE6kG,EAAMW,UAAUjzB,aAAa,UAAW,UAAW,CACjDjkC,UAAW,CACT55B,QAASkgC,OACP,gEACGnmB,OACD,MACA6f,EACA,KAEJ23D,YAAY,EACZtlE,OAAQ,CACNkmE,SAAU,CACRnyF,QAAS,qBACTuxF,YAAY,GAEdppE,MAAO,CACLnoB,QAAS,YACTuxF,YAAY,GAEdvkD,UAAW,CACThtC,QAAS,0BACTisB,OAAQ,CACNwlE,YAAa,OAGjB,aAAc,aACdD,QAASrB,EAAMW,UAAUmV,KAAKzU,QAC9BC,YAAa,eAGjB,aAAc,CAEZzxF,QAAS,wBACTuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,UAGjB,eAAgB,CACd,CACEzxF,QACE,+GACFuxF,YAAY,EACZtlE,OAAQ,CACNxoB,KAAM,CAEJzD,QAASsmG,EACT/U,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUmV,KACxBjV,MAAO,mBAIb,CACEhxF,QACE,8DACFuxF,YAAY,EACZtlE,OAAQ,CACNlT,KAAM,CACJ/Y,QAASsmG,EACT/U,YAAY,EACZtlE,OAAQ,CAENunD,IAAK2c,EAAMW,UAAUR,OAAO9c,IAC5BghB,OAAQrE,EAAMW,UAAUR,OAAOkE,OAC/B/wF,KAAM,CAEJzD,QAAS,KACTisB,OAAQkkE,EAAMW,UAAUmV,KACxBjV,MAAO,sBAOnBxd,IAAK2c,EAAMW,UAAUR,OAAO9c,IAC5BghB,OAAQrE,EAAMW,UAAUR,OAAOkE,SAEjCrE,EAAMW,UAAU0V,YAAYC,WAAW,OAAQtW,EAAMW,UAAUuV,QAChE,CA3FA,CA2FElW,EACL,CAlGA/kG,EAAOC,QAAUg7G,EACjBA,EAAQ5W,YAAc,UACtB4W,EAAQ3U,QAAU,kCCAlB,SAAS8U,EAAYrW,IAClB,SAAWA,GACV,IAAIuW,EAAevW,EAAMW,UAAU0V,YAAc,CAC/ChQ,UAAW,CACTx2F,QACE,iEACFuxF,YAAY,GAEdC,QAAS,CAGPxxF,QAAS,wDACTuxF,YAAY,GAEdE,YAAa,QAgEfjoG,OAAOK,eAAe68G,EAAa,aAAc,CAC/C17G,MAdF,SAAoB8lG,EAAW6V,GACJ,iBAAd7V,IACTA,EAAY,CAACA,IAEfA,EAAU9L,SAAQ,SAAU5rF,IA/C9B,SAA2BA,EAAMuvC,GAC/B,IAAIi+D,EAAY,cACZ/V,EAAUV,EAAMW,UAAU13F,GAC9B,GAAKy3F,EAAL,CAGA,IAAIlkG,EAAQkkG,EAAQ+V,GACpB,IAAKj6G,EAAO,CAEV,IAAIkD,EAAa,CAAC,EAClBA,EAAW+2G,GAAa,CACtB5mG,QAAS,wCACTuxF,YAAY,EACZP,MAAO,WAGTrkG,GADAkkG,EAAUV,EAAMW,UAAUjzB,aAAazkE,EAAM,UAAWvJ,IACxC+2G,EAClB,CAOA,GANIj6G,aAAiBuzC,SAEnBvzC,EAAQkkG,EAAQ+V,GAAa,CAC3B5mG,QAASrT,IAGTzC,MAAMF,QAAQ2C,GAChB,IAAK,IAAIf,EAAI,EAAG+oG,EAAIhoG,EAAMd,OAAQD,EAAI+oG,EAAG/oG,IACnCe,EAAMf,aAAcs0C,SACtBvzC,EAAMf,GAAK,CACToU,QAASrT,EAAMf,KAGnB+8C,EAASh8C,EAAMf,SAGjB+8C,EAASh8C,EA7BX,CA+BF,CAYIk6G,CAAkBztG,GAAM,SAAU4G,GAC3BA,EAAQisB,SACXjsB,EAAQisB,OAAS,CAAC,GAEpBjsB,EAAQisB,OAAO/T,KAAOyuF,CACxB,GACF,GACF,IAIAD,EAAYD,WAAW,CAAC,OAAQ,aAAc,OAAQC,EACvD,CAjFA,CAiFEvW,EACL,CAtFA/kG,EAAOC,QAAUm7G,EACjBA,EAAY/W,YAAc,cAC1B+W,EAAY9U,QAAU,kCCCtB,SAASyD,EAAWhF,GAClBA,EAAMW,UAAUqE,WAAahF,EAAMW,UAAUxlG,OAAO,QAAS,CAC3D,aAAc,CACZ6kG,EAAMW,UAAUN,MAAM,cACtB,CACExwF,QACE,0GACFuxF,YAAY,IAGhBC,QAAS,CACP,CACExxF,QAAS,uBACTuxF,YAAY,GAEd,CACEvxF,QACE,mdACFuxF,YAAY,IAIhBY,SACE,oGACFvjG,OAAQ,CACNoR,QAASkgC,OACP,aAAanmB,OACX,MACC,eAAeA,OACd,IACA,0BAA0BA,OAC1B,IACA,4BAA4BA,OAC5B,IACA,sCAAsCA,OACtC,IACA,gBAAgBA,OAChB,IACA,oFACGA,OACL,IACA,YAAYA,QAEhBw3E,YAAY,GAEdh/E,SACE,8FAEJ49E,EAAMW,UAAUqE,WAAW,cAAc,GAAGn1F,QAC1C,uEACFmwF,EAAMW,UAAUjzB,aAAa,aAAc,UAAW,CACpDh6C,MAAO,CAEL7jB,QACE,yLACFuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN,eAAgB,CACdjsB,QAAS,4BACTuxF,YAAY,EACZP,MAAO,iBACP/kE,OAAQkkE,EAAMW,UAAUjtE,OAE1B,kBAAmB,UACnB,cAAe,aAInB,oBAAqB,CACnB7jB,QACE,gMACFgxF,MAAO,YAETwF,UAAW,CACT,CACEx2F,QACE,sIACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,YAE1B,CACEn1F,QACE,qFACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,YAE1B,CACEn1F,QACE,kEACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,YAE1B,CACEn1F,QACE,8eACFuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,aAG5B3C,SAAU,8BAEZrC,EAAMW,UAAUjzB,aAAa,aAAc,SAAU,CACnDipC,SAAU,CACR9mG,QAAS,QACT6xF,QAAQ,EACRb,MAAO,WAET,kBAAmB,CACjBhxF,QACE,2EACF6xF,QAAQ,EACR5lE,OAAQ,CACN,uBAAwB,CACtBjsB,QAAS,QACTgxF,MAAO,UAET4F,cAAe,CACb52F,QACE,mEACFuxF,YAAY,EACZtlE,OAAQ,CACN,4BAA6B,CAC3BjsB,QAAS,YACTgxF,MAAO,eAET94E,KAAMi4E,EAAMW,UAAUqE,aAG1Bx/E,OAAQ,YAGZ,kBAAmB,CACjB3V,QACE,4EACFuxF,YAAY,EACZM,QAAQ,EACRb,MAAO,cAGXb,EAAMW,UAAUjzB,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB79D,QACE,oFACFuxF,YAAY,EACZP,MAAO,cAGPb,EAAMW,UAAUR,SAClBH,EAAMW,UAAUR,OAAO9c,IAAIopB,WAAW,SAAU,cAEhDzM,EAAMW,UAAUR,OAAO9c,IAAIqpB,aACzB,yNACG9iF,OACH,eAGJo2E,EAAMW,UAAUL,GAAKN,EAAMW,UAAUqE,UACvC,CAjKA/pG,EAAOC,QAAU8pG,EACjBA,EAAW1F,YAAc,aACzB0F,EAAWzD,QAAU,CAAC,qCCCtB,SAASqV,EAAe5W,GAGtBA,EAAMW,UAAUiW,eAAiB,CAM/BxhG,QAAS,CACPvF,QACE,8FACFuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,CACPxxF,QACE,kEACFuxF,YAAY,GAGd57E,OAAQ,CACN3V,QAAS,gBACTuxF,YAAY,GAEdyV,WAAY,CACVhnG,QAAS,yBACTuxF,YAAY,EACZtlE,OAAQ,CACN,aAAc,UACd+gB,UAAW,eACXykD,YAAa,OAGjB53E,QAAS,CACP7Z,QAAS,aACTuxF,YAAY,EACZP,MAAO,UAETS,YAAa,MAwBjB,cAAe,CACbzxF,QAAS,8DACTuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,CACPxxF,QAAS,gBACTuxF,YAAY,GAEdx3E,OAAQ,CAGN,CACE/Z,QAAS,yBACTuxF,YAAY,EACZtlE,OAAQ,CACN/R,KAAM,YACNu3E,YAAa,IACb,cAAe,CACbzxF,QAAS,UACTgxF,MAAO,YAMb,CACEhxF,QAAS,mBACTuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,wCAIf,aAAc,kCACdW,SAAU,0BACV,eAAgB,CACdnyF,QAAS,8CACTuxF,YAAY,EACZP,MAAO,YACP/kE,OAAQ,CACNwlE,YAAa,OAGjBrmG,OAAQ,CACN4U,QAAS,sDACTuxF,YAAY,EACZtlE,OAAQ,CACNtmB,QAAS,CACP3F,QAAS,aACTuxF,YAAY,EACZP,MAAO,UAETS,YAAa,SAGjBzkD,UAAW,CACThtC,QAAS,oBACTisB,OAAQ,CACNwlE,YAAa,OAGjBA,YAAa,WAKjB7wE,KAAM,CACJ5gB,QAAS,yCACTuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,QACb7iG,OAAQ,MACR4iG,QAAS,2BAIjB,CA7IApmG,EAAOC,QAAU07G,EACjBA,EAAetX,YAAc,iBAC7BsX,EAAerV,QAAU,kCCCzB,SAASuV,EAAK9W,GACZA,EAAMW,UAAUmW,KAAO,CACrBtxF,OAAQ,oCACR1lB,UAAW,CACT+P,QACE,oHACFgxF,MAAO,WACPO,YAAY,GAEdY,SACE,sHACFvjG,OAAQ,8BACR2jB,SAAU,yCACV9jB,QAAS,qBACT+iG,QAAS,SACTC,YAAa,cAEjB,CApBArmG,EAAOC,QAAU47G,EACjBA,EAAKxX,YAAc,OACnBwX,EAAKvV,QAAU,kCCCf,SAASwV,EAAM/W,GACbA,EAAMW,UAAUoW,MAAQ/W,EAAMW,UAAUxlG,OAAO,QAAS,CACtDqqB,OAAQ,CACN3V,QAAS,kCACTuxF,YAAY,EACZM,QAAQ,GAEV,aAAc,CACZ7xF,QACE,4EACFuxF,YAAY,GAEdC,QACE,gZACFW,SAAU,6BACVvjG,OAAQ,+CACR2jB,SAAU,oDACVk/E,YAAa,gBACbiC,QACE,oGAEJvD,EAAMW,UAAUjzB,aAAa,QAAS,UAAW,CAC/CspC,WAAY,CACVnnG,QACE,8EACFuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,WACT,aAAc,MACdC,YAAa,MAGjB2V,UAAW,CACTpnG,QACE,mEACFuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,IACb,aAAc,MACdl/E,SAAU,OAGdzkB,SAAU,CACRkS,QACE,+HAGR,CAlDA5U,EAAOC,QAAU67G,EACjBA,EAAMzX,YAAc,QACpByX,EAAMxV,QAAU,kCCChB,SAAS2V,EAAGlX,IACT,SAAWA,GACV,IAAIyG,EAAgB,8BAA8B78E,OAC9CpE,EAASuqB,OACX,2CAA2CnmB,OAAOnsB,QAChD,OACA,WACE,OAAOgpG,CACT,KAGA0Q,EAAsB,CACxB1Q,cAAe,CACb52F,QAASkgC,OAAO,0BAA0BnmB,OAAS68E,GACnDrF,YAAY,EACZtlE,OAAQ,CACN71B,QAAS,CACP4J,QAAS,wBACTuxF,YAAY,EACZtlE,OAAQ,MAEVwlE,YAAa,eAIf4V,EAAMlX,EAAMW,UAAUuW,GAAK,CAC7BxxE,QAAS,MACT/nC,SAAU,CACRkS,QAASkgC,OAAOvqB,EAAOoE,OAAS,gBAAgBA,QAChDw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQq7E,GAEV3xF,OAAQ,CACN3V,QAAS2V,EACT47E,YAAY,EACZM,QAAQ,EACR5lE,OAAQq7E,GAEVnV,SAAU,CACRnyF,QAAS,uBACTuxF,YAAY,GAEdU,SAAU,UACV,mBAAoB,CAClBjyF,QAAS,4BACTgxF,MAAO,YAETQ,QACE,wHACF/iG,QAAS,qBACTG,OAAQ,4CACR2jB,SAAU,CACR,CACEvS,QAAS,OACTgxF,MAAO,QAET,kEAEF,mBAAoB,CAClBhxF,QAAS,wBACTgxF,MAAO,YAETS,YAAa,oCACbhT,IAAK,CACHz+E,QAAS,KACTgxF,MAAO,cAGXsW,EAAoB1Q,cAAc3qE,OAAO71B,QAAQ61B,OAASo7E,CAC3D,CArEA,CAqEElX,EACL,CA1EA/kG,EAAOC,QAAUg8G,EACjBA,EAAG5X,YAAc,KACjB4X,EAAG3V,QAAU,kCCCb,SAAS6V,EAASpX,IACf,SAAWA,GA2CV,SAASqX,EAAOztF,EAAQkmB,GACtB,OAAOC,OACLnmB,EAAOnsB,QAAQ,SAAS,WACtB,MAAO,yDAAyDmsB,MAClE,IACAkmB,EAEJ,CAjDAkwD,EAAMW,UAAUjzB,aAAa,aAAc,oBAAqB,CAC9D,kBAAmB,CACjB79D,QAASkgC,OACP,YACEiwD,EAAMW,UAAUqE,WAAW,qBAAqBn1F,QAAQ+Z,QAE5Dw3E,YAAY,EACZP,MAAO,CAAC,oBAAqB,SAAU,WAAY,sBAGvDb,EAAMW,UAAUjzB,aAAa,aAAc,WAAY,CACrD/jE,OAAQ,CACNkG,QAASkgC,OACP,YAAciwD,EAAMW,UAAUqE,WAAqB,SAAEp7E,QAEvDw3E,YAAY,EACZP,MAAO,CAAC,WAAY,sBAGxBb,EAAMW,UAAUjzB,aAAa,aAAc,WAAY,CACrD,mBAAoB,CAClB,CAGE79D,QACE,yOACFgxF,MAAO,cAET,CAEEhxF,QAAS,wBACTgxF,MAAO,iBAmBbb,EAAMW,UAAUjzB,aAAa,aAAc,UAAW,CACpD4pC,QAAS,CAEPznG,QAASwnG,EACP,4GACGztF,QAELw3E,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,YAE1B9pG,QAAS,CAEP2U,QAASwnG,EACP,mEACGztF,QAELw3E,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAUqE,cAG5BhF,EAAMW,UAAUqE,WAAoB,QAAE/0E,QACpC,CACEpgB,QAAS,wCACTgxF,MAAO,UAET,CACEhxF,QACE,gGACFgxF,MAAO,gBAET,CACEhxF,QAAS,WACTgxF,MAAO,CAAC,OAAQ,QAElB,CACEhxF,QAAS,gBACTgxF,MAAO,QAGXb,EAAMW,UAAUjzB,aAAa,aAAc,WAAY,CACrDn/B,OAAQ,CACN1+B,QAAS,QACTgxF,MAAO,YAET0W,MAAO,CACL1nG,QAAS,KACTgxF,MAAO,cAGXb,EAAMW,UAAUjzB,aAAa,aAAc,cAAe,CACxD,kBAAmB,CACjB79D,QAASwnG,EAAO,gBAAgBztF,QAChCw3E,YAAY,GAEd,mBAAoB,CAClBvxF,QAAS,8CACTuxF,YAAY,GAEdoW,IAAK,CAEH3nG,QACE,kFACFgxF,MAAO,YAET5D,QAAS,CACPptF,QAAS,qBACTgxF,MAAO,gBAUX,IAPA,IAAI4W,EAAuB,CACzB,WACA,oBACA,SACA,kBACA,mBAEOh8G,EAAI,EAAGA,EAAIg8G,EAAqB/7G,OAAQD,IAAK,CACpD,IAAIe,EAAQi7G,EAAqBh8G,GAC7BZ,EAAQmlG,EAAMW,UAAUqE,WAAWxoG,GACR,WAA3BwjG,EAAMY,KAAK1uF,KAAKrX,KAClBA,EAAQmlG,EAAMW,UAAUqE,WAAWxoG,GAAS,CAC1CqT,QAAShV,IAGb,IAAIihC,EAASjhC,EAAMihC,QAAU,CAAC,EAC9BjhC,EAAMihC,OAASA,EACfA,EAAO,oBAAsB,eAC/B,CACD,CA3IA,CA2IEkkE,EACL,CAhJA/kG,EAAOC,QAAUk8G,EACjBA,EAAS9X,YAAc,WACvB8X,EAAS7V,QAAU,kCCCnB,SAASmW,EAAY1X,IAClB,SAAWA,GACV,IAAI2X,EAAiB3X,EAAMW,UAAUqE,WAAW,mBAC5C4S,EAAyBD,EAAe9nG,QAAQ+Z,OAChDiuF,EAAsBF,EAAe77E,OAAsB,cAC3Dg8E,EACFD,EAAoB/7E,OAAO,6BACzBi8E,EAAuBF,EAAoBhoG,QAAQ+Z,OAYvD,SAASouF,EAAe9uG,EAAUm6E,GAChC,GAAK2c,EAAMW,UAAUz3F,GAGrB,MAAO,CACL2G,QAASkgC,OAAO,OAASszC,EAAM,SAAWu0B,GAC1CxW,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN,uBAAwB,CACtBjsB,QAAS,QACTgxF,MAAO,UAET,gBAAiB,CACfhxF,QAAS,UACTgxF,MAAO33F,IAIf,CA6BA,SAAS+uG,EAAezjE,EAAStrC,GAC/B,MAAO,MAAQA,EAAS+e,cAAgB,IAAMusB,EAAU,KAC1D,CASA,SAAS0jE,EAAkB5kG,EAAMotF,EAASx3F,GACxC,IAAIomC,EAAM,CACRh8B,KAAMA,EACNotF,QAASA,EACTx3F,SAAUA,GAKZ,OAHA82F,EAAMiB,MAAMnpD,IAAI,kBAAmBxI,GACnCA,EAAIrzC,OAAS+jG,EAAM5rE,SAASkb,EAAIh8B,KAAMg8B,EAAIoxD,SAC1CV,EAAMiB,MAAMnpD,IAAI,iBAAkBxI,GAC3BA,EAAIrzC,MACb,CAOA,SAASk8G,EAAgC7qF,GACvC,IAAI8qF,EAAc,CAAC,EACnBA,EAAY,6BAA+BN,EAE3C,IAAI77G,EAAS+jG,EAAM5rE,SAAS9G,EAAY8qF,GACxC,GAAsB,IAAlBn8G,EAAOP,OAAc,CASvB,IAAIytG,EAAO,CAAC,EAAG,GACfA,EAAKxsG,KAAKi1C,MACRu3D,EACA+O,EAAkBj8G,EAAO,GAAI+jG,EAAMW,UAAUqE,WAAY,eAE3D/oG,EAAO2zB,OAAOgiB,MAAM31C,EAAQktG,EAC9B,CACA,OAAO,IAAInJ,EAAMe,MACf,gBACA9kG,EACA47G,EAAoBhX,MACpBvzE,EAEJ,CAkBA,SAAS+qF,EAAiB/kG,EAAMotF,EAASx3F,GAIvC,IAAIovG,EAAUtY,EAAM5rE,SAAS9gB,EAAM,CACjCmzF,cAAe,CACb52F,QAASkgC,OAAOgoE,GAChB3W,YAAY,KAGZmX,EAAqB,EAErBC,EAAiB,CAAC,EAoBlBC,EAAiBP,EAnBFI,EAChBx9E,KAAI,SAAUt+B,GACb,GAAqB,iBAAVA,EACT,OAAOA,EAIP,IAFA,IACIuT,EADA2oG,EAA0Bl8G,EAAMyJ,SAK3B,IAFPqN,EAAKjX,QACF0T,EAAckoG,EAAeM,IAAsBrvG,MAMxD,OADAsvG,EAAezoG,GAAe2oG,EACvB3oG,CAEX,IACChT,KAAK,IAC6C2jG,EAASx3F,GAC1DyvG,EAAet/G,OAAO6F,KAAKs5G,GAwD/B,OAvDAD,EAAqB,EAMrB,SAASK,EAAW38G,GAClB,IAAK,IAAIR,EAAI,EAAGA,EAAIQ,EAAOP,OAAQD,IAAK,CACtC,GAAI88G,GAAsBI,EAAaj9G,OACrC,OAEF,IAAIc,EAAQP,EAAOR,GACnB,GAAqB,iBAAVe,GAA+C,iBAAlBA,EAAMyJ,QAAsB,CAClE,IAAI8J,EAAc4oG,EAAaJ,GAC3Bn3D,EACe,iBAAV5kD,EACHA,EAEAA,EAAMyJ,QACR7J,EAAQglD,EAAE/kD,QAAQ0T,GACtB,IAAe,IAAX3T,EAAc,GACdm8G,EACF,IAAI5lF,EAASyuB,EAAEiE,UAAU,EAAGjpD,GACxBy8G,EAASV,EACXK,EAAezoG,IAEbgnB,EAAQqqB,EAAEiE,UAAUjpD,EAAQ2T,EAAYrU,QACxCyrE,EAAc,GAKlB,GAJIx0C,GACFw0C,EAAYxqE,KAAKg2B,GAEnBw0C,EAAYxqE,KAAKk8G,GACb9hF,EAAO,CACT,IAAI+hF,EAAc,CAAC/hF,GACnB6hF,EAAWE,GACX3xC,EAAYxqE,KAAKi1C,MAAMu1B,EAAa2xC,EACtC,CACqB,iBAAVt8G,GACTP,EAAO2zB,OAAOgiB,MAAM31C,EAAQ,CAACR,EAAG,GAAGw3C,OAAOk0B,IAC1C1rE,GAAK0rE,EAAYzrE,OAAS,GAE1Bc,EAAMyJ,QAAUkhE,CAEpB,CACF,KAAO,CACL,IAAIlhE,EAAUzJ,EAAMyJ,QAChBlM,MAAMF,QAAQoM,GAChB2yG,EAAW3yG,GAEX2yG,EAAW,CAAC3yG,GAEhB,CACF,CACF,CACA2yG,CAAWH,GACJ,IAAIzY,EAAMe,MACf73F,EACAuvG,EACA,YAAcvvG,EACdoK,EAEJ,CApMA0sF,EAAMW,UAAUqE,WAAW,mBAAqB,CAK9CgT,EACE,MACA,0HACGpuF,QAGLouF,EAAe,OAAQ,yCAAyCpuF,QAChEouF,EAAe,MAAO,QAAQpuF,QAC9BouF,EAAe,WAAY,oBAAoBpuF,QAC/CouF,EACE,UACA,6CAA6CpuF,QAE/CouF,EAAe,MAAO,QAAQpuF,QAC9B+tF,GACA54F,OAAOqQ,SAsLT,IAAI4sE,EAAqB,CACvBgJ,YAAY,EACZ1E,IAAI,EACJyY,YAAY,EACZC,IAAI,EACJ37G,KAAK,EACL47G,KAAK,GAsEP,SAASC,EAAcr+G,GACrB,MAAqB,iBAAVA,EACFA,EACEd,MAAMF,QAAQgB,GAChBA,EAAMigC,IAAIo+E,GAAen8G,KAAK,IAE9Bm8G,EAAcr+G,EAAMoL,QAE/B,CA5EA+5F,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GACpCA,EAAIpmC,YAAY8yF,GAStB,SAASmd,EAAoBl9G,GAC3B,IAAK,IAAIR,EAAI,EAAG+oG,EAAIvoG,EAAOP,OAAQD,EAAI+oG,EAAG/oG,IAAK,CAC7C,IAAIe,EAAQP,EAAOR,GACnB,GAAqB,iBAAVe,EAAX,CAGA,IAAIyJ,EAAUzJ,EAAMyJ,QACpB,GAAKlM,MAAMF,QAAQoM,GAMnB,GAAmB,oBAAfzJ,EAAM0V,KAA4B,CAepC,IAAIknG,EAAWnzG,EAAQ,GACvB,GACqB,IAAnBA,EAAQvK,QACY,iBAAb09G,GACW,kBAAlBA,EAASlnG,KACT,CAEA,IAAIoB,EAAO4lG,EAAcE,GACrBvY,EAAQuY,EAASvY,MACjB33F,EAAWnP,MAAMF,QAAQgnG,GAASA,EAAM,GAAKA,EAC7CH,EAAUV,EAAMW,UAAUz3F,GAC9B,IAAKw3F,EAEH,SAEFz6F,EAAQ,GAAKoyG,EAAiB/kG,EAAMotF,EAASx3F,EAC/C,CACF,MACEiwG,EAAoBlzG,OAtCG,iBAAZA,GACTkzG,EAAoB,CAAClzG,GAJzB,CA2CF,CACF,CACAkzG,CAAoB7pE,EAAIrzC,OAC1B,GAgBD,CArUA,CAqUE+jG,EACL,CA1UA/kG,EAAOC,QAAUw8G,EACjBA,EAAYpY,YAAc,cAC1BoY,EAAYnW,QAAU,sCCHtB,IAAI0U,EAAuB,EAAQ,MAC/BoD,EAAsB,EAAQ,MAIlC,SAASC,EAAMtZ,GACbA,EAAMS,SAASwV,GACfjW,EAAMS,SAAS4Y,GACd,SAAWrZ,GACV,IAAIgF,EAAahF,EAAMW,UAAUqE,WAC7B9yF,EAAO,2CAA2C0X,OAClD2vF,EACF,2CAA6CrnG,EAAO,UACtD8tF,EAAMW,UAAU2Y,MAAQtZ,EAAMW,UAAUxlG,OAAO,cAAe,CAC5DkrG,UAAW,CAETx2F,QAASkgC,OACPwpE,EAAkB,uCAAuC3vF,QAE3Dw3E,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,SAInBtB,EAAMW,UAAUjzB,aAAa,QAAS,UAAW,CAC/C,qBAAsB,CAEpB79D,QAASkgC,OACPwpE,EACE,wDAAwD3vF,QAE5Dw3E,YAAY,EACZtlE,OAAQ,CACNuqE,UAAW,CACTx2F,QAAS,2BACTuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,OAGjBhuF,KAAM,CACJzD,QAAS,oBACTuxF,YAAY,EACZtlE,OAAQkpE,EACRnE,MAAO,uBAETS,YAAa,WAGjB,aAAc,CACZ,CACEzxF,QAASkgC,OACP,mHAAmHnmB,OAAOnsB,QACxH,WACA,WACE,OAAOyU,CACT,KAGJkvF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,OAGjB,CACEzxF,QAASkgC,OAAO,gBAAkB79B,GAClCkvF,YAAY,EACZtlE,OAAQ,CACNtW,OAAQw/E,EAAWx/E,OACnB/mB,OAAQumG,EAAWvmG,OACnBH,QAAS0mG,EAAW1mG,QACpB+iG,QAASrB,EAAMW,UAAUoY,WAAW1X,QACpCj/E,SAAU,oBACVk/E,YAAa,qBAInBkY,QAAS,CACP3pG,QACE,yEACFuxF,YAAY,EACZtlE,OAAQ,CACNxoB,KAAM,CACJzD,QAAS,4BACTuxF,YAAY,EACZtlE,OAAQkpE,EACRnE,MAAO,2BAKfb,EAAMW,UAAU0V,YAAYC,WAAW,aAActW,EAAMW,UAAU2Y,MACtE,CArFA,CAqFEtZ,EACL,CA5FA/kG,EAAOC,QAAUo+G,EACjBA,EAAMha,YAAc,QACpBga,EAAM/X,QAAU,kCCAhB,SAAShxD,EAAKyvD,GAEZA,EAAMW,UAAUpwD,KAAO,CACrB5yC,SAAU,CACRkS,QAAS,yCACTuxF,YAAY,EACZM,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,yCACTuxF,YAAY,EACZM,QAAQ,GAEVh8D,QAAS,CACP71B,QAAS,gCACT6xF,QAAQ,GAEVjjG,OAAQ,qCACR6iG,YAAa,WACbl/E,SAAU,IACV9jB,QAAS,qBACTu4B,KAAM,CACJhnB,QAAS,WACTgxF,MAAO,YAGXb,EAAMW,UAAU8Y,YAAczZ,EAAMW,UAAUpwD,IAChD,CA9BAt1C,EAAOC,QAAUq1C,EACjBA,EAAK+uD,YAAc,OACnB/uD,EAAKgxD,QAAU,CAAC,iDCHhB,IAAImY,EAAgB,EAAQ,MAI5B,SAASC,EAAM3Z,GACbA,EAAMS,SAASiZ,GACd,SAAW1Z,GACV,IAAIx6E,EAAS,+CACbw6E,EAAMW,UAAUgZ,MAAQ3Z,EAAMW,UAAUxlG,OAAO,OAAQ,CACrDwC,SAAU,CACR,CACEkS,QAASkgC,OAAOvqB,EAAOoE,OAAS,aAChC83E,QAAQ,GAEV,CACE7xF,QACE,iEACFgxF,MAAO,aAGXr7E,OAAQ,CACN3V,QAAS2V,EACTk8E,QAAQ,GAEVjjG,OACE,+FAEL,CArBA,CAqBEuhG,EACL,CA3BA/kG,EAAOC,QAAUy+G,EACjBA,EAAMra,YAAc,QACpBqa,EAAMpY,QAAU,qCCHhB,IAAImY,EAAgB,EAAQ,MAI5B,SAASE,EAAM5Z,GACbA,EAAMS,SAASiZ,GACf1Z,EAAMW,UAAUiZ,MAAQ5Z,EAAMW,UAAUxlG,OAAO,OAAQ,CACrDmmG,YAAa,iBAEftB,EAAMW,UAAUjzB,aAAa,QAAS,cAAe,CACnDs0B,SAAU,mEAEd,CAXA/mG,EAAOC,QAAU0+G,EACjBA,EAAMta,YAAc,QACpBsa,EAAMrY,QAAU,kCCChB,SAASsY,EAAa7Z,GACpBA,EAAMW,UAAUkZ,aAAe,CAC7B,gBAAiB,CACfhqG,QAAS,SACTgxF,MAAO,UAET,cAAe,CACbhxF,QAAS,sBACTuxF,YAAY,EACZtlE,OAAQ,CACN,cAAe,CACbjsB,QACE,+HACFgxF,MAAO,WAET1C,SAAU,CACRtuF,QAAS,+CACTuxF,YAAY,EACZP,MAAO,OAETmB,SAAU,CACRnyF,QACE,uEACFuxF,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,OAGjBA,YAAa,OACbD,QAAS,iBACTR,MAAO,CACLhxF,QAAS,6DACTgxF,MAAO,YAET,cAAe,CACbhxF,QAAS,kBACTgxF,MAAO,SACP/kE,OAAQ,CACNwlE,YAAa,QAMzB,CA/CArmG,EAAOC,QAAU2+G,EACjBA,EAAava,YAAc,eAC3Bua,EAAatY,QAAU,kCCCvB,SAASlkG,EAAI2iG,IACV,SAAWA,GACV,IAAIgF,EAAahF,EAAMY,KAAKrlG,MAAMykG,EAAMW,UAAUqE,YAC9CnnG,EAAQ,+CAA+C+rB,OACvDkwF,EAAS,+CAA+ClwF,OACxD2kB,EAAS,uCAAuC3kB,OAKpD,SAASrsB,EAAGqsB,EAAQkmB,GAWlB,OAVAlmB,EAASA,EACNnsB,QAAQ,QAAQ,WACf,OAAOI,CACT,IACCJ,QAAQ,aAAa,WACpB,OAAOq8G,CACT,IACCr8G,QAAQ,aAAa,WACpB,OAAO8wC,CACT,IACKwB,OAAOnmB,EAAQkmB,EACxB,CACAvB,EAAShxC,EAAGgxC,GAAQ3kB,OACpBo2E,EAAMW,UAAUtjG,IAAM2iG,EAAMW,UAAUxlG,OAAO,SAAU6pG,GACvDhF,EAAMW,UAAUtjG,IAAIgmF,IAAIxzE,QAAUtS,EAChC,wIACGqsB,QAELo2E,EAAMW,UAAUtjG,IAAIgmF,IAAIvnD,OAAY,IAAEjsB,QAAU,iBAChDmwF,EAAMW,UAAUtjG,IAAIgmF,IAAIvnD,OAAO,cAAcjsB,QAC3C,qEACFmwF,EAAMW,UAAUtjG,IAAIgmF,IAAIvnD,OAAY,IAAEA,OAAO,cAC3C,4BACFkkE,EAAMW,UAAUtjG,IAAIgmF,IAAIvnD,OAAgB,QAAIkpE,EAAoB,QAChEhF,EAAMW,UAAUjzB,aACd,SACA,YACA,CACEn/B,OAAQ,CACN1+B,QAAStS,EAAG,WAAWqsB,QACvBkS,OAAQkkE,EAAMW,UAAUtjG,MAG5B2iG,EAAMW,UAAUtjG,IAAIgmF,KAEtB2c,EAAMW,UAAUjzB,aACd,SACA,eACA,CACE46B,OAAQ,CAENz4F,QAAStS,EAAG,YAAYqsB,QACxBi3E,MAAO,sBACP/kE,OAAQ,CACN,qBAAsB,CACpBjsB,QAAS,WACTgxF,MAAO,eAET94E,KAAMi4E,EAAMW,UAAUtjG,OAI5B2iG,EAAMW,UAAUtjG,IAAIgmF,KAEtB,IAAI02B,EAAiB,SAAUv9G,GAC7B,OAAKA,EAGgB,iBAAVA,EACFA,EAEoB,iBAAlBA,EAAMyJ,QACRzJ,EAAMyJ,QAERzJ,EAAMyJ,QAAQ60B,IAAIi/E,GAAgBh9G,KAAK,IARrC,EASX,EACI67G,EAAa,SAAU38G,GAEzB,IADA,IAAI+9G,EAAa,GACRv+G,EAAI,EAAGA,EAAIQ,EAAOP,OAAQD,IAAK,CACtC,IAAIe,EAAQP,EAAOR,GACfw+G,GAAiB,EAgDrB,GA/CqB,iBAAVz9G,IAEQ,QAAfA,EAAM0V,MACN1V,EAAMyJ,QAAQ,IACY,QAA1BzJ,EAAMyJ,QAAQ,GAAGiM,KAG2B,OAAxC1V,EAAMyJ,QAAQ,GAAGA,QAAQ,GAAGA,QAG5B+zG,EAAWt+G,OAAS,GACpBs+G,EAAWA,EAAWt+G,OAAS,GAAG+wB,UAChCstF,EAAev9G,EAAMyJ,QAAQ,GAAGA,QAAQ,KAG1C+zG,EAAW5sF,MAG2C,OAApD5wB,EAAMyJ,QAAQzJ,EAAMyJ,QAAQvK,OAAS,GAAGuK,SAI1C+zG,EAAWr9G,KAAK,CACd8vB,QAASstF,EAAev9G,EAAMyJ,QAAQ,GAAGA,QAAQ,IACjDi0G,aAAc,IAKpBF,EAAWt+G,OAAS,GACL,gBAAfc,EAAM0V,MACY,MAAlB1V,EAAMyJ,QAGN+zG,EAAWA,EAAWt+G,OAAS,GAAGw+G,eAElCF,EAAWt+G,OAAS,GACpBs+G,EAAWA,EAAWt+G,OAAS,GAAGw+G,aAAe,GAClC,gBAAf19G,EAAM0V,MACY,MAAlB1V,EAAMyJ,QAGN+zG,EAAWA,EAAWt+G,OAAS,GAAGw+G,eAElCD,GAAiB,IAGjBA,GAAmC,iBAAVz9G,IAEzBw9G,EAAWt+G,OAAS,GAC+B,IAAnDs+G,EAAWA,EAAWt+G,OAAS,GAAGw+G,aAClC,CAGA,IAAIC,EAAYJ,EAAev9G,GAE7Bf,EAAIQ,EAAOP,OAAS,IACM,iBAAlBO,EAAOR,EAAI,IACM,eAAvBQ,EAAOR,EAAI,GAAGyW,QAEhBioG,GAAaJ,EAAe99G,EAAOR,EAAI,IACvCQ,EAAO2zB,OAAOn0B,EAAI,EAAG,IAGrBA,EAAI,IACsB,iBAAlBQ,EAAOR,EAAI,IACM,eAAvBQ,EAAOR,EAAI,GAAGyW,QAEhBioG,EAAYJ,EAAe99G,EAAOR,EAAI,IAAM0+G,EAC5Cl+G,EAAO2zB,OAAOn0B,EAAI,EAAG,GACrBA,KAEFQ,EAAOR,GAAK,IAAIukG,EAAMe,MACpB,aACAoZ,EACA,KACAA,EAEJ,CAEE39G,EAAMyJ,SAAoC,iBAAlBzJ,EAAMyJ,SAChC2yG,EAAWp8G,EAAMyJ,QAErB,CACF,EACA+5F,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GACrB,QAAjBA,EAAIpmC,UAAuC,QAAjBomC,EAAIpmC,UAGlC0vG,EAAWtpE,EAAIrzC,OACjB,GACD,CA5KA,CA4KE+jG,EACL,CAjLA/kG,EAAOC,QAAUmC,EACjBA,EAAIiiG,YAAc,MAClBjiG,EAAIkkG,QAAU,kCCCd,SAAS6Y,EAAMpa,GACbA,EAAMW,UAAUyZ,MAAQ,CACtB10E,QAAS,CAGP71B,QACE,6EACFuxF,YAAY,GAEd1tE,MAAO,CAEL7jB,QAAS,oCACT6xF,QAAQ,GAEVl8E,OAAQ,CAIN3V,QACE,uEACF6xF,QAAQ,GAEVxuF,KAAM,CAEJrD,QAAS,+CACTuxF,YAAY,EACZM,QAAQ,GAEVL,QACE,6PACF/iG,QAAS,qBACTG,OACE,kIAGF2jB,SACE,+FACFk/E,YAAa,oBAEbe,SAAU,8CAEd,CA5CApnG,EAAOC,QAAUk/G,EACjBA,EAAM9a,YAAc,QACpB8a,EAAM7Y,QAAU,kCCChB,SAAS8Y,EAAWra,GAClBA,EAAMW,UAAU0Z,WAAa,CAC3B30E,QAAS,CACP71B,QAAS,SACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QACE,uFACFuxF,YAAY,EACZM,QAAQ,GAGV4Y,GAAI,CACFzqG,QAASkgC,OACP,shBAAshBnmB,OAAOnsB,QAC3hB,WACA,WACE,MAAO,0FACJmsB,MACL,IAEF,KAEFi3E,MAAO,UAGTl+E,KAAM,CACJ9S,QACE,qEACFuxF,YAAY,EACZP,MAAO,UAETiB,SAAU,cACV5b,MAAO,CACLr2E,QAAS,qCACTgxF,MAAO,UAET,4BAA6B,CAC3BhxF,QAAS,aACTgxF,MAAO,YAETz+E,SAAU,IACVzkB,SACE,ilIACF0kG,SACE,mIACF5jG,OAAQ,CACNoR,QAAS,6BACTuxF,YAAY,GAEd9iG,QAAS,mCACTgjG,YAAa,SAEjB,CAzDArmG,EAAOC,QAAUm/G,EACjBA,EAAW/a,YAAc,aACzB+a,EAAW9Y,QAAU,kCCCrB,SAASgZ,EAAOva,GACdA,EAAMW,UAAU4Z,OAAS,CACvB70E,QAAS,CACP71B,QAAS,UACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,0BACT6xF,QAAQ,GAEV,cAAe,CACb7xF,QACE,4HACF6xF,QAAQ,EACRb,MAAO,YAGT,iBAAkB,CAChBhxF,QAAS,OACTgxF,MAAO,QAET,mBAAoB,CAClBhxF,QACE,8HACFgxF,MAAO,QAET,eAAgB,CACdhxF,QACE,+HACFgxF,MAAO,WAET,qBAAsB,CACpBhxF,QAAS,6DACTgxF,MAAO,WAET,iBAAkB,CAChBhxF,QAAS,kDACTgxF,MAAO,YAGTpiG,OAAQ,0CACR2jB,SAAU,eACVk/E,YAAa,SAEjB,CA/CArmG,EAAOC,QAAUq/G,EACjBA,EAAOjb,YAAc,SACrBib,EAAOhZ,QAAU,kCCCjB,SAASiZ,EAAOxa,IACb,SAAWA,GACVA,EAAMW,UAAU6Z,OAASxa,EAAMW,UAAUxlG,OAAO,QAAS,CACvDkmG,QAAS,CAEPxxF,QACE,2bACFuxF,YAAY,GAEdY,SAAU,CACR,CACEnyF,QAAS,iCACT6xF,QAAQ,GAEV,CACE7xF,QAAS,mCACTuxF,YAAY,EACZM,QAAQ,IAGZjjG,OACE,kIACF2jB,SACE,gHAEG49E,EAAMW,UAAU6Z,OAAO,cAC9B,IAAIC,EAAsB,CACxB,4BAA6B,CAC3B5qG,QAAS,aACTgxF,MAAO,eAETvzE,WAAY,CACVzd,QAAS,UACTisB,OAAQkkE,EAAMW,UAAU6Z,SAG5Bxa,EAAMW,UAAUjzB,aAAa,SAAU,SAAU,CAE/C,iBAAkB,CAChB,CACE79D,QAAS,2CACTgxF,MAAO,YACP/kE,OAAQ,CACN2qE,cAAe,CACb52F,QAAS,8BACTisB,OAAQ2+E,GAEVj1F,OAAQ,YAGZ,CACE3V,QAAS,iDACTgxF,MAAO,aACP/kE,OAAQ,CACN2qE,cAAe,CACb52F,QAAS,qDACTuxF,YAAY,EACZtlE,OAAQ2+E,GAEVj1F,OAAQ,aAIdtS,KAAM,CAEJrD,QAAS,6CACT6xF,QAAQ,YAGL1B,EAAMW,UAAU6Z,OAAe,OACtCxa,EAAMW,UAAUjzB,aAAa,SAAU,UAAW,CAChD00B,WAAY,CACVvyF,QAAS,sCACTgxF,MAAO,aAGXb,EAAMW,UAAUjzB,aAAa,SAAU,WAAY,CACjD1kE,MAAO,CACL6G,QAAS,gBACTgxF,MAAO,YAGXb,EAAMW,UAAU+Z,GAAK1a,EAAMW,UAAU6Z,OACrCxa,EAAMW,UAAUga,IAAM3a,EAAMW,UAAU6Z,MACvC,CAnFA,CAmFExa,EACL,CAxFA/kG,EAAOC,QAAUs/G,EACjBA,EAAOlb,YAAc,SACrBkb,EAAOjZ,QAAU,CAAC,KAAM,sCCCxB,SAASqZ,EAAM5a,IAEZ,SAAWA,GAMV,IAAI6a,EAAQ,sDAAsDjxF,OAQlE,SAASkxF,EAAOjrG,EAASigC,GACvB,OAAOC,OAAOlgC,EAAQpS,QAAQ,WAAYo9G,GAAQ/qE,EACpD,CACAkwD,EAAMW,UAAUia,MAAQ,CACtBl1E,QAAS,CACP71B,QAAS,QAEXkrG,OAAQ,CACNlrG,QAAS,MACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,0BACT6xF,QAAQ,GAEVpjG,QAAS,CACPuR,QAASirG,EAAO,yCAAyClxF,QACzDw3E,YAAY,GAEd,gBAAiB,CACfvxF,QAASirG,EAAO,2CAA2ClxF,QAC3Dw3E,YAAY,EACZP,MAAO,WAET,kBAAmB,CACjBhxF,QAASirG,EAAO,mCAAmClxF,QACnDw3E,YAAY,EACZP,MAAO,WAET3uF,KAAM,CACJ,CACErC,QAASirG,EACP,mEACGlxF,QAELw3E,YAAY,EACZP,MAAO,WAET,CACEhxF,QAASirG,EACP,0DAA0DlxF,QAE5Dw3E,YAAY,EACZP,MAAO,cAQXQ,QAAS,CACPxxF,QAASirG,EACP,qPACGlxF,QAELw3E,YAAY,GAGd1mG,KAAM,CAEJmV,QAASirG,EACP,2EACGlxF,QAELw3E,YAAY,GAGd3iG,OAAQ,CACNoR,QAASirG,EACP,2FACGlxF,OACH,KAEFw3E,YAAY,GAGdE,YAAa,iBAMb,gBAAiB,CACfzxF,QAAS,0BACTgxF,MAAO,aAGXb,EAAMW,UAAUqa,IAAMhb,EAAMW,UAAUia,KACvC,CAvGA,CAuGE5a,EACL,CA7GA/kG,EAAOC,QAAU0/G,EACjBA,EAAMtb,YAAc,QACpBsb,EAAMrZ,QAAU,CAAC,sCCCjB,SAAS0Z,EAAMjb,GACbA,EAAMW,UAAUsa,MAAQ,CACtBv1E,QAAS,CACP71B,QAAS,SACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QACE,mGACF6xF,QAAQ,GAEV+T,KAAM,CACJ5lG,QAAS,sBACTuxF,YAAY,EACZP,MAAO,WAETsB,QAAS,CACPtyF,QAAS,qBACTgxF,MAAO,WAET,aACE,2EACFQ,QACE,ibACF/iG,QAAS,0BACT0jG,SAAU,uBACVkZ,SAAU,CACR,CAEErrG,QACE,2QACFgxF,MAAO,UAET,CAEEhxF,QACE,2GACFgxF,MAAO,WAGXpiG,OACE,oHACF2jB,SAAU,kCACVk/E,YAAa,iBAEjB,CAhDArmG,EAAOC,QAAU+/G,EACjBA,EAAM3b,YAAc,QACpB2b,EAAM1Z,QAAU,kCCChB,SAAS4Z,EAAMnb,IACZ,SAAWA,GACV,IAAIob,EAAc,6BACdC,EAAY,CACd,mBAAoB,CAClBxrG,QAASurG,EACTva,MAAO,UAGXb,EAAMW,UAAUwa,MAAQ,CACtBz1E,QAAS,MAETG,MAAO,CACLh2B,QACE,mEACFuxF,YAAY,GAMdka,SAAU,CACR,CACEzrG,QACE,0FACFisB,OAAQu/E,EACRxa,MAAO,UAET,CACEhxF,QACE,4FACFuxF,YAAY,EACZtlE,OAAQu/E,EACRxa,MAAO,WAOXQ,QAAS,CACPxxF,QACE,wFACFuxF,YAAY,GAEdh3E,IAAK,CACHva,QAAS,uBACTuxF,YAAY,GAMdma,SAAU,CACR1rG,QACE,4JACFuxF,YAAY,EACZP,MAAO,cAETmB,SAAU,CACRnyF,QAASurG,EACTva,MAAO,YAETS,YAAa,YAEftB,EAAMW,UAAU6a,IAAMxb,EAAMW,UAAUwa,MACtCnb,EAAMW,UAAU3vE,QAAUgvE,EAAMW,UAAUwa,KAC3C,CAlEA,CAkEEnb,EACL,CAvEA/kG,EAAOC,QAAUigH,EACjBA,EAAM7b,YAAc,QACpB6b,EAAM5Z,QAAU,CAAC,MAAO,8CCHxB,IAAImM,EAA4B,EAAQ,MACpC+N,EAAe,EAAQ,MAI3B,SAASC,EAAM1b,GACbA,EAAMS,SAASiN,GACf1N,EAAMS,SAASgb,GACd,SAAWzb,GACVA,EAAMW,UAAU+a,MAAQ,CACtBh2E,QAAS,eACT,YAAa,CAEX71B,QAAS,kDACTuxF,YAAY,EACZP,MAAO,aAETmG,UAAW,CACTn3F,QAAS,aACTgxF,MAAO,eAET8a,IAAK,CACH9rG,QAAS,mBACTgxF,MAAO,eACP/kE,OAAQkkE,EAAMW,UAAUgb,MAG5B,IAAIC,EAAc5b,EAAMW,UAAUxlG,OAAO,SAAU,CAAC,GACpD6kG,EAAMW,UAAUjzB,aACd,SACA,aACA,CACE,SAAU,CACR79D,QAAS,qDACTisB,OAAQ,CACN,YAAa,CACXjsB,QAAS,WACTgxF,MAAO,aAET,aAAc,CACZhxF,QAAS,WACTisB,OAAQ,CACNwlE,YAAa,CACX,KACA,CACEzxF,QAAS,mBACTuxF,YAAY,IAGhBua,IAAK,CACH9rG,QAAS,mBACTisB,OAAQkkE,EAAMW,UAAUgb,UAOpCC,EAAYv4B,KAEd2c,EAAMiB,MAAMruE,IAAI,mBAAmB,SAAU0c,GAC3C,GAAqB,UAAjBA,EAAIpmC,SAAR,CAKA82F,EAAMW,UAAU,qBAAqBkN,kBACnCv+D,EACA,QAHA,wHAMFA,EAAIoxD,QAAUkb,CARd,CASF,IACA5b,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GAC1C0wD,EAAMW,UAAU,qBAAqBmN,qBAAqBx+D,EAAK,QACjE,GACD,CApEA,CAoEE0wD,EACL,CA3EA/kG,EAAOC,QAAUwgH,EACjBA,EAAMpc,YAAc,QACpBoc,EAAMna,QAAU,kCCAhB,SAASsa,EAAK7b,GAQZA,EAAMW,UAAUkb,KAAO7b,EAAMW,UAAUxlG,OAAO,MAAO,CACnDuqC,QAAS,CACP,mBACA,CACE71B,QAAS,kBACTuxF,YAAY,IAGhBoL,OAAQ,CACN38F,QACE,0EACFisB,OAAQ,CACNwlE,YAAa,UAIjB3gD,SAAU,CACR9wC,QACE,0GACFisB,OAAQ,CAENgmE,SAAU,aAGdnkG,SAAU,0CACVykB,SAAU,aAEZ49E,EAAMW,UAAUjzB,aAAa,OAAQ,WAAY,CAC/Co0B,SAAU,CAER,CACEjyF,QAAS,cACTisB,OAAQ,CACNwlE,YAAa,MAGjB,aAEF,cAAe,CACbzxF,QAAS,sCACTuxF,YAAY,EACZP,MAAO,aAGb,CAvDA5lG,EAAOC,QAAU2gH,EACjBA,EAAKvc,YAAc,OACnBuc,EAAKta,QAAU,sCCHf,IAAIua,EAAkB,EAAQ,MAI9B,SAASC,EAAS/b,GAChBA,EAAMS,SAASqb,GACd,SAAW9b,GAMV,IALA,IAAIgc,EACF,mGACGpyF,OAGInuB,EAAI,EAAGA,EADQ,EACeA,IACrCugH,EAAmBA,EAAiBv+G,QAAQ,WAAW,WACrD,OAAOu+G,CACT,IAEFA,EAAmBA,EAAiBv+G,QAAQ,UAAW,UAAUmsB,QACjE,IAAImyF,EAAY/b,EAAMW,UAAUob,SAAW,CACzCr2E,QAAS,8BACT,kBAAmB,CACjB71B,QAASkgC,OACP,8DAA8DnmB,OAAOnsB,QACnE,WACA,WACE,OAAOu+G,CACT,IAEF,KAEF5a,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN7mB,OAAQ,CACNpF,QAAS,eACTuxF,YAAY,EACZP,MAAO,kBACP/kE,OAAQ,CACN,oBAAqB,CACnBjsB,QAAS,iBACT6xF,QAAQ,EACR5lE,OAAQ,CACNwlE,YAAa,YACbya,SAAU,CACRlsG,QAAS,UACTgxF,MAAO,oBACP/kE,OAAQ,QAId/T,KAAMi4E,EAAMW,UAAU1rF,SAG1BqsF,YAAa,MAGjB97E,OAAQ,CACN3V,QAAS,oBACT6xF,QAAQ,GAEV,aAAc,CACZ7xF,QAAS,mBACTuxF,YAAY,GAEdC,QAAS,CACPxxF,QAAS,iBACTisB,OAAQ,CACNwlE,YAAa,QAGjBl/E,SAAU,aACVk/E,YAAa,CACXzxF,QACE,uGACFuxF,YAAY,GAEd3iG,OAAQ,qBAEVs9G,EAAS,mBAAmBjgF,OAAe,OAAEA,OAC3C,qBACAA,OAAiB,SAAEA,OAASigF,EAC9B/b,EAAMW,UAAUsb,GAAKF,CACtB,CA5EA,CA4EE/b,EACL,CAlFA/kG,EAAOC,QAAU6gH,EACjBA,EAASzc,YAAc,WACvByc,EAASxa,QAAU,sCCHnB,IAAImM,EAA4B,EAAQ,MAIxC,SAASwO,EAAOlc,GACdA,EAAMS,SAASiN,GACf1N,EAAMW,UAAUub,OAAS,CACvBx2E,QAAS,CACP71B,QAAS,2DACTuxF,YAAY,GAEd4F,UAAW,CACTn3F,QAAS,0CACTgxF,MAAO,eAETr7E,OAAQ,CACN3V,QAAS,kBACT6xF,QAAQ,GAEVL,QACE,oOACF1sF,OACE,ywBACFqtF,SAAU,CACR,CACEnyF,QAAS,aACTuxF,YAAY,EACZP,MAAO,UAET,CAEEhxF,QAAS,6BACTuxF,YAAY,IAGhB9iG,QAAS,yBACTk0F,MAAO,CACL3iF,QAAS,OACTgxF,MAAO,YAGTpiG,OAAQ,oBACR2jB,SAAU,wDACVk/E,YAAa,aACb9jG,MAAO,CACLqS,QAAS,YACTgxF,MAAO,YAGXb,EAAMiB,MAAMruE,IAAI,mBAAmB,SAAU0c,GAC3C,IAEI6sE,GAAY,EAChBnc,EAAMW,UAAU,qBAAqBkN,kBACnCv+D,EACA,SAJA,uGAMA,SAAUX,GACR,IAAIytE,EAAW,iBAAiBrtE,KAAKJ,GACrC,GAAIytE,EAAU,CACZ,IAAI/4B,EAAM+4B,EAAS,GACnB,GAAY,QAAR/4B,IAAkB84B,EAEpB,OADAA,GAAY,GACL,EACF,GAAY,WAAR94B,EAET,OADA84B,GAAY,GACL,CAEX,CACA,OAAQA,CACV,GAEJ,IACAnc,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GAC1C0wD,EAAMW,UAAU,qBAAqBmN,qBAAqBx+D,EAAK,SACjE,GACF,CA3EAr0C,EAAOC,QAAUghH,EACjBA,EAAO5c,YAAc,SACrB4c,EAAO3a,QAAU,kCCCjB,SAAS8a,EAAKrc,IACX,SAAWA,GAQV,SAASsc,EAAY5hH,GACnB,OAAOq1C,OAAO,OAAOnmB,OAAS,MAAQlvB,EAAO,IAAM,aAAakvB,OAClE,CAOA,SAAS2yF,EAAU1sG,GACjB,OAAOkgC,OACL,WAAWnmB,OAAS,MAAQ/Z,EAAU,IAAM,YAAY+Z,OAE5D,CAGA,IAAIs7E,EAAS,6BAA6Bt7E,OACtC8R,EAAS,IAAMwpE,EACfsX,EAAM,QAEN3+G,EAAQ,UACR4+G,EACF,oFACG7yF,OACD1gB,EAAW,CAGb61B,QAAS,CACPlvB,QAAS,QACTgxF,MAAO,CAAC,UAAW,UAErBn7D,QAAS,MACTlgB,OAAQ,CACN3V,QAAS,oBACT6xF,QAAQ,EACR5lE,OAAQ,CACNlO,SAAU,oBACVs3E,OAAQn1D,OAAO,IAAMm1D,EAAS,OAGlC,gBAAiB,CACfr1F,QAASkgC,OAAO,MAAQm1D,GACxBrE,MAAO,CAAC,WAAY,WAEtB,gBAAiB,CACfhxF,QAASkgC,OAAO,IAAMm1D,GACtBrE,MAAO,YAETjxE,OAAQ,CACN/f,QAASkgC,OAAO,MAAQm1D,GACxBrE,MAAO,CAAC,SAAU,aAEpBQ,QAAS,CACP,CACExxF,QAASkgC,OACPysE,EACE,8IACA3+G,GAEJujG,YAAY,GAEd,CACEvxF,QAASkgC,OACPysE,EACE,wDACA3+G,GAEJujG,YAAY,IAGhBztF,QAAS,CACP9D,QAASysG,EAAY,UAAU1yF,QAC/Bw3E,YAAY,EACZP,MAAO,WAET6b,YAAa,CACX7sG,QAASysG,EAAY,cAAc1yF,QACnCw3E,YAAY,EACZP,MAAO,WAETviG,QAAS,CACPuR,QAAS0sG,EAAU,QAAQ3yF,QAC3Bw3E,YAAY,GAEd3iG,OAAQ,CACNoR,QAAS0sG,EAAU,qBAAqB3yF,QACxCw3E,YAAY,GAEdub,OAAQ,CACN9sG,QAASkgC,OAAOysE,EAAM,oCAAsCtX,GAC5D9D,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,aACTS,SAAU/xD,OAAOm1D,KAGrB0X,MAAO,CACL/sG,QAASkgC,OACPysE,EACE,mCAAmC5yF,OACnCs7E,EACA,QAAQt7E,OACR6yF,EACA,KAAK7yF,QAETw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNulE,QAAS,kBAGT7lG,UAAW,KACXwmG,SAAU,CACRnyF,QAASkgC,OAAO,SAAWm1D,GAC3B9D,YAAY,GAEdE,YAAa,SAGjBub,OAAQ,CACNhtG,QAASkgC,OACPysE,EACE,yBACAtX,EACA,YACAA,EACA,eAEJ9D,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNulE,QAAS,UAGT7lG,UAAW,KACX8lG,YAAa,SAGjBwb,IAAK,CACHjtG,QAASkgC,OAAOysE,EAAMtX,GACtB9D,YAAY,GAEdE,YAAa,CAEX,uBACA,CACEzxF,QAAS,eACTuxF,YAAY,KAId2b,EAAM,CACR,cAAehtE,OAAOrU,GACtBshF,QAAS,CACPntG,QAASkgC,OACP,KAAKnmB,OAASs7E,EAAS,YAAYt7E,OAAS6yF,EAAY,KAAK7yF,QAE/DkS,OAAQ5yB,GAEV0kB,SAAU,CACR/d,QAASkgC,OAAO,YAAYnmB,OAASs7E,GACrC9D,YAAY,EACZP,MAAO,YAET94E,KAAM7e,GAEJ+zG,EAAQ,oBACRC,EAAU,CACZrtG,QAASkgC,OAAOysE,EAAMC,EArJX,WAsJXrb,YAAY,EACZtlE,OAAQ,CACN,YAAa,CACXjsB,QAASkgC,OAAO,qBAAuBktE,GACvCnhF,OAAQihF,GAEV,oBAAqB,CACnBltG,QAASkgC,OAAO,wBAA0BktE,GAC1CnhF,OAAQihF,GAEV79G,KAAM,CACJ2Q,QAASkgC,OAAO,WAAaktE,EAAQ,8BACrCnhF,OAAQihF,GAEVnvF,SAAU,CACR/d,QAASkgC,OAAOm1D,GAChBrE,MAAO,YAETS,YAAa,SAGjBp4F,EAAiB,OAAE4yB,OAAOtgC,UAAY0hH,EACtCh0G,EAAgB,MAAE4yB,OAAOtgC,UAAYwkG,EAAMY,KAAKrlG,MAAM2hH,GACtDh0G,EAAgB,MAAE4yB,OAAOtgC,UAAUsgC,OAAOqhF,QAAUD,EACpDld,EAAMW,UAAU0b,KAAOnzG,EACvB82F,EAAMW,UAAUyc,MAAQl0G,EACxB82F,EAAMW,UAAU0c,MAAQn0G,EACxB82F,EAAMW,UAAU,cAAgBz3F,CACjC,CA7MA,CA6ME82F,EACL,CAlNA/kG,EAAOC,QAAUmhH,EACjBA,EAAK/c,YAAc,OACnB+c,EAAK9a,QAAU,kCCCf,SAAS+b,EAAWtd,GAClBA,EAAMW,UAAU2c,WAAa,CAC3B53E,QAAS,CACP,CACE71B,QAAS,4BACTuxF,YAAY,GAEd,CACEvxF,QAAS,eACTuxF,YAAY,IAGhB,sBAAuB,CAGrBvxF,QAAS,kDACTuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNgmE,SAAU,CACRjyF,QAAS,sCACTuxF,YAAY,GAEdqF,cAAe,CACb52F,QAAS,uBACTuxF,YAAY,EACZtlE,OAAQ,CACN,4BAA6B,CAC3BjsB,QAAS,WACTgxF,MAAO,cAIbr7E,OAAQ,YAGZA,OAAQ,CACN,CACE3V,QAAS,qCACT6xF,QAAQ,GAEV,CACE7xF,QAAS,iBACT6xF,QAAQ,GAEV,kBAEFhuE,MAAO,CACL,CACE7jB,QAAS,8DACT6xF,QAAQ,EACR5lE,OAAQ,CACN4J,QAAS,CACP71B,QAAS,eACTuxF,YAAY,KAIlB,CACEvxF,QAAS,uDACT6xF,QAAQ,IAGZL,QAAS,CACPxxF,QACE,wQACFuxF,YAAY,GAEd,mBAAoB,CAClBvxF,QACE,+JACFuxF,YAAY,EACZP,MAAO,YAETviG,QAAS,CACPuR,QAAS,iDACTuxF,YAAY,GAEdxzE,SAAU,CAER/d,QAAS,8BACTuxF,YAAY,EACZP,MAAO,YAETpiG,OAAQ,2DACRo/B,WAAY,4BACZzb,SAAU,CAER,CACEvS,QAAS,aACTuxF,YAAY,GAwBd,qLAEFE,YAAa,oBAEftB,EAAMW,UAAU2c,WAAW,uBAAuBxhF,OAElD,cAAEA,OAAO/T,KAAOi4E,EAAMW,UAAU2c,UAClC,CA5HAriH,EAAOC,QAAUoiH,EACjBA,EAAWhe,YAAc,aACzBge,EAAW/b,QAAU,kCCCrB,SAASgc,EAAKvd,IACX,SAAWA,GACVA,EAAMW,UAAU4c,KAAO,CACrB73E,QAAS,MACTlgB,OAAQ,CACN3V,QAAS,UACT6xF,QAAQ,GAEVpjG,QAAS,qBACTwjG,SAAU,iDACV94F,MAAO,oCACPkJ,KAAM,CACJrC,QACE,iGACFgxF,MAAO,cAETQ,QAAS,uBACT5iG,OACE,gIACF6iG,YAAa,oBAEhB,CApBA,CAoBEtB,EACL,CAzBA/kG,EAAOC,QAAUqiH,EACjBA,EAAKje,YAAc,OACnBie,EAAKhc,QAAU,kCCCf,SAASic,EAAIxd,GAKXA,EAAMW,UAAU6c,IAAM,CACpBh4F,OAAQ,CAEN3V,QAAS,2DACT6xF,QAAQ,GAEV+b,UAAW,CACT5tG,QACE,uIACFuxF,YAAY,EACZM,QAAQ,EACRb,MAAO,CAAC,iBAAkB,2BAC1B/kE,OAAQkkE,EAAMW,UAA0B,gBAAK,CAC3CU,QAAS,SACTW,SAAU,qBACVV,YAAa,WAGjB8G,MAAO,CACL,CACEv4F,QACE,6EACFgxF,MAAO,CAAC,QAAS,cAEnB,CACEhxF,QAAS,2BACTgxF,MAAO,CAAC,UAAW,cAErB,CACEhxF,QAAS,yCACTgxF,MAAO,CAAC,OAAQ,YAElB,CACEhxF,QAAS,yBACTgxF,MAAO,CAAC,QAAS,YAEnB,CACEhxF,QAAS,6CACTgxF,MAAO,CAAC,QAAS,aAGrBljG,SAAU,CACRkS,QACE,wFACFuxF,YAAY,GAEdsc,UAAW,CACT7tG,QAAS,oCACTuxF,YAAY,EACZP,MAAO,WAETz2E,IAAK,oDACL87D,MAAO,CACLr2E,QAAS,6DACTuxF,YAAY,EACZP,MAAO,OAET,aAAc,CACZhxF,QAAS,kCACTgxF,MAAO,YAET,cAAe,CACbhxF,QAAS,sCACTgxF,MAAO,YAETrb,OAAQ,CACN31E,QACE,qEACFuxF,YAAY,EACZP,MAAO,YAET8c,KAAM,CACJ9tG,QACE,oEACFgxF,MAAO,YAETmL,KAAM,CACJn8F,QAAS,6BACTgxF,MAAO,YAET,YAAa,CACXhxF,QACE,qFACFuxF,YAAY,EACZM,QAAQ,EACRb,MAAO,UAETqM,KAAM,CACJr9F,QAASkgC,OACP,4DAA4DnmB,OAC1D,IACA,4FACGA,OACH,IACA,uKACGA,OACL,KAEFi3E,MAAO,UAET+c,KAAM,CACJ/tG,QACE,qEACFgxF,MAAO,UAETviG,QAAS,2BACTG,OAAQ,CACNoR,QACE,yGACFuxF,YAAY,GAEdh/E,SAAU,6BACVk/E,YAAa,WAEjB,CA1HArmG,EAAOC,QAAUsiH,EACjBA,EAAIle,YAAc,MAClBke,EAAIjc,QAAU,kCCCd,SAASsc,EAAQ7d,GACfA,EAAMW,UAAUkd,QAAU,CACxBn4E,QAAS,CAAC,2BAA4B,WACtClgB,OAAQ,CACN3V,QAAS,kBACTisB,OAAQ,CACNgmE,SAAU,aACVoD,OAAQ,CAAC,iBAAkB,cAAe,aAE5CxD,QAAQ,GAEVjjG,OAAQ,sCACRymG,OAAQ,CACNr1F,QAAS,iEACTuxF,YAAY,EACZtlE,OAAQ,CACNulE,QAAS,YAGbr4F,MAAO,CACL6G,QAAS,iDACTuxF,YAAY,EACZP,MAAO,UAETmB,SAAU,CACRnyF,QAAS,6CACTuxF,YAAY,GAEdC,QAAS,CACP,CACExxF,QACE,sRACFuxF,YAAY,GAEd,gBAEF9iG,QAAS,CACPuR,QAAS,+BACTuxF,YAAY,GAEdU,SAAU,CACRjyF,QAAS,qBACTuxF,YAAY,GAEdh/E,SAAU,CACRvS,QACE,uHACFuxF,YAAY,GAEdE,YAAa,cAEjB,CAtDArmG,EAAOC,QAAU2iH,EACjBA,EAAQve,YAAc,UACtBue,EAAQtc,QAAU,kCCClB,SAASmO,EAAI1P,GACXA,EAAMW,UAAU+O,IAAM,CACpBhqE,QAAS,yCAETlgB,OAAQ,CACN3V,QACE,qFACF6xF,QAAQ,GAEVjjG,OACE,gHACF4iG,QACE,0HACFW,SAAU,2BACV5/E,SAAU,CACR,wCACA,CAEEvS,QAAS,qBACTuxF,YAAY,IAGhBE,YAAa,sBAEjB,CA3BArmG,EAAOC,QAAUw0G,EACjBA,EAAIpQ,YAAc,MAClBoQ,EAAInO,QAAU,kCCCd,SAASuc,EAAM9d,GACbA,EAAMW,UAAUmd,MAAQ,CACtBrlE,OAAQ,CACN5oC,QACE,2GACFuxF,YAAY,EACZM,QAAQ,GAEVh8D,QAAS,CACP71B,QAAS,0BACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,kCACTuxF,YAAY,EACZM,QAAQ,GAGVL,QACE,ggBACF/iG,QAAS,qBACTy/G,UAAW,CACTluG,QAAS,uBACTgxF,MAAO,cAETmB,SAAU,wBACVvjG,OAAQ,CACNoR,QACE,uFACFuxF,YAAY,GAEdh/E,SAAU,0BACVk/E,YAAa,kBAEjB,CArCArmG,EAAOC,QAAU4iH,EACjBA,EAAMxe,YAAc,QACpBwe,EAAMvc,QAAU,kCCChB,SAASyc,EAAShe,GAChBA,EAAMW,UAAUqd,SAAW,CACzBt4E,QAAS,CACP71B,QAAS,6CACTuxF,YAAY,GAEd57E,OAAQ,CACN3V,QAAS,iDACT6xF,QAAQ,GAEV,iBAAkB,CAChB7xF,QAAS,gCACTgxF,MAAO,WAETrmG,OAAQ,CACNqV,QAAS,8CACTgxF,MAAO,SACP/kE,OAAQ,CACNgmE,SAAU,wCAGdA,SAAU,wDAEVT,QACE,6HACFW,SAAU,CACRnyF,QACE,wQACFuxF,YAAY,GAEdh/E,SAAU,uBACVk/E,YAAa,WAEjB,CApCArmG,EAAOC,QAAU8iH,EACjBA,EAAS1e,YAAc,WACvB0e,EAASzc,QAAU,iCCCnB,SAASyQ,EAAShS,IACf,SAAWA,GAEV,IAAIie,EAAQ,2CAA2Cr0F,OAWvD,SAASs0F,EAAaruG,GAIpB,OAHAA,EAAUA,EAAQpS,QAAQ,YAAY,WACpC,OAAOwgH,CACT,IACOluE,OAAO,0BAA0BnmB,OAAS,MAAQ/Z,EAAU,IACrE,CACA,IAAI0lC,EAAY,4DACb3rB,OACC4rB,EACF,+CAA+C5rB,OAAOnsB,QACpD,OACA,WACE,OAAO83C,CACT,IAEA4oE,EACF,sEACGv0F,OACLo2E,EAAMW,UAAUqR,SAAWhS,EAAMW,UAAUxlG,OAAO,SAAU,CAAC,GAC7D6kG,EAAMW,UAAUjzB,aAAa,WAAY,SAAU,CACjD,qBAAsB,CACpB79D,QAAS,kDACTuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNwlE,YAAa,YACb,eAAgB,CACdzxF,QAAS,iBACTgxF,MAAO,CAAC,OAAQ,iBAChB/kE,OAAQkkE,EAAMW,UAAU7qD,QAI9B/B,WAAY,CAEVlkC,QAAS,kBACTgxF,MAAO,eAETzrD,MAAO,CACLvlC,QAASkgC,OACP,IAAMyF,EAAW2oE,EAAY,MAAQ3oE,EAAW,KAChD,KAEF1Z,OAAQ,CACN,kBAAmB,CACjBjsB,QAASkgC,OACP,KAAOyF,EAAW2oE,EAAY,OAAS3oE,EAAW,OAEpD4rD,YAAY,EACZtlE,OAAQ,CACN,aAAc,CACZjsB,QAASkgC,OAAOwF,GAChBzZ,OAAQkkE,EAAMW,UAAUqR,UAE1B1Q,YAAa,OAGjB,aAAc,CACZzxF,QAASkgC,OAAO,KAAOyF,EAAW,IAAM2oE,EAAY,KACpD/c,YAAY,EACZtlE,OAAQ,CACNwlE,YAAa,iBAGjB,mBAAoB,CAClBzxF,QAASkgC,OAAO,IAAMyF,EAAW,KACjC1Z,OAAQ,CACN,eAAgB,CACdjsB,QAASkgC,OAAOwF,GAChBsrD,MAAO,YACP/kE,OAAQkkE,EAAMW,UAAUqR,UAE1B1Q,YAAa,SAKrBhuF,KAAM,CACJ,CAEEzD,QACE,uFACFuxF,YAAY,EACZP,MAAO,WAET,CAIEhxF,QAAS,qBACT6xF,QAAQ,EACR5lE,OAAQ,CACN,aAAc,CACZjsB,QAAS,qDACTuxF,YAAY,GAEd,gBAAiB,CACfvxF,QAAS,WACTuxF,YAAY,GAEdE,YAAa,SAInBtvF,MAAO,CACL,CAKEnC,QAAS,0CACTgxF,MAAO,YACP/kE,OAAQ,CACNwlE,YAAa,cAGjB,CAGEzxF,QAAS,aACTuxF,YAAY,EACZP,MAAO,YACP/kE,OAAQ,CACNwlE,YAAa,aAInBwC,GAAI,CAKFj0F,QAAS,wCACTuxF,YAAY,EACZP,MAAO,eAET13F,KAAM,CAKJ0G,QAAS,mCACTuxF,YAAY,EACZP,MAAO,eAET,gBAAiB,CAKfhxF,QACE,qHACFisB,OAAQ,CACNgmE,SAAU,CACRjyF,QAAS,gBACTuxF,YAAY,GAEd57E,OACE,+DACF87E,YAAa,kBAEfT,MAAO,OAETuD,KAAM,CAIJv0F,QAASquG,EACP,kGACGt0F,QAELw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN71B,QAAS,CACP4J,QAAS,sBACTuxF,YAAY,EACZtlE,OAAQ,CAAC,GAEXwlE,YAAa,YAGjB6C,OAAQ,CAINt0F,QAASquG,EACP,kGACGt0F,QAELw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN71B,QAAS,CACP4J,QAAS,oBACTuxF,YAAY,EACZtlE,OAAQ,CAAC,GAEXwlE,YAAa,SAGjB8c,OAAQ,CAINvuG,QAASquG,EAAa,2BAA2Bt0F,QACjDw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN71B,QAAS,CACP4J,QAAS,uBACTuxF,YAAY,EACZtlE,OAAQ,CAAC,GAEXwlE,YAAa,QAGjB,eAAgB,CAGdzxF,QACE,mEACFuxF,YAAY,EACZM,QAAQ,EACRb,MAAO,CAAC,OAAQ,YAElBz2E,IAAK,CAIHva,QAASquG,EACP,mGACGt0F,QAELw3E,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACN1Z,SAAU,KACVnc,QAAS,CACP4J,QAAS,oBACTuxF,YAAY,EACZtlE,OAAQ,CAAC,GAEXgmE,SAAU,CACRjyF,QAAS,6BACTuxF,YAAY,GAEdh3E,IAAK,CACHva,QAAS,iBACTuxF,YAAY,GAEd57E,OAAQ,CACN3V,QAAS,oCACTuxF,YAAY,OAKnB,CAAC,MAAO,OAAQ,SAAU,UAAUvM,SAAQ,SAAUr4F,GACpD,CAAC,MAAO,OAAQ,SAAU,SAAU,gBAAgBq4F,SAAQ,SAC3D/4D,GAEIt/B,IAAUs/B,IACZkkE,EAAMW,UAAUqR,SAASx1G,GAAOs/B,OAAO71B,QAAQ61B,OAAOA,GACpDkkE,EAAMW,UAAUqR,SAASl2E,GAE/B,GACF,IACAkkE,EAAMiB,MAAMruE,IAAI,kBAAkB,SAAU0c,GACrB,aAAjBA,EAAIpmC,UAA4C,OAAjBomC,EAAIpmC,UAGvC,SAAS0vG,EAAW38G,GAClB,GAAKA,GAA4B,iBAAXA,EAGtB,IAAK,IAAIR,EAAI,EAAG+oG,EAAIvoG,EAAOP,OAAQD,EAAI+oG,EAAG/oG,IAAK,CAC7C,IAAIe,EAAQP,EAAOR,GACnB,GAAmB,SAAfe,EAAM0V,KAAV,CAiBA,IAAImsG,EAAW7hH,EAAMyJ,QAAQ,GACzBq4G,EAAY9hH,EAAMyJ,QAAQ,GAC9B,GACEo4G,GACAC,GACkB,kBAAlBD,EAASnsG,MACU,eAAnBosG,EAAUpsG,MACkB,iBAArBmsG,EAASp4G,QAChB,CAGA,IAAIgD,EAAOo1G,EAASp4G,QACjBxI,QAAQ,OAAQ,SAChBA,QAAQ,UAAW,MAElBojG,EAAQ,aADZ53F,GAAQ,eAAe8lC,KAAK9lC,IAAS,CAAC,KAAK,GAAG9K,eAEzCmgH,EAAUzd,MAEuB,iBAApByd,EAAUzd,MAC1Byd,EAAUzd,MAAQ,CAACyd,EAAUzd,MAAOA,GAEpCyd,EAAUzd,MAAMlkG,KAAKkkG,GAJrByd,EAAUzd,MAAQ,CAACA,EAMvB,CArCA,MAFE+X,EAAWp8G,EAAMyJ,QAwCrB,CACF,CACA2yG,CAAWtpE,EAAIrzC,OACjB,IACA+jG,EAAMiB,MAAMruE,IAAI,QAAQ,SAAU0c,GAChC,GAAiB,eAAbA,EAAIp9B,KAAR,CAIA,IADA,IAAImsG,EAAW,GACN5iH,EAAI,EAAG+oG,EAAIl1D,EAAI0mD,QAAQt6F,OAAQD,EAAI+oG,EAAG/oG,IAAK,CAClD,IAAI8iH,EAAMjvE,EAAI0mD,QAAQv6F,GAClBkzC,EAAQ,gBAAgBI,KAAKwvE,GACjC,GAAI5vE,EAAO,CACT0vE,EAAW1vE,EAAM,GACjB,KACF,CACF,CACA,IAiDmBtqC,EAjDfq8F,EAAUV,EAAMW,UAAU0d,GAC9B,GAAK3d,EAoBHpxD,EAAIrpC,QAAU+5F,EAAMnE,WA4BHx3F,EA3BHirC,EAAIrpC,QAAQpL,MA6BjBwJ,EAAK5G,QAAQ+gH,EAAY,IACxB/gH,QAAQ,iCAAiC,SAAU4gG,EAAG/qF,GAG9D,IAAIzY,EADN,GAAgB,OADhByY,EAAOA,EAAKnV,eACH,GAOP,OAJEtD,EADc,MAAZyY,EAAK,GACC+zB,SAAS/zB,EAAK7W,MAAM,GAAI,IAExB6xB,OAAOhb,EAAK7W,MAAM,IAErB6qC,EAAczsC,GAErB,IAAI4jH,EAAQC,EAAmBprG,GAC/B,OAAImrG,GAGGpgB,CAEX,KA9CIqC,EACA2d,QAtBF,GAAIA,GAAyB,SAAbA,GAAuBre,EAAMthD,QAAQigE,WAAY,CAC/D,IAAIz2G,EACF,OACA,IAAI2nC,MAAOc,UACX,IACA3B,KAAK4vE,MAAsB,KAAhB5vE,KAAK6vE,UAClBvvE,EAAIvvC,WAAe,GAAImI,EACvB83F,EAAMthD,QAAQigE,WAAWG,cAAcT,GAAU,WAC/C,IAAIU,EAAMpoF,SAASqoF,eAAe92G,GAC9B62G,IACFA,EAAIz8E,UAAY09D,EAAMnE,UACpBkjB,EAAIx8E,YACJy9D,EAAMW,UAAU0d,GAChBA,GAGN,GACF,CA7BF,CAqCF,IACA,IAAIG,EAAazuE,OAAOiwD,EAAMW,UAAUR,OAAO9c,IAAIxzE,QAAQ+Z,OAAQ,MAQ/D80F,EAAqB,CACvBO,IAAK,IACLC,GAAI,IACJC,GAAI,IACJC,KAAM,KAEJ93E,EAAgBnrC,OAAOmrC,eAAiBnrC,OAAOw3B,aA8BnDqsE,EAAMW,UAAU0e,GAAKrf,EAAMW,UAAUqR,QACtC,CAtaA,CAsaEhS,EACL,CA3aA/kG,EAAOC,QAAU82G,EACjBA,EAAS1S,YAAc,WACvB0S,EAASzQ,QAAU,CAAC,qCCCpB,SAASqM,EAAiB5N,IACvB,SAAWA,GAQV,SAASiY,EAAe/uG,EAAU9M,GAChC,MAAO,MAAQ8M,EAAS+e,cAAgB7rB,EAAQ,KAClD,CACA/C,OAAO07F,iBAAkBiL,EAAMW,UAAU,qBAAuB,CAAC,EAAI,CACnEkN,kBAAmB,CAYjBhzG,MAAO,SAAUy0C,EAAKpmC,EAAUo2G,EAAoBC,GAClD,GAAIjwE,EAAIpmC,WAAaA,EAArB,CAGA,IAAIyjC,EAAc2C,EAAI3C,WAAa,GACnC2C,EAAIh8B,KAAOg8B,EAAIh8B,KAAK7V,QAAQ6hH,GAAoB,SAAU3wE,GACxD,GAA6B,mBAAlB4wE,IAAiCA,EAAc5wE,GACxD,OAAOA,EAIT,IAFA,IACI5+B,EADAtU,EAAIkxC,EAAWjxC,QAIhB,IADD4zC,EAAIh8B,KAAKjX,QAAS0T,EAAckoG,EAAe/uG,EAAUzN,OAGvDA,EAGJ,OADAkxC,EAAWlxC,GAAKkzC,EACT5+B,CACT,IACAu/B,EAAIoxD,QAAUV,EAAMW,UAAUR,MAjB9B,CAkBF,GAEF2N,qBAAsB,CAOpBjzG,MAAO,SAAUy0C,EAAKpmC,GACpB,GAAIomC,EAAIpmC,WAAaA,GAAaomC,EAAI3C,WAAtC,CAGA2C,EAAIoxD,QAAUV,EAAMW,UAAUz3F,GAC9B,IAAI0lE,EAAI,EACJ1vE,EAAO7F,OAAO6F,KAAKowC,EAAI3C,aAC3B,SAASisE,EAAW38G,GAClB,IAAK,IAAIR,EAAI,EAAGA,EAAIQ,EAAOP,UAErBkzE,GAAK1vE,EAAKxD,QAFmBD,IAAK,CAKtC,IAAIe,EAAQP,EAAOR,GACnB,GACmB,iBAAVe,GACNA,EAAMyJ,SAAoC,iBAAlBzJ,EAAMyJ,QAC/B,CACA,IAAIsa,EAAIrhB,EAAK0vE,GACT8jC,EAAIpjE,EAAI3C,WAAWpsB,GACnB6gC,EAAqB,iBAAV5kD,EAAqBA,EAAQA,EAAMyJ,QAC9C8J,EAAckoG,EAAe/uG,EAAUqX,GACvCnkB,EAAQglD,EAAE/kD,QAAQ0T,GACtB,GAAI3T,GAAS,EAAG,GACZwyE,EACF,IAAIj8C,EAASyuB,EAAEiE,UAAU,EAAGjpD,GACxBy8G,EAAS,IAAI7Y,EAAMe,MACrB73F,EACA82F,EAAM5rE,SAASs+E,EAAGpjE,EAAIoxD,SACtB,YAAcx3F,EACdwpG,GAEE37E,EAAQqqB,EAAEiE,UAAUjpD,EAAQ2T,EAAYrU,QACxCyrE,EAAc,GACdx0C,GACFw0C,EAAYxqE,KAAKi1C,MAAMu1B,EAAayxC,EAAW,CAACjmF,KAElDw0C,EAAYxqE,KAAKk8G,GACb9hF,GACFowC,EAAYxqE,KAAKi1C,MAAMu1B,EAAayxC,EAAW,CAAC7hF,KAE7B,iBAAVv6B,EACTP,EAAO2zB,OAAOgiB,MAAM31C,EAAQ,CAACR,EAAG,GAAGw3C,OAAOk0B,IAE1C3qE,EAAMyJ,QAAUkhE,CAEpB,CACF,MACE3qE,EAAMyJ,SAGN2yG,EAAWp8G,EAAMyJ,QAErB,CACA,OAAOhK,CACT,CACA28G,CAAWtpE,EAAIrzC,OArDf,CAsDF,IAGL,CAlHA,CAkHE+jG,EACL,CAvHA/kG,EAAOC,QAAU0yG,EACjBA,EAAiBtO,YAAc,mBAC/BsO,EAAiBrM,QAAU,kCCC3B,SAASpB,EAAOH,GACdA,EAAMW,UAAUR,OAAS,CACvBz6D,QAAS,CACP71B,QAAS,8BACT6xF,QAAQ,GAEVqZ,OAAQ,CACNlrG,QAAS,iBACT6xF,QAAQ,GAEVuR,QAAS,CAEPpjG,QACE,uHACF6xF,QAAQ,EACR5lE,OAAQ,CACN,kBAAmB,CACjBjsB,QAAS,6BACTuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,MAEVtW,OAAQ,CACN3V,QAAS,kBACT6xF,QAAQ,GAEVJ,YAAa,eACb,cAAe,YACf5mG,KAAM,eAGVmrC,MAAO,CACLh2B,QAAS,4BACT6xF,QAAQ,GAEVre,IAAK,CACHxzE,QACE,uHACF6xF,QAAQ,EACR5lE,OAAQ,CACNunD,IAAK,CACHxzE,QAAS,iBACTisB,OAAQ,CACNwlE,YAAa,QACbzkD,UAAW,iBAGf,eAAgB,GAChB,aAAc,CACZhtC,QAAS,qCACTisB,OAAQ,CACNwlE,YAAa,CACX,CACEzxF,QAAS,KACTgxF,MAAO,eAET,SAINS,YAAa,OACb,YAAa,CACXzxF,QAAS,YACTisB,OAAQ,CACN+gB,UAAW,mBAKnBwnD,OAAQ,CACN,CACEx0F,QAAS,kBACTgxF,MAAO,gBAET,uBAGJb,EAAMW,UAAUR,OAAY,IAAErkE,OAAO,cAAcA,OAAe,OAChEkkE,EAAMW,UAAUR,OAAe,OACjCH,EAAMW,UAAUR,OAAgB,QAAErkE,OAAO,mBAAmBA,OAC1DkkE,EAAMW,UAAUR,OAClBH,EAAMiB,MAAMruE,IAAI,QAAQ,SAAU0c,GACf,WAAbA,EAAIp9B,OACNo9B,EAAIvvC,WAAkB,MAAIuvC,EAAIrpC,QAAQpL,MAAM4C,QAAQ,QAAS,KAEjE,IACApE,OAAOK,eAAesmG,EAAMW,UAAUR,OAAO9c,IAAK,aAAc,CAY9DxoF,MAAO,SAAoB4xB,EAASxjB,GAClC,IAAIu2G,EAAsB,CAAC,EAC3BA,EAAoB,YAAcv2G,GAAQ,CACxC4G,QAAS,oCACTuxF,YAAY,EACZtlE,OAAQkkE,EAAMW,UAAU13F,IAE1Bu2G,EAA2B,MAAI,uBAC/B,IAAI1jF,EAAS,CACX,iBAAkB,CAChBjsB,QAAS,4BACTisB,OAAQ0jF,IAGZ1jF,EAAO,YAAc7yB,GAAQ,CAC3B4G,QAAS,UACTisB,OAAQkkE,EAAMW,UAAU13F,IAE1B,IAAI8xB,EAAM,CAAC,EACXA,EAAItO,GAAW,CACb5c,QAASkgC,OACP,wFAAwFnmB,OAAOnsB,QAC7F,OACA,WACE,OAAOgvB,CACT,IAEF,KAEF20E,YAAY,EACZM,QAAQ,EACR5lE,OAAQA,GAEVkkE,EAAMW,UAAUjzB,aAAa,SAAU,QAAS3yC,EAClD,IAEF1hC,OAAOK,eAAesmG,EAAMW,UAAUR,OAAO9c,IAAK,eAAgB,CAYhExoF,MAAO,SAAUsrD,EAAUl9C,GACzB+2F,EAAMW,UAAUR,OAAO9c,IAAIvnD,OAAO,gBAAgBn/B,KAAK,CACrDkT,QAASkgC,OACP,aAAanmB,OACX,MACAu8B,EACA,IACA,iDAAiDv8B,OACnD,KAEFw3E,YAAY,EACZtlE,OAAQ,CACN,YAAa,WACb,aAAc,CACZjsB,QAAS,WACTisB,OAAQ,CACNjhC,MAAO,CACLgV,QAAS,yCACTuxF,YAAY,EACZP,MAAO,CAAC53F,EAAM,YAAcA,GAC5B6yB,OAAQkkE,EAAMW,UAAU13F,IAE1Bq4F,YAAa,CACX,CACEzxF,QAAS,KACTgxF,MAAO,eAET,WAMZ,IAEFb,EAAMW,UAAUt8F,KAAO27F,EAAMW,UAAUR,OACvCH,EAAMW,UAAUr/C,OAAS0+C,EAAMW,UAAUR,OACzCH,EAAMW,UAAUtqF,IAAM2pF,EAAMW,UAAUR,OACtCH,EAAMW,UAAUjgG,IAAMs/F,EAAMW,UAAUxlG,OAAO,SAAU,CAAC,GACxD6kG,EAAMW,UAAU8e,KAAOzf,EAAMW,UAAUjgG,IACvCs/F,EAAMW,UAAUwO,KAAOnP,EAAMW,UAAUjgG,IACvCs/F,EAAMW,UAAU+e,IAAM1f,EAAMW,UAAUjgG,GACxC,CA/LAzF,EAAOC,QAAUilG,EACjBA,EAAOb,YAAc,SACrBa,EAAOoB,QAAU,CAAC,OAAQ,SAAU,MAAO,MAAO,OAAQ,OAAQ,sCCClE,SAASoe,EAAO3f,GACdA,EAAMW,UAAUgf,OAAS,CACvBj6E,QAAS,CAAC,iBAAkB,OAC5BlgB,OAAQ,CACN3V,QAAS,uBACT6xF,QAAQ,GAGVjjG,OAAQ,iEACR4iG,QACE,8HACFW,SAAU,uBACV5/E,SAAU,0CACVk/E,YAAa,uBAEjB,CAlBArmG,EAAOC,QAAUykH,EACjBA,EAAOrgB,YAAc,SACrBqgB,EAAOpe,QAAU,kCCCjB,SAASqe,EAAU5f,IAChB,SAAWA,GACV,IAAI0C,EACF,2SACF1C,EAAMW,UAAUif,UAAY,CAC1Bl6E,QAAS,CACP71B,QAAS,8BACT6xF,QAAQ,GAEVl8E,OAAQ,CACN3V,QAAS,iDACTuxF,YAAY,EACZM,QAAQ,GAEV/+E,KAAM,CACJ9S,QAAS,4BACT6xF,QAAQ,EACRb,MAAO,UAET,gBAAiB,CACfhxF,QAASkgC,OACP,OACG,IAAInmB,OACH,IACA,mBAAmBA,OACnB,IACA,6FACGA,OANP,cASE84E,EAAS94E,OACT,IACA,cAAcA,OAXhB,kBAcI84E,EAAS94E,OACT,IACA,SAASA,OACT,IACA,YAAYA,OACZ,IACA,aAAaA,OACf,KACF,MAEFw3E,YAAY,EACZM,QAAQ,EACRb,MAAO,YAET,sBAAuB,CACrBhxF,QAAS,+BACTuxF,YAAY,EACZP,MAAO,YAETjzE,SAAU,CACR/d,QAAS,oBACTgxF,MAAO,aAETQ,QAASqB,EACTpkG,QAAS,qBACTs/G,KAAM,CACJ/tG,QACE,sGACFuxF,YAAY,EACZP,MAAO,UAETpiG,OAAQ,CACN,CACEoR,QACE,wFACFuxF,YAAY,GAEd,gBAEFiB,SAAU,0DACV5uF,MAAO,CACL5D,QAAS,+DACTgxF,MAAO,YAETz+E,SAAU,6BACVk/E,YAAa,8BAEhB,CAjFA,CAiFEtB,EACL,CAtFA/kG,EAAOC,QAAU0kH,EACjBA,EAAUtgB,YAAc,YACxBsgB,EAAUre,QAAU,iCCCpB,SAASse,EAAI7f,GACXA,EAAMW,UAAUkf,IAAM,CACpBn6E,QAAS,SACTpyB,KAAM,CACJzD,QAAS,wBACT6xF,QAAQ,EACRb,MAAO,SACP/kE,OAAQ,CACNkrE,UAAW,CACTn3F,QAAS,QACTgxF,MAAO,iBAIbr7E,OAAQ,CACN3V,QAAS,wBACT6xF,QAAQ,GAEVI,SAAU,QACVrjG,OAAQ,4CACRqhH,KAAM,CACJjwG,QAAS,cACTgxF,MAAO,YAETQ,QACE,uHACFW,SACE,2ufACF5/E,SAAU,CACR,8CACA,CAEEvS,QAAS,iBACTuxF,YAAY,GAEd,CAEEvxF,QAAS,iBACTuxF,YAAY,IAGhBE,YAAa,yBAEftB,EAAMW,UAAUkf,IAAU,KAAE/jF,OAAO/T,KAAOi4E,EAAMW,UAAUkf,GAC5D,CA/CA5kH,EAAOC,QAAU2kH,EACjBA,EAAIvgB,YAAc,MAClBugB,EAAIte,QAAU,kCCCd,SAASwe,EAAQ/f,GACfA,EAAMW,UAAUof,QAAU,CACxBr6E,QAAS,CACP71B,QAAS,OACT6xF,QAAQ,GAEV5vF,MAAO,CACLjC,QACE,sEACFuxF,YAAY,EACZtlE,OAAQ,CACNn+B,SAAU,wBACVykB,SAAU,IACVk/E,YAAa,MAGjB,oBAAqB,CACnBzxF,QACE,4IACFuxF,YAAY,EACZM,QAAQ,EACR5lE,OAAQ,CACNy7E,MAAO,CACL1nG,QAAS,8BACTgxF,MAAO,YAET73F,MAAO,CACL6G,QAAS,qCACTuxF,YAAY,EACZP,MAAO,YAET,aAAc,CACZhxF,QAAS,OACTgxF,MAAO,CAAC,QAAS,eAIvB0W,MAAO,CAML,CAEE1nG,QAAS,uDACTuxF,YAAY,EACZP,MAAO,YAET,CAGEhxF,QACE,qGACFuxF,YAAY,EACZP,MAAO,YAET,CAEEhxF,QACE,mEACFuxF,YAAY,EACZP,MAAO,YAET,CAEEhxF,QACE,uFACFuxF,YAAY,EACZP,MAAO,aAGX73F,MAAO,CACL6G,QAAS,0CACTuxF,YAAY,EACZM,QAAQ,EACRb,MAAO,YAETxrF,KAAM,CACJxF,QAAS,gEACTgxF,MAAO,UAETr7E,OAAQ,CACN3V,QAAS,cACT6xF,QAAQ,GAEVU,WAAY,CACVvyF,QACE,gGACFgxF,MAAO,aAETQ,QAAS,CAEP,CACExxF,QACE,yOACFuxF,YAAY,EACZM,QAAQ,GAEV,CACE7xF,QACE,2KACFuxF,YAAY,EACZM,QAAQ,IAGZ2C,OAAQ,cACRjiF,SAAU,CACRvS,QAAS,gCACTuxF,YAAY,GAEdE,YAAa,UAEjB,CApHArmG,EAAOC,QAAU6kH,EACjBA,EAAQzgB,YAAc,UACtBygB,EAAQxe,QAAU,kCCClB,SAASye,EAAMhgB,GACbA,EAAMW,UAAUqf,MAAQ,CACtBt6E,QAAS,OACT27D,QACE,s0BACFgF,UAAW,CACTx2F,QAAS,cACTgxF,MAAO,YAETiB,SAAU,aACVrjG,OAAQ,gBACR2jB,SAAU,mBACVk/E,YAAa,wBAEjB,CAjBArmG,EAAOC,QAAU8kH,EACjBA,EAAM1gB,YAAc,QACpB0gB,EAAMze,QAAU,iCCChB,SAAS0e,EAAQjgB,IACd,SAAWA,GACV,IAAIkgB,EAAY,CAEd,MACA,MACA,OACA,MACA,MACA,OACA,MACA,OACA,OACA,OACA,OACA,MACA,UACA,QACA,QACA,cACA,OACA,SACA,QACA,SACA,iBACA,aACA,QACA,cACA,OACA,aACA,QACA,gBACA,cACA,gBACA,cACA,WACA,aACA,QACA,SACA,eACA,OACA,OACA,OACA,OACA,UACA,OACA,eACA,SACA,YACA,OACA,QACA,QACA,WACA,QACA,YACA,SACA,QACA,OACA,aACA,UACA,cACA,aACA,SACA,aACA,SACA,WACA,eACA,SACA,cACA,SACA,qBACA,gBACA,UACA,SACA,SACA,OACA,kBACA,WACA,UACA,eACA,eACA,UACA,OACA,QACA,QACA,eACA,aACA,SACA,UACA,mBACA,OACA,eACA,QACA,SACA,OACA,YACA,mBACA,OACA,kBACA,eACA,iBACA,QACA,SACA,QACA,SACA,SACA,OACA,cACA,YACA,QACA,OACA,UACA,gBACA,QACA,WACA,OACA,iBACA,eACA,kBACA,gBACA,cACA,aACA,aACA,oBACA,UACA,MACA,OACA,UACA,SACA,SACA,YACA,MACA,OACA,QACA,UACA,MACA,gBACA,gBACA,aACA,WACA,YACA,gBACA,WACA,eACA,QACA,QACA,OACA,WACA,MACA,OACA,SACA,MACA,OACA,SACA,OACA,OACA,gBACA,QACA,OACA,eACA,UACA,OACA,SACA,YACA,MACA,OACA,iBACA,MACA,OACA,QACA,oBACA,SACA,UACA,aACA,gBACA,cACA,cACA,cACA,gBACA,SACA,SACA,UACA,iBACA,aACA,mBACA,eACA,YACA,QACA,OACA,SACA,SACA,QACA,aACA,cACA,cACA,eACA,YACA,UACA,eACA,YACA,YACA,OACA,UACA,OACA,UACA,UACA,aACA,YACA,SACA,UACA,cACA,YACA,WACA,WACA,QACA,SACA,QACA,QACA,QACA,OACA,SACA,WACA,YACA,gBACA,aACA,YACA,QACA,cACA,YACA,cACA,WACA,WACA,QACA,OACA,aACA,OACA,WACA,SACA,aACA,eACA,YAmBEC,EAAkB,OAHtBD,EAAYA,EAAUplF,KAAI,SAAU1Y,GAClC,OAAOA,EAAS3kB,QAAQ,IAAK,MAC/B,KACwCV,KAAK,KAAO,OACpDijG,EAAMW,UAAUsf,QAAUjgB,EAAMW,UAAUxlG,OAAO,aAAc,CAAC,GAChE6kG,EAAMW,UAAUjzB,aAAa,UAAW,SAAU,CAChD/vE,SAAU,CACRkS,QACE,oHACF6xF,QAAQ,EACR5lE,OAAQ,CACNulE,QAAStxD,OAAO,YAAcowE,EAAkB,iBAItDngB,EAAMW,UAAUsf,QAAQz6F,OAAOsW,OAAS,CACtC1R,IAAK,CAEHva,QACE,yEACF6xF,QAAQ,GAEV2C,OAAQ,CAENx0F,QACE,8EACF6xF,QAAQ,IAGZ1B,EAAMW,UAAUjzB,aAAa,UAAW,WAAY,CAClD61B,QAAS,CACP1zF,QAASkgC,OAAO,SA7CG,CACrB,WACA,OACA,UACA,QACA,YACA,aACA,gBACA,SAC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","sources":["webpack://my-blog/./node_modules/extend/index.js","webpack://my-blog/./src/styles/ContentsTree.module.css","webpack://my-blog/./src/components/ContentsTree.js","webpack://my-blog/./node_modules/comma-separated-tokens/index.js","webpack://my-blog/./node_modules/estree-util-is-identifier-name/lib/index.js","webpack://my-blog/./node_modules/hast-util-whitespace/lib/index.js","webpack://my-blog/./node_modules/property-information/lib/util/schema.js","webpack://my-blog/./node_modules/property-information/lib/util/merge.js","webpack://my-blog/./node_modules/property-information/lib/normalize.js","webpack://my-blog/./node_modules/property-information/lib/util/info.js","webpack://my-blog/./node_modules/property-information/lib/util/types.js","webpack://my-blog/./node_modules/property-information/lib/util/defined-info.js","webpack://my-blog/./node_modules/property-information/lib/util/create.js","webpack://my-blog/./node_modules/property-information/lib/xlink.js","webpack://my-blog/./node_modules/property-information/lib/xml.js","webpack://my-blog/./node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://my-blog/./node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://my-blog/./node_modules/property-information/lib/xmlns.js","webpack://my-blog/./node_modules/property-information/lib/aria.js","webpack://my-blog/./node_modules/property-information/lib/html.js","webpack://my-blog/./node_modules/property-information/lib/svg.js","webpack://my-blog/./node_modules/property-information/index.js","webpack://my-blog/./node_modules/property-information/lib/find.js","webpack://my-blog/./node_modules/property-information/lib/hast-to-react.js","webpack://my-blog/./node_modules/space-separated-tokens/index.js","webpack://my-blog/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/esm/index.mjs","webpack://my-blog/./node_modules/unist-util-position/lib/index.js","webpack://my-blog/./node_modules/unist-util-stringify-position/lib/index.js","webpack://my-blog/./node_modules/vfile-message/lib/index.js","webpack://my-blog/./node_modules/hast-util-to-jsx-runtime/lib/index.js","webpack://my-blog/./node_modules/html-url-attributes/lib/index.js","webpack://my-blog/./node_modules/mdast-util-to-string/lib/index.js","webpack://my-blog/./node_modules/micromark-util-chunked/index.js","webpack://my-blog/./node_modules/micromark-util-subtokenize/index.js","webpack://my-blog/./node_modules/micromark-util-combine-extensions/index.js","webpack://my-blog/./node_modules/micromark-util-character/index.js","webpack://my-blog/./node_modules/micromark-factory-space/index.js","webpack://my-blog/./node_modules/micromark/lib/initialize/content.js","webpack://my-blog/./node_modules/micromark/lib/initialize/document.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/content.js","webpack://my-blog/./node_modules/micromark/lib/initialize/flow.js","webpack://my-blog/./node_modules/micromark/lib/initialize/text.js","webpack://my-blog/./node_modules/micromark-util-resolve-all/index.js","webpack://my-blog/./node_modules/micromark/lib/create-tokenizer.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/list.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://my-blog/./node_modules/micromark-factory-destination/index.js","webpack://my-blog/./node_modules/micromark-factory-label/index.js","webpack://my-blog/./node_modules/micromark-factory-title/index.js","webpack://my-blog/./node_modules/micromark-factory-whitespace/index.js","webpack://my-blog/./node_modules/micromark-util-normalize-identifier/index.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://my-blog/./node_modules/micromark-util-html-tag-name/index.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://my-blog/./node_modules/decode-named-character-reference/index.dom.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://my-blog/./node_modules/micromark-util-classify-character/index.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://my-blog/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://my-blog/./node_modules/micromark/lib/constructs.js","webpack://my-blog/./node_modules/micromark/lib/preprocess.js","webpack://my-blog/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://my-blog/./node_modules/micromark-util-decode-string/index.js","webpack://my-blog/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://my-blog/./node_modules/micromark/lib/postprocess.js","webpack://my-blog/./node_modules/micromark/lib/parse.js","webpack://my-blog/./node_modules/remark-parse/lib/index.js","webpack://my-blog/./node_modules/@ungap/structured-clone/esm/types.js","webpack://my-blog/./node_modules/@ungap/structured-clone/esm/deserialize.js","webpack://my-blog/./node_modules/@ungap/structured-clone/esm/serialize.js","webpack://my-blog/./node_modules/@ungap/structured-clone/esm/index.js","webpack://my-blog/./node_modules/micromark-util-sanitize-uri/index.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/footer.js","webpack://my-blog/./node_modules/unist-util-is/lib/index.js","webpack://my-blog/./node_modules/unist-util-visit-parents/lib/index.js","webpack://my-blog/./node_modules/unist-util-visit/lib/index.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/revert.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/list-item.js","webpack://my-blog/./node_modules/trim-lines/index.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/index.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/break.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/code.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/delete.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/heading.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/html.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/image.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/link.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/list.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/root.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/strong.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/table.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/table-cell.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/table-row.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/text.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/state.js","webpack://my-blog/./node_modules/mdast-util-to-hast/lib/index.js","webpack://my-blog/./node_modules/remark-rehype/lib/index.js","webpack://my-blog/./node_modules/bail/index.js","webpack://my-blog/./node_modules/unified/node_modules/is-plain-obj/index.js","webpack://my-blog/./node_modules/trough/lib/index.js","webpack://my-blog/./node_modules/vfile/lib/minpath.browser.js","webpack://my-blog/./node_modules/vfile/lib/minproc.browser.js","webpack://my-blog/./node_modules/vfile/lib/minurl.shared.js","webpack://my-blog/./node_modules/vfile/lib/minurl.browser.js","webpack://my-blog/./node_modules/vfile/lib/index.js","webpack://my-blog/./node_modules/unified/lib/callable-instance.js","webpack://my-blog/./node_modules/unified/lib/index.js","webpack://my-blog/./node_modules/react-markdown/lib/index.js","webpack://my-blog/./node_modules/hast-util-from-parse5/node_modules/hast-util-parse-selector/lib/index.js","webpack://my-blog/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/create-h.js","webpack://my-blog/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","webpack://my-blog/./node_modules/hast-util-from-parse5/node_modules/hastscript/lib/index.js","webpack://my-blog/./node_modules/vfile-location/lib/index.js","webpack://my-blog/./node_modules/web-namespaces/index.js","webpack://my-blog/./node_modules/hast-util-from-parse5/lib/index.js","webpack://my-blog/./node_modules/zwitch/index.js","webpack://my-blog/./node_modules/hast-util-to-parse5/lib/index.js","webpack://my-blog/./node_modules/html-void-elements/index.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/unicode.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/error-codes.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/preprocessor.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/token.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/entities/lib/esm/generated/decode-data-html.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/entities/lib/esm/decode_codepoint.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/entities/lib/esm/generated/decode-data-xml.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/entities/lib/esm/decode.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/html.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/tokenizer/index.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/parser/open-element-stack.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/parser/formatting-element-list.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/tree-adapters/default.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/doctype.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/common/foreign-content.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/parser/index.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/entities/lib/esm/escape.js","webpack://my-blog/./node_modules/hast-util-raw/node_modules/parse5/dist/serializer/index.js","webpack://my-blog/./node_modules/hast-util-raw/lib/index.js","webpack://my-blog/./node_modules/rehype-raw/lib/index.js","webpack://my-blog/./node_modules/ccount/index.js","webpack://my-blog/./node_modules/mdast-util-find-and-replace/lib/index.js","webpack://my-blog/./node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","webpack://my-blog/./node_modules/mdast-util-gfm-autolink-literal/lib/index.js","webpack://my-blog/./node_modules/mdast-util-gfm-footnote/lib/index.js","webpack://my-blog/./node_modules/mdast-util-gfm-strikethrough/lib/index.js","webpack://my-blog/./node_modules/markdown-table/index.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://my-blog/./node_modules/mdast-util-phrasing/lib/index.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://my-blog/./node_modules/longest-streak/index.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://my-blog/./node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://my-blog/./node_modules/mdast-util-gfm-table/lib/index.js","webpack://my-blog/./node_modules/mdast-util-gfm-task-list-item/lib/index.js","webpack://my-blog/./node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","webpack://my-blog/./node_modules/micromark-extension-gfm-footnote/lib/syntax.js","webpack://my-blog/./node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","webpack://my-blog/./node_modules/micromark-extension-gfm-table/lib/edit-map.js","webpack://my-blog/./node_modules/micromark-extension-gfm-table/lib/infer.js","webpack://my-blog/./node_modules/micromark-extension-gfm-table/lib/syntax.js","webpack://my-blog/./node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","webpack://my-blog/./node_modules/remark-gfm/lib/index.js","webpack://my-blog/./node_modules/micromark-extension-gfm/index.js","webpack://my-blog/./node_modules/mdast-util-gfm/lib/index.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/create-element.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/checkForListedLanguage.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/highlight.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/styles/prism/prism.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/prism.js","webpack://my-blog/./node_modules/react-syntax-highlighter/dist/esm/languages/prism/supported-languages.js","webpack://my-blog/./src/components/MarkdownRenderer.js","webpack://my-blog/./src/styles/Post.module.css","webpack://my-blog/./src/templates/Post.js","webpack://my-blog/./node_modules/hast-util-parse-selector/index.js","webpack://my-blog/./node_modules/hast-util-to-jsx-runtime/node_modules/inline-style-parser/index.js","webpack://my-blog/./node_modules/hast-util-to-jsx-runtime/node_modules/style-to-object/cjs/index.js","webpack://my-blog/./node_modules/hastscript/factory.js","webpack://my-blog/./node_modules/hastscript/html.js","webpack://my-blog/./node_modules/hastscript/index.js","webpack://my-blog/./node_modules/hastscript/node_modules/comma-separated-tokens/index.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/find.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/html.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/aria.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/html.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/case-insensitive-transform.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/case-sensitive-transform.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/create.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/defined-info.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/info.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/merge.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/schema.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/util/types.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/xlink.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/xml.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/lib/xmlns.js","webpack://my-blog/./node_modules/hastscript/node_modules/property-information/normalize.js","webpack://my-blog/./node_modules/hastscript/node_modules/space-separated-tokens/index.js","webpack://my-blog/./node_modules/refractor/core.js","webpack://my-blog/./node_modules/refractor/index.js","webpack://my-blog/./node_modules/refractor/lang/abap.js","webpack://my-blog/./node_modules/refractor/lang/abnf.js","webpack://my-blog/./node_modules/refractor/lang/actionscript.js","webpack://my-blog/./node_modules/refractor/lang/ada.js","webpack://my-blog/./node_modules/refractor/lang/agda.js","webpack://my-blog/./node_modules/refractor/lang/al.js","webpack://my-blog/./node_modules/refractor/lang/antlr4.js","webpack://my-blog/./node_modules/refractor/lang/apacheconf.js","webpack://my-blog/./node_modules/refractor/lang/apex.js","webpack://my-blog/./node_modules/refractor/lang/apl.js","webpack://my-blog/./node_modules/refractor/lang/applescript.js","webpack://my-blog/./node_modules/refractor/lang/aql.js","webpack://my-blog/./node_modules/refractor/lang/arduino.js","webpack://my-blog/./node_modules/refractor/lang/arff.js","webpack://my-blog/./node_modules/refractor/lang/asciidoc.js","webpack://my-blog/./node_modules/refractor/lang/asm6502.js","webpack://my-blog/./node_modules/refractor/lang/asmatmel.js","webpack://my-blog/./node_modules/refractor/lang/aspnet.js","webpack://my-blog/./node_modules/refractor/lang/autohotkey.js","webpack://my-blog/./node_modules/refractor/lang/autoit.js","webpack://my-blog/./node_modules/refractor/lang/avisynth.js","webpack://my-blog/./node_modules/refractor/lang/avro-idl.js","webpack://my-blog/./node_modules/refractor/lang/bash.js","webpack://my-blog/./node_modules/refractor/lang/basic.js","webpack://my-blog/./node_modules/refractor/lang/batch.js","webpack://my-blog/./node_modules/refractor/lang/bbcode.js","webpack://my-blog/./node_modules/refractor/lang/bicep.js","webpack://my-blog/./node_modules/refractor/lang/birb.js","webpack://my-blog/./node_modules/refractor/lang/bison.js","webpack://my-blog/./node_modules/refractor/lang/bnf.js","webpack://my-blog/./node_modules/refractor/lang/brainfuck.js","webpack://my-blog/./node_modules/refractor/lang/brightscript.js","webpack://my-blog/./node_modules/refractor/lang/bro.js","webpack://my-blog/./node_modules/refractor/lang/bsl.js","webpack://my-blog/./node_modules/refractor/lang/c.js","webpack://my-blog/./node_modules/refractor/lang/cfscript.js","webpack://my-blog/./node_modules/refractor/lang/chaiscript.js","webpack://my-blog/./node_modules/refractor/lang/cil.js","webpack://my-blog/./node_modules/refractor/lang/clike.js","webpack://my-blog/./node_modules/refractor/lang/clojure.js","webpack://my-blog/./node_modules/refractor/lang/cmake.js","webpack://my-blog/./node_modules/refractor/lang/cobol.js","webpack://my-blog/./node_modules/refractor/lang/coffeescript.js","webpack://my-blog/./node_modules/refractor/lang/concurnas.js","webpack://my-blog/./node_modules/refractor/lang/coq.js","webpack://my-blog/./node_modules/refractor/lang/cpp.js","webpack://my-blog/./node_modules/refractor/lang/crystal.js","webpack://my-blog/./node_modules/refractor/lang/csharp.js","webpack://my-blog/./node_modules/refractor/lang/cshtml.js","webpack://my-blog/./node_modules/refractor/lang/csp.js","webpack://my-blog/./node_modules/refractor/lang/css-extras.js","webpack://my-blog/./node_modules/refractor/lang/css.js","webpack://my-blog/./node_modules/refractor/lang/csv.js","webpack://my-blog/./node_modules/refractor/lang/cypher.js","webpack://my-blog/./node_modules/refractor/lang/d.js","webpack://my-blog/./node_modules/refractor/lang/dart.js","webpack://my-blog/./node_modules/refractor/lang/dataweave.js","webpack://my-blog/./node_modules/refractor/lang/dax.js","webpack://my-blog/./node_modules/refractor/lang/dhall.js","webpack://my-blog/./node_modules/refractor/lang/diff.js","webpack://my-blog/./node_modules/refractor/lang/django.js","webpack://my-blog/./node_modules/refractor/lang/dns-zone-file.js","webpack://my-blog/./node_modules/refractor/lang/docker.js","webpack://my-blog/./node_modules/refractor/lang/dot.js","webpack://my-blog/./node_modules/refractor/lang/ebnf.js","webpack://my-blog/./node_modules/refractor/lang/editorconfig.js","webpack://my-blog/./node_modules/refractor/lang/eiffel.js","webpack://my-blog/./node_modules/refractor/lang/ejs.js","webpack://my-blog/./node_modules/refractor/lang/elixir.js","webpack://my-blog/./node_modules/refractor/lang/elm.js","webpack://my-blog/./node_modules/refractor/lang/erb.js","webpack://my-blog/./node_modules/refractor/lang/erlang.js","webpack://my-blog/./node_modules/refractor/lang/etlua.js","webpack://my-blog/./node_modules/refractor/lang/excel-formula.js","webpack://my-blog/./node_modules/refractor/lang/factor.js","webpack://my-blog/./node_modules/refractor/lang/false.js","webpack://my-blog/./node_modules/refractor/lang/firestore-security-rules.js","webpack://my-blog/./node_modules/refractor/lang/flow.js","webpack://my-blog/./node_modules/refractor/lang/fortran.js","webpack://my-blog/./node_modules/refractor/lang/fsharp.js","webpack://my-blog/./node_modules/refractor/lang/ftl.js","webpack://my-blog/./node_modules/refractor/lang/gap.js","webpack://my-blog/./node_modules/refractor/lang/gcode.js","webpack://my-blog/./node_modules/refractor/lang/gdscript.js","webpack://my-blog/./node_modules/refractor/lang/gedcom.js","webpack://my-blog/./node_modules/refractor/lang/gherkin.js","webpack://my-blog/./node_modules/refractor/lang/git.js","webpack://my-blog/./node_modules/refractor/lang/glsl.js","webpack://my-blog/./node_modules/refractor/lang/gml.js","webpack://my-blog/./node_modules/refractor/lang/gn.js","webpack://my-blog/./node_modules/refractor/lang/go-module.js","webpack://my-blog/./node_modules/refractor/lang/go.js","webpack://my-blog/./node_modules/refractor/lang/graphql.js","webpack://my-blog/./node_modules/refractor/lang/groovy.js","webpack://my-blog/./node_modules/refractor/lang/haml.js","webpack://my-blog/./node_modules/refractor/lang/handlebars.js","webpack://my-blog/./node_modules/refractor/lang/haskell.js","webpack://my-blog/./node_modules/refractor/lang/haxe.js","webpack://my-blog/./node_modules/refractor/lang/hcl.js","webpack://my-blog/./node_modules/refractor/lang/hlsl.js","webpack://my-blog/./node_modules/refractor/lang/hoon.js","webpack://my-blog/./node_modules/refractor/lang/hpkp.js","webpack://my-blog/./node_modules/refractor/lang/hsts.js","webpack://my-blog/./node_modules/refractor/lang/http.js","webpack://my-blog/./node_modules/refractor/lang/ichigojam.js","webpack://my-blog/./node_modules/refractor/lang/icon.js","webpack://my-blog/./node_modules/refractor/lang/icu-message-format.js","webpack://my-blog/./node_modules/refractor/lang/idris.js","webpack://my-blog/./node_modules/refractor/lang/iecst.js","webpack://my-blog/./node_modules/refractor/lang/ignore.js","webpack://my-blog/./node_modules/refractor/lang/inform7.js","webpack://my-blog/./node_modules/refractor/lang/ini.js","webpack://my-blog/./node_modules/refractor/lang/io.js","webpack://my-blog/./node_modules/refractor/lang/j.js","webpack://my-blog/./node_modules/refractor/lang/java.js","webpack://my-blog/./node_modules/refractor/lang/javadoc.js","webpack://my-blog/./node_modules/refractor/lang/javadoclike.js","webpack://my-blog/./node_modules/refractor/lang/javascript.js","webpack://my-blog/./node_modules/refractor/lang/javastacktrace.js","webpack://my-blog/./node_modules/refractor/lang/jexl.js","webpack://my-blog/./node_modules/refractor/lang/jolie.js","webpack://my-blog/./node_modules/refractor/lang/jq.js","webpack://my-blog/./node_modules/refractor/lang/js-extras.js","webpack://my-blog/./node_modules/refractor/lang/js-templates.js","webpack://my-blog/./node_modules/refractor/lang/jsdoc.js","webpack://my-blog/./node_modules/refractor/lang/json.js","webpack://my-blog/./node_modules/refractor/lang/json5.js","webpack://my-blog/./node_modules/refractor/lang/jsonp.js","webpack://my-blog/./node_modules/refractor/lang/jsstacktrace.js","webpack://my-blog/./node_modules/refractor/lang/jsx.js","webpack://my-blog/./node_modules/refractor/lang/julia.js","webpack://my-blog/./node_modules/refractor/lang/keepalived.js","webpack://my-blog/./node_modules/refractor/lang/keyman.js","webpack://my-blog/./node_modules/refractor/lang/kotlin.js","webpack://my-blog/./node_modules/refractor/lang/kumir.js","webpack://my-blog/./node_modules/refractor/lang/kusto.js","webpack://my-blog/./node_modules/refractor/lang/latex.js","webpack://my-blog/./node_modules/refractor/lang/latte.js","webpack://my-blog/./node_modules/refractor/lang/less.js","webpack://my-blog/./node_modules/refractor/lang/lilypond.js","webpack://my-blog/./node_modules/refractor/lang/liquid.js","webpack://my-blog/./node_modules/refractor/lang/lisp.js","webpack://my-blog/./node_modules/refractor/lang/livescript.js","webpack://my-blog/./node_modules/refractor/lang/llvm.js","webpack://my-blog/./node_modules/refractor/lang/log.js","webpack://my-blog/./node_modules/refractor/lang/lolcode.js","webpack://my-blog/./node_modules/refractor/lang/lua.js","webpack://my-blog/./node_modules/refractor/lang/magma.js","webpack://my-blog/./node_modules/refractor/lang/makefile.js","webpack://my-blog/./node_modules/refractor/lang/markdown.js","webpack://my-blog/./node_modules/refractor/lang/markup-templating.js","webpack://my-blog/./node_modules/refractor/lang/markup.js","webpack://my-blog/./node_modules/refractor/lang/matlab.js","webpack://my-blog/./node_modules/refractor/lang/maxscript.js","webpack://my-blog/./node_modules/refractor/lang/mel.js","webpack://my-blog/./node_modules/refractor/lang/mermaid.js","webpack://my-blog/./node_modules/refractor/lang/mizar.js","webpack://my-blog/./node_modules/refractor/lang/mongodb.js","webpack://my-blog/./node_modules/refractor/lang/monkey.js","webpack://my-blog/./node_modules/refractor/lang/moonscript.js","webpack://my-blog/./node_modules/refractor/lang/n1ql.js","webpack://my-blog/./node_modules/refractor/lang/n4js.js","webpack://my-blog/./node_modules/refractor/lang/nand2tetris-hdl.js","webpack://my-blog/./node_modules/refractor/lang/naniscript.js","webpack://my-blog/./node_modules/refractor/lang/nasm.js","webpack://my-blog/./node_modules/refractor/lang/neon.js","webpack://my-blog/./node_modules/refractor/lang/nevod.js","webpack://my-blog/./node_modules/refractor/lang/nginx.js","webpack://my-blog/./node_modules/refractor/lang/nim.js","webpack://my-blog/./node_modules/refractor/lang/nix.js","webpack://my-blog/./node_modules/refractor/lang/nsis.js","webpack://my-blog/./node_modules/refractor/lang/objectivec.js","webpack://my-blog/./node_modules/refractor/lang/ocaml.js","webpack://my-blog/./node_modules/refractor/lang/opencl.js","webpack://my-blog/./node_modules/refractor/lang/openqasm.js","webpack://my-blog/./node_modules/refractor/lang/oz.js","webpack://my-blog/./node_modules/refractor/lang/parigp.js","webpack://my-blog/./node_modules/refractor/lang/parser.js","webpack://my-blog/./node_modules/refractor/lang/pascal.js","webpack://my-blog/./node_modules/refractor/lang/pascaligo.js","webpack://my-blog/./node_modules/refractor/lang/pcaxis.js","webpack://my-blog/./node_modules/refractor/lang/peoplecode.js","webpack://my-blog/./node_modules/refractor/lang/perl.js","webpack://my-blog/./node_modules/refractor/lang/php-extras.js","webpack://my-blog/./node_modules/refractor/lang/php.js","webpack://my-blog/./node_modules/refractor/lang/phpdoc.js","webpack://my-blog/./node_modules/refractor/lang/plsql.js","webpack://my-blog/./node_modules/refractor/lang/powerquery.js","webpack://my-blog/./node_modules/refractor/lang/powershell.js","webpack://my-blog/./node_modules/refractor/lang/processing.js","webpack://my-blog/./node_modules/refractor/lang/prolog.js","webpack://my-blog/./node_modules/refractor/lang/promql.js","webpack://my-blog/./node_modules/refractor/lang/properties.js","webpack://my-blog/./node_modules/refractor/lang/protobuf.js","webpack://my-blog/./node_modules/refractor/lang/psl.js","webpack://my-blog/./node_modules/refractor/lang/pug.js","webpack://my-blog/./node_modules/refractor/lang/puppet.js","webpack://my-blog/./node_modules/refractor/lang/pure.js","webpack://my-blog/./node_modules/refractor/lang/purebasic.js","webpack://my-blog/./node_modules/refractor/lang/purescript.js","webpack://my-blog/./node_modules/refractor/lang/python.js","webpack://my-blog/./node_modules/refractor/lang/q.js","webpack://my-blog/./node_modules/refractor/lang/qml.js","webpack://my-blog/./node_modules/refractor/lang/qore.js","webpack://my-blog/./node_modules/refractor/lang/qsharp.js","webpack://my-blog/./node_modules/refractor/lang/r.js","webpack://my-blog/./node_modules/refractor/lang/racket.js","webpack://my-blog/./node_modules/refractor/lang/reason.js","webpack://my-blog/./node_modules/refractor/lang/regex.js","webpack://my-blog/./node_modules/refractor/lang/rego.js","webpack://my-blog/./node_modules/refractor/lang/renpy.js","webpack://my-blog/./node_modules/refractor/lang/rest.js","webpack://my-blog/./node_modules/refractor/lang/rip.js","webpack://my-blog/./node_modules/refractor/lang/roboconf.js","webpack://my-blog/./node_modules/refractor/lang/robotframework.js","webpack://my-blog/./node_modules/refractor/lang/ruby.js","webpack://my-blog/./node_modules/refractor/lang/rust.js","webpack://my-blog/./node_modules/refractor/lang/sas.js","webpack://my-blog/./node_modules/refractor/lang/sass.js","webpack://my-blog/./node_modules/refractor/lang/scala.js","webpack://my-blog/./node_modules/refractor/lang/scheme.js","webpack://my-blog/./node_modules/refractor/lang/scss.js","webpack://my-blog/./node_modules/refractor/lang/shell-session.js","webpack://my-blog/./node_modules/refractor/lang/smali.js","webpack://my-blog/./node_modules/refractor/lang/smalltalk.js","webpack://my-blog/./node_modules/refractor/lang/smarty.js","webpack://my-blog/./node_modules/refractor/lang/sml.js","webpack://my-blog/./node_modules/refractor/lang/solidity.js","webpack://my-blog/./node_modules/refractor/lang/solution-file.js","webpack://my-blog/./node_modules/refractor/lang/soy.js","webpack://my-blog/./node_modules/refractor/lang/sparql.js","webpack://my-blog/./node_modules/refractor/lang/splunk-spl.js","webpack://my-blog/./node_modules/refractor/lang/sqf.js","webpack://my-blog/./node_modules/refractor/lang/sql.js","webpack://my-blog/./node_modules/refractor/lang/squirrel.js","webpack://my-blog/./node_modules/refractor/lang/stan.js","webpack://my-blog/./node_modules/refractor/lang/stylus.js","webpack://my-blog/./node_modules/refractor/lang/swift.js","webpack://my-blog/./node_modules/refractor/lang/systemd.js","webpack://my-blog/./node_modules/refractor/lang/t4-cs.js","webpack://my-blog/./node_modules/refractor/lang/t4-templating.js","webpack://my-blog/./node_modules/refractor/lang/t4-vb.js","webpack://my-blog/./node_modules/refractor/lang/tap.js","webpack://my-blog/./node_modules/refractor/lang/tcl.js","webpack://my-blog/./node_modules/refractor/lang/textile.js","webpack://my-blog/./node_modules/refractor/lang/toml.js","webpack://my-blog/./node_modules/refractor/lang/tremor.js","webpack://my-blog/./node_modules/refractor/lang/tsx.js","webpack://my-blog/./node_modules/refractor/lang/tt2.js","webpack://my-blog/./node_modules/refractor/lang/turtle.js","webpack://my-blog/./node_modules/refractor/lang/twig.js","webpack://my-blog/./node_modules/refractor/lang/typescript.js","webpack://my-blog/./node_modules/refractor/lang/typoscript.js","webpack://my-blog/./node_modules/refractor/lang/unrealscript.js","webpack://my-blog/./node_modules/refractor/lang/uorazor.js","webpack://my-blog/./node_modules/refractor/lang/uri.js","webpack://my-blog/./node_modules/refractor/lang/v.js","webpack://my-blog/./node_modules/refractor/lang/vala.js","webpack://my-blog/./node_modules/refractor/lang/vbnet.js","webpack://my-blog/./node_modules/refractor/lang/velocity.js","webpack://my-blog/./node_modules/refractor/lang/verilog.js","webpack://my-blog/./node_modules/refractor/lang/vhdl.js","webpack://my-blog/./node_modules/refractor/lang/vim.js","webpack://my-blog/./node_modules/refractor/lang/visual-basic.js","webpack://my-blog/./node_modules/refractor/lang/warpscript.js","webpack://my-blog/./node_modules/refractor/lang/wasm.js","webpack://my-blog/./node_modules/refractor/lang/web-idl.js","webpack://my-blog/./node_modules/refractor/lang/wiki.js","webpack://my-blog/./node_modules/refractor/lang/wolfram.js","webpack://my-blog/./node_modules/refractor/lang/wren.js","webpack://my-blog/./node_modules/refractor/lang/xeora.js","webpack://my-blog/./node_modules/refractor/lang/xml-doc.js","webpack://my-blog/./node_modules/refractor/lang/xojo.js","webpack://my-blog/./node_modules/refractor/lang/xquery.js","webpack://my-blog/./node_modules/refractor/lang/yaml.js","webpack://my-blog/./node_modules/refractor/lang/yang.js","webpack://my-blog/./node_modules/refractor/lang/zig.js","webpack://my-blog/./node_modules/refractor/node_modules/is-alphabetical/index.js","webpack://my-blog/./node_modules/refractor/node_modules/is-alphanumerical/index.js","webpack://my-blog/./node_modules/refractor/node_modules/is-decimal/index.js","webpack://my-blog/./node_modules/refractor/node_modules/is-hexadecimal/index.js","webpack://my-blog/./node_modules/refractor/node_modules/parse-entities/decode-entity.browser.js","webpack://my-blog/./node_modules/refractor/node_modules/parse-entities/index.js","webpack://my-blog/./node_modules/refractor/node_modules/prismjs/components/prism-core.js","webpack://my-blog/./node_modules/xtend/immutable.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/extends.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/objectWithoutProperties.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/toPrimitive.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/toPropertyKey.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/typeof.js","webpack://my-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"sourcesContent":["'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","// extracted by mini-css-extract-plugin\nexport var contentsTree__leaf = \"ContentsTree-module--contentsTree__leaf--8208d\";","import React from \"react\"\r\n\r\nimport * as styles from \"../styles/ContentsTree.module.css\";\r\n\r\n/** Dummy table of contents component.\r\n    To be modified later. */\r\nfunction ContentsTree() {\r\n  return (\r\n    <div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>Contents</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;├── PersonalHistory</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;├── ProblemSolving</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── boj </div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── programmers</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;├── SideProjects</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── arbitrage-bot</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── lambda-calculator </div>      \r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;├── my-blog </div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;└── tetris-ai</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;│</div>\r\n      <div className={styles[\"contentsTree__leaf\"]}>&nbsp;&nbsp;└── etc</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ContentsTree;","/**\n * @typedef Options\n *   Configuration for `stringify`.\n * @property {boolean} [padLeft=true]\n *   Whether to pad a space before a token.\n * @property {boolean} [padRight=false]\n *   Whether to pad a space after a token.\n */\n\n/**\n * @typedef {Options} StringifyOptions\n *   Please use `StringifyOptions` instead.\n */\n\n/**\n * Parse comma-separated tokens to an array.\n *\n * @param {string} value\n *   Comma-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  /** @type {Array<string>} */\n  const tokens = []\n  const input = String(value || '')\n  let index = input.indexOf(',')\n  let start = 0\n  /** @type {boolean} */\n  let end = false\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    const token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings or numbers to comma-separated tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @param {Options} [options]\n *   Configuration for `stringify` (optional).\n * @returns {string}\n *   Comma-separated tokens.\n */\nexport function stringify(values, options) {\n  const settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  const input = values[values.length - 1] === '' ? [...values, ''] : values\n\n  return input\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [jsx=false]\n *   Support JSX identifiers (default: `false`).\n */\n\nconst startRe = /[$_\\p{ID_Start}]/u\nconst contRe = /[$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst contReJsx = /[-$_\\u{200C}\\u{200D}\\p{ID_Continue}]/u\nconst nameRe = /^[$_\\p{ID_Start}][$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\nconst nameReJsx = /^[$_\\p{ID_Start}][-$_\\u{200C}\\u{200D}\\p{ID_Continue}]*$/u\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Checks if the given code point can start an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @returns {boolean}\n *   Whether `code` can start an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function start(code) {\n  return code ? startRe.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given code point can continue an identifier.\n *\n * @param {number | undefined} code\n *   Code point to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `code` can continue an identifier.\n */\n// Note: `undefined` is supported so you can pass the result from `''.codePointAt`.\nexport function cont(code, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? contReJsx : contRe\n  return code ? re.test(String.fromCodePoint(code)) : false\n}\n\n/**\n * Checks if the given value is a valid identifier name.\n *\n * @param {string} name\n *   Identifier to check.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {boolean}\n *   Whether `name` can be an identifier.\n */\nexport function name(name, options) {\n  const settings = options || emptyOptions\n  const re = settings.jsx ? nameReJsx : nameRe\n  return re.test(name)\n}\n","/**\n * @typedef {import('hast').Nodes} Nodes\n */\n\n// HTML whitespace expression.\n// See <https://infra.spec.whatwg.org/#ascii-whitespace>.\nconst re = /[ \\t\\n\\f\\r]/g\n\n/**\n * Check if the given value is *inter-element whitespace*.\n *\n * @param {Nodes | string} thing\n *   Thing to check (`Node` or `string`).\n * @returns {boolean}\n *   Whether the `value` is inter-element whitespace (`boolean`): consisting of\n *   zero or more of space, tab (`\\t`), line feed (`\\n`), carriage return\n *   (`\\r`), or form feed (`\\f`); if a node is passed it must be a `Text` node,\n *   whose `value` field is checked.\n */\nexport function whitespace(thing) {\n  return typeof thing === 'object'\n    ? thing.type === 'text'\n      ? empty(thing.value)\n      : false\n    : empty(thing)\n}\n\n/**\n * @param {string} value\n * @returns {boolean}\n */\nfunction empty(value) {\n  return value.replace(re, '') === ''\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    blocking: spaceSeparated,\n    capture: null,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    fetchPriority: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inert: boolean,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforeMatch: null,\n    onBeforePrint: null,\n    onBeforeToggle: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onScrollEnd: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    popover: null,\n    popoverTarget: null,\n    popoverTargetAction: null,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shadowRootDelegatesFocus: boolean,\n    shadowRootMode: null,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    transformOrigin: 'transform-origin',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    transformOrigin: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * `hast` is close to `React`, but differs in a couple of cases.\n *\n * To get a React property from a hast property, check if it is in\n * `hastToReact`, if it is, then use the corresponding value,\n * otherwise, use the hast property.\n *\n * @type {Record<string, string>}\n */\nexport const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * Parse space-separated tokens to an array of strings.\n *\n * @param {string} value\n *   Space-separated tokens.\n * @returns {Array<string>}\n *   List of tokens.\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated-tokens.\n *\n * @param {Array<string|number>} values\n *   List of tokens.\n * @returns {string}\n *   Space-separated tokens.\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n","import StyleToObject from '../cjs/index.js';\n\n// ensure compatibility with rollup umd build\nexport default StyleToObject.default || StyleToObject;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Get the ending point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointEnd = point('end')\n\n/**\n * Get the starting point of `node`.\n *\n * @param node\n *   Node.\n * @returns\n *   Point.\n */\nexport const pointStart = point('start')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'end' | 'start'} type\n *   Side.\n * @returns\n *   Getter.\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the point info of `node` at a bound side.\n   *\n   * @param {Node | NodeLike | null | undefined} [node]\n   * @returns {Point | undefined}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    if (\n      typeof point.line === 'number' &&\n      point.line > 0 &&\n      typeof point.column === 'number' &&\n      point.column > 0\n    ) {\n      return {\n        line: point.line,\n        column: point.column,\n        offset:\n          typeof point.offset === 'number' && point.offset > -1\n            ? point.offset\n            : undefined\n      }\n    }\n  }\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {Node | NodeLike | null | undefined} [node]\n *   Node.\n * @returns {Position | undefined}\n *   Position.\n */\nexport function position(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  if (start && end) {\n    return {start, end}\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Point | PointLike | Position | PositionLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef Options\n *   Configuration.\n * @property {Array<Node> | null | undefined} [ancestors]\n *   Stack of (inclusive) ancestor nodes surrounding the message (optional).\n * @property {Error | null | undefined} [cause]\n *   Original error cause of the message (optional).\n * @property {Point | Position | null | undefined} [place]\n *   Place of message (optional).\n * @property {string | null | undefined} [ruleId]\n *   Category of message (optional, example: `'my-rule'`).\n * @property {string | null | undefined} [source]\n *   Namespace of who sent the message (optional, example: `'my-package'`).\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Options | null | undefined} [options]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | Options | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // eslint-disable-next-line complexity\n  constructor(causeOrReason, optionsOrParentOrPlace, origin) {\n    super()\n\n    if (typeof optionsOrParentOrPlace === 'string') {\n      origin = optionsOrParentOrPlace\n      optionsOrParentOrPlace = undefined\n    }\n\n    /** @type {string} */\n    let reason = ''\n    /** @type {Options} */\n    let options = {}\n    let legacyCause = false\n\n    if (optionsOrParentOrPlace) {\n      // Point.\n      if (\n        'line' in optionsOrParentOrPlace &&\n        'column' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Position.\n      else if (\n        'start' in optionsOrParentOrPlace &&\n        'end' in optionsOrParentOrPlace\n      ) {\n        options = {place: optionsOrParentOrPlace}\n      }\n      // Node.\n      else if ('type' in optionsOrParentOrPlace) {\n        options = {\n          ancestors: [optionsOrParentOrPlace],\n          place: optionsOrParentOrPlace.position\n        }\n      }\n      // Options.\n      else {\n        options = {...optionsOrParentOrPlace}\n      }\n    }\n\n    if (typeof causeOrReason === 'string') {\n      reason = causeOrReason\n    }\n    // Error.\n    else if (!options.cause && causeOrReason) {\n      legacyCause = true\n      reason = causeOrReason.message\n      options.cause = causeOrReason\n    }\n\n    if (!options.ruleId && !options.source && typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        options.ruleId = origin\n      } else {\n        options.source = origin.slice(0, index)\n        options.ruleId = origin.slice(index + 1)\n      }\n    }\n\n    if (!options.place && options.ancestors && options.ancestors) {\n      const parent = options.ancestors[options.ancestors.length - 1]\n\n      if (parent) {\n        options.place = parent.position\n      }\n    }\n\n    const start =\n      options.place && 'start' in options.place\n        ? options.place.start\n        : options.place\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Stack of ancestor nodes surrounding the message.\n     *\n     * @type {Array<Node> | undefined}\n     */\n    this.ancestors = options.ancestors || undefined\n\n    /**\n     * Original error cause of the message.\n     *\n     * @type {Error | undefined}\n     */\n    this.cause = options.cause || undefined\n\n    /**\n     * Starting column of message.\n     *\n     * @type {number | undefined}\n     */\n    this.column = start ? start.column : undefined\n\n    /**\n     * State of problem.\n     *\n     * * `true` — error, file not usable\n     * * `false` — warning, change may be needed\n     * * `undefined` — change likely not needed\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal = undefined\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | undefined}\n     */\n    this.file\n\n    // Field from `Error`.\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = reason\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | undefined}\n     */\n    this.line = start ? start.line : undefined\n\n    // Field from `Error`.\n    /**\n     * Serialized positional info of message.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(options.place) || '1:1'\n\n    /**\n     * Place of message.\n     *\n     * @type {Point | Position | undefined}\n     */\n    this.place = options.place || undefined\n\n    /**\n     * Reason for message, should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | undefined}\n     */\n    this.ruleId = options.ruleId || undefined\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | undefined}\n     */\n    this.source = options.source || undefined\n\n    // Field from `Error`.\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack =\n      legacyCause && options.cause && typeof options.cause.stack === 'string'\n        ? options.cause.stack\n        : ''\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | undefined}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | undefined}\n     */\n    this.expected\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | undefined}\n     */\n    this.note\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | undefined}\n     */\n    this.url\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.column = undefined\nVFileMessage.prototype.line = undefined\nVFileMessage.prototype.ancestors = undefined\nVFileMessage.prototype.cause = undefined\nVFileMessage.prototype.fatal = undefined\nVFileMessage.prototype.place = undefined\nVFileMessage.prototype.ruleId = undefined\nVFileMessage.prototype.source = undefined\n","// Register MDX nodes in mdast:\n/// <reference types=\"mdast-util-mdx-expression\" />\n/// <reference types=\"mdast-util-mdx-jsx\" />\n/// <reference types=\"mdast-util-mdxjs-esm\" />\n\n/**\n * @typedef {import('estree').Identifier} Identifier\n * @typedef {import('estree').Literal} Literal\n * @typedef {import('estree').MemberExpression} MemberExpression\n * @typedef {import('estree').Expression} Expression\n * @typedef {import('estree').Program} Program\n *\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-mdx-expression').MdxFlowExpressionHast} MdxFlowExpression\n * @typedef {import('mdast-util-mdx-expression').MdxTextExpressionHast} MdxTextExpression\n *\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxFlowElementHast} MdxJsxFlowElement\n * @typedef {import('mdast-util-mdx-jsx').MdxJsxTextElementHast} MdxJsxTextElement\n *\n * @typedef {import('mdast-util-mdxjs-esm').MdxjsEsmHast} MdxjsEsm\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('./components.js').Components} Components\n */\n\n/**\n * @typedef {JSX.Element | string | null | undefined} Child\n *   Child.\n *\n * @callback Create\n *   Create something in development or production.\n * @param {Nodes} node\n *   hast node.\n * @param {unknown} type\n *   Fragment symbol or tag name.\n * @param {Props} props\n *   Properties and children.\n * @param {string | undefined} key\n *   Key.\n * @returns {JSX.Element}\n *   Result.\n *\n * @callback CreateEvaluater\n *   Create an evaluator that turns ESTree ASTs from embedded MDX into values.\n * @returns {Evaluater}\n *   Evaluater.\n *\n * @typedef {'html' | 'react'} ElementAttributeNameCase\n *   Casing to use for attribute names.\n *\n *   HTML casing is for example `class`, `stroke-linecap`, `xml:lang`.\n *   React casing is for example `className`, `strokeLinecap`, `xmlLang`.\n *\n * @callback EvaluateExpression\n *   Turn an MDX expression into a value.\n * @param {Expression} expression\n *   ESTree expression.\n * @returns {unknown}\n *   Result of expression.\n *\n * @callback EvaluateProgram\n *   Turn an MDX program (export/import statements) into a value.\n * @param {Program} expression\n *   ESTree program.\n * @returns {unknown}\n *   Result of program;\n *   should likely be `undefined` as ESM changes the scope but doesn’t yield\n *   something.\n *\n * @typedef Evaluater\n *   Evaluator that turns ESTree ASTs from embedded MDX into values.\n * @property {EvaluateExpression} evaluateExpression\n *   Evaluate an expression.\n * @property {EvaluateProgram} evaluateProgram\n *   Evaluate a program.\n *\n * @typedef {[string, Value]} Field\n *   Property field.\n *\n * @typedef {unknown} Fragment\n *   Represent the children, typically a symbol.\n *\n * @callback Jsx\n *   Create a production element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} [key]\n *   Dynamicly generated key to use.\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @callback JsxDev\n *   Create a development element.\n * @param {unknown} type\n *   Element type: `Fragment` symbol, tag name (`string`), component.\n * @param {Props} props\n *   Element props, `children`, and maybe `node`.\n * @param {string | undefined} key\n *   Dynamicly generated key to use.\n * @param {boolean} isStaticChildren\n *   Whether two or more children are passed (in an array), which is whether\n *   `jsxs` or `jsx` would be used.\n * @param {Source} source\n *   Info about source.\n * @param {undefined} self\n *   Nothing (this is used by frameworks that have components, we don’t).\n * @returns {JSX.Element}\n *   Element from your framework.\n *\n * @typedef {{children?: Array<Child> | Child, node?: Element | MdxJsxFlowElement | MdxJsxTextElement | undefined, [prop: string]: Array<Child> | Child | Element | MdxJsxFlowElement | MdxJsxTextElement | Value | undefined}} Props\n *   Properties and children.\n *\n * @typedef RegularFields\n *   Configuration.\n * @property {Partial<Components> | null | undefined} [components]\n *   Components to use (optional).\n * @property {CreateEvaluater | null | undefined} [createEvaluater]\n *   Create an evaluator that turns ESTree ASTs into values (optional).\n * @property {ElementAttributeNameCase | null | undefined} [elementAttributeNameCase='react']\n *   Specify casing to use for attribute names (default: `'react'`).\n * @property {string | null | undefined} [filePath]\n *   File path to the original source file (optional).\n *\n *   Passed in source info to `jsxDEV` when using the automatic runtime with\n *   `development: true`.\n * @property {boolean | null | undefined} [ignoreInvalidStyle=false]\n *   Ignore invalid CSS in `style` props (default: `false`);\n *   the default behavior is to throw an error.\n * @property {boolean | null | undefined} [passKeys=true]\n *   Generate keys to optimize frameworks that support them (default: `true`).\n *\n *   > 👉 **Note**: Solid currently fails if keys are passed.\n * @property {boolean | null | undefined} [passNode=false]\n *   Pass the hast element node to components (default: `false`).\n * @property {Space | null | undefined} [space='html']\n *   Whether `tree` is in the `'html'` or `'svg'` space (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {StylePropertyNameCase | null | undefined} [stylePropertyNameCase='dom']\n *   Specify casing to use for property names in `style` objects (default:\n *   `'dom'`).\n * @property {boolean | null | undefined} [tableCellAlignToStyle=true]\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props\n *   (default: `true`).\n *\n * @typedef RuntimeDevelopment\n *   Runtime fields when development is on.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {true} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev} jsxDEV\n *   Development JSX.\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef RuntimeProduction\n *   Runtime fields when development is off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {false | null | undefined} [development]\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off) (optional).\n * @property {Jsx} jsx\n *   Dynamic JSX.\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx} jsxs\n *   Static JSX.\n *\n * @typedef RuntimeUnknown\n *   Runtime fields when development might be on or off.\n * @property {Fragment} Fragment\n *   Fragment.\n * @property {boolean} development\n *   Whether to use `jsxDEV` (when on) or `jsx` and `jsxs` (when off).\n * @property {Jsx | null | undefined} [jsx]\n *   Dynamic JSX (optional).\n * @property {JsxDev | null | undefined} [jsxDEV]\n *   Development JSX (optional).\n * @property {Jsx | null | undefined} [jsxs]\n *   Static JSX (optional).\n *\n * @typedef Source\n *   Info about source.\n * @property {number | undefined} columnNumber\n *   Column where thing starts (0-indexed).\n * @property {string | undefined} fileName\n *   Name of source file.\n * @property {number | undefined} lineNumber\n *   Line where thing starts (1-indexed).\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n *   > 👉 **Note**: hast is not XML.\n *   > It supports SVG as embedded in HTML.\n *   > It does not support the features available in XML.\n *   > Passing SVG might break but fragments of modern SVG should be fine.\n *   > Use `xast` if you need to support SVG as XML.\n *\n * @typedef State\n *   Info passed around.\n * @property {unknown} Fragment\n *   Fragment symbol.\n * @property {Array<Parents>} ancestors\n *   Stack of parents.\n * @property {Partial<Components>} components\n *   Components to swap.\n * @property {Create} create\n *   Create something in development or production.\n * @property {ElementAttributeNameCase} elementAttributeNameCase\n *   Casing to use for attribute names.\n * @property {Evaluater | undefined} evaluater\n *   Evaluator that turns ESTree ASTs into values.\n * @property {string | undefined} filePath\n *   File path.\n * @property {boolean} ignoreInvalidStyle\n *   Ignore invalid CSS in `style` props.\n * @property {boolean} passKeys\n *   Generate keys to optimize frameworks that support them.\n * @property {boolean} passNode\n *   Pass `node` to components.\n * @property {Schema} schema\n *   Current schema.\n * @property {StylePropertyNameCase} stylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n * @property {boolean} tableCellAlignToStyle\n *   Turn obsolete `align` props on `td` and `th` into CSS `style` props.\n *\n * @typedef {Record<string, string>} Style\n *   Style map.\n *\n * @typedef {'css' | 'dom'} StylePropertyNameCase\n *   Casing to use for property names in `style` objects.\n *\n *   CSS casing is for example `background-color` and `-webkit-line-clamp`.\n *   DOM casing is for example `backgroundColor` and `WebkitLineClamp`.\n *\n * @typedef {Style | boolean | number | string} Value\n *   Primitive property value and `Style` map.\n */\n\n/**\n * @typedef {RuntimeDevelopment & RegularFields} Development\n *   Configuration (development).\n * @typedef {Development | Production | Unknown} Options\n *   Configuration.\n * @typedef {RegularFields & RuntimeProduction} Production\n *   Configuration (production).\n * @typedef {RegularFields & RuntimeUnknown} Unknown\n *   Configuration (production or development).\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {name as isIdentifierName} from 'estree-util-is-identifier-name'\nimport {whitespace} from 'hast-util-whitespace'\nimport {find, hastToReact, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport styleToObject from 'style-to-object'\nimport {pointStart} from 'unist-util-position'\nimport {VFileMessage} from 'vfile-message'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Map<string, number>} */\nconst emptyMap = new Map()\n\nconst cap = /[A-Z]/g\nconst dashSomething = /-([a-z])/g\n\n// `react-dom` triggers a warning for *any* white space in tables.\n// To follow GFM, `mdast-util-to-hast` injects line endings between elements.\n// Other tools might do so too, but they don’t do here, so we remove all of\n// that.\n\n// See: <https://github.com/facebook/react/pull/7081>.\n// See: <https://github.com/facebook/react/pull/7515>.\n// See: <https://github.com/remarkjs/remark-react/issues/64>.\n// See: <https://github.com/rehypejs/rehype-react/pull/29>.\n// See: <https://github.com/rehypejs/rehype-react/pull/32>.\n// See: <https://github.com/rehypejs/rehype-react/pull/45>.\nconst tableElements = new Set(['table', 'tbody', 'thead', 'tfoot', 'tr'])\n\nconst tableCellElement = new Set(['td', 'th'])\n\nconst docs = 'https://github.com/syntax-tree/hast-util-to-jsx-runtime'\n\n/**\n * Transform a hast tree to preact, react, solid, svelte, vue, etc.,\n * with an automatic JSX runtime.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options} options\n *   Configuration (required).\n * @returns {JSX.Element}\n *   JSX element.\n */\n\nexport function toJsxRuntime(tree, options) {\n  if (!options || options.Fragment === undefined) {\n    throw new TypeError('Expected `Fragment` in options')\n  }\n\n  const filePath = options.filePath || undefined\n  /** @type {Create} */\n  let create\n\n  if (options.development) {\n    if (typeof options.jsxDEV !== 'function') {\n      throw new TypeError(\n        'Expected `jsxDEV` in options when `development: true`'\n      )\n    }\n\n    create = developmentCreate(filePath, options.jsxDEV)\n  } else {\n    if (typeof options.jsx !== 'function') {\n      throw new TypeError('Expected `jsx` in production options')\n    }\n\n    if (typeof options.jsxs !== 'function') {\n      throw new TypeError('Expected `jsxs` in production options')\n    }\n\n    create = productionCreate(filePath, options.jsx, options.jsxs)\n  }\n\n  /** @type {State} */\n  const state = {\n    Fragment: options.Fragment,\n    ancestors: [],\n    components: options.components || {},\n    create,\n    elementAttributeNameCase: options.elementAttributeNameCase || 'react',\n    evaluater: options.createEvaluater ? options.createEvaluater() : undefined,\n    filePath,\n    ignoreInvalidStyle: options.ignoreInvalidStyle || false,\n    passKeys: options.passKeys !== false,\n    passNode: options.passNode || false,\n    schema: options.space === 'svg' ? svg : html,\n    stylePropertyNameCase: options.stylePropertyNameCase || 'dom',\n    tableCellAlignToStyle: options.tableCellAlignToStyle !== false\n  }\n\n  const result = one(state, tree, undefined)\n\n  // JSX element.\n  if (result && typeof result !== 'string') {\n    return result\n  }\n\n  // Text node or something that turned into nothing.\n  return state.create(\n    tree,\n    state.Fragment,\n    {children: result || undefined},\n    undefined\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Nodes} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction one(state, node, key) {\n  if (node.type === 'element') {\n    return element(state, node, key)\n  }\n\n  if (node.type === 'mdxFlowExpression' || node.type === 'mdxTextExpression') {\n    return mdxExpression(state, node)\n  }\n\n  if (node.type === 'mdxJsxFlowElement' || node.type === 'mdxJsxTextElement') {\n    return mdxJsxElement(state, node, key)\n  }\n\n  if (node.type === 'mdxjsEsm') {\n    return mdxEsm(state, node)\n  }\n\n  if (node.type === 'root') {\n    return root(state, node, key)\n  }\n\n  if (node.type === 'text') {\n    return text(state, node)\n  }\n}\n\n/**\n * Handle element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction element(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.tagName.toLowerCase() === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type = findComponentFromName(state, node.tagName, false)\n  const props = createElementProps(state, node)\n  let children = createChildren(state, node)\n\n  if (tableElements.has(node.tagName)) {\n    children = children.filter(function (child) {\n      return typeof child === 'string' ? !whitespace(child) : true\n    })\n  }\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle MDX expression.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxFlowExpression | MdxTextExpression} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxExpression(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    const program = node.data.estree\n    const expression = program.body[0]\n    assert(expression.type === 'ExpressionStatement')\n\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateExpression(expression.expression)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX ESM.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxjsEsm} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxEsm(state, node) {\n  if (node.data && node.data.estree && state.evaluater) {\n    // Assume result is a child.\n    return /** @type {Child | undefined} */ (\n      state.evaluater.evaluateProgram(node.data.estree)\n    )\n  }\n\n  crashEstree(state, node.position)\n}\n\n/**\n * Handle MDX JSX.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction mdxJsxElement(state, node, key) {\n  const parentSchema = state.schema\n  let schema = parentSchema\n\n  if (node.name === 'svg' && parentSchema.space === 'html') {\n    schema = svg\n    state.schema = schema\n  }\n\n  state.ancestors.push(node)\n\n  const type =\n    node.name === null\n      ? state.Fragment\n      : findComponentFromName(state, node.name, true)\n  const props = createJsxElementProps(state, node)\n  const children = createChildren(state, node)\n\n  addNode(state, props, type, node)\n  addChildren(props, children)\n\n  // Restore.\n  state.ancestors.pop()\n  state.schema = parentSchema\n\n  return state.create(node, type, props, key)\n}\n\n/**\n * Handle root.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Root} node\n *   Current node.\n * @param {string | undefined} key\n *   Key.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction root(state, node, key) {\n  /** @type {Props} */\n  const props = {}\n\n  addChildren(props, createChildren(state, node))\n\n  return state.create(node, state.Fragment, props, key)\n}\n\n/**\n * Handle text.\n *\n * @param {State} _\n *   Info passed around.\n * @param {Text} node\n *   Current node.\n * @returns {Child | undefined}\n *   Child, optional.\n */\nfunction text(_, node) {\n  return node.value\n}\n\n/**\n * Add `node` to props.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Props} props\n *   Props.\n * @param {unknown} type\n *   Type.\n * @param {Element | MdxJsxFlowElement | MdxJsxTextElement} node\n *   Node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addNode(state, props, type, node) {\n  // If this is swapped out for a component:\n  if (typeof type !== 'string' && type !== state.Fragment && state.passNode) {\n    props.node = node\n  }\n}\n\n/**\n * Add children to props.\n *\n * @param {Props} props\n *   Props.\n * @param {Array<Child>} children\n *   Children.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChildren(props, children) {\n  if (children.length > 0) {\n    const value = children.length > 1 ? children : children[0]\n\n    if (value) {\n      props.children = value\n    }\n  }\n}\n\n/**\n * @param {string | undefined} _\n *   Path to file.\n * @param {Jsx} jsx\n *   Dynamic.\n * @param {Jsx} jsxs\n *   Static.\n * @returns {Create}\n *   Create a production element.\n */\nfunction productionCreate(_, jsx, jsxs) {\n  return create\n  /** @type {Create} */\n  function create(_, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const fn = isStaticChildren ? jsxs : jsx\n    return key ? fn(type, props, key) : fn(type, props)\n  }\n}\n\n/**\n * @param {string | undefined} filePath\n *   Path to file.\n * @param {JsxDev} jsxDEV\n *   Development.\n * @returns {Create}\n *   Create a development element.\n */\nfunction developmentCreate(filePath, jsxDEV) {\n  return create\n  /** @type {Create} */\n  function create(node, type, props, key) {\n    // Only an array when there are 2 or more children.\n    const isStaticChildren = Array.isArray(props.children)\n    const point = pointStart(node)\n    return jsxDEV(\n      type,\n      props,\n      key,\n      isStaticChildren,\n      {\n        columnNumber: point ? point.column - 1 : undefined,\n        fileName: filePath,\n        lineNumber: point ? point.line : undefined\n      },\n      undefined\n    )\n  }\n}\n\n/**\n * Create props from an element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Element} node\n *   Current element.\n * @returns {Props}\n *   Props.\n */\nfunction createElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n  /** @type {string | undefined} */\n  let alignValue\n  /** @type {string} */\n  let prop\n\n  for (prop in node.properties) {\n    if (prop !== 'children' && own.call(node.properties, prop)) {\n      const result = createProperty(state, prop, node.properties[prop])\n\n      if (result) {\n        const [key, value] = result\n\n        if (\n          state.tableCellAlignToStyle &&\n          key === 'align' &&\n          typeof value === 'string' &&\n          tableCellElement.has(node.tagName)\n        ) {\n          alignValue = value\n        } else {\n          props[key] = value\n        }\n      }\n    }\n  }\n\n  if (alignValue) {\n    // Assume style is an object.\n    const style = /** @type {Style} */ (props.style || (props.style = {}))\n    style[state.stylePropertyNameCase === 'css' ? 'text-align' : 'textAlign'] =\n      alignValue\n  }\n\n  return props\n}\n\n/**\n * Create props from a JSX element.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdxJsxFlowElement | MdxJsxTextElement} node\n *   Current JSX element.\n * @returns {Props}\n *   Props.\n */\nfunction createJsxElementProps(state, node) {\n  /** @type {Props} */\n  const props = {}\n\n  for (const attribute of node.attributes) {\n    if (attribute.type === 'mdxJsxExpressionAttribute') {\n      if (attribute.data && attribute.data.estree && state.evaluater) {\n        const program = attribute.data.estree\n        const expression = program.body[0]\n        assert(expression.type === 'ExpressionStatement')\n        const objectExpression = expression.expression\n        assert(objectExpression.type === 'ObjectExpression')\n        const property = objectExpression.properties[0]\n        assert(property.type === 'SpreadElement')\n\n        Object.assign(\n          props,\n          state.evaluater.evaluateExpression(property.argument)\n        )\n      } else {\n        crashEstree(state, node.position)\n      }\n    } else {\n      // For JSX, the author is responsible of passing in the correct values.\n      const name = attribute.name\n      /** @type {unknown} */\n      let value\n\n      if (attribute.value && typeof attribute.value === 'object') {\n        if (\n          attribute.value.data &&\n          attribute.value.data.estree &&\n          state.evaluater\n        ) {\n          const program = attribute.value.data.estree\n          const expression = program.body[0]\n          assert(expression.type === 'ExpressionStatement')\n          value = state.evaluater.evaluateExpression(expression.expression)\n        } else {\n          crashEstree(state, node.position)\n        }\n      } else {\n        value = attribute.value === null ? true : attribute.value\n      }\n\n      // Assume a prop.\n      props[name] = /** @type {Props[keyof Props]} */ (value)\n    }\n  }\n\n  return props\n}\n\n/**\n * Create children.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Parents} node\n *   Current element.\n * @returns {Array<Child>}\n *   Children.\n */\nfunction createChildren(state, node) {\n  /** @type {Array<Child>} */\n  const children = []\n  let index = -1\n  /** @type {Map<string, number>} */\n  // Note: test this when Solid doesn’t want to merge my upcoming PR.\n  /* c8 ignore next */\n  const countsByName = state.passKeys ? new Map() : emptyMap\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n    /** @type {string | undefined} */\n    let key\n\n    if (state.passKeys) {\n      const name =\n        child.type === 'element'\n          ? child.tagName\n          : child.type === 'mdxJsxFlowElement' ||\n              child.type === 'mdxJsxTextElement'\n            ? child.name\n            : undefined\n\n      if (name) {\n        const count = countsByName.get(name) || 0\n        key = name + '-' + count\n        countsByName.set(name, count + 1)\n      }\n    }\n\n    const result = one(state, child, key)\n    if (result !== undefined) children.push(result)\n  }\n\n  return children\n}\n\n/**\n * Handle a property.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Field | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(state, prop, value) {\n  const info = find(state.schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // React only accepts `style` as object.\n  if (info.property === 'style') {\n    let styleObject =\n      typeof value === 'object' ? value : parseStyle(state, String(value))\n\n    if (state.stylePropertyNameCase === 'css') {\n      styleObject = transformStylesToCssCasing(styleObject)\n    }\n\n    return ['style', styleObject]\n  }\n\n  return [\n    state.elementAttributeNameCase === 'react' && info.space\n      ? hastToReact[info.property] || info.property\n      : info.attribute,\n    value\n  ]\n}\n\n/**\n * Parse a CSS declaration to an object.\n *\n * @param {State} state\n *   Info passed around.\n * @param {string} value\n *   CSS declarations.\n * @returns {Style}\n *   Properties.\n * @throws\n *   Throws `VFileMessage` when CSS cannot be parsed.\n */\nfunction parseStyle(state, value) {\n  /** @type {Style} */\n  const result = {}\n\n  try {\n    // @ts-expect-error: `style-to-object` types are broken.\n    styleToObject(value, replacer)\n  } catch (error) {\n    if (!state.ignoreInvalidStyle) {\n      const cause = /** @type {Error} */ (error)\n      const message = new VFileMessage('Cannot parse `style` attribute', {\n        ancestors: state.ancestors,\n        cause,\n        ruleId: 'style',\n        source: 'hast-util-to-jsx-runtime'\n      })\n      message.file = state.filePath || undefined\n      message.url = docs + '#cannot-parse-style-attribute'\n\n      throw message\n    }\n  }\n\n  return result\n\n  /**\n   * Add a CSS property (normal, so with dashes) to `result` as a DOM CSS\n   * property.\n   *\n   * @param {string} name\n   *   Key.\n   * @param {string} value\n   *   Value\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function replacer(name, value) {\n    let key = name\n\n    if (key.slice(0, 2) !== '--') {\n      if (key.slice(0, 4) === '-ms-') key = 'ms-' + key.slice(4)\n      key = key.replace(dashSomething, toCamel)\n    }\n\n    result[key] = value\n  }\n}\n\n/**\n * Create a JSX name from a string.\n *\n * @param {State} state\n *   To do.\n * @param {string} name\n *   Name.\n * @param {boolean} allowExpression\n *   Allow member expressions and identifiers.\n * @returns {unknown}\n *   To do.\n */\nfunction findComponentFromName(state, name, allowExpression) {\n  /** @type {Identifier | Literal | MemberExpression} */\n  let result\n\n  if (!allowExpression) {\n    result = {type: 'Literal', value: name}\n  } else if (name.includes('.')) {\n    const identifiers = name.split('.')\n    let index = -1\n    /** @type {Identifier | Literal | MemberExpression | undefined} */\n    let node\n\n    while (++index < identifiers.length) {\n      /** @type {Identifier | Literal} */\n      const prop = isIdentifierName(identifiers[index])\n        ? {type: 'Identifier', name: identifiers[index]}\n        : {type: 'Literal', value: identifiers[index]}\n      node = node\n        ? {\n            type: 'MemberExpression',\n            object: node,\n            property: prop,\n            computed: Boolean(index && prop.type === 'Literal'),\n            optional: false\n          }\n        : prop\n    }\n\n    assert(node, 'always a result')\n    result = node\n  } else {\n    result =\n      isIdentifierName(name) && !/^[a-z]/.test(name)\n        ? {type: 'Identifier', name}\n        : {type: 'Literal', value: name}\n  }\n\n  // Only literals can be passed in `components` currently.\n  // No identifiers / member expressions.\n  if (result.type === 'Literal') {\n    const name = /** @type {keyof JSX.IntrinsicElements} */ (result.value)\n\n    return own.call(state.components, name) ? state.components[name] : name\n  }\n\n  // Assume component.\n  if (state.evaluater) {\n    return state.evaluater.evaluateExpression(result)\n  }\n\n  crashEstree(state)\n}\n\n/**\n * @param {State} state\n * @param {Position | undefined} [place]\n * @returns {never}\n */\nfunction crashEstree(state, place) {\n  const message = new VFileMessage(\n    'Cannot handle MDX estrees without `createEvaluater`',\n    {\n      ancestors: state.ancestors,\n      place,\n      ruleId: 'mdx-estree',\n      source: 'hast-util-to-jsx-runtime'\n    }\n  )\n  message.file = state.filePath || undefined\n  message.url = docs + '#cannot-handle-mdx-estrees-without-createevaluater'\n\n  throw message\n}\n\n/**\n * Transform a DOM casing style object to a CSS casing style object.\n *\n * @param {Style} domCasing\n * @returns {Style}\n */\nfunction transformStylesToCssCasing(domCasing) {\n  /** @type {Style} */\n  const cssCasing = {}\n  /** @type {string} */\n  let from\n\n  for (from in domCasing) {\n    if (own.call(domCasing, from)) {\n      cssCasing[transformStyleToCssCasing(from)] = domCasing[from]\n    }\n  }\n\n  return cssCasing\n}\n\n/**\n * Transform a DOM casing style field to a CSS casing style field.\n *\n * @param {string} from\n * @returns {string}\n */\nfunction transformStyleToCssCasing(from) {\n  let to = from.replace(cap, toDash)\n  // Handle `ms-xxx` -> `-ms-xxx`.\n  if (to.slice(0, 3) === 'ms-') to = '-' + to\n  return to\n}\n\n/**\n * Make `$1` capitalized.\n *\n * @param {string} _\n *   Whatever.\n * @param {string} $1\n *   Single ASCII alphabetical.\n * @returns {string}\n *   Capitalized `$1`.\n */\nfunction toCamel(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * Make `$0` dash cased.\n *\n * @param {string} $0\n *   Capitalized ASCII leter.\n * @returns {string}\n *   Dash and lower letter.\n */\nfunction toDash($0) {\n  return '-' + $0.toLowerCase()\n}\n","/**\n * HTML URL properties.\n *\n * Each key is a property name and each value is a list of tag names it applies\n * to or `null` if it applies to all elements.\n *\n * @type {Record<string, Array<string> | null>}\n */\nexport const urlAttributes = {\n  action: ['form'],\n  cite: ['blockquote', 'del', 'ins', 'q'],\n  data: ['object'],\n  formAction: ['button', 'input'],\n  href: ['a', 'area', 'base', 'link'],\n  icon: ['menuitem'],\n  itemId: null,\n  manifest: ['html'],\n  ping: ['a', 'area'],\n  poster: ['video'],\n  src: [\n    'audio',\n    'embed',\n    'iframe',\n    'img',\n    'input',\n    'script',\n    'source',\n    'track',\n    'video'\n  ]\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s (default: `true`).\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML (default: `true`).\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} [value]\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Nodes}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {number} start\n *   Index to remove/insert at (can be negative).\n * @param {number} remove\n *   Number of items to remove.\n * @param {Array<T>} items\n *   Items to inject into `list`.\n * @returns {undefined}\n *   Nothing.\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {Array<unknown>} */\n  let parameters\n\n  // Make start between zero and `end` (included).\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n  remove = remove > 0 ? remove : 0\n\n  // No need to chunk the items if there’s only a couple (10k) items.\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    // @ts-expect-error Hush, it’s fine.\n    list.splice(...parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) list.splice(start, remove)\n\n    // Insert the items in chunks to not cause stack overflows.\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      // @ts-expect-error Hush, it’s fine.\n      list.splice(...parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n *   Item type.\n * @param {Array<T>} list\n *   List to operate on.\n * @param {Array<T>} items\n *   Items to add to `list`.\n * @returns {Array<T>}\n *   Either `list` or `items`.\n */\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n */\n\nimport {splice} from 'micromark-util-chunked'\n/**\n * Tokenize subcontent.\n *\n * @param {Array<Event>} events\n *   List of events.\n * @returns {boolean}\n *   Whether subtokens were found.\n */ // eslint-disable-next-line complexity\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n  let event\n  /** @type {number | undefined} */\n  let lineIndex\n  /** @type {number} */\n  let otherIndex\n  /** @type {Event} */\n  let otherEvent\n  /** @type {Array<Event>} */\n  let parameters\n  /** @type {Array<Event>} */\n  let subevents\n  /** @type {boolean | undefined} */\n  let more\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n    event = events[index]\n\n    // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    }\n\n    // Enter.\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    }\n    // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start)\n\n        // Switch container exit w/ line endings.\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n  return !more\n}\n\n/**\n * Tokenize embedded tokens.\n *\n * @param {Array<Event>} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {Array<number>} */\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {Array<[number, number]>} */\n  const jumps = []\n  /** @type {Record<string, number>} */\n  const gaps = {}\n  /** @type {Array<Chunk>} */\n  let stream\n  /** @type {Token | undefined} */\n  let previous\n  let index = -1\n  /** @type {Token | undefined} */\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start]\n\n  // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n    startPositions.push(startPosition)\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n      if (!current.next) {\n        stream.push(null)\n      }\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n      tokenizer.write(stream)\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    }\n\n    // Unravel the next token.\n    previous = current\n    current = current.next\n  }\n\n  // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n  current = token\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start)\n      // Help GC.\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = []\n\n  // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  }\n\n  // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n  index = breaks.length\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n  index = -1\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Handles} Handles\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine multiple syntax extensions into one.\n *\n * @param {Array<Extension>} extensions\n *   List of syntax extensions.\n * @returns {NormalizedExtension}\n *   A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all\n *   Extension to merge into.\n * @param {Extension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {keyof Extension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    /** @type {Record<string, unknown>} */\n    const left = maybe || (all[hook] = {})\n    /** @type {Record<string, unknown> | undefined} */\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    if (right) {\n      for (code in right) {\n        if (!hasOwnProperty.call(left, code)) left[code] = []\n        const value = right[code]\n        constructs(\n          // @ts-expect-error Looks like a list.\n          left[code],\n          Array.isArray(value) ? value : value ? [value] : []\n        )\n      }\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {Array<unknown>} existing\n * @param {Array<unknown>} list\n * @returns {undefined}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {Array<unknown>} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine multiple HTML extensions into one.\n *\n * @param {Array<HtmlExtension>} htmlExtensions\n *   List of HTML extensions.\n * @returns {HtmlExtension}\n *   A single combined HTML extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all\n *   Extension to merge into.\n * @param {HtmlExtension} extension\n *   Extension to merge.\n * @returns {undefined}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {keyof HtmlExtension} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {keyof Handles} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        // @ts-expect-error assume document vs regular handler are managed correctly.\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlpha = regexCheck(/[A-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/);\n\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/);\n\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  );\n}\n\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiDigit = regexCheck(/\\d/);\n\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/);\n\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n *\n * @param code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/);\n\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2;\n}\n\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32);\n}\n\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n *   Code.\n * @returns {boolean}\n *   Whether it matches.\n */\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32;\n}\n\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodePunctuation = regexCheck(/\\p{P}|\\p{S}/u);\n\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n *\n * @param code\n *   Code.\n * @returns\n *   Whether it matches.\n */\nexport const unicodeWhitespace = regexCheck(/\\s/);\n\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => boolean}\n */\nfunction regexCheck(regex) {\n  return check;\n\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code\n   *   Character code.\n   * @returns {boolean}\n   *   Whether the character code matches the bound regex.\n   */\n  function check(code) {\n    return code !== null && code > -1 && regex.test(String.fromCharCode(code));\n  }\n}","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownSpace} from 'micromark-util-character'\n\n// To do: implement `spaceOrTab`, `spaceOrTabMinMax`, `spaceOrTabWithOptions`.\n\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   spaces in markdown are often optional, in which case this factory can be\n *     used and `ok` will be switched to whether spaces were found or not\n * *   one line ending or space can be detected with `markdownSpace(code)` right\n *     before using `factorySpace`\n *\n * ###### Examples\n *\n * Where `␉` represents a tab (plus how much it expands) and `␠` represents a\n * single space.\n *\n * ```markdown\n * ␉\n * ␠␠␠␠\n * ␉␠\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {TokenType} type\n *   Type (`' \\t'`).\n * @param {number | undefined} [max=Infinity]\n *   Max (exclusive).\n * @returns {State}\n *   Start state.\n */\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n    return ok(code)\n  }\n\n  /** @type {State} */\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n  let previous\n  return contentStart\n\n  /** @type {State} */\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  /** @type {State} */\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  /** @type {State} */\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n    if (previous) {\n      previous.next = token\n    }\n    previous = token\n    return data(code)\n  }\n\n  /** @type {State} */\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    }\n\n    // Data.\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[Construct, ContainerState]} StackItem\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\nexport const document = {\n  tokenize: initializeDocument\n}\n\n/** @type {Construct} */\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext | undefined} */\n  let childFlow\n  /** @type {Token | undefined} */\n  let childToken\n  /** @type {number} */\n  let lineStartOffset\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    }\n\n    // Done.\n    return checkNewContainers(code)\n  }\n\n  /** @type {State} */\n  function documentContinue(code) {\n    continued++\n\n    // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n      if (childFlow) {\n        closeFlow()\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the flow chunk.\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      let index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n    return start(code)\n  }\n\n  /** @type {State} */\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      }\n\n      // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      }\n\n      // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n      // To do: next major: remove `_gfmTableDynamicInterruptHack` (no longer\n      // needed in micromark-extension-gfm-table@1.0.6).\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    }\n\n    // Check if there is a new container.\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n\n  /** @type {State} */\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n\n  /** @type {State} */\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  /** @type {State} */\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState])\n    // Try another.\n    return documentContinued(code)\n  }\n\n  /** @type {State} */\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  /** @type {State} */\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow'))\n      // Get ready for the next line.\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n    effects.consume(code)\n    return flowContinue\n  }\n\n  /**\n   * @param {Token} token\n   * @param {boolean | undefined} [eof]\n   * @returns {undefined}\n   */\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream)\n\n    // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset &&\n          // …and either is not ended yet…\n          (!childFlow.events[index][1].end ||\n            // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      }\n\n      // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean | undefined} */\n      let seen\n      /** @type {Point | undefined} */\n      let point\n\n      // Find the previous chunk (the one before the lazy line).\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n          seen = true\n        }\n      }\n      exitContainers(continued)\n\n      // Fix positions.\n      index = indexBeforeExits\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      }\n\n      // Inject the exits earlier (they’re still also at the end).\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      )\n\n      // Discard the duplicate exits.\n      self.events.length = index\n    }\n  }\n\n  /**\n   * @param {number} size\n   * @returns {undefined}\n   */\n  function exitContainers(size) {\n    let index = stack.length\n\n    // Exit open containers.\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n    stack.length = size\n  }\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContainer(effects, ok, nok) {\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of blank line.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *     ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'linePrefix')(code)\n      : after(code)\n  }\n\n  /**\n   * At eof/eol, after optional whitespace.\n   *\n   * > 👉 **Note**: `␠` represents a space character.\n   *\n   * ```markdown\n   * > | ␠␠␊\n   *       ^\n   * > | ␊\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n\n/** @type {Construct} */\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token | undefined} */\n  let previous\n  return chunkStart\n\n  /**\n   * Before a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkStart(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return chunkInside(code)\n  }\n\n  /**\n   * In a content chunk.\n   *\n   * ```markdown\n   * > | abc\n   *     ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function chunkInside(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    // To do: in `markdown-rs`, each line is parsed on its own, and everything\n    // is stitched together resolving.\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    }\n\n    // Data.\n    effects.consume(code)\n    return chunkInside\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return chunkInside\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    // Always populated by defaults.\n\n    const tail = self.events[self.events.length - 1]\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Initializer}\n */\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding,\n    // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  /** @type {State} */\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  /** @type {State} */\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n\n/**\n * @param {'string' | 'text'} field\n * @returns {InitialConstruct}\n */\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Initializer}\n   */\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    /** @type {State} */\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    /** @type {State} */\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      }\n\n      // Data.\n      effects.consume(code)\n      return data\n    }\n\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n      const list = constructs[code]\n      let index = -1\n      if (list) {\n        // Always populated by defaults.\n\n        while (++index < list.length) {\n          const item = list[index]\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n      return false\n    }\n  }\n}\n\n/**\n * @param {Resolver | undefined} [extraResolver]\n * @returns {Resolver}\n */\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  /** @type {Resolver} */\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number | undefined} */\n    let enter\n\n    // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n        enter = undefined\n      }\n    }\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean | undefined} */\n      let tabs\n      while (index--) {\n        const chunk = chunks[index]\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n          if (bufferIndex) break\n          bufferIndex = -1\n        }\n        // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n      eventIndex++\n    }\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {Array<{resolveAll?: Resolver | undefined}>} constructs\n *   List of constructs, optionally with `resolveAll`s.\n * @param {Array<Event>} events\n *   List of events.\n * @param {TokenizeContext} context\n *   Context used by `tokenize`.\n * @returns {Array<Event>}\n *   Changed events.\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Array<Resolver>} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenType} TokenType\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n */\n\n/**\n * @callback Restore\n * @returns {undefined}\n *\n * @typedef Info\n * @property {Restore} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {undefined}\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_bufferIndex' | '_index'> | undefined} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n  let chunks = []\n  /** @type {Array<Token>} */\n  let stack = []\n  /** @type {boolean | undefined} */\n  let consumed = true\n\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n\n  /**\n   * The state function.\n   *\n   * @type {State | undefined}\n   */\n  let state = initialize.tokenize.call(context, effects)\n\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n  let expectedCode\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n  return context\n\n  /** @type {TokenizeContext['write']} */\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main()\n\n    // Exit if we’re not done, resolve might change stuff.\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n    addResult(initialize, 0)\n\n    // Otherwise, resolve, and exit.\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  }\n\n  //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n\n  /** @type {TokenizeContext['sliceStream']} */\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  /** @type {TokenizeContext['now']} */\n  function now() {\n    // This is a hot path, so we clone manually instead of `Object.assign({}, point)`\n    const {line, column, offset, _index, _bufferIndex} = point\n    return {\n      line,\n      column,\n      offset,\n      _index,\n      _bufferIndex\n    }\n  }\n\n  /** @type {TokenizeContext['defineSkip']} */\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  }\n\n  //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {undefined}\n   */\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index]\n\n      // If we’re in a buffer chunk, loop through it.\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {undefined}\n   */\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n\n  /** @type {Effects['consume']} */\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    }\n\n    // Not in a string chunk.\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++\n\n      // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    }\n\n    // Expose the previous character.\n    context.previous = code\n\n    // Mark as consumed.\n    consumed = true\n  }\n\n  /** @type {Effects['enter']} */\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n\n  /** @type {Effects['exit']} */\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {{interrupt?: boolean | undefined} | undefined} [fields]\n   */\n  function constructFactory(onreturn, fields) {\n    return hook\n\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Array<Construct> | Construct | ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State | undefined} [bogusState]\n     * @returns {State}\n     */\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n      let constructIndex\n      /** @type {Construct} */\n      let currentConstruct\n      /** @type {Info} */\n      let info\n      return Array.isArray(constructs) /* c8 ignore next 1 */\n        ? handleListOfConstructs(constructs)\n        : 'tokenize' in constructs\n        ? // @ts-expect-error Looks like a construct.\n          handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n      function handleMapOfConstructs(map) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        if (list.length === 0) {\n          return bogusState\n        }\n        return handleConstruct(list[constructIndex])\n      }\n\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n      function handleConstruct(construct) {\n        return start\n\n        /** @type {State} */\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          // Always populated by defaults.\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      /** @type {State} */\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      /** @type {State} */\n      function nok(code) {\n        consumed = true\n        info.restore()\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n        return bogusState\n      }\n    }\n  }\n\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {undefined}\n   */\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n\n    /**\n     * Restore state.\n     *\n     * @returns {undefined}\n     */\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {undefined}\n   */\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'end' | 'start'>} token\n * @returns {Array<Chunk>}\n */\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n  let view\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n    if (startBufferIndex > -1) {\n      const head = view[0]\n      if (typeof head === 'string') {\n        view[0] = head.slice(startBufferIndex)\n      } else {\n        view.shift()\n      }\n    }\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n  return view\n}\n\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean | undefined} [expandTabs=false]\n * @returns {string}\n */\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {boolean | undefined} */\n  let atTab\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n    let value\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n        case -4: {\n          value = '\\n'\n          break\n        }\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n    atTab = chunk === -2\n    result.push(value)\n  }\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of thematic break.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('thematicBreak')\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at marker.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    marker = code\n    return atBreak(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n    if (size >= 3 && (code === null || markdownLineEnding(code))) {\n      effects.exit('thematicBreak')\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   * > | ***\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n    effects.exit('thematicBreakSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, atBreak, 'whitespace')(code)\n      : atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').ContainerState} ContainerState\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/** @type {Construct} */\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n\n/** @type {Construct} */\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n\n/** @type {Construct} */\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: `markdown-rs` parses list items on their own and later stitches them\n// together.\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   **/\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine,\n      // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  /** @type {State} */\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n    return nok(code)\n  }\n\n  /** @type {State} */\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n\n  /** @type {State} */\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine\n\n    // We have a blank line.\n    // Still, try to consume at most the items size.\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  /** @type {State} */\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  /** @type {State} */\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true\n    // As we’re closing flow, we’re no longer interrupting.\n    self.interrupt = undefined\n    // Always populated by defaults.\n\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\n/**\n * @type {Exiter}\n * @this {TokenizeContext}\n */\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\n/**\n * @type {Tokenizer}\n * @this {TokenizeContext}\n */\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n\n  // Always populated by defaults.\n\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n\n  /** @type {State} */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of block quote.\n   *\n   * ```markdown\n   * > | > a\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>`, before optional whitespace.\n   *\n   * ```markdown\n   * > | > a\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\n/**\n * Start of block quote continuation.\n *\n * ```markdown\n *   | > a\n * > | > b\n *     ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  const self = this\n  return contStart\n\n  /**\n   * Start of block quote continuation.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contStart(code) {\n    if (markdownSpace(code)) {\n      // Always populated by defaults.\n\n      return factorySpace(\n        effects,\n        contBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return contBefore(code)\n  }\n\n  /**\n   * At `>`, after optional whitespace.\n   *\n   * Also used to parse the first block quote opening.\n   *\n   * ```markdown\n   *   | > a\n   * > | > b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function contBefore(code) {\n    return effects.attempt(blockQuote, ok, nok)(code)\n  }\n}\n\n/** @type {Exiter} */\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n/**\n * Parse destinations.\n *\n * ###### Examples\n *\n * ```markdown\n * <a>\n * <a\\>b>\n * <a b>\n * <a)>\n * a\n * a\\)b\n * a(b)c\n * a(b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type for whole (`<a>` or `b`).\n * @param {TokenType} literalType\n *   Type when enclosed (`<a>`).\n * @param {TokenType} literalMarkerType\n *   Type for enclosing (`<` and `>`).\n * @param {TokenType} rawType\n *   Type when not enclosed (`b`).\n * @param {TokenType} stringType\n *   Type for the value (`a` or `b`).\n * @param {number | undefined} [max=Infinity]\n *   Depth of nested parens (inclusive).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n\n  /**\n   * Start of destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *     ^\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return enclosedBefore\n    }\n\n    // ASCII control, space, closing paren.\n    if (code === null || code === 32 || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return raw(code)\n  }\n\n  /**\n   * After `<`, at an enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return enclosed(code)\n  }\n\n  /**\n   * In enclosed destination.\n   *\n   * ```markdown\n   * > | <aa>\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return enclosedBefore(code)\n    }\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? enclosedEscape : enclosed\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | <a\\*a>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function enclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return enclosed\n    }\n    return enclosed(code)\n  }\n\n  /**\n   * In raw destination.\n   *\n   * ```markdown\n   * > | aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function raw(code) {\n    if (\n      !balance &&\n      (code === null || code === 41 || markdownLineEndingOrSpace(code))\n    ) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n    if (balance < limit && code === 40) {\n      effects.consume(code)\n      balance++\n      return raw\n    }\n    if (code === 41) {\n      effects.consume(code)\n      balance--\n      return raw\n    }\n\n    // ASCII control (but *not* `\\0`) and space and `(`.\n    // Note: in `markdown-rs`, `\\0` exists in codes, in `micromark-js` it\n    // doesn’t.\n    if (code === null || code === 32 || code === 40 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return code === 92 ? rawEscape : raw\n  }\n\n  /**\n   * After `\\`, at special character.\n   *\n   * ```markdown\n   * > | a\\*a\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function rawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return raw\n    }\n    return raw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse labels.\n *\n * > 👉 **Note**: labels in markdown are capped at 999 characters in the string.\n *\n * ###### Examples\n *\n * ```markdown\n * [a]\n * [a\n * b]\n * [a\\]b]\n * ```\n *\n * @this {TokenizeContext}\n *   Tokenize context.\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole label (`[a]`).\n * @param {TokenType} markerType\n *   Type for the markers (`[` and `]`).\n * @param {TokenType} stringType\n *   Type for the identifier (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /**\n   * Start of label.\n   *\n   * ```markdown\n   * > | [a]\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  /**\n   * In label, at something, before something else.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (\n      size > 999 ||\n      code === null ||\n      code === 91 ||\n      (code === 93 && !seen) ||\n      // To do: remove in the future once we’ve switched from\n      // `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n      // which doesn’t need this.\n      // Hidden footnotes hook.\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    // To do: indent? Link chunks and EOLs together?\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return labelInside(code)\n  }\n\n  /**\n   * In label, in text.\n   *\n   * ```markdown\n   * > | [a]\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    if (!seen) seen = !markdownSpace(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | [a\\*a]\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenType} TokenType\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/**\n * Parse titles.\n *\n * ###### Examples\n *\n * ```markdown\n * \"a\"\n * 'b'\n * (c)\n * \"a\n * b\"\n * 'a\n *     b'\n * (a\\)b)\n * ```\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @param {State} nok\n *   State switched to when unsuccessful.\n * @param {TokenType} type\n *   Type of the whole title (`\"a\"`, `'b'`, `(c)`).\n * @param {TokenType} markerType\n *   Type for the markers (`\"`, `'`, `(`, and `)`).\n * @param {TokenType} stringType\n *   Type for the value (`a`).\n * @returns {State}\n *   Start state.\n */ // eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of title.\n   *\n   * ```markdown\n   * > | \"a\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      effects.enter(type)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      marker = code === 40 ? 41 : code\n      return begin\n    }\n    return nok(code)\n  }\n\n  /**\n   * After opening marker.\n   *\n   * This is also used at the closing marker.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function begin(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n    effects.enter(stringType)\n    return atBreak(code)\n  }\n\n  /**\n   * At something, before something else.\n   *\n   * ```markdown\n   * > | \"a\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return begin(marker)\n    }\n    if (code === null) {\n      return nok(code)\n    }\n\n    // Note: blank lines can’t exist in content.\n    if (markdownLineEnding(code)) {\n      // To do: use `space_or_tab_eol_with_options`, connect.\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atBreak, 'linePrefix')\n    }\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return inside(code)\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? escape : inside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * ```markdown\n   * > | \"a\\*b\"\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function escape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return inside\n    }\n    return inside(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/**\n * Parse spaces and tabs.\n *\n * There is no `nok` parameter:\n *\n * *   line endings or spaces in markdown are often optional, in which case this\n *     factory can be used and `ok` will be switched to whether spaces were found\n *     or not\n * *   one line ending or space can be detected with\n *     `markdownLineEndingOrSpace(code)` right before using `factoryWhitespace`\n *\n * @param {Effects} effects\n *   Context.\n * @param {State} ok\n *   State switched to when successful.\n * @returns {State}\n *   Start state.\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (as found in references, definitions).\n *\n * Collapses markdown whitespace, trim, and then lower- and uppercase.\n *\n * Some characters are considered “uppercase”, such as U+03F4 (`ϴ`), but if their\n * lowercase counterpart (U+03B8 (`θ`)) is uppercased will result in a different\n * uppercase character (U+0398 (`Θ`)).\n * So, to get a canonical form, we perform both lower- and uppercase.\n *\n * Using uppercase last makes sure keys will never interact with default\n * prototypal values (such as `constructor`): nothing in the prototype of\n * `Object` is uppercase.\n *\n * @param {string} value\n *   Identifier to normalize.\n * @returns {string}\n *   Normalized identifier.\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value\n      // Collapse markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ')\n      // Trim.\n      .replace(/^ | $/g, '')\n      // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n\n/** @type {Construct} */\nconst titleBefore = {\n  tokenize: tokenizeTitleBefore,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n  let identifier\n  return start\n\n  /**\n   * At start of a definition.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Do not interrupt paragraphs (but do follow definitions).\n    // To do: do `interrupt` the way `markdown-rs` does.\n    // To do: parse whitespace the way `markdown-rs` does.\n    effects.enter('definition')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `[`.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    // To do: parse whitespace the way `markdown-rs` does.\n\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  /**\n   * After label.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      return markerAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After marker.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function markerAfter(code) {\n    // Note: whitespace is optional.\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, destinationBefore)(code)\n      : destinationBefore(code)\n  }\n\n  /**\n   * Before destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationBefore(code) {\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      // Note: we don’t need to reset the way `markdown-rs` does.\n      nok,\n      'definitionDestination',\n      'definitionDestinationLiteral',\n      'definitionDestinationLiteralMarker',\n      'definitionDestinationRaw',\n      'definitionDestinationString'\n    )(code)\n  }\n\n  /**\n   * After destination.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function destinationAfter(code) {\n    return effects.attempt(titleBefore, after, after)(code)\n  }\n\n  /**\n   * After definition.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, afterWhitespace, 'whitespace')(code)\n      : afterWhitespace(code)\n  }\n\n  /**\n   * After definition, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterWhitespace(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      // Note: we don’t care about uniqueness.\n      // It’s likely that that doesn’t happen very frequently.\n      // It is more likely that it wastes precious time.\n      self.parser.defined.push(identifier)\n\n      // To do: `markdown-rs` interrupt.\n      // // You’d be interrupting.\n      // tokenizer.interrupt = true\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTitleBefore(effects, ok, nok) {\n  return titleBefore\n\n  /**\n   * After destination, at whitespace.\n   *\n   * ```markdown\n   * > | [a]: b\n   *           ^\n   * > | [a]: b \"c\"\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, beforeMarker)(code)\n      : nok(code)\n  }\n\n  /**\n   * At title.\n   *\n   * ```markdown\n   *   | [a]: b\n   * > | \"c\"\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeMarker(code) {\n    return factoryTitle(\n      effects,\n      titleAfter,\n      nok,\n      'definitionTitle',\n      'definitionTitleMarker',\n      'definitionTitleString'\n    )(code)\n  }\n\n  /**\n   * After title.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfter(code) {\n    return markdownSpace(code)\n      ? factorySpace(effects, titleAfterOptionalWhitespace, 'whitespace')(code)\n      : titleAfterOptionalWhitespace(code)\n  }\n\n  /**\n   * After title, after optional whitespace.\n   *\n   * ```markdown\n   * > | [a]: b \"c\"\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function titleAfterOptionalWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n\n/** @type {Construct} */\nconst furtherStart = {\n  tokenize: tokenizeFurtherStart,\n  partial: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of code (indented).\n   *\n   * > **Parsing note**: it is not needed to check if this first line is a\n   * > filled line (that it has a non-whitespace character), because blank lines\n   * > are parsed already, so we never run into that.\n   *\n   * ```markdown\n   * > |     aaa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: manually check if interrupting like `markdown-rs`.\n\n    effects.enter('codeIndented')\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? atBreak(code)\n      : nok(code)\n  }\n\n  /**\n   * At a break.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === null) {\n      return after(code)\n    }\n    if (markdownLineEnding(code)) {\n      return effects.attempt(furtherStart, atBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return inside(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return inside\n  }\n\n  /** @type {State} */\n  function after(code) {\n    effects.exit('codeIndented')\n    // To do: allow interrupting like `markdown-rs`.\n    // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeFurtherStart(effects, ok, nok) {\n  const self = this\n  return furtherStart\n\n  /**\n   * At eol, trying to parse another indent.\n   *\n   * ```markdown\n   * > |     aaa\n   *            ^\n   *   |     bbb\n   * ```\n   *\n   * @type {State}\n   */\n  function furtherStart(code) {\n    // To do: improve `lazy` / `pierce` handling.\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return furtherStart\n    }\n\n    // To do: the code here in `micromark-js` is a bit different from\n    // `markdown-rs` because there it can attempt spaces.\n    // We can’t yet.\n    //\n    // To do: use an improved `space_or_tab` function like `markdown-rs`,\n    // so that we can drop the next state.\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n\n  /**\n   * At start, after 1 or 4 spaces.\n   *\n   * ```markdown\n   * > |     aaa\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? furtherStart(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\n/** @type {Resolver} */\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n  let content\n  /** @type {Token} */\n  let text\n\n  // Prefix whitespace, part of the opening.\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  }\n\n  // Suffix whitespace, part of the closing.\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of a heading (atx).\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    effects.enter('atxHeading')\n    return before(code)\n  }\n\n  /**\n   * After optional whitespace, at `#`.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('atxHeadingSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | ## aa\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return sequenceOpen\n    }\n\n    // Always at least one `#`.\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return atBreak(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After something, before something else.\n   *\n   * ```markdown\n   * > | ## aa\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequenceFurther(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      // To do: interrupt like `markdown-rs`.\n      // // Feel free to interrupt.\n      // tokenizer.interrupt = false\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    // To do: generate `data` tokens, add the `text` token later.\n    // Needs edit map, see: `markdown.rs`.\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  /**\n   * In further sequence (after whitespace).\n   *\n   * Could be normal “visible” hashes in the heading or a final sequence.\n   *\n   * ```markdown\n   * > | ## aa ##\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceFurther(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequenceFurther\n    }\n    effects.exit('atxHeadingSequence')\n    return atBreak(code)\n  }\n\n  /**\n   * In text.\n   *\n   * ```markdown\n   * > | ## aa\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return atBreak(code)\n    }\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\n/** @type {Resolver} */\nfunction resolveToSetextUnderline(events, context) {\n  // To do: resolve like `markdown-rs`.\n  let index = events.length\n  /** @type {number | undefined} */\n  let content\n  /** @type {number | undefined} */\n  let text\n  /** @type {number | undefined} */\n  let definition\n\n  // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    }\n    // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n\n  // Change the paragraph to setext heading text.\n  events[text][1].type = 'setextHeadingText'\n\n  // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  }\n\n  // Add the heading exit at the end.\n  events.push(['exit', heading, context])\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * At start of heading (setext) underline.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length\n    /** @type {boolean | undefined} */\n    let paragraph\n    // Find an opening.\n    while (index--) {\n      // Skip enter/exit of line ending, line prefix, and content.\n      // We can now either have a definition or a paragraph.\n      if (\n        self.events[index][1].type !== 'lineEnding' &&\n        self.events[index][1].type !== 'linePrefix' &&\n        self.events[index][1].type !== 'content'\n      ) {\n        paragraph = self.events[index][1].type === 'paragraph'\n        break\n      }\n    }\n\n    // To do: handle lazy/pierce like `markdown-rs`.\n    // To do: parse indent like `markdown-rs`.\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      marker = code\n      return before(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * After optional whitespace, at `-` or `=`.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('setextHeadingLineSequence')\n    return inside(code)\n  }\n\n  /**\n   * In sequence.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    effects.exit('setextHeadingLineSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, after, 'lineSuffix')(code)\n      : after(code)\n  }\n\n  /**\n   * After sequence, after optional whitespace.\n   *\n   * ```markdown\n   *   | aa\n   * > | ==\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML “block” tag names.\n *\n * The list, when parsing HTML (flow), results in more relaxed rules (condition\n * 6).\n * Because they are known blocks, the HTML-like syntax doesn’t have to be\n * strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `search` was added in `CommonMark@0.31`.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'search',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML “raw” tag names.\n *\n * The list, when parsing HTML (flow), results in HTML that can include lines\n * without exiting, until a closing tag also in this list is found (condition\n * 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * > 👉 **Note**: `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n\n/** @type {Construct} */\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n\n/** @type {Construct} */\nconst blankLineBefore = {\n  tokenize: tokenizeBlankLineBefore,\n  partial: true\n}\nconst nonLazyContinuationStart = {\n  tokenize: tokenizeNonLazyContinuationStart,\n  partial: true\n}\n\n/** @type {Resolver} */\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start\n    // Add the prefix start to the HTML line token.\n    events[index + 1][1].start = events[index - 2][1].start\n    // Remove the line prefix.\n    events.splice(index - 2, 2)\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n  let marker\n  /** @type {boolean} */\n  let closingTag\n  /** @type {string} */\n  let buffer\n  /** @type {number} */\n  let index\n  /** @type {Code} */\n  let markerB\n  return start\n\n  /**\n   * Start of HTML (flow).\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse indent like `markdown-rs`.\n    return before(code)\n  }\n\n  /**\n   * At `<`, after optional whitespace.\n   *\n   * ```markdown\n   * > | <x />\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function before(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | <x />\n   *      ^\n   * > | <!doctype>\n   *      ^\n   * > | <!--xxx-->\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      closingTag = true\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      marker = 3\n      // To do:\n      // tokenizer.concrete = true\n      // To do: use `markdown-rs` style interrupt.\n      // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *       ^\n   * > | <!--xxx-->\n   *       ^\n   * > | <![CDATA[>&<]]>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      marker = 2\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      marker = 5\n      index = 0\n      return cdataOpenInside\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      marker = 4\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!-`, inside a comment, at another `-`.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<![`, inside CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *        ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      if (index === value.length) {\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok : continuation\n      }\n      return cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | </x>\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * In tag name.\n   *\n   * ```markdown\n   * > | <ab>\n   *      ^^\n   * > | </ab>\n   *       ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      const slash = code === 47\n      const name = buffer.toLowerCase()\n      if (!slash && !closingTag && htmlRawNames.includes(name)) {\n        marker = 1\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        marker = 6\n        if (slash) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        // // Do not form containers.\n        // tokenizer.concrete = true\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n      marker = 7\n      // Do not support complete HTML when interrupting.\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : closingTag\n        ? completeClosingTagAfter(code)\n        : completeAttributeNameBefore(code)\n    }\n\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a basic tag name.\n   *\n   * ```markdown\n   * > | <div/>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return self.interrupt ? ok : continuation\n    }\n    return nok(code)\n  }\n\n  /**\n   * After closing slash of a complete tag name.\n   *\n   * ```markdown\n   * > | <x/>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * At an attribute name.\n   *\n   * At first, this state is used after a complete tag name, after whitespace,\n   * where it expects optional attributes or the end of the tag.\n   * It is also reused after attributes, when expecting more optional\n   * attributes.\n   *\n   * ```markdown\n   * > | <a />\n   *        ^\n   * > | <a :b>\n   *        ^\n   * > | <a _b>\n   *        ^\n   * > | <a b>\n   *        ^\n   * > | <a >\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    // ASCII alphanumerical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n    return completeEnd(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | <a :b>\n   *         ^\n   * > | <a _b>\n   *         ^\n   * > | <a b>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeName(code) {\n    // ASCII alphanumerical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n    return completeAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, at an optional initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b>\n   *         ^\n   * > | <a b=c>\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n    return completeAttributeNameBefore(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * > | <a b=\"c\">\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      markerB = code\n      return completeAttributeValueQuoted\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n    return completeAttributeValueUnquoted(code)\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *           ^\n   * > | <a b='c'>\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuoted(code) {\n    if (code === markerB) {\n      effects.consume(code)\n      markerB = null\n      return completeAttributeValueQuotedAfter\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | <a b=c>\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 47 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the\n   * end of the tag.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a complete tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | <a b=\"c\">\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `>` in a complete tag.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function completeAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      // // Do not form containers.\n      // tokenizer.concrete = true\n      return continuation(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * In continuation of any HTML kind.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuation(code) {\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n    if (code === 60 && marker === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n    if (code === 62 && marker === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n    if (code === 63 && marker === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    if (code === 93 && marker === 5) {\n      effects.consume(code)\n      return continuationCdataInside\n    }\n    if (markdownLineEnding(code) && (marker === 6 || marker === 7)) {\n      effects.exit('htmlFlowData')\n      return effects.check(\n        blankLineBefore,\n        continuationAfter,\n        continuationStart\n      )(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationStart(code)\n    }\n    effects.consume(code)\n    return continuation\n  }\n\n  /**\n   * In continuation, at eol.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStart(code) {\n    return effects.check(\n      nonLazyContinuationStart,\n      continuationStartNonLazy,\n      continuationAfter\n    )(code)\n  }\n\n  /**\n   * In continuation, at eol, before non-lazy content.\n   *\n   * ```markdown\n   * > | <x>\n   *        ^\n   *   | asd\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationStartNonLazy(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return continuationBefore\n  }\n\n  /**\n   * In continuation, before non-lazy content.\n   *\n   * ```markdown\n   *   | <x>\n   * > | asd\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return continuationStart(code)\n    }\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  /**\n   * In comment continuation, after one `-`, expecting another.\n   *\n   * ```markdown\n   * > | <!--xxx-->\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `<`, at `/`.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In raw continuation, after `</`, in a raw tag name.\n   *\n   * ```markdown\n   * > | <script>console.log(1)</script>\n   *                             ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationRawEndTag(code) {\n    if (code === 62) {\n      const name = buffer.toLowerCase()\n      if (htmlRawNames.includes(name)) {\n        effects.consume(code)\n        return continuationClose\n      }\n      return continuation(code)\n    }\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      // @ts-expect-error: not null.\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In cdata continuation, after `]`, expecting `]>`.\n   *\n   * ```markdown\n   * > | <![CDATA[>&<]]>\n   *                  ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationCdataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In declaration or instruction continuation, at `>`.\n   *\n   * ```markdown\n   * > | <!-->\n   *         ^\n   * > | <?>\n   *       ^\n   * > | <!q>\n   *        ^\n   * > | <!--ab-->\n   *             ^\n   * > | <![CDATA[>&<]]>\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    // More dashes.\n    if (code === 45 && marker === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n    return continuation(code)\n  }\n\n  /**\n   * In closed continuation: everything we get until the eol/eof is part of it.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return continuationAfter(code)\n    }\n    effects.consume(code)\n    return continuationClose\n  }\n\n  /**\n   * Done.\n   *\n   * ```markdown\n   * > | <!doctype>\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function continuationAfter(code) {\n    effects.exit('htmlFlow')\n    // // Feel free to interrupt.\n    // tokenizer.interrupt = false\n    // // No longer concrete.\n    // tokenizer.concrete = false\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuationStart(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * At eol, before continuation.\n   *\n   * ```markdown\n   * > | * ```js\n   *            ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * A continuation.\n   *\n   * ```markdown\n   *   | * ```js\n   * > | b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeBlankLineBefore(effects, ok, nok) {\n  return start\n\n  /**\n   * Before eol, expecting blank line.\n   *\n   * ```markdown\n   * > | <div>\n   *          ^\n   *   |\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n/** @type {Construct} */\nconst nonLazyContinuation = {\n  tokenize: tokenizeNonLazyContinuation,\n  partial: true\n}\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n  const closeStart = {\n    tokenize: tokenizeCloseStart,\n    partial: true\n  }\n  let initialPrefix = 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Start of code.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // To do: parse whitespace like `markdown-rs`.\n    return beforeSequenceOpen(code)\n  }\n\n  /**\n   * In opening fence, after prefix, at sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *     ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeSequenceOpen(code) {\n    const tail = self.events[self.events.length - 1]\n    initialPrefix =\n      tail && tail[1].type === 'linePrefix'\n        ? tail[2].sliceSerialize(tail[1], true).length\n        : 0\n    marker = code\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening fence sequence.\n   *\n   * ```markdown\n   * > | ~~~js\n   *      ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === marker) {\n      sizeOpen++\n      effects.consume(code)\n      return sequenceOpen\n    }\n    if (sizeOpen < 3) {\n      return nok(code)\n    }\n    effects.exit('codeFencedFenceSequence')\n    return markdownSpace(code)\n      ? factorySpace(effects, infoBefore, 'whitespace')(code)\n      : infoBefore(code)\n  }\n\n  /**\n   * In opening fence, after the sequence (and optional whitespace), before info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function infoBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFencedFence')\n      return self.interrupt\n        ? ok(code)\n        : effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  /**\n   * In info.\n   *\n   * ```markdown\n   * > | ~~~js\n   *        ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function info(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return infoBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, metaBefore, 'whitespace')(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return info\n  }\n\n  /**\n   * In opening fence, after info and whitespace, before meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function metaBefore(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return infoBefore(code)\n    }\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  /**\n   * In meta.\n   *\n   * ```markdown\n   * > | ~~~js eval\n   *           ^\n   *   | alert(1)\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return infoBefore(code)\n    }\n    if (code === 96 && code === marker) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return meta\n  }\n\n  /**\n   * At eol/eof in code, before a non-lazy closing fence or content.\n   *\n   * ```markdown\n   * > | ~~~js\n   *          ^\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function atNonLazyBreak(code) {\n    return effects.attempt(closeStart, after, contentBefore)(code)\n  }\n\n  /**\n   * Before code content, not a closing fence, at eol.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *             ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentBefore(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return contentStart\n  }\n\n  /**\n   * Before code content, not a closing fence.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentStart(code) {\n    return initialPrefix > 0 && markdownSpace(code)\n      ? factorySpace(\n          effects,\n          beforeContentChunk,\n          'linePrefix',\n          initialPrefix + 1\n        )(code)\n      : beforeContentChunk(code)\n  }\n\n  /**\n   * Before code content, after optional prefix.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function beforeContentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return effects.check(nonLazyContinuation, atNonLazyBreak, after)(code)\n    }\n    effects.enter('codeFlowValue')\n    return contentChunk(code)\n  }\n\n  /**\n   * In code content.\n   *\n   * ```markdown\n   *   | ~~~js\n   * > | alert(1)\n   *     ^^^^^^^^\n   *   | ~~~\n   * ```\n   *\n   * @type {State}\n   */\n  function contentChunk(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return beforeContentChunk(code)\n    }\n    effects.consume(code)\n    return contentChunk\n  }\n\n  /**\n   * After code.\n   *\n   * ```markdown\n   *   | ~~~js\n   *   | alert(1)\n   * > | ~~~\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeCloseStart(effects, ok, nok) {\n    let size = 0\n    return startBefore\n\n    /**\n     *\n     *\n     * @type {State}\n     */\n    function startBefore(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    /**\n     * Before closing fence, at optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function start(code) {\n      // Always populated by defaults.\n\n      // To do: `enter` here or in next state?\n      effects.enter('codeFencedFence')\n      return markdownSpace(code)\n        ? factorySpace(\n            effects,\n            beforeSequenceClose,\n            'linePrefix',\n            self.parser.constructs.disable.null.includes('codeIndented')\n              ? undefined\n              : 4\n          )(code)\n        : beforeSequenceClose(code)\n    }\n\n    /**\n     * In closing fence, after optional whitespace, at sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function beforeSequenceClose(code) {\n      if (code === marker) {\n        effects.enter('codeFencedFenceSequence')\n        return sequenceClose(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * In closing fence sequence.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *     ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceClose(code) {\n      if (code === marker) {\n        size++\n        effects.consume(code)\n        return sequenceClose\n      }\n      if (size >= sizeOpen) {\n        effects.exit('codeFencedFenceSequence')\n        return markdownSpace(code)\n          ? factorySpace(effects, sequenceCloseAfter, 'whitespace')(code)\n          : sequenceCloseAfter(code)\n      }\n      return nok(code)\n    }\n\n    /**\n     * After closing fence sequence, after optional whitespace.\n     *\n     * ```markdown\n     *   | ~~~js\n     *   | alert(1)\n     * > | ~~~\n     *        ^\n     * ```\n     *\n     * @type {State}\n     */\n    function sequenceCloseAfter(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n      return nok(code)\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeNonLazyContinuation(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineStart\n  }\n\n  /**\n   *\n   *\n   * @type {State}\n   */\n  function lineStart(code) {\n    return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n  let max\n  /** @type {(code: Code) => boolean} */\n  let test\n  return start\n\n  /**\n   * Start of character reference.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *      ^\n   * > | a&#123;b\n   *      ^\n   * > | a&#x9;b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  /**\n   * After `&`, at `#` for numeric references or alphanumeric for named\n   * references.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^\n   * > | a&#123;b\n   *       ^\n   * > | a&#x9;b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  /**\n   * After `#`, at `x` for hexadecimals or digit for decimals.\n   *\n   * ```markdown\n   * > | a&#123;b\n   *        ^\n   * > | a&#x9;b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  /**\n   * After markers (`&#x`, `&#`, or `&`), in value, before `;`.\n   *\n   * The character reference kind defines what and how many characters are\n   * allowed.\n   *\n   * ```markdown\n   * > | a&amp;b\n   *       ^^^\n   * > | a&#123;b\n   *        ^^^\n   * > | a&#x9;b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function value(code) {\n    if (code === 59 && size) {\n      const token = effects.exit('characterReferenceValue')\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      // To do: `markdown-rs` uses a different name:\n      // `CharacterReferenceMarkerSemi`.\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {asciiPunctuation} from 'micromark-util-character'\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of character escape.\n   *\n   * ```markdown\n   * > | a\\*b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return inside\n  }\n\n  /**\n   * After `\\`, at punctuation.\n   *\n   * ```markdown\n   * > | a\\*b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // ASCII punctuation.\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  /** @type {State} */\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n\n/** @type {Construct} */\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\nconst referenceFullConstruct = {\n  tokenize: tokenizeReferenceFull\n}\n/** @type {Construct} */\nconst referenceCollapsedConstruct = {\n  tokenize: tokenizeReferenceCollapsed\n}\n\n/** @type {Resolver} */\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  while (++index < events.length) {\n    const token = events[index][1]\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n  return events\n}\n\n/** @type {Resolver} */\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n  let token\n  /** @type {number | undefined} */\n  let open\n  /** @type {number | undefined} */\n  let close\n  /** @type {Array<Event>} */\n  let media\n\n  // Find an opening.\n  while (index--) {\n    token = events[index][1]\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      }\n\n      // Mark other link openings as inactive, as we can’t have links in\n      // links.\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ]\n\n  // Opening marker.\n  media = push(media, events.slice(open + 1, open + offset + 3))\n\n  // Text open.\n  media = push(media, [['enter', text, context]])\n\n  // Always populated by defaults.\n\n  // Between.\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  )\n\n  // Text close, marker close, label close.\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ])\n\n  // Reference, resource, or so.\n  media = push(media, events.slice(close + 1))\n\n  // Media close.\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n  let labelStart\n  /** @type {boolean} */\n  let defined\n\n  // Find an opening.\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n  return start\n\n  /**\n   * Start of label end.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // If there is not an okay opening.\n    if (!labelStart) {\n      return nok(code)\n    }\n\n    // If the corresponding label (link) start is marked as inactive,\n    // it means we’d be wrapping a link, like this:\n    //\n    // ```markdown\n    // > | a [b [c](d) e](f) g.\n    //                  ^\n    // ```\n    //\n    // We can’t have that, so it’s just balanced brackets.\n    if (labelStart._inactive) {\n      return labelEndNok(code)\n    }\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return after\n  }\n\n  /**\n   * After `]`.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *       ^\n   * > | [a][b] c\n   *       ^\n   * > | [a][] b\n   *       ^\n   * > | [a] b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Note: `markdown-rs` also parses GFM footnotes here, which for us is in\n    // an extension.\n\n    // Resource (`[asd](fgh)`)?\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        labelEndOk,\n        defined ? labelEndOk : labelEndNok\n      )(code)\n    }\n\n    // Full (`[asd][fgh]`) or collapsed (`[asd][]`) reference?\n    if (code === 91) {\n      return effects.attempt(\n        referenceFullConstruct,\n        labelEndOk,\n        defined ? referenceNotFull : labelEndNok\n      )(code)\n    }\n\n    // Shortcut (`[asd]`) reference?\n    return defined ? labelEndOk(code) : labelEndNok(code)\n  }\n\n  /**\n   * After `]`, at `[`, but not at a full reference.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] b\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceNotFull(code) {\n    return effects.attempt(\n      referenceCollapsedConstruct,\n      labelEndOk,\n      labelEndNok\n    )(code)\n  }\n\n  /**\n   * Done, we found something.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *           ^\n   * > | [a][b] c\n   *           ^\n   * > | [a][] b\n   *          ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndOk(code) {\n    // Note: `markdown-rs` does a bunch of stuff here.\n    return ok(code)\n  }\n\n  /**\n   * Done, it’s nothing.\n   *\n   * There was an okay opening, but we didn’t match anything.\n   *\n   * ```markdown\n   * > | [a](b c\n   *        ^\n   * > | [a][b c\n   *        ^\n   * > | [a] b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEndNok(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeResource(effects, ok, nok) {\n  return resourceStart\n\n  /**\n   * At a resource.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceStart(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return resourceBefore\n  }\n\n  /**\n   * In resource, after `(`, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBefore(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceOpen)(code)\n      : resourceOpen(code)\n  }\n\n  /**\n   * In resource, after optional whitespace, at `)` or a destination.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceOpen(code) {\n    if (code === 41) {\n      return resourceEnd(code)\n    }\n    return factoryDestination(\n      effects,\n      resourceDestinationAfter,\n      resourceDestinationMissing,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n\n  /**\n   * In resource, after destination, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b) c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceBetween)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * At invalid destination.\n   *\n   * ```markdown\n   * > | [a](<<) b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceDestinationMissing(code) {\n    return nok(code)\n  }\n\n  /**\n   * In resource, after destination and whitespace, at `(` or title.\n   *\n   * ```markdown\n   * > | [a](b ) c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceBetween(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        resourceTitleAfter,\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n    return resourceEnd(code)\n  }\n\n  /**\n   * In resource, after title, at optional whitespace.\n   *\n   * ```markdown\n   * > | [a](b \"c\") d\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceTitleAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, resourceEnd)(code)\n      : resourceEnd(code)\n  }\n\n  /**\n   * In resource, at `)`.\n   *\n   * ```markdown\n   * > | [a](b) d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function resourceEnd(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceFull(effects, ok, nok) {\n  const self = this\n  return referenceFull\n\n  /**\n   * In a reference (full), at the `[`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFull(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      referenceFullAfter,\n      referenceFullMissing,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  /**\n   * In a reference (full), after `]`.\n   *\n   * ```markdown\n   * > | [a][b] d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullAfter(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n\n  /**\n   * In reference (full) that was missing.\n   *\n   * ```markdown\n   * > | [a][b d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceFullMissing(code) {\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeReferenceCollapsed(effects, ok, nok) {\n  return referenceCollapsedStart\n\n  /**\n   * In reference (collapsed), at `[`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function referenceCollapsedStart(code) {\n    // We only attempt a collapsed label if there’s a `[`.\n\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return referenceCollapsedOpen\n  }\n\n  /**\n   * In reference (collapsed), at `]`.\n   *\n   * > 👉 **Note**: we only get here if the label is defined.\n   *\n   * ```markdown\n   * > | [a][] d\n   *         ^\n   * ```\n   *\n   *  @type {State}\n   */\n  function referenceCollapsedOpen(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (image) start.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  /**\n   * After `!`, at `[`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `![`.\n   *\n   * ```markdown\n   * > | a ![b] c\n   *         ^\n   * ```\n   *\n   * This is needed in because, when GFM footnotes are enabled, images never\n   * form when started with a `^`.\n   * Instead, links form:\n   *\n   * ```markdown\n   * ![^a](b)\n   *\n   * ![^a][b]\n   *\n   * [b]: c\n   * ```\n   *\n   * ```html\n   * <p>!<a href=\\\"b\\\">^a</a></p>\n   * <p>!<a href=\\\"c\\\">^a</a></p>\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // To do: use a new field to do this, this is still needed for\n    // `micromark-extension-gfm-footnote`, but the `label-start-link`\n    // behavior isn’t.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\n\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n/**\n * Classify whether a code represents whitespace, punctuation, or something\n * else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * > 👉 **Note**: eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n *   Code.\n * @returns {typeof constants.characterGroupWhitespace | typeof constants.characterGroupPunctuation | undefined}\n *   Group.\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n// eslint-disable-next-line complexity\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n  let open\n  /** @type {Token} */\n  let group\n  /** @type {Token} */\n  let text\n  /** @type {Token} */\n  let openingSequence\n  /** @type {Token} */\n  let closingSequence\n  /** @type {number} */\n  let use\n  /** @type {Array<Event>} */\n  let nextEvents\n  /** @type {number} */\n  let offset\n\n  // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index\n\n      // Now walk back to find an opener.\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open &&\n          // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          }\n\n          // Number of markers to use from the sequence.\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = []\n\n          // If there are more markers in the opening, add them before.\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          }\n\n          // Opening.\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ])\n\n          // Always populated by defaults.\n\n          // Between.\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          )\n\n          // Closing.\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ])\n\n          // If there are more markers in the closing, add them after.\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  }\n\n  // Remove remaining sequences.\n  index = -1\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n\n  /**\n   * Before a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    marker = code\n    effects.enter('attentionSequence')\n    return inside(code)\n  }\n\n  /**\n   * In a sequence.\n   *\n   * ```markdown\n   * > | **\n   *     ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return inside\n    }\n    const token = effects.exit('attentionSequence')\n\n    // To do: next major: move this to resolver, just like `markdown-rs`.\n    const after = classifyCharacter(code)\n\n    // Always populated by defaults.\n\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {undefined}\n */\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 0\n  return start\n\n  /**\n   * Start of an autolink.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *      ^\n   * > | a<user@example.com>b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  /**\n   * After `<`, at protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *       ^\n   * > | a<user@example.com>b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * At second byte of protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeOrEmailAtext(code) {\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) {\n      // Count the previous alphabetical from `open` too.\n      size = 1\n      return schemeInsideOrEmailAtext(code)\n    }\n    return emailAtext(code)\n  }\n\n  /**\n   * In ambiguous protocol or atext.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *        ^\n   * > | a<user@example.com>b\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      size = 0\n      return urlInside\n    }\n\n    // ASCII alphanumeric and `+`, `-`, and `.`.\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n    size = 0\n    return emailAtext(code)\n  }\n\n  /**\n   * After protocol, in URL.\n   *\n   * ```markdown\n   * > | a<https://example.com>b\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n\n    // ASCII control, space, or `<`.\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n    effects.consume(code)\n    return urlInside\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      return emailAtSignOrDot\n    }\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label, after at-sign or dot.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                 ^       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are allowed.\n   *\n   * ```markdown\n   * > | a<user.name@example.com>b\n   *                   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n    if (code === 62) {\n      // Exit, then change the token type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      effects.enter('autolinkMarker')\n      effects.consume(code)\n      effects.exit('autolinkMarker')\n      effects.exit('autolink')\n      return ok\n    }\n    return emailValue(code)\n  }\n\n  /**\n   * In label, where `.` and `>` are *not* allowed.\n   *\n   * Though, this is also used in `emailLabel` to parse other values.\n   *\n   * ```markdown\n   * > | a<user.name@ex-ample.com>b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailValue(code) {\n    // ASCII alphanumeric or `-`.\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      const next = code === 45 ? emailValue : emailLabel\n      effects.consume(code)\n      return next\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code> | undefined} */\n  let marker\n  /** @type {number} */\n  let index\n  /** @type {State} */\n  let returnState\n  return start\n\n  /**\n   * Start of HTML (text).\n   *\n   * ```markdown\n   * > | a <b> c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  /**\n   * After `<`, at tag name or other stuff.\n   *\n   * ```markdown\n   * > | a <b> c\n   *        ^\n   * > | a <!doctype> c\n   *        ^\n   * > | a <!--b--> c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `<!`, at declaration, comment, or CDATA.\n   *\n   * ```markdown\n   * > | a <!doctype> c\n   *         ^\n   * > | a <!--b--> c\n   *         ^\n   * > | a <![CDATA[>&<]]> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpenInside\n    }\n    if (code === 91) {\n      effects.consume(code)\n      index = 0\n      return cdataOpenInside\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n    return nok(code)\n  }\n\n  /**\n   * In a comment, after `<!-`, at another `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return nok(code)\n  }\n\n  /**\n   * In comment.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return comment\n  }\n\n  /**\n   * In comment, after `-`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentEnd\n    }\n    return comment(code)\n  }\n\n  /**\n   * In comment, after `--`.\n   *\n   * ```markdown\n   * > | a <!--b--> c\n   *              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function commentEnd(code) {\n    return code === 62\n      ? end(code)\n      : code === 45\n      ? commentClose(code)\n      : comment(code)\n  }\n\n  /**\n   * After `<![`, in CDATA, expecting `CDATA[`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *          ^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataOpenInside(code) {\n    const value = 'CDATA['\n    if (code === value.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === value.length ? cdata : cdataOpenInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In CDATA.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                ^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return cdata\n  }\n\n  /**\n   * In CDATA, after `]`, at another `]`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In CDATA, after `]]`, at `>`.\n   *\n   * ```markdown\n   * > | a <![CDATA[>&<]]> b\n   *                     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n    return cdata(code)\n  }\n\n  /**\n   * In declaration.\n   *\n   * ```markdown\n   * > | a <!b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return declaration\n  }\n\n  /**\n   * In instruction.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return instruction\n  }\n\n  /**\n   * In instruction, after `?`, at `>`.\n   *\n   * ```markdown\n   * > | a <?b?> c\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  /**\n   * After `</`, in closing tag, at tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseStart(code) {\n    // ASCII alphabetical.\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return nok(code)\n  }\n\n  /**\n   * After `</x`, in a tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagClose(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n    return tagCloseBetween(code)\n  }\n\n  /**\n   * In closing tag, after tag name.\n   *\n   * ```markdown\n   * > | a </b> c\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * After `<x`, in opening tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpen(code) {\n    // ASCII alphanumerical and `-`.\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In opening tag, after tag name.\n   *\n   * ```markdown\n   * > | a <b> c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    // ASCII alphabetical and `:` and `_`.\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n    return end(code)\n  }\n\n  /**\n   * In attribute name.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeName(code) {\n    // ASCII alphabetical and `-`, `.`, `:`, and `_`.\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  /**\n   * After attribute name, before initializer, the end of the tag, or\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c> d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n    return tagOpenBetween(code)\n  }\n\n  /**\n   * Before unquoted, double quoted, or single quoted attribute value, allowing\n   * whitespace.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return lineEndingBefore(code)\n    }\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * In double or single quoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      marker = undefined\n      return tagOpenAttributeValueQuotedAfter\n    }\n    if (code === null) {\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return lineEndingBefore(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  /**\n   * In unquoted attribute value.\n   *\n   * ```markdown\n   * > | a <b c=d> e\n   *            ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  }\n\n  /**\n   * After double or single quoted attribute value, before whitespace or the end\n   * of the tag.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In certain circumstances of a tag where only an `>` is allowed.\n   *\n   * ```markdown\n   * > | a <b c=\"d\"> e\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n    return nok(code)\n  }\n\n  /**\n   * At eol.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   * > | a <!--a\n   *            ^\n   *   | b-->\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingBefore(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return lineEndingAfter\n  }\n\n  /**\n   * After eol, at optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfter(code) {\n    // Always populated by defaults.\n\n    return markdownSpace(code)\n      ? factorySpace(\n          effects,\n          lineEndingAfterPrefix,\n          'linePrefix',\n          self.parser.constructs.disable.null.includes('codeIndented')\n            ? undefined\n            : 4\n        )(code)\n      : lineEndingAfterPrefix(code)\n  }\n\n  /**\n   * After eol, after optional whitespace.\n   *\n   * > 👉 **Note**: we can’t have blank lines in text, so no need to worry about\n   * > empty tokens.\n   *\n   * ```markdown\n   *   | a <!--a\n   * > | b-->\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function lineEndingAfterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {labelEnd} from './label-end.js'\n\n/** @type {Construct} */\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n\n  /**\n   * Start of label (link) start.\n   *\n   * ```markdown\n   * > | a [b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  /** @type {State} */\n  function after(code) {\n    // To do: this isn’t needed in `micromark-extension-gfm-footnote`,\n    // remove.\n    // Hidden footnotes hook.\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  /**\n   * Start of a hard break (escape).\n   *\n   * ```markdown\n   * > | a\\\n   *      ^\n   *   | b\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After `\\`, at eol.\n   *\n   * ```markdown\n   * > | a\\\n   *       ^\n   *   | b\n   * ```\n   *\n   *  @type {State}\n   */\n  function after(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {markdownLineEnding} from 'micromark-util-character'\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n\n// To do: next major: don’t resolve, like `markdown-rs`.\n/** @type {Resolver} */\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n  let index\n  /** @type {number | undefined} */\n  let enter\n\n  // If we start and end with an EOL or a space.\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex\n\n    // And we have data.\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  }\n\n  // Merge adjacent spaces and data.\n  index = headEnterIndex - 1\n  tailExitIndex++\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n      enter = undefined\n    }\n  }\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n  let size\n  /** @type {Token} */\n  let token\n  return start\n\n  /**\n   * Start of code (text).\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * > | \\`a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return sequenceOpen(code)\n  }\n\n  /**\n   * In opening sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceOpen(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n    effects.exit('codeTextSequence')\n    return between(code)\n  }\n\n  /**\n   * Between something and something else.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function between(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    }\n\n    // To do: next major: don’t do spaces in resolve, but when compiling,\n    // like `markdown-rs`.\n    // Tabs don’t work, and virtual spaces don’t make sense.\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return between\n    }\n\n    // Closing fence? Could also be data.\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return sequenceClose(code)\n    }\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return between\n    }\n\n    // Data.\n    effects.enter('codeTextData')\n    return data(code)\n  }\n\n  /**\n   * In data.\n   *\n   * ```markdown\n   * > | `a`\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return between(code)\n    }\n    effects.consume(code)\n    return data\n  }\n\n  /**\n   * In closing sequence.\n   *\n   * ```markdown\n   * > | `a`\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function sequenceClose(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return sequenceClose\n    }\n\n    // Done!\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    }\n\n    // More or less accents: mark as data.\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\n\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n\n/** @satisfies {Extension['document']} */\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n\n/** @satisfies {Extension['contentInitial']} */\nexport const contentInitial = {\n  [91]: definition\n}\n\n/** @satisfies {Extension['flowInitial']} */\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n\n/** @satisfies {Extension['flow']} */\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n\n/** @satisfies {Extension['string']} */\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n\n/** @satisfies {Extension['text']} */\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n\n/** @satisfies {Extension['insideSpan']} */\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n\n/** @satisfies {Extension['attentionMarkers']} */\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n\n/** @satisfies {Extension['disable']} */\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {boolean | null | undefined} [end=false]\n * @returns {Array<Chunk>}\n */\n\nconst search = /[\\0\\t\\n\\r]/g\n\n/**\n * @returns {Preprocessor}\n */\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean | undefined} */\n  let start = true\n  /** @type {boolean | undefined} */\n  let atCarriageReturn\n  return preprocessor\n\n  /** @type {Preprocessor} */\n  // eslint-disable-next-line complexity\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray | null} */\n    let match\n    /** @type {number} */\n    let next\n    /** @type {number} */\n    let startPosition\n    /** @type {number} */\n    let endPosition\n    /** @type {Code} */\n    let code\n    value =\n      buffer +\n      (typeof value === 'string'\n        ? value.toString()\n        : new TextDecoder(encoding || undefined).decode(value))\n    startPosition = 0\n    buffer = ''\n    if (start) {\n      // To do: `markdown-rs` actually parses BOMs (byte order mark).\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n      start = undefined\n    }\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n            while (column++ < next) chunks.push(-1)\n            break\n          }\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n      startPosition = endPosition + 1\n    }\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * Sort of like `String.fromCodePoint(Number.parseInt(value, base))`, but makes\n * non-characters and control characters safe.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n *   Character.\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base);\n  if (\n  // C0 except for HT, LF, FF, CR, space.\n  code < 9 || code === 11 || code > 13 && code < 32 ||\n  // Control character (DEL) of C0, and C1 controls.\n  code > 126 && code < 160 ||\n  // Lone high surrogates and low surrogates.\n  code > 55_295 && code < 57_344 ||\n  // Noncharacters.\n  code > 64_975 && code < 65_008 || /* eslint-disable no-bitwise */\n  (code & 65_535) === 65_535 || (code & 65_535) === 65_534 || /* eslint-enable no-bitwise */\n  // Out of range\n  code > 1_114_111) {\n    return \"\\uFFFD\";\n  }\n  return String.fromCodePoint(code);\n}","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n/**\n * Decode markdown strings (which occur in places such as fenced code info\n * strings, destinations, labels, and titles).\n *\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n *   Value to decode.\n * @returns {string}\n *   Decoded value.\n */\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  }\n\n  // Reference.\n  const head = $2.charCodeAt(0)\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Omit<Parent, 'children' | 'type'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | null | undefined | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {undefined | void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {undefined}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Fragment | Nodes>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {(this: CompileContext) => undefined} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {(this: CompileContext, node: Nodes, token: Token, onError?: OnEnterError) => undefined} enter\n *   Enter a node.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => undefined} exit\n *   Exit a node.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n * @property {CompileData} data\n *   Info passed around; key/value store.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse, postprocess, preprocess} from 'micromark'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * Turn markdown into a syntax tree.\n *\n * @overload\n * @param {Value} value\n * @param {Encoding | null | undefined} [encoding]\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @overload\n * @param {Value} value\n * @param {Options | null | undefined} [options]\n * @returns {Root}\n *\n * @param {Value} value\n *   Markdown to parse.\n * @param {Encoding | Options | null | undefined} [encoding]\n *   Character encoding for when `value` is `Buffer`.\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {Root}\n *   mdast tree.\n */\nexport function fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n  return compiler(options)(\n    postprocess(\n      parse(options).document().write(preprocess()(value, encoding, true))\n    )\n  )\n}\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      data\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      switch (event[1].type) {\n        case 'listUnordered':\n        case 'listOrdered':\n        case 'blockQuote': {\n          if (event[0] === 'enter') {\n            containerBalance++\n          } else {\n            containerBalance--\n          }\n          atMarker = undefined\n          break\n        }\n        case 'lineEndingBlank': {\n          if (event[0] === 'enter') {\n            if (\n              listItem &&\n              !atMarker &&\n              !containerBalance &&\n              !firstBlankLineIndex\n            ) {\n              firstBlankLineIndex = index\n            }\n            atMarker = undefined\n          }\n          break\n        }\n        case 'linePrefix':\n        case 'listItemValue':\n        case 'listItemMarker':\n        case 'listItemPrefix':\n        case 'listItemPrefixWhitespace': {\n          // Empty.\n\n          break\n        }\n        default: {\n          atMarker = undefined\n        }\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          /** @type {Token} */\n          const item = {\n            type: 'listItem',\n            _spread: false,\n            start: Object.assign({}, event[1].start),\n            // @ts-expect-error: we’ll add `end` in a second.\n            end: undefined\n          }\n          listItem = item\n          events.splice(index, 0, ['enter', item, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Nodes} create\n   *   Create a node.\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {undefined}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Nodes} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    siblings.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    node.position = {\n      start: point(token.start),\n      // @ts-expect-error: `end` will be patched later.\n      end: undefined\n    }\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle | undefined} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {undefined}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    this.data.expectingFirstListItemValue = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (this.data.expectingFirstListItemValue) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      this.data.expectingFirstListItemValue = undefined\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (this.data.flowCodeInside) return\n    this.buffer()\n    this.data.flowCodeInside = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    this.data.flowCodeInside = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    this.data.setextHeadingSlurpLineEnding = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).codePointAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    this.data.setextHeadingSlurpLineEnding = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    /** @type {Array<Nodes>} */\n    const siblings = node.children\n    let tail = siblings[siblings.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {\n        start: point(token.start),\n        // @ts-expect-error: we’ll add `end` later.\n        end: undefined\n      }\n      siblings.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (this.data.atHardBreak) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      this.data.atHardBreak = undefined\n      return\n    }\n    if (\n      !this.data.setextHeadingSlurpLineEnding &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    this.data.atHardBreak = true\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n    // To do: clean.\n    if (this.data.inReference) {\n      /** @type {ReferenceType} */\n      const referenceType = this.data.referenceType || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    this.data.referenceType = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    this.data.inReference = true\n    if (node.type === 'link') {\n      /** @type {Array<PhrasingContent>} */\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    this.data.inReference = undefined\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    this.data.referenceType = 'collapsed'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    this.data.referenceType = 'full'\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    this.data.characterReferenceType = token.type\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = this.data.characterReferenceType\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      this.data.characterReferenceType = undefined\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    return {\n      type: 'heading',\n      // @ts-expect-error `depth` will be set later.\n      depth: 0,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {Html} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Array<Extension> | Extension>} extensions\n * @returns {undefined}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {undefined}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      switch (key) {\n        case 'canContainEols': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'transforms': {\n          const right = extension[key]\n          if (right) {\n            combined[key].push(...right)\n          }\n          break\n        }\n        case 'enter':\n        case 'exit': {\n          const right = extension[key]\n          if (right) {\n            Object.assign(combined[key], right)\n          }\n          break\n        }\n        // No default\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Create} Create\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n */\n\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {string, text} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n\n/**\n * @param {ParseOptions | null | undefined} [options]\n * @returns {ParseContext}\n */\nexport function parse(options) {\n  const settings = options || {}\n  const constructs =\n    /** @type {FullNormalizedExtension} */\n    combineExtensions([defaultConstructs, ...(settings.extensions || [])])\n\n  /** @type {ParseContext} */\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n\n  /**\n   * @param {InitialConstruct} initial\n   */\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} FromMarkdownOptions\n * @typedef {import('unified').Parser<Root>} Parser\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {Omit<FromMarkdownOptions, 'extensions' | 'mdastExtensions'>} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/**\n * Aadd support for parsing from markdown.\n *\n * @param {Readonly<Options> | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkParse(options) {\n  /** @type {Processor} */\n  // @ts-expect-error: TS in JSDoc generates wrong types if `this` is typed regularly.\n  const self = this\n\n  self.parser = parser\n\n  /**\n   * @type {Parser}\n   */\n  function parser(doc) {\n    return fromMarkdown(doc, {\n      ...self.data('settings'),\n      ...options,\n      // Note: these options are not in the readme.\n      // The goal is for them to be set by plugins on `data` instead of being\n      // passed by users.\n      extensions: self.data('micromarkExtensions') || [],\n      mdastExtensions: self.data('fromMarkdownExtensions') || []\n    })\n  }\n}\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type)\n          return as([type, [...value]], value);\n  \n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","import {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} any a serializable value.\n * @param {{transfer?: any[], json?: boolean, lossy?: boolean}?} options an object with\n * a transfer option (ignored when polyfilled) and/or non standard fields that\n * fallback to the polyfill if present.\n * @returns {Record[]}\n */\nexport default typeof structuredClone === \"function\" ?\n  /* c8 ignore start */\n  (any, options) => (\n    options && ('json' in options || 'lossy' in options) ?\n      deserialize(serialize(any, options)) : structuredClone(any)\n  ) :\n  (any, options) => deserialize(serialize(any, options));\n  /* c8 ignore stop */\n\nexport {deserialize, serialize};\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri`).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * A regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`, or\n * `/^https?$/i` for `img[src]` (this is what `github.com` allows).\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string | null | undefined} url\n *   URI to sanitize.\n * @param {RegExp | null | undefined} [protocol]\n *   Allowed protocols.\n * @returns {string}\n *   Sanitized URI.\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n  if (!protocol) {\n    return value\n  }\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n  return ''\n}\n\n/**\n * Normalize a URL.\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n *   URI to normalize.\n * @returns {string}\n *   Normalized URI.\n */\nexport function normalizeUri(value) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n    let replace = ''\n\n    // A correct percent encoded value.\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    }\n    // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    }\n    // Astral.\n    else if (code > 55_295 && code < 57_344) {\n      const next = value.charCodeAt(index + 1)\n\n      // A correct surrogate pair.\n      if (code < 56_320 && next > 56_319 && next < 57_344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      }\n      // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    }\n    // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('./state.js').State} State\n */\n\n/**\n * @callback FootnoteBackContentTemplate\n *   Generate content for the backreference dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent> | ElementContent | string}\n *   Content for the backreference when linking back from definitions to their\n *   reference.\n *\n * @callback FootnoteBackLabelTemplate\n *   Generate a back label dynamically.\n *\n *   For the following markdown:\n *\n *   ```markdown\n *   Alpha[^micromark], bravo[^micromark], and charlie[^remark].\n *\n *   [^remark]: things about remark\n *   [^micromark]: things about micromark\n *   ```\n *\n *   This function will be called with:\n *\n *   *  `0` and `0` for the backreference from `things about micromark` to\n *      `alpha`, as it is the first used definition, and the first call to it\n *   *  `0` and `1` for the backreference from `things about micromark` to\n *      `bravo`, as it is the first used definition, and the second call to it\n *   *  `1` and `0` for the backreference from `things about remark` to\n *      `charlie`, as it is the second used definition\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Back label to use when linking back from definitions to their reference.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Generate the default content that GitHub uses on backreferences.\n *\n * @param {number} _\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {Array<ElementContent>}\n *   Content.\n */\nexport function defaultFootnoteBackContent(_, rereferenceIndex) {\n  /** @type {Array<ElementContent>} */\n  const result = [{type: 'text', value: '↩'}]\n\n  if (rereferenceIndex > 1) {\n    result.push({\n      type: 'element',\n      tagName: 'sup',\n      properties: {},\n      children: [{type: 'text', value: String(rereferenceIndex)}]\n    })\n  }\n\n  return result\n}\n\n/**\n * Generate the default label that GitHub uses on backreferences.\n *\n * @param {number} referenceIndex\n *   Index of the definition in the order that they are first referenced,\n *   0-indexed.\n * @param {number} rereferenceIndex\n *   Index of calls to the same definition, 0-indexed.\n * @returns {string}\n *   Label.\n */\nexport function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n  return (\n    'Back to reference ' +\n    (referenceIndex + 1) +\n    (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n  )\n}\n\n/**\n * Generate a hast footer for called footnote definitions.\n *\n * @param {State} state\n *   Info passed around.\n * @returns {Element | undefined}\n *   `section` element or `undefined`.\n */\n// eslint-disable-next-line complexity\nexport function footer(state) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const footnoteBackContent =\n    state.options.footnoteBackContent || defaultFootnoteBackContent\n  const footnoteBackLabel =\n    state.options.footnoteBackLabel || defaultFootnoteBackLabel\n  const footnoteLabel = state.options.footnoteLabel || 'Footnotes'\n  const footnoteLabelTagName = state.options.footnoteLabelTagName || 'h2'\n  const footnoteLabelProperties = state.options.footnoteLabelProperties || {\n    className: ['sr-only']\n  }\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n  let referenceIndex = -1\n\n  while (++referenceIndex < state.footnoteOrder.length) {\n    const def = state.footnoteById.get(state.footnoteOrder[referenceIndex])\n\n    if (!def) {\n      continue\n    }\n\n    const content = state.all(def)\n    const id = String(def.identifier).toUpperCase()\n    const safeId = normalizeUri(id.toLowerCase())\n    let rereferenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n    const counts = state.footnoteCounts.get(id)\n\n    // eslint-disable-next-line no-unmodified-loop-condition\n    while (counts !== undefined && ++rereferenceIndex <= counts) {\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      let children =\n        typeof footnoteBackContent === 'string'\n          ? footnoteBackContent\n          : footnoteBackContent(referenceIndex, rereferenceIndex)\n\n      if (typeof children === 'string') {\n        children = {type: 'text', value: children}\n      }\n\n      backReferences.push({\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            clobberPrefix +\n            'fnref-' +\n            safeId +\n            (rereferenceIndex > 1 ? '-' + rereferenceIndex : ''),\n          dataFootnoteBackref: '',\n          ariaLabel:\n            typeof footnoteBackLabel === 'string'\n              ? footnoteBackLabel\n              : footnoteBackLabel(referenceIndex, rereferenceIndex),\n          className: ['data-footnote-backref']\n        },\n        children: Array.isArray(children) ? children : [children]\n      })\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: clobberPrefix + 'fn-' + safeId},\n      children: state.wrap(content, true)\n    }\n\n    state.patch(def, listItem)\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: footnoteLabelTagName,\n        properties: {\n          ...structuredClone(footnoteLabelProperties),\n          id: 'footnote-label'\n        },\n        children: [{type: 'text', value: footnoteLabel}]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: state.wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @template Fn\n * @template Fallback\n * @typedef {Fn extends (value: any) => value is infer Thing ? Thing : Fallback} Predicate\n */\n\n/**\n * @callback Check\n *   Check that an arbitrary value is a node.\n * @param {unknown} this\n *   The given context.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n *\n * @typedef {Record<string, unknown> | Node} Props\n *   Object to check for equivalence.\n *\n *   Note: `Node` is included as it is common but is not indexable.\n *\n * @typedef {Array<Props | TestFunction | string> | Props | TestFunction | string | null | undefined} Test\n *   Check for an arbitrary node.\n *\n * @callback TestFunction\n *   Check if a node passes a test.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | undefined | void}\n *   Whether this node passes the test.\n *\n *   Note: `void` is included until TS sees no return as `undefined`.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param {unknown} node\n *   Thing to check, typically `Node`.\n * @param {Test} test\n *   A check for a specific node.\n * @param {number | null | undefined} index\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} parent\n *   The node’s parent.\n * @param {unknown} context\n *   Context object (`this`) to pass to `test` functions.\n * @returns {boolean}\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(node: unknown, test: Condition, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((node?: null | undefined) => false) &\n   *   ((node: unknown, test?: null | undefined, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((node: unknown, test?: Test, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return looksLikeANode(node)\n        ? check.call(context, node, index, parent)\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param {Test} test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns {Check}\n *   An assertion.\n */\nexport const convert =\n  // Note: overloads in JSDoc can’t yet use different `@template`s.\n  /**\n   * @type {(\n   *   (<Condition extends string>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & {type: Condition}) &\n   *   (<Condition extends Props>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Condition) &\n   *   (<Condition extends TestFunction>(test: Condition) => (node: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node & Predicate<Condition, Node>) &\n   *   ((test?: null | undefined) => (node?: unknown, index?: number | null | undefined, parent?: Parent | null | undefined, context?: unknown) => node is Node) &\n   *   ((test?: Test) => Check)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {Check}\n     */\n    function (test) {\n      if (test === null || test === undefined) {\n        return ok\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<Props | TestFunction | string>} tests\n * @returns {Check}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<Check>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @type {TestFunction}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].apply(this, parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {Check}\n */\nfunction propsFactory(check) {\n  const checkAsRecord = /** @type {Record<string, unknown>} */ (check)\n\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    const nodeAsRecord = /** @type {Record<string, unknown>} */ (\n      /** @type {unknown} */ (node)\n    )\n\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      if (nodeAsRecord[key] !== checkAsRecord[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {Check}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunction} testFunction\n * @returns {Check}\n */\nfunction castFactory(testFunction) {\n  return check\n\n  /**\n   * @this {unknown}\n   * @type {Check}\n   */\n  function check(value, index, parent) {\n    return Boolean(\n      looksLikeANode(value) &&\n        testFunction.call(\n          this,\n          value,\n          typeof index === 'number' ? index : undefined,\n          parent || undefined\n        )\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n\n/**\n * @param {unknown} value\n * @returns {value is Node}\n */\nfunction looksLikeANode(value) {\n  return value !== null && typeof value === 'object' && 'type' in value\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {InternalAncestor<InclusiveDescendant<Tree>, Child>} Ancestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {'skip' | boolean} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<VisitedParents>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [VisitedParents=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Matches<InclusiveDescendant<Tree>, Check>, Ancestor<Tree, Matches<InclusiveDescendant<Tree>, Check>>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Tree type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from 'unist-util-visit-parents/do-not-use-color'\n\n/** @type {Readonly<ActionTuple>} */\nconst empty = []\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} test\n *   `unist-util-is`-compatible test\n * @param {Visitor | boolean | null | undefined} [visitor]\n *   Handle each node.\n * @param {boolean | null | undefined} [reverse]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visitParents(tree, test, visitor, reverse) {\n  /** @type {Test} */\n  let check\n\n  if (typeof test === 'function' && typeof visitor !== 'function') {\n    reverse = visitor\n    // @ts-expect-error no visitor given, so `visitor` is test.\n    visitor = test\n  } else {\n    // @ts-expect-error visitor given, so `test` isn’t a visitor.\n    check = test\n  }\n\n  const is = convert(check)\n  const step = reverse ? -1 : 1\n\n  factory(tree, undefined, [])()\n\n  /**\n   * @param {UnistNode} node\n   * @param {number | undefined} index\n   * @param {Array<UnistParent>} parents\n   */\n  function factory(node, index, parents) {\n    const value = /** @type {Record<string, unknown>} */ (\n      node && typeof node === 'object' ? node : {}\n    )\n\n    if (typeof value.type === 'string') {\n      const name =\n        // `hast`\n        typeof value.tagName === 'string'\n          ? value.tagName\n          : // `xast`\n          typeof value.name === 'string'\n          ? value.name\n          : undefined\n\n      Object.defineProperty(visit, 'name', {\n        value:\n          'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n      })\n    }\n\n    return visit\n\n    function visit() {\n      /** @type {Readonly<ActionTuple>} */\n      let result = empty\n      /** @type {Readonly<ActionTuple>} */\n      let subresult\n      /** @type {number} */\n      let offset\n      /** @type {Array<UnistParent>} */\n      let grandparents\n\n      if (!test || is(node, index, parents[parents.length - 1] || undefined)) {\n        // @ts-expect-error: `visitor` is now a visitor.\n        result = toResult(visitor(node, parents))\n\n        if (result[0] === EXIT) {\n          return result\n        }\n      }\n\n      if ('children' in node && node.children) {\n        const nodeAsParent = /** @type {UnistParent} */ (node)\n\n        if (nodeAsParent.children && result[0] !== SKIP) {\n          offset = (reverse ? nodeAsParent.children.length : -1) + step\n          grandparents = parents.concat(nodeAsParent)\n\n          while (offset > -1 && offset < nodeAsParent.children.length) {\n            const child = nodeAsParent.children[offset]\n\n            subresult = factory(child, offset, grandparents)()\n\n            if (subresult[0] === EXIT) {\n              return subresult\n            }\n\n            offset =\n              typeof subresult[1] === 'number' ? subresult[1] : offset + step\n          }\n        }\n      }\n\n      return result\n    }\n  }\n}\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {Readonly<ActionTuple>}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return value === null || value === undefined ? empty : [value]\n}\n","/**\n * @typedef {import('unist').Node} UnistNode\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef {Exclude<import('unist-util-is').Test, undefined> | undefined} Test\n *   Test from `unist-util-is`.\n *\n *   Note: we have remove and add `undefined`, because otherwise when generating\n *   automatic `.d.ts` files, TS tries to flatten paths from a local perspective,\n *   which doesn’t work when publishing on npm.\n */\n\n// To do: use types from `unist-util-visit-parents` when it’s released.\n\n/**\n * @typedef {(\n *   Fn extends (value: any) => value is infer Thing\n *   ? Thing\n *   : Fallback\n * )} Predicate\n *   Get the value of a type guard `Fn`.\n * @template Fn\n *   Value; typically function that is a type guard (such as `(x): x is Y`).\n * @template Fallback\n *   Value to yield if `Fn` is not a type guard.\n */\n\n/**\n * @typedef {(\n *   Check extends null | undefined // No test.\n *   ? Value\n *   : Value extends {type: Check} // String (type) test.\n *   ? Value\n *   : Value extends Check // Partial test.\n *   ? Value\n *   : Check extends Function // Function test.\n *   ? Predicate<Check, Value> extends Value\n *     ? Predicate<Check, Value>\n *     : never\n *   : never // Some other test?\n * )} MatchesOne\n *   Check whether a node matches a primitive check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test, but not arrays.\n */\n\n/**\n * @typedef {(\n *   Check extends Array<any>\n *   ? MatchesOne<Value, Check[keyof Check]>\n *   : MatchesOne<Value, Check>\n * )} Matches\n *   Check whether a node matches a check in the type system.\n * @template Value\n *   Value; typically unist `Node`.\n * @template Check\n *   Value; typically `unist-util-is`-compatible test.\n */\n\n/**\n * @typedef {0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10} Uint\n *   Number; capped reasonably.\n */\n\n/**\n * @typedef {I extends 0 ? 1 : I extends 1 ? 2 : I extends 2 ? 3 : I extends 3 ? 4 : I extends 4 ? 5 : I extends 5 ? 6 : I extends 6 ? 7 : I extends 7 ? 8 : I extends 8 ? 9 : 10} Increment\n *   Increment a number in the type system.\n * @template {Uint} [I=0]\n *   Index.\n */\n\n/**\n * @typedef {(\n *   Node extends UnistParent\n *   ? Node extends {children: Array<infer Children>}\n *     ? Child extends Children ? Node : never\n *     : never\n *   : never\n * )} InternalParent\n *   Collect nodes that can be parents of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {InternalParent<InclusiveDescendant<Tree>, Child>} Parent\n *   Collect nodes in `Tree` that can be parents of `Child`.\n * @template {UnistNode} Tree\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n */\n\n/**\n * @typedef {(\n *   Depth extends Max\n *   ? never\n *   :\n *     | InternalParent<Node, Child>\n *     | InternalAncestor<Node, InternalParent<Node, Child>, Max, Increment<Depth>>\n * )} InternalAncestor\n *   Collect nodes in `Tree` that can be ancestors of `Child`.\n * @template {UnistNode} Node\n *   All node types in a tree.\n * @template {UnistNode} Child\n *   Node to search for.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @typedef {(\n *   Tree extends UnistParent\n *     ? Depth extends Max\n *       ? Tree\n *       : Tree | InclusiveDescendant<Tree['children'][number], Max, Increment<Depth>>\n *     : Tree\n * )} InclusiveDescendant\n *   Collect all (inclusive) descendants of `Tree`.\n *\n *   > 👉 **Note**: for performance reasons, this seems to be the fastest way to\n *   > recurse without actually running into an infinite loop, which the\n *   > previous version did.\n *   >\n *   > Practically, a max of `2` is typically enough assuming a `Root` is\n *   > passed, but it doesn’t improve performance.\n *   > It gets higher with `List > ListItem > Table > TableRow > TableCell`.\n *   > Using up to `10` doesn’t hurt or help either.\n * @template {UnistNode} Tree\n *   Tree type.\n * @template {Uint} [Max=10]\n *   Max; searches up to this depth.\n * @template {Uint} [Depth=0]\n *   Current depth.\n */\n\n/**\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends UnistNode ? number | undefined : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends UnistParent ? Ancestor | undefined : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n * @template {UnistNode} [Visited=UnistNode]\n *   Visited node type.\n * @template {UnistParent} [Ancestor=UnistParent]\n *   Ancestor type.\n */\n\n/**\n * @typedef {Visitor<Visited, Parent<Ancestor, Visited>>} BuildVisitorFromMatch\n *   Build a typed `Visitor` function from a node and all possible parents.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Visited\n *   Node type.\n * @template {UnistParent} Ancestor\n *   Parent type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     Matches<Descendant, Check>,\n *     Extract<Descendant, UnistParent>\n *   >\n * )} BuildVisitorFromDescendants\n *   Build a typed `Visitor` function from a list of descendants and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n */\n\n/**\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parent`.\n * @template {UnistNode} [Tree=UnistNode]\n *   Node type.\n * @template {Test} [Check=Test]\n *   Test type.\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @overload\n * @param {Tree} tree\n * @param {Check} check\n * @param {BuildVisitor<Tree, Check>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @overload\n * @param {Tree} tree\n * @param {BuildVisitor<Tree>} visitor\n * @param {boolean | null | undefined} [reverse]\n * @returns {undefined}\n *\n * @param {UnistNode} tree\n *   Tree to traverse.\n * @param {Visitor | Test} testOrVisitor\n *   `unist-util-is`-compatible test (optional, omit to pass a visitor).\n * @param {Visitor | boolean | null | undefined} [visitorOrReverse]\n *   Handle each node (when test is omitted, pass `reverse`).\n * @param {boolean | null | undefined} [maybeReverse=false]\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns {undefined}\n *   Nothing.\n *\n * @template {UnistNode} Tree\n *   Node type.\n * @template {Test} Check\n *   `unist-util-is`-compatible test.\n */\nexport function visit(tree, testOrVisitor, visitorOrReverse, maybeReverse) {\n  /** @type {boolean | null | undefined} */\n  let reverse\n  /** @type {Test} */\n  let test\n  /** @type {Visitor} */\n  let visitor\n\n  if (\n    typeof testOrVisitor === 'function' &&\n    typeof visitorOrReverse !== 'function'\n  ) {\n    test = undefined\n    visitor = testOrVisitor\n    reverse = visitorOrReverse\n  } else {\n    // @ts-expect-error: assume the overload with test was given.\n    test = testOrVisitor\n    // @ts-expect-error: assume the overload with test was given.\n    visitor = visitorOrReverse\n    reverse = maybeReverse\n  }\n\n  visitParents(tree, test, overload, reverse)\n\n  /**\n   * @param {UnistNode} node\n   * @param {Array<UnistParent>} parents\n   */\n  function overload(node, parents) {\n    const parent = parents[parents.length - 1]\n    const index = parent ? parent.children.indexOf(node) : undefined\n    return visitor(node, index, parent)\n  }\n}\n","/**\n * @typedef {import('hast').ElementContent} ElementContent\n *\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Reference} Reference\n *\n * @typedef {import('./state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Extract<Nodes, Reference>} node\n *   Reference node (image, link).\n * @returns {Array<ElementContent>}\n *   hast content.\n */\nexport function revert(state, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return [{type: 'text', value: '![' + node.alt + suffix}]\n  }\n\n  const contents = state.all(node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift({type: 'text', value: '['})\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push({type: 'text', value: suffix})\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `listItem` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ListItem} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function listItem(state, node, parent) {\n  const results = state.all(node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const properties = {}\n  /** @type {Array<ElementContent>} */\n  const children = []\n\n  if (typeof node.checked === 'boolean') {\n    const head = results[0]\n    /** @type {Element} */\n    let paragraph\n\n    if (head && head.type === 'element' && head.tagName === 'p') {\n      paragraph = head\n    } else {\n      paragraph = {type: 'element', tagName: 'p', properties: {}, children: []}\n      results.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift({type: 'text', value: ' '})\n    }\n\n    paragraph.children.unshift({\n      type: 'element',\n      tagName: 'input',\n      properties: {type: 'checkbox', checked: node.checked, disabled: true},\n      children: []\n    })\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    properties.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < results.length) {\n    const child = results[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      children.push({type: 'text', value: '\\n'})\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      children.push(...child.children)\n    } else {\n      children.push(child)\n    }\n  }\n\n  const tail = results[results.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || tail.type !== 'element' || tail.tagName !== 'p')) {\n    children.push({type: 'text', value: '\\n'})\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'li', properties, children}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * @param {Parents} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = false\n  if (node.type === 'list') {\n    loose = node.spread || false\n    const children = node.children\n    let index = -1\n\n    while (!loose && ++index < children.length) {\n      loose = listItemLoose(children[index])\n    }\n  }\n\n  return loose\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === null || spread === undefined\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {tableRow} from './table-row.js'\nimport {tableCell} from './table-cell.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default handlers for nodes.\n *\n * @satisfies {import('../state.js').Handlers}\n */\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  // @ts-expect-error: root is different, but hard to type.\n  root,\n  strong,\n  table,\n  tableCell,\n  tableRow,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `blockquote` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Blockquote} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function blockquote(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'blockquote',\n    properties: {},\n    children: state.wrap(state.all(node), true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `break` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Break} node\n *   mdast node.\n * @returns {Array<Element | Text>}\n *   hast element content.\n */\nexport function hardBreak(state, node) {\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'br', properties: {}, children: []}\n  state.patch(node, result)\n  return [state.applyData(node, result), {type: 'text', value: '\\n'}]\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `code` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Code} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function code(state, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  /** @type {Properties} */\n  const properties = {}\n\n  if (node.lang) {\n    properties.className = ['language-' + node.lang]\n  }\n\n  // Create `<code>`.\n  /** @type {Element} */\n  let result = {\n    type: 'element',\n    tagName: 'code',\n    properties,\n    children: [{type: 'text', value}]\n  }\n\n  if (node.meta) {\n    result.data = {meta: node.meta}\n  }\n\n  state.patch(node, result)\n  result = state.applyData(node, result)\n\n  // Create `<pre>`.\n  result = {type: 'element', tagName: 'pre', properties: {}, children: [result]}\n  state.patch(node, result)\n  return result\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `delete` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Delete} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strikethrough(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'del',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `emphasis` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Emphasis} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function emphasis(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'em',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `footnoteReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {FootnoteReference} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function footnoteReference(state, node) {\n  const clobberPrefix =\n    typeof state.options.clobberPrefix === 'string'\n      ? state.options.clobberPrefix\n      : 'user-content-'\n  const id = String(node.identifier).toUpperCase()\n  const safeId = normalizeUri(id.toLowerCase())\n  const index = state.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  let reuseCounter = state.footnoteCounts.get(id)\n\n  if (reuseCounter === undefined) {\n    reuseCounter = 0\n    state.footnoteOrder.push(id)\n    counter = state.footnoteOrder.length\n  } else {\n    counter = index + 1\n  }\n\n  reuseCounter += 1\n  state.footnoteCounts.set(id, reuseCounter)\n\n  /** @type {Element} */\n  const link = {\n    type: 'element',\n    tagName: 'a',\n    properties: {\n      href: '#' + clobberPrefix + 'fn-' + safeId,\n      id:\n        clobberPrefix +\n        'fnref-' +\n        safeId +\n        (reuseCounter > 1 ? '-' + reuseCounter : ''),\n      dataFootnoteRef: true,\n      ariaDescribedBy: ['footnote-label']\n    },\n    children: [{type: 'text', value: String(counter)}]\n  }\n  state.patch(node, link)\n\n  /** @type {Element} */\n  const sup = {\n    type: 'element',\n    tagName: 'sup',\n    properties: {},\n    children: [link]\n  }\n  state.patch(node, sup)\n  return state.applyData(node, sup)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `heading` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Heading} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function heading(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'h' + node.depth,\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Html} Html\n * @typedef {import('../state.js').State} State\n * @typedef {import('../../index.js').Raw} Raw\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `html` node into hast (`raw` node in dangerous mode, otherwise\n * nothing).\n *\n * @param {State} state\n *   Info passed around.\n * @param {Html} node\n *   mdast node.\n * @returns {Element | Raw | undefined}\n *   hast node.\n */\nexport function html(state, node) {\n  if (state.options.allowDangerousHtml) {\n    /** @type {Raw} */\n    const result = {type: 'raw', value: node.value}\n    state.patch(node, result)\n    return state.applyData(node, result)\n  }\n\n  return undefined\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `imageReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ImageReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function imageReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `image` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Image} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function image(state, node) {\n  /** @type {Properties} */\n  const properties = {src: normalizeUri(node.url)}\n\n  if (node.alt !== null && node.alt !== undefined) {\n    properties.alt = node.alt\n  }\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {type: 'element', tagName: 'img', properties, children: []}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `inlineCode` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {InlineCode} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function inlineCode(state, node) {\n  /** @type {Text} */\n  const text = {type: 'text', value: node.value.replace(/\\r?\\n|\\r/g, ' ')}\n  state.patch(node, text)\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'code',\n    properties: {},\n    children: [text]\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\nimport {revert} from '../revert.js'\n\n/**\n * Turn an mdast `linkReference` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {LinkReference} node\n *   mdast node.\n * @returns {Array<ElementContent> | ElementContent}\n *   hast node.\n */\nexport function linkReference(state, node) {\n  const id = String(node.identifier).toUpperCase()\n  const def = state.definitionById.get(id)\n\n  if (!def) {\n    return revert(state, node)\n  }\n\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    properties.title = def.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../state.js').State} State\n */\n\nimport {normalizeUri} from 'micromark-util-sanitize-uri'\n\n/**\n * Turn an mdast `link` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Link} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function link(state, node) {\n  /** @type {Properties} */\n  const properties = {href: normalizeUri(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    properties.title = node.title\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'a',\n    properties,\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').List} List\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `list` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {List} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function list(state, node) {\n  /** @type {Properties} */\n  const properties = {}\n  const results = state.all(node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    properties.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < results.length) {\n    const child = results[index]\n\n    if (\n      child.type === 'element' &&\n      child.tagName === 'li' &&\n      child.properties &&\n      Array.isArray(child.properties.className) &&\n      child.properties.className.includes('task-list-item')\n    ) {\n      properties.className = ['contains-task-list']\n      break\n    }\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: node.ordered ? 'ol' : 'ul',\n    properties,\n    children: state.wrap(results, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `paragraph` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Paragraph} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function paragraph(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'p',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Parents} HastParents\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `root` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastRoot} node\n *   mdast node.\n * @returns {HastParents}\n *   hast node.\n */\nexport function root(state, node) {\n  /** @type {HastRoot} */\n  const result = {type: 'root', children: state.wrap(state.all(node))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `strong` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Strong} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function strong(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'strong',\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').Table} Table\n * @typedef {import('../state.js').State} State\n */\n\nimport {pointEnd, pointStart} from 'unist-util-position'\n\n/**\n * Turn an mdast `table` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {Table} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function table(state, node) {\n  const rows = state.all(node)\n  const firstRow = rows.shift()\n  /** @type {Array<Element>} */\n  const tableContent = []\n\n  if (firstRow) {\n    /** @type {Element} */\n    const head = {\n      type: 'element',\n      tagName: 'thead',\n      properties: {},\n      children: state.wrap([firstRow], true)\n    }\n    state.patch(node.children[0], head)\n    tableContent.push(head)\n  }\n\n  if (rows.length > 0) {\n    /** @type {Element} */\n    const body = {\n      type: 'element',\n      tagName: 'tbody',\n      properties: {},\n      children: state.wrap(rows, true)\n    }\n\n    const start = pointStart(node.children[1])\n    const end = pointEnd(node.children[node.children.length - 1])\n    if (start && end) body.position = {start, end}\n    tableContent.push(body)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'table',\n    properties: {},\n    children: state.wrap(tableContent, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableCell` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableCell} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function tableCell(state, node) {\n  // Note: this function is normally not called: see `table-row` for how rows\n  // and their cells are compiled.\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'td', // Assume body cell.\n    properties: {},\n    children: state.all(node)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `tableRow` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {TableRow} node\n *   mdast node.\n * @param {Parents | undefined} parent\n *   Parent of `node`.\n * @returns {Element}\n *   hast node.\n */\nexport function tableRow(state, node, parent) {\n  const siblings = parent ? parent.children : undefined\n  // Generate a body row when without parent.\n  const rowIndex = siblings ? siblings.indexOf(node) : 1\n  const tagName = rowIndex === 0 ? 'th' : 'td'\n  // To do: option to use `style`?\n  const align = parent && parent.type === 'table' ? parent.align : undefined\n  const length = align ? align.length : node.children.length\n  let cellIndex = -1\n  /** @type {Array<ElementContent>} */\n  const cells = []\n\n  while (++cellIndex < length) {\n    // Note: can also be undefined.\n    const cell = node.children[cellIndex]\n    /** @type {Properties} */\n    const properties = {}\n    const alignValue = align ? align[cellIndex] : undefined\n\n    if (alignValue) {\n      properties.align = alignValue\n    }\n\n    /** @type {Element} */\n    let result = {type: 'element', tagName, properties, children: []}\n\n    if (cell) {\n      result.children = state.all(cell)\n      state.patch(cell, result)\n      result = state.applyData(cell, result)\n    }\n\n    cells.push(result)\n  }\n\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'tr',\n    properties: {},\n    children: state.wrap(cells, true)\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').Text} HastText\n * @typedef {import('mdast').Text} MdastText\n * @typedef {import('../state.js').State} State\n */\n\nimport {trimLines} from 'trim-lines'\n\n/**\n * Turn an mdast `text` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastText} node\n *   mdast node.\n * @returns {HastElement | HastText}\n *   hast node.\n */\nexport function text(state, node) {\n  /** @type {HastText} */\n  const result = {type: 'text', value: trimLines(String(node.value))}\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../state.js').State} State\n */\n\n// Make VS Code show references to the above types.\n''\n\n/**\n * Turn an mdast `thematicBreak` node into hast.\n *\n * @param {State} state\n *   Info passed around.\n * @param {ThematicBreak} node\n *   mdast node.\n * @returns {Element}\n *   hast node.\n */\nexport function thematicBreak(state, node) {\n  /** @type {Element} */\n  const result = {\n    type: 'element',\n    tagName: 'hr',\n    properties: {},\n    children: []\n  }\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n","/**\n * @typedef {import('hast').Element} HastElement\n * @typedef {import('hast').ElementContent} HastElementContent\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('hast').Properties} HastProperties\n * @typedef {import('hast').RootContent} HastRootContent\n * @typedef {import('hast').Text} HastText\n *\n * @typedef {import('mdast').Definition} MdastDefinition\n * @typedef {import('mdast').FootnoteDefinition} MdastFootnoteDefinition\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('mdast').Parents} MdastParents\n *\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {import('./footer.js').FootnoteBackContentTemplate} FootnoteBackContentTemplate\n * @typedef {import('./footer.js').FootnoteBackLabelTemplate} FootnoteBackLabelTemplate\n */\n\n/**\n * @callback Handler\n *   Handle a node.\n * @param {State} state\n *   Info passed around.\n * @param {any} node\n *   mdast node to handle.\n * @param {MdastParents | undefined} parent\n *   Parent of `node`.\n * @returns {Array<HastElementContent> | HastElementContent | undefined}\n *   hast node.\n *\n * @typedef {Partial<Record<MdastNodes['type'], Handler>>} Handlers\n *   Handle nodes.\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [allowDangerousHtml=false]\n *   Whether to persist raw HTML in markdown in the hast tree (default:\n *   `false`).\n * @property {string | null | undefined} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` property on footnotes to prevent them from\n *   *clobbering* (default: `'user-content-'`).\n *\n *   Pass `''` for trusted markdown and when you are careful with\n *   polyfilling.\n *   You could pass a different prefix.\n *\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=\"x\"></p>\n *   <script>alert(x) // `x` now refers to the `p#x` DOM element</script>\n *   ```\n *\n *   The above example shows that elements are made available by browsers, by\n *   their ID, on the `window` object.\n *   This is a security risk because you might be expecting some other variable\n *   at that place.\n *   It can also break polyfills.\n *   Using a prefix solves these problems.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {FootnoteBackContentTemplate | string | null | undefined} [footnoteBackContent]\n *   Content of the backreference back to references (default: `defaultFootnoteBackContent`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackContent(_, rereferenceIndex) {\n *     const result = [{type: 'text', value: '↩'}]\n *\n *     if (rereferenceIndex > 1) {\n *       result.push({\n *         type: 'element',\n *         tagName: 'sup',\n *         properties: {},\n *         children: [{type: 'text', value: String(rereferenceIndex)}]\n *       })\n *     }\n *\n *     return result\n *   }\n *   ```\n *\n *   This content is used in the `a` element of each backreference (the `↩`\n *   links).\n * @property {FootnoteBackLabelTemplate | string | null | undefined} [footnoteBackLabel]\n *   Label to describe the backreference back to references (default:\n *   `defaultFootnoteBackLabel`).\n *\n *   The default value is:\n *\n *   ```js\n *   function defaultFootnoteBackLabel(referenceIndex, rereferenceIndex) {\n *    return (\n *      'Back to reference ' +\n *      (referenceIndex + 1) +\n *      (rereferenceIndex > 1 ? '-' + rereferenceIndex : '')\n *    )\n *   }\n *   ```\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is used in the `ariaLabel` property on each backreference\n *   (the `↩` links).\n *   It affects users of assistive technology.\n * @property {string | null | undefined} [footnoteLabel='Footnotes']\n *   Textual label to use for the footnotes section (default: `'Footnotes'`).\n *\n *   Change it when the markdown is not in English.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {HastProperties | null | undefined} [footnoteLabelProperties={className: ['sr-only']}]\n *   Properties to use on the footnote label (default: `{className:\n *   ['sr-only']}`).\n *\n *   Change it to show the label and add other properties.\n *\n *   This label is typically hidden visually (assuming an `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass an empty string.\n *   You can also add different properties.\n *\n *   > 👉 **Note**: `id: 'footnote-label'` is always added, because footnote\n *   > calls use it with `aria-describedby` to provide an accessible label.\n * @property {string | null | undefined} [footnoteLabelTagName='h2']\n *   HTML tag name to use for the footnote label element (default: `'h2'`).\n *\n *   Change it to match your document structure.\n *\n *   This label is typically hidden visually (assuming a `sr-only` CSS class\n *   is defined that does that) and so affects screen readers only.\n *   If you do have such a class, but want to show this section to everyone,\n *   pass different properties with the `footnoteLabelProperties` option.\n * @property {Handlers | null | undefined} [handlers]\n *   Extra handlers for nodes (optional).\n * @property {Array<MdastNodes['type']> | null | undefined} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast (note that\n *   the node itself is passed, but eventual children are transformed)\n *   (optional).\n * @property {Handler | null | undefined} [unknownHandler]\n *   Handler for all unknown nodes (optional).\n *\n * @typedef State\n *   Info passed around.\n * @property {(node: MdastNodes) => Array<HastElementContent>} all\n *   Transform the children of an mdast parent to hast.\n * @property {<Type extends HastNodes>(from: MdastNodes, to: Type) => HastElement | Type} applyData\n *   Honor the `data` of `from`, and generate an element instead of `node`.\n * @property {Map<string, MdastDefinition>} definitionById\n *   Definitions by their identifier.\n * @property {Map<string, MdastFootnoteDefinition>} footnoteById\n *   Footnote definitions by their identifier.\n * @property {Map<string, number>} footnoteCounts\n *   Counts for how often the same footnote was called.\n * @property {Array<string>} footnoteOrder\n *   Identifiers of order when footnote calls first appear in tree order.\n * @property {Handlers} handlers\n *   Applied handlers.\n * @property {(node: MdastNodes, parent: MdastParents | undefined) => Array<HastElementContent> | HastElementContent | undefined} one\n *   Transform an mdast node to hast.\n * @property {Options} options\n *   Configuration.\n * @property {(from: MdastNodes, node: HastNodes) => undefined} patch\n *   Copy a node’s positional info.\n * @property {<Type extends HastRootContent>(nodes: Array<Type>, loose?: boolean | undefined) => Array<HastText | Type>} wrap\n *   Wrap `nodes` with line endings between each node, adds initial/final line endings when `loose`.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {visit} from 'unist-util-visit'\nimport {position} from 'unist-util-position'\nimport {handlers as defaultHandlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Create `state` from an mdast tree.\n *\n * @param {MdastNodes} tree\n *   mdast node to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {State}\n *   `state` function.\n */\nexport function createState(tree, options) {\n  const settings = options || emptyOptions\n  /** @type {Map<string, MdastDefinition>} */\n  const definitionById = new Map()\n  /** @type {Map<string, MdastFootnoteDefinition>} */\n  const footnoteById = new Map()\n  /** @type {Map<string, number>} */\n  const footnoteCounts = new Map()\n  /** @type {Handlers} */\n  // @ts-expect-error: the root handler returns a root.\n  // Hard to type.\n  const handlers = {...defaultHandlers, ...settings.handlers}\n\n  /** @type {State} */\n  const state = {\n    all,\n    applyData,\n    definitionById,\n    footnoteById,\n    footnoteCounts,\n    footnoteOrder: [],\n    handlers,\n    one,\n    options: settings,\n    patch,\n    wrap\n  }\n\n  visit(tree, function (node) {\n    if (node.type === 'definition' || node.type === 'footnoteDefinition') {\n      const map = node.type === 'definition' ? definitionById : footnoteById\n      const id = String(node.identifier).toUpperCase()\n\n      // Mimick CM behavior of link definitions.\n      // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/9032189/lib/index.js#L20-L21>.\n      if (!map.has(id)) {\n        // @ts-expect-error: node type matches map.\n        map.set(id, node)\n      }\n    }\n  })\n\n  return state\n\n  /**\n   * Transform an mdast node into a hast node.\n   *\n   * @param {MdastNodes} node\n   *   mdast node.\n   * @param {MdastParents | undefined} [parent]\n   *   Parent of `node`.\n   * @returns {Array<HastElementContent> | HastElementContent | undefined}\n   *   Resulting hast node.\n   */\n  function one(node, parent) {\n    const type = node.type\n    const handle = state.handlers[type]\n\n    if (own.call(state.handlers, type) && handle) {\n      return handle(state, node, parent)\n    }\n\n    if (state.options.passThrough && state.options.passThrough.includes(type)) {\n      if ('children' in node) {\n        const {children, ...shallow} = node\n        const result = structuredClone(shallow)\n        // @ts-expect-error: TS doesn’t understand…\n        result.children = state.all(node)\n        // @ts-expect-error: TS doesn’t understand…\n        return result\n      }\n\n      // @ts-expect-error: it’s custom.\n      return structuredClone(node)\n    }\n\n    const unknown = state.options.unknownHandler || defaultUnknownHandler\n\n    return unknown(state, node, parent)\n  }\n\n  /**\n   * Transform the children of an mdast node into hast nodes.\n   *\n   * @param {MdastNodes} parent\n   *   mdast node to compile\n   * @returns {Array<HastElementContent>}\n   *   Resulting hast nodes.\n   */\n  function all(parent) {\n    /** @type {Array<HastElementContent>} */\n    const values = []\n\n    if ('children' in parent) {\n      const nodes = parent.children\n      let index = -1\n      while (++index < nodes.length) {\n        const result = state.one(nodes[index], parent)\n\n        // To do: see if we van clean this? Can we merge texts?\n        if (result) {\n          if (index && nodes[index - 1].type === 'break') {\n            if (!Array.isArray(result) && result.type === 'text') {\n              result.value = trimMarkdownSpaceStart(result.value)\n            }\n\n            if (!Array.isArray(result) && result.type === 'element') {\n              const head = result.children[0]\n\n              if (head && head.type === 'text') {\n                head.value = trimMarkdownSpaceStart(head.value)\n              }\n            }\n          }\n\n          if (Array.isArray(result)) {\n            values.push(...result)\n          } else {\n            values.push(result)\n          }\n        }\n      }\n    }\n\n    return values\n  }\n}\n\n/**\n * Copy a node’s positional info.\n *\n * @param {MdastNodes} from\n *   mdast node to copy from.\n * @param {HastNodes} to\n *   hast node to copy into.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  if (from.position) to.position = position(from)\n}\n\n/**\n * Honor the `data` of `from` and maybe generate an element instead of `to`.\n *\n * @template {HastNodes} Type\n *   Node type.\n * @param {MdastNodes} from\n *   mdast node to use data from.\n * @param {Type} to\n *   hast node to change.\n * @returns {HastElement | Type}\n *   Nothing.\n */\nfunction applyData(from, to) {\n  /** @type {HastElement | Type} */\n  let result = to\n\n  // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n  if (from && from.data) {\n    const hName = from.data.hName\n    const hChildren = from.data.hChildren\n    const hProperties = from.data.hProperties\n\n    if (typeof hName === 'string') {\n      // Transforming the node resulted in an element with a different name\n      // than wanted:\n      if (result.type === 'element') {\n        result.tagName = hName\n      }\n      // Transforming the node resulted in a non-element, which happens for\n      // raw, text, and root nodes (unless custom handlers are passed).\n      // The intent of `hName` is to create an element, but likely also to keep\n      // the content around (otherwise: pass `hChildren`).\n      else {\n        /** @type {Array<HastElementContent>} */\n        // @ts-expect-error: assume no doctypes in `root`.\n        const children = 'children' in result ? result.children : [result]\n        result = {type: 'element', tagName: hName, properties: {}, children}\n      }\n    }\n\n    if (result.type === 'element' && hProperties) {\n      Object.assign(result.properties, structuredClone(hProperties))\n    }\n\n    if (\n      'children' in result &&\n      result.children &&\n      hChildren !== null &&\n      hChildren !== undefined\n    ) {\n      result.children = hChildren\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform an unknown node.\n *\n * @param {State} state\n *   Info passed around.\n * @param {MdastNodes} node\n *   Unknown mdast node.\n * @returns {HastElement | HastText}\n *   Resulting hast node.\n */\nfunction defaultUnknownHandler(state, node) {\n  const data = node.data || {}\n  /** @type {HastElement | HastText} */\n  const result =\n    'value' in node &&\n    !(own.call(data, 'hProperties') || own.call(data, 'hChildren'))\n      ? {type: 'text', value: node.value}\n      : {\n          type: 'element',\n          tagName: 'div',\n          properties: {},\n          children: state.all(node)\n        }\n\n  state.patch(node, result)\n  return state.applyData(node, result)\n}\n\n/**\n * Wrap `nodes` with line endings between each node.\n *\n * @template {HastRootContent} Type\n *   Node type.\n * @param {Array<Type>} nodes\n *   List of nodes to wrap.\n * @param {boolean | undefined} [loose=false]\n *   Whether to add line endings at start and end (default: `false`).\n * @returns {Array<HastText | Type>}\n *   Wrapped nodes.\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<HastText | Type>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push({type: 'text', value: '\\n'})\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push({type: 'text', value: '\\n'})\n  }\n\n  return result\n}\n\n/**\n * Trim spaces and tabs at the start of `value`.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Result.\n */\nfunction trimMarkdownSpaceStart(value) {\n  let index = 0\n  let code = value.charCodeAt(index)\n\n  while (code === 9 || code === 32) {\n    index++\n    code = value.charCodeAt(index)\n  }\n\n  return value.slice(index)\n}\n","/**\n * @typedef {import('hast').Nodes} HastNodes\n * @typedef {import('mdast').Nodes} MdastNodes\n * @typedef {import('./state.js').Options} Options\n */\n\nimport {ok as assert} from 'devlop'\nimport {footer} from './footer.js'\nimport {createState} from './state.js'\n\n/**\n * Transform mdast to hast.\n *\n * ##### Notes\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most utilities ignore `raw` nodes but two notable ones don’t:\n *\n * *   `hast-util-to-html` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful\n *     if you completely trust authors\n * *   `hast-util-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only\n *     way to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `mdast-util-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * Example: headings (DOM clobbering) in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @param {MdastNodes} tree\n *   mdast tree.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {HastNodes}\n *   hast tree.\n */\nexport function toHast(tree, options) {\n  const state = createState(tree, options)\n  const node = state.one(tree, undefined)\n  const foot = footer(state)\n  /** @type {HastNodes} */\n  const result = Array.isArray(node)\n    ? {type: 'root', children: node}\n    : node || {type: 'root', children: []}\n\n  if (foot) {\n    // If there’s a footer, there were definitions, meaning block\n    // content.\n    // So `result` is a parent node.\n    assert('children' in result)\n    result.children.push({type: 'text', value: '\\n'}, foot)\n  }\n\n  return result\n}\n","// Include `data` fields in mdast and `raw` nodes in hast.\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} ToHastOptions\n * @typedef {import('unified').Processor} Processor\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<ToHastOptions, 'file'>} Options\n *\n * @callback TransformBridge\n *   Bridge-mode.\n *\n *   Runs the destination with the new hast tree.\n *   Discards result.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {Promise<undefined>}\n *   Nothing.\n *\n * @callback TransformMutate\n *  Mutate-mode.\n *\n *  Further transformers run on the hast tree.\n * @param {MdastRoot} tree\n *   Tree.\n * @param {VFile} file\n *   File.\n * @returns {HastRoot}\n *   Tree (hast).\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n/**\n * Turn markdown into HTML.\n *\n * ##### Notes\n *\n * ###### Signature\n *\n * *   if a processor is given, runs the (rehype) plugins used on it with a\n *     hast tree, then discards the result (*bridge mode*)\n * *   otherwise, returns a hast tree, the plugins used after `remarkRehype`\n *     are rehype plugins (*mutate mode*)\n *\n * > 👉 **Note**: It’s highly unlikely that you want to pass a `processor`.\n *\n * ###### HTML\n *\n * Raw HTML is available in mdast as `html` nodes and can be embedded in hast\n * as semistandard `raw` nodes.\n * Most plugins ignore `raw` nodes but two notable ones don’t:\n *\n * *   `rehype-stringify` also has an option `allowDangerousHtml` which will\n *     output the raw HTML.\n *     This is typically discouraged as noted by the option name but is useful if\n *     you completely trust authors\n * *   `rehype-raw` can handle the raw embedded HTML strings by parsing them\n *     into standard hast nodes (`element`, `text`, etc).\n *     This is a heavy task as it needs a full HTML parser, but it is the only way\n *     to support untrusted content\n *\n * ###### Footnotes\n *\n * Many options supported here relate to footnotes.\n * Footnotes are not specified by CommonMark, which we follow by default.\n * They are supported by GitHub, so footnotes can be enabled in markdown with\n * `remark-gfm`.\n *\n * The options `footnoteBackLabel` and `footnoteLabel` define natural language\n * that explains footnotes, which is hidden for sighted users but shown to\n * assistive technology.\n * When your page is not in English, you must define translated values.\n *\n * Back references use ARIA attributes, but the section label itself uses a\n * heading that is hidden with an `sr-only` class.\n * To show it to sighted users, define different attributes in\n * `footnoteLabelProperties`.\n *\n * ###### Clobbering\n *\n * Footnotes introduces a problem, as it links footnote calls to footnote\n * definitions on the page through `id` attributes generated from user content,\n * which results in DOM clobbering.\n *\n * DOM clobbering is this:\n *\n * ```html\n * <p id=x></p>\n * <script>alert(x) // `x` now refers to the DOM `p#x` element</script>\n * ```\n *\n * Elements by their ID are made available by browsers on the `window` object,\n * which is a security risk.\n * Using a prefix solves this problem.\n *\n * More information on how to handle clobbering and the prefix is explained in\n * *Example: headings (DOM clobbering)* in `rehype-sanitize`.\n *\n * ###### Unknown nodes\n *\n * Unknown nodes are nodes with a type that isn’t in `handlers` or `passThrough`.\n * The default behavior for unknown nodes is:\n *\n * *   when the node has a `value` (and doesn’t have `data.hName`,\n *     `data.hProperties`, or `data.hChildren`, see later), create a hast `text`\n *     node\n * *   otherwise, create a `<div>` element (which could be changed with\n *     `data.hName`), with its children mapped from mdast to hast as well\n *\n * This behavior can be changed by passing an `unknownHandler`.\n *\n * @overload\n * @param {Processor} processor\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformBridge}\n *\n * @overload\n * @param {Readonly<Options> | null | undefined} [options]\n * @returns {TransformMutate}\n *\n * @param {Readonly<Options> | Processor | null | undefined} [destination]\n *   Processor or configuration (optional).\n * @param {Readonly<Options> | null | undefined} [options]\n *   When a processor was given, configuration (optional).\n * @returns {TransformBridge | TransformMutate}\n *   Transform.\n */\nexport default function remarkRehype(destination, options) {\n  if (destination && 'run' in destination) {\n    /**\n     * @type {TransformBridge}\n     */\n    return async function (tree, file) {\n      // Cast because root in -> root out.\n      const hastTree = /** @type {HastRoot} */ (\n        toHast(tree, {file, ...options})\n      )\n      await destination.run(hastTree, file)\n    }\n  }\n\n  /**\n   * @type {TransformMutate}\n   */\n  return function (tree, file) {\n    // Cast because root in -> root out.\n    return /** @type {HastRoot} */ (\n      toHast(tree, {file, ...(options || destination)})\n    )\n  }\n}\n","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","// To do: remove `void`s\n// To do: remove `null` from output of our APIs, allow it as user APIs.\n\n/**\n * @typedef {(error?: Error | null | undefined, ...output: Array<any>) => void} Callback\n *   Callback.\n *\n * @typedef {(...input: Array<any>) => any} Middleware\n *   Ware.\n *\n * @typedef Pipeline\n *   Pipeline.\n * @property {Run} run\n *   Run the pipeline.\n * @property {Use} use\n *   Add middleware.\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n *\n *   Calls `done` on completion with either an error or the output of the\n *   last middleware.\n *\n *   > 👉 **Note**: as the length of input defines whether async functions get a\n *   > `next` function,\n *   > it’s recommended to keep `input` at one value normally.\n\n *\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n *   Pipeline.\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error | null | undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware` into a uniform interface.\n *\n * You can pass all input to the resulting function.\n * `callback` is then called with the output of `middleware`.\n *\n * If `middleware` accepts more arguments than the later given in input,\n * an extra `done` function is passed to it after that input,\n * which must be called by `middleware`.\n *\n * The first value in `input` is the main input value.\n * All other input values are the rest input values.\n * The values given to `callback` are the input values,\n * merged with every non-nullish output value.\n *\n * * if `middleware` throws an error,\n *   returns a promise that is rejected,\n *   or calls the given `done` function with an error,\n *   `callback` is called with that error\n * * if `middleware` returns a value or returns a promise that is resolved,\n *   that value is the main output value\n * * if `middleware` calls `done`,\n *   all non-nullish values except for the first one (the error) overwrite the\n *   output values\n *\n * @param {Middleware} middleware\n *   Function to wrap.\n * @param {Callback} callback\n *   Callback called with the output of `middleware`.\n * @returns {Run}\n *   Wrapped middleware.\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result && result.then && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   *\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | null | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.codePointAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.codePointAt(index) === ext.codePointAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.codePointAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.codePointAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.codePointAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.codePointAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.codePointAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.codePointAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.codePointAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.codePointAt(result.length - 1) !== 46 /* `.` */ ||\n          result.codePointAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * Checks if a value has the shape of a WHATWG URL object.\n *\n * Using a symbol or instanceof would not be able to recognize URL objects\n * coming from other implementations (e.g. in Electron), so instead we are\n * checking some well known properties for a lack of a better test.\n *\n * We use `href` and `protocol` as they are the only properties that are\n * easy to retrieve and calculate due to the lazy nature of the getters.\n *\n * We check for auth attribute to distinguish legacy url instance with\n * WHATWG URL instance.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js#L720>\nexport function isUrl(fileUrlOrPath) {\n  return Boolean(\n    fileUrlOrPath !== null &&\n      typeof fileUrlOrPath === 'object' &&\n      'href' in fileUrlOrPath &&\n      fileUrlOrPath.href &&\n      'protocol' in fileUrlOrPath &&\n      fileUrlOrPath.protocol &&\n      // @ts-expect-error: indexing is fine.\n      fileUrlOrPath.auth === undefined\n  )\n}\n","import {isUrl} from './minurl.shared.js'\n\nexport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/6a3403c/lib/internal/url.js>\n\n/**\n * @param {URL | string} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.codePointAt(index) === 37 /* `%` */ &&\n      pathname.codePointAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.codePointAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n * @typedef {import('vfile-message').Options} MessageOptions\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {Options | URL | VFile | Value} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {string | null | undefined} [basename]\n *   Set `basename` (name).\n * @property {string | null | undefined} [cwd]\n *   Set `cwd` (working directory).\n * @property {Data | null | undefined} [data]\n *   Set `data` (associated info).\n * @property {string | null | undefined} [dirname]\n *   Set `dirname` (path w/o basename).\n * @property {string | null | undefined} [extname]\n *   Set `extname` (extension with dot).\n * @property {Array<string> | null | undefined} [history]\n *   Set `history` (paths the file moved between).\n * @property {URL | string | null | undefined} [path]\n *   Set `path` (current path).\n * @property {string | null | undefined} [stem]\n *   Set `stem` (name without extension).\n * @property {Value | null | undefined} [value]\n *   Set `value` (the contents of the file).\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/60adcb0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {Record<string, unknown> & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template [Settings=ReporterSettings]\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport {VFileMessage} from 'vfile-message'\nimport {path} from 'vfile/do-not-use-conditional-minpath'\nimport {proc} from 'vfile/do-not-use-conditional-minproc'\nimport {urlToPath, isUrl} from 'vfile/do-not-use-conditional-minurl'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n */\nconst order = /** @type {const} */ ([\n  'history',\n  'path',\n  'basename',\n  'stem',\n  'extname',\n  'dirname'\n])\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Uint8Array` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else if (typeof value === 'string' || isUint8Array(value)) {\n      options = {value}\n    } else {\n      options = value\n    }\n\n    /* eslint-disable no-unused-expressions */\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /**\n     * Place to store custom info (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of file paths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   *\n   * @returns {string | undefined}\n   *   Basename.\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} basename\n   *   Basename.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   *\n   * @returns {string | undefined}\n   *   Dirname.\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} dirname\n   *   Dirname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   *\n   * @returns {string | undefined}\n   *   Extname.\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   *\n   * @param {string | undefined} extname\n   *   Extname.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.codePointAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   *   Path.\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {URL | string} path\n   *   Path.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * @returns {string | undefined}\n   *   Stem.\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   *\n   * @param {string} stem\n   *   Stem.\n   * @returns {undefined}\n   *   Nothing.\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  // Normal prototypal methods.\n  /**\n   * Create a fatal message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `true` (error; file not usable)\n   * and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {never}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Never.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n\n  /**\n   * Create an info message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `undefined` (info; change\n   * likely not needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(causeOrReason, optionsOrParentOrPlace, origin) {\n    // @ts-expect-error: the overloads are fine.\n    const message = this.message(causeOrReason, optionsOrParentOrPlace, origin)\n\n    message.fatal = undefined\n\n    return message\n  }\n\n  /**\n   * Create a message for `reason` associated with the file.\n   *\n   * The `fatal` field of the message is set to `false` (warning; change may be\n   * needed) and the `file` field is set to the current file path.\n   * The message is added to the `messages` field on `file`.\n   *\n   * > 🪦 **Note**: also has obsolete signatures.\n   *\n   * @overload\n   * @param {string} reason\n   * @param {MessageOptions | null | undefined} [options]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {string} reason\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Node | NodeLike | null | undefined} parent\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {Point | Position | null | undefined} place\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @overload\n   * @param {Error | VFileMessage} cause\n   * @param {string | null | undefined} [origin]\n   * @returns {VFileMessage}\n   *\n   * @param {Error | VFileMessage | string} causeOrReason\n   *   Reason for message, should use markdown.\n   * @param {Node | NodeLike | MessageOptions | Point | Position | string | null | undefined} [optionsOrParentOrPlace]\n   *   Configuration (optional).\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(causeOrReason, optionsOrParentOrPlace, origin) {\n    const message = new VFileMessage(\n      // @ts-expect-error: the overloads are fine.\n      causeOrReason,\n      optionsOrParentOrPlace,\n      origin\n    )\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * > **Note**: which encodings are supported depends on the engine.\n   * > For info on Node.js, see:\n   * > <https://nodejs.org/api/util.html#whatwg-supported-encodings>.\n   *\n   * @param {string | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Uint8Array`\n   *   (default: `'utf-8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    if (this.value === undefined) {\n      return ''\n    }\n\n    if (typeof this.value === 'string') {\n      return this.value\n    }\n\n    const decoder = new TextDecoder(encoding || undefined)\n    return decoder.decode(this.value)\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {undefined}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","export const CallableInstance =\n  /**\n   * @type {new <Parameters extends Array<unknown>, Result>(property: string | symbol) => (...parameters: Parameters) => Result}\n   */\n  (\n    /** @type {unknown} */\n    (\n      /**\n       * @this {Function}\n       * @param {string | symbol} property\n       * @returns {(...parameters: Array<unknown>) => unknown}\n       */\n      function (property) {\n        const self = this\n        const constr = self.constructor\n        const proto = /** @type {Record<string | symbol, Function>} */ (\n          // Prototypes do exist.\n          // type-coverage:ignore-next-line\n          constr.prototype\n        )\n        const func = proto[property]\n        /** @type {(...parameters: Array<unknown>) => unknown} */\n        const apply = function () {\n          return func.apply(apply, arguments)\n        }\n\n        Object.setPrototypeOf(apply, proto)\n\n        const names = Object.getOwnPropertyNames(func)\n\n        for (const p of names) {\n          const descriptor = Object.getOwnPropertyDescriptor(func, p)\n          if (descriptor) Object.defineProperty(apply, p, descriptor)\n        }\n\n        return apply\n      }\n    )\n  )\n","/**\n * @typedef {import('trough').Pipeline} Pipeline\n *\n * @typedef {import('unist').Node} Node\n *\n * @typedef {import('vfile').Compatible} Compatible\n * @typedef {import('vfile').Value} Value\n *\n * @typedef {import('../index.js').CompileResultMap} CompileResultMap\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Settings} Settings\n */\n\n/**\n * @typedef {CompileResultMap[keyof CompileResultMap]} CompileResults\n *   Acceptable results from compilers.\n *\n *   To register custom results, add them to\n *   {@link CompileResultMap `CompileResultMap`}.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the compiler receives (default: `Node`).\n * @template {CompileResults} [Result=CompileResults]\n *   The thing that the compiler yields (default: `CompileResults`).\n * @callback Compiler\n *   A **compiler** handles the compiling of a syntax tree to something else\n *   (in most cases, text) (TypeScript type).\n *\n *   It is used in the stringify phase and called with a {@link Node `Node`}\n *   and {@link VFile `VFile`} representation of the document to compile.\n *   It should return the textual representation of the given tree (typically\n *   `string`).\n *\n *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n *   > return `string` (or `Uint8Array`).\n *   > Some compilers, such as the one configured with\n *   > [`rehype-react`][rehype-react], return other values (in this case, a\n *   > React tree).\n *   > If you’re using a compiler that doesn’t serialize, expect different\n *   > result values.\n *   >\n *   > To register custom results in TypeScript, add them to\n *   > {@link CompileResultMap `CompileResultMap`}.\n *\n *   [rehype-react]: https://github.com/rehypejs/rehype-react\n * @param {Tree} tree\n *   Tree to compile.\n * @param {VFile} file\n *   File associated with `tree`.\n * @returns {Result}\n *   New content: compiled text (`string` or `Uint8Array`, for `file.value`) or\n *   something else (for `file.result`).\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The node that the parser yields (default: `Node`)\n * @callback Parser\n *   A **parser** handles the parsing of text to a syntax tree.\n *\n *   It is used in the parse phase and is called with a `string` and\n *   {@link VFile `VFile`} of the document to parse.\n *   It must return the syntax tree representation of the given file\n *   ({@link Node `Node`}).\n * @param {string} document\n *   Document to parse.\n * @param {VFile} file\n *   File associated with `document`.\n * @returns {Tree}\n *   Node representing the given file.\n */\n\n/**\n * @typedef {(\n *   Plugin<Array<any>, any, any> |\n *   PluginTuple<Array<any>, any, any> |\n *   Preset\n * )} Pluggable\n *   Union of the different ways to add plugins and settings.\n */\n\n/**\n * @typedef {Array<Pluggable>} PluggableList\n *   List of plugins and presets.\n */\n\n// Note: we can’t use `callback` yet as it messes up `this`:\n//  <https://github.com/microsoft/TypeScript/issues/55197>.\n/**\n * @template {Array<unknown>} [PluginParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=Node]\n *   Value that is expected as input (default: `Node`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=Input]\n *   Value that is yielded as output (default: `Input`).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   (this: Processor, ...parameters: PluginParameters) =>\n *     Input extends string ? // Parser.\n *        Output extends Node | undefined ? undefined | void : never :\n *     Output extends CompileResults ? // Compiler.\n *        Input extends Node | undefined ? undefined | void : never :\n *     Transformer<\n *       Input extends Node ? Input : Node,\n *       Output extends Node ? Output : Node\n *     > | undefined | void\n * )} Plugin\n *   Single plugin.\n *\n *   Plugins configure the processors they are applied on in the following\n *   ways:\n *\n *   *   they change the processor, such as the parser, the compiler, or by\n *       configuring data\n *   *   they specify how to handle trees and files\n *\n *   In practice, they are functions that can receive options and configure the\n *   processor (`this`).\n *\n *   > 👉 **Note**: plugins are called when the processor is *frozen*, not when\n *   > they are applied.\n */\n\n/**\n * Tuple of a plugin and its configuration.\n *\n * The first item is a plugin, the rest are its parameters.\n *\n * @template {Array<unknown>} [TupleParameters=[]]\n *   Arguments passed to the plugin (default: `[]`, the empty tuple).\n * @template {Node | string | undefined} [Input=undefined]\n *   Value that is expected as input (optional).\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node it expects.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be\n *       `string`.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be the\n *       node it expects.\n * @template [Output=undefined] (optional).\n *   Value that is yielded as output.\n *\n *   *   If the plugin returns a {@link Transformer `Transformer`}, this\n *       should be the node that that yields.\n *   *   If the plugin sets a {@link Parser `Parser`}, this should be the\n *       node that it yields.\n *   *   If the plugin sets a {@link Compiler `Compiler`}, this should be\n *       result it yields.\n * @typedef {(\n *   [\n *     plugin: Plugin<TupleParameters, Input, Output>,\n *     ...parameters: TupleParameters\n *   ]\n * )} PluginTuple\n */\n\n/**\n * @typedef Preset\n *   Sharable configuration.\n *\n *   They can contain plugins and settings.\n * @property {PluggableList | undefined} [plugins]\n *   List of plugins and presets (optional).\n * @property {Settings | undefined} [settings]\n *   Shared settings for parsers and compilers (optional).\n */\n\n/**\n * @template {VFile} [File=VFile]\n *   The file that the callback receives (default: `VFile`).\n * @callback ProcessCallback\n *   Callback called when the process is done.\n *\n *   Called with either an error or a result.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {File | undefined} [file]\n *   Processed file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   The tree that the callback receives (default: `Node`).\n * @callback RunCallback\n *   Callback called when transformers are done.\n *\n *   Called with either an error or results.\n * @param {Error | undefined} [error]\n *   Fatal error (optional).\n * @param {Tree | undefined} [tree]\n *   Transformed tree (optional).\n * @param {VFile | undefined} [file]\n *   File (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Output=Node]\n *   Node type that the transformer yields (default: `Node`).\n * @callback TransformCallback\n *   Callback passed to transforms.\n *\n *   If the signature of a `transformer` accepts a third argument, the\n *   transformer may perform asynchronous operations, and must call it.\n * @param {Error | undefined} [error]\n *   Fatal error to stop the process (optional).\n * @param {Output | undefined} [tree]\n *   New, changed, tree (optional).\n * @param {VFile | undefined} [file]\n *   New, changed, file (optional).\n * @returns {undefined}\n *   Nothing.\n */\n\n/**\n * @template {Node} [Input=Node]\n *   Node type that the transformer expects (default: `Node`).\n * @template {Node} [Output=Input]\n *   Node type that the transformer yields (default: `Input`).\n * @callback Transformer\n *   Transformers handle syntax trees and files.\n *\n *   They are functions that are called each time a syntax tree and file are\n *   passed through the run phase.\n *   When an error occurs in them (either because it’s thrown, returned,\n *   rejected, or passed to `next`), the process stops.\n *\n *   The run phase is handled by [`trough`][trough], see its documentation for\n *   the exact semantics of these functions.\n *\n *   > 👉 **Note**: you should likely ignore `next`: don’t accept it.\n *   > it supports callback-style async work.\n *   > But promises are likely easier to reason about.\n *\n *   [trough]: https://github.com/wooorm/trough#function-fninput-next\n * @param {Input} tree\n *   Tree to handle.\n * @param {VFile} file\n *   File to handle.\n * @param {TransformCallback<Output>} next\n *   Callback.\n * @returns {(\n *   Promise<Output | undefined | void> |\n *   Promise<never> | // For some reason this is needed separately.\n *   Output |\n *   Error |\n *   undefined |\n *   void\n * )}\n *   If you accept `next`, nothing.\n *   Otherwise:\n *\n *   *   `Error` — fatal error to stop the process\n *   *   `Promise<undefined>` or `undefined` — the next transformer keeps using\n *       same tree\n *   *   `Promise<Node>` or `Node` — new, changed, tree\n */\n\n/**\n * @template {Node | undefined} ParseTree\n *   Output of `parse`.\n * @template {Node | undefined} HeadTree\n *   Input for `run`.\n * @template {Node | undefined} TailTree\n *   Output for `run`.\n * @template {Node | undefined} CompileTree\n *   Input of `stringify`.\n * @template {CompileResults | undefined} CompileResult\n *   Output of `stringify`.\n * @template {Node | string | undefined} Input\n *   Input of plugin.\n * @template Output\n *   Output of plugin (optional).\n * @typedef {(\n *   Input extends string\n *     ? Output extends Node | undefined\n *       ? // Parser.\n *         Processor<\n *           Output extends undefined ? ParseTree : Output,\n *           HeadTree,\n *           TailTree,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Output extends CompileResults\n *     ? Input extends Node | undefined\n *       ? // Compiler.\n *         Processor<\n *           ParseTree,\n *           HeadTree,\n *           TailTree,\n *           Input extends undefined ? CompileTree : Input,\n *           Output extends undefined ? CompileResult : Output\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : Input extends Node | undefined\n *     ? Output extends Node | undefined\n *       ? // Transform.\n *         Processor<\n *           ParseTree,\n *           HeadTree extends undefined ? Input : HeadTree,\n *           Output extends undefined ? TailTree : Output,\n *           CompileTree,\n *           CompileResult\n *         >\n *       : // Unknown.\n *         Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n *     : // Unknown.\n *       Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>\n * )} UsePlugin\n *   Create a processor based on the input/output of a {@link Plugin plugin}.\n */\n\n/**\n * @template {CompileResults | undefined} Result\n *   Node type that the transformer yields.\n * @typedef {(\n *   Result extends Value | undefined ?\n *     VFile :\n *     VFile & {result: Result}\n *   )} VFileWithOutput\n *   Type to generate a {@link VFile `VFile`} corresponding to a compiler result.\n *\n *   If a result that is not acceptable on a `VFile` is used, that will\n *   be stored on the `result` field of {@link VFile `VFile`}.\n */\n\nimport {bail} from 'bail'\nimport extend from 'extend'\nimport {ok as assert} from 'devlop'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\nimport {CallableInstance} from './callable-instance.js'\n\n// To do: next major: drop `Compiler`, `Parser`: prefer lowercase.\n\n// To do: we could start yielding `never` in TS when a parser is missing and\n// `parse` is called.\n// Currently, we allow directly setting `processor.parser`, which is untyped.\n\nconst own = {}.hasOwnProperty\n\n/**\n * @template {Node | undefined} [ParseTree=undefined]\n *   Output of `parse` (optional).\n * @template {Node | undefined} [HeadTree=undefined]\n *   Input for `run` (optional).\n * @template {Node | undefined} [TailTree=undefined]\n *   Output for `run` (optional).\n * @template {Node | undefined} [CompileTree=undefined]\n *   Input of `stringify` (optional).\n * @template {CompileResults | undefined} [CompileResult=undefined]\n *   Output of `stringify` (optional).\n * @extends {CallableInstance<[], Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>>}\n */\nexport class Processor extends CallableInstance {\n  /**\n   * Create a processor.\n   */\n  constructor() {\n    // If `Processor()` is called (w/o new), `copy` is called instead.\n    super('copy')\n\n    /**\n     * Compiler to use (deprecated).\n     *\n     * @deprecated\n     *   Use `compiler` instead.\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.Compiler = undefined\n\n    /**\n     * Parser to use (deprecated).\n     *\n     * @deprecated\n     *   Use `parser` instead.\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.Parser = undefined\n\n    // Note: the following fields are considered private.\n    // However, they are needed for tests, and TSC generates an untyped\n    // `private freezeIndex` field for, which trips `type-coverage` up.\n    // Instead, we use `@deprecated` to visualize that they shouldn’t be used.\n    /**\n     * Internal list of configured plugins.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Array<PluginTuple<Array<unknown>>>}\n     */\n    this.attachers = []\n\n    /**\n     * Compiler to use.\n     *\n     * @type {(\n     *   Compiler<\n     *     CompileTree extends undefined ? Node : CompileTree,\n     *     CompileResult extends undefined ? CompileResults : CompileResult\n     *   > |\n     *   undefined\n     * )}\n     */\n    this.compiler = undefined\n\n    /**\n     * Internal state to track where we are while freezing.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {number}\n     */\n    this.freezeIndex = -1\n\n    /**\n     * Internal state to track whether we’re frozen.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {boolean | undefined}\n     */\n    this.frozen = undefined\n\n    /**\n     * Internal state.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Data}\n     */\n    this.namespace = {}\n\n    /**\n     * Parser to use.\n     *\n     * @type {(\n     *   Parser<ParseTree extends undefined ? Node : ParseTree> |\n     *   undefined\n     * )}\n     */\n    this.parser = undefined\n\n    /**\n     * Internal list of configured transformers.\n     *\n     * @deprecated\n     *   This is a private internal property and should not be used.\n     * @type {Pipeline}\n     */\n    this.transformers = trough()\n  }\n\n  /**\n   * Copy a processor.\n   *\n   * @deprecated\n   *   This is a private internal method and should not be used.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   New *unfrozen* processor ({@link Processor `Processor`}) that is\n   *   configured to work the same as its ancestor.\n   *   When the descendant processor is configured in the future it does not\n   *   affect the ancestral processor.\n   */\n  copy() {\n    // Cast as the type parameters will be the same after attaching.\n    const destination =\n      /** @type {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>} */ (\n        new Processor()\n      )\n    let index = -1\n\n    while (++index < this.attachers.length) {\n      const attacher = this.attachers[index]\n      destination.use(...attacher)\n    }\n\n    destination.data(extend(true, {}, this.namespace))\n\n    return destination\n  }\n\n  /**\n   * Configure the processor with info available to all plugins.\n   * Information is stored in an object.\n   *\n   * Typically, options can be given to a specific plugin, but sometimes it\n   * makes sense to have information shared with several plugins.\n   * For example, a list of HTML elements that are self-closing, which is\n   * needed during all phases.\n   *\n   * > 👉 **Note**: setting information cannot occur on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * > 👉 **Note**: to register custom data in TypeScript, augment the\n   * > {@link Data `Data`} interface.\n   *\n   * @example\n   *   This example show how to get and set info:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   const processor = unified().data('alpha', 'bravo')\n   *\n   *   processor.data('alpha') // => 'bravo'\n   *\n   *   processor.data() // => {alpha: 'bravo'}\n   *\n   *   processor.data({charlie: 'delta'})\n   *\n   *   processor.data() // => {charlie: 'delta'}\n   *   ```\n   *\n   * @template {keyof Data} Key\n   *\n   * @overload\n   * @returns {Data}\n   *\n   * @overload\n   * @param {Data} dataset\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Key} key\n   * @returns {Data[Key]}\n   *\n   * @overload\n   * @param {Key} key\n   * @param {Data[Key]} value\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @param {Data | Key} [key]\n   *   Key to get or set, or entire dataset to set, or nothing to get the\n   *   entire dataset (optional).\n   * @param {Data[Key]} [value]\n   *   Value to set (optional).\n   * @returns {unknown}\n   *   The current processor when setting, the value at `key` when getting, or\n   *   the entire dataset when getting without key.\n   */\n  data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', this.frozen)\n        this.namespace[key] = value\n        return this\n      }\n\n      // Get `key`.\n      return (own.call(this.namespace, key) && this.namespace[key]) || undefined\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', this.frozen)\n      this.namespace = key\n      return this\n    }\n\n    // Get space.\n    return this.namespace\n  }\n\n  /**\n   * Freeze a processor.\n   *\n   * Frozen processors are meant to be extended and not to be configured\n   * directly.\n   *\n   * When a processor is frozen it cannot be unfrozen.\n   * New processors working the same way can be created by calling the\n   * processor.\n   *\n   * It’s possible to freeze processors explicitly by calling `.freeze()`.\n   * Processors freeze automatically when `.parse()`, `.run()`, `.runSync()`,\n   * `.stringify()`, `.process()`, or `.processSync()` are called.\n   *\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   The current processor.\n   */\n  freeze() {\n    if (this.frozen) {\n      return this\n    }\n\n    // Cast so that we can type plugins easier.\n    // Plugins are supposed to be usable on different processors, not just on\n    // this exact processor.\n    const self = /** @type {Processor} */ (/** @type {unknown} */ (this))\n\n    while (++this.freezeIndex < this.attachers.length) {\n      const [attacher, ...options] = this.attachers[this.freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      const transformer = attacher.call(self, ...options)\n\n      if (typeof transformer === 'function') {\n        this.transformers.use(transformer)\n      }\n    }\n\n    this.frozen = true\n    this.freezeIndex = Number.POSITIVE_INFINITY\n\n    return this\n  }\n\n  /**\n   * Parse text to a syntax tree.\n   *\n   * > 👉 **Note**: `parse` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `parse` performs the parse phase, not the run phase or other\n   * > phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   file to parse (optional); typically `string` or `VFile`; any value\n   *   accepted as `x` in `new VFile(x)`.\n   * @returns {ParseTree extends undefined ? Node : ParseTree}\n   *   Syntax tree representing `file`.\n   */\n  parse(file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const parser = this.parser || this.Parser\n    assertParser('parse', parser)\n    return parser(String(realFile), realFile)\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * > 👉 **Note**: `process` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `process` performs the parse, run, and stringify phases.\n   *\n   * @overload\n   * @param {Compatible | undefined} file\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<VFileWithOutput<CompileResult>>}\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`]; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @param {ProcessCallback<VFileWithOutput<CompileResult>> | undefined} [done]\n   *   Callback (optional).\n   * @returns {Promise<VFile> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise a promise, rejected with a fatal error or resolved with the\n   *   processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  process(file, done) {\n    const self = this\n\n    this.freeze()\n    assertParser('process', this.parser || this.Parser)\n    assertCompiler('process', this.compiler || this.Compiler)\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {((file: VFileWithOutput<CompileResult>) => undefined | void) | undefined} resolve\n     * @param {(error: Error | undefined) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      const realFile = vfile(file)\n      // Assume `ParseTree` (the result of the parser) matches `HeadTree` (the\n      // input of the first transform).\n      const parseTree =\n        /** @type {HeadTree extends undefined ? Node : HeadTree} */ (\n          /** @type {unknown} */ (self.parse(realFile))\n        )\n\n      self.run(parseTree, realFile, function (error, tree, file) {\n        if (error || !tree || !file) {\n          return realDone(error)\n        }\n\n        // Assume `TailTree` (the output of the last transform) matches\n        // `CompileTree` (the input of the compiler).\n        const compileTree =\n          /** @type {CompileTree extends undefined ? Node : CompileTree} */ (\n            /** @type {unknown} */ (tree)\n          )\n\n        const compileResult = self.stringify(compileTree, file)\n\n        if (looksLikeAValue(compileResult)) {\n          file.value = compileResult\n        } else {\n          file.result = compileResult\n        }\n\n        realDone(error, /** @type {VFileWithOutput<CompileResult>} */ (file))\n      })\n\n      /**\n       * @param {Error | undefined} error\n       * @param {VFileWithOutput<CompileResult> | undefined} [file]\n       * @returns {undefined}\n       */\n      function realDone(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Process the given file as configured on the processor.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `processSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `processSync` performs the parse, run, and stringify phases.\n   *\n   * @param {Compatible | undefined} [file]\n   *   File (optional); typically `string` or `VFile`; any value accepted as\n   *   `x` in `new VFile(x)`.\n   * @returns {VFileWithOutput<CompileResult>}\n   *   The processed file.\n   *\n   *   The parsed, transformed, and compiled value is available at\n   *   `file.value` (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most\n   *   > compilers return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  processSync(file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {VFileWithOutput<CompileResult> | undefined} */\n    let result\n\n    this.freeze()\n    assertParser('processSync', this.parser || this.Parser)\n    assertCompiler('processSync', this.compiler || this.Compiler)\n\n    this.process(file, realDone)\n    assertDone('processSync', 'process', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n\n    return result\n\n    /**\n     * @type {ProcessCallback<VFileWithOutput<CompileResult>>}\n     */\n    function realDone(error, file) {\n      complete = true\n      bail(error)\n      result = file\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * > 👉 **Note**: `run` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `run` performs the run phase, not other phases.\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} file\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} done\n   * @returns {undefined}\n   *\n   * @overload\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   * @param {Compatible | undefined} [file]\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree>}\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {(\n   *   RunCallback<TailTree extends undefined ? Node : TailTree> |\n   *   Compatible\n   * )} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @param {RunCallback<TailTree extends undefined ? Node : TailTree>} [done]\n   *   Callback (optional).\n   * @returns {Promise<TailTree extends undefined ? Node : TailTree> | undefined}\n   *   Nothing if `done` is given.\n   *   Otherwise, a promise rejected with a fatal error or resolved with the\n   *   transformed tree.\n   */\n  run(tree, file, done) {\n    assertNode(tree)\n    this.freeze()\n\n    const transformers = this.transformers\n\n    if (!done && typeof file === 'function') {\n      done = file\n      file = undefined\n    }\n\n    return done ? executor(undefined, done) : new Promise(executor)\n\n    // Note: `void`s needed for TS.\n    /**\n     * @param {(\n     *   ((tree: TailTree extends undefined ? Node : TailTree) => undefined | void) |\n     *   undefined\n     * )} resolve\n     * @param {(error: Error) => undefined | void} reject\n     * @returns {undefined}\n     */\n    function executor(resolve, reject) {\n      assert(\n        typeof file !== 'function',\n        '`file` can’t be a `done` anymore, we checked'\n      )\n      const realFile = vfile(file)\n      transformers.run(tree, realFile, realDone)\n\n      /**\n       * @param {Error | undefined} error\n       * @param {Node} outputTree\n       * @param {VFile} file\n       * @returns {undefined}\n       */\n      function realDone(error, outputTree, file) {\n        const resultingTree =\n          /** @type {TailTree extends undefined ? Node : TailTree} */ (\n            outputTree || tree\n          )\n\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(resultingTree)\n        } else {\n          assert(done, '`done` is defined if `resolve` is not')\n          done(undefined, resultingTree, file)\n        }\n      }\n    }\n  }\n\n  /**\n   * Run *transformers* on a syntax tree.\n   *\n   * An error is thrown if asynchronous transforms are configured.\n   *\n   * > 👉 **Note**: `runSync` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `runSync` performs the run phase, not other phases.\n   *\n   * @param {HeadTree extends undefined ? Node : HeadTree} tree\n   *   Tree to transform and inspect.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {TailTree extends undefined ? Node : TailTree}\n   *   Transformed tree.\n   */\n  runSync(tree, file) {\n    /** @type {boolean} */\n    let complete = false\n    /** @type {(TailTree extends undefined ? Node : TailTree) | undefined} */\n    let result\n\n    this.run(tree, file, realDone)\n\n    assertDone('runSync', 'run', complete)\n    assert(result, 'we either bailed on an error or have a tree')\n    return result\n\n    /**\n     * @type {RunCallback<TailTree extends undefined ? Node : TailTree>}\n     */\n    function realDone(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * Compile a syntax tree.\n   *\n   * > 👉 **Note**: `stringify` freezes the processor if not already *frozen*.\n   *\n   * > 👉 **Note**: `stringify` performs the stringify phase, not the run phase\n   * > or other phases.\n   *\n   * @param {CompileTree extends undefined ? Node : CompileTree} tree\n   *   Tree to compile.\n   * @param {Compatible | undefined} [file]\n   *   File associated with `node` (optional); any value accepted as `x` in\n   *   `new VFile(x)`.\n   * @returns {CompileResult extends undefined ? Value : CompileResult}\n   *   Textual representation of the tree (see note).\n   *\n   *   > 👉 **Note**: unified typically compiles by serializing: most compilers\n   *   > return `string` (or `Uint8Array`).\n   *   > Some compilers, such as the one configured with\n   *   > [`rehype-react`][rehype-react], return other values (in this case, a\n   *   > React tree).\n   *   > If you’re using a compiler that doesn’t serialize, expect different\n   *   > result values.\n   *   >\n   *   > To register custom results in TypeScript, add them to\n   *   > {@link CompileResultMap `CompileResultMap`}.\n   *\n   *   [rehype-react]: https://github.com/rehypejs/rehype-react\n   */\n  stringify(tree, file) {\n    this.freeze()\n    const realFile = vfile(file)\n    const compiler = this.compiler || this.Compiler\n    assertCompiler('stringify', compiler)\n    assertNode(tree)\n\n    return compiler(tree, realFile)\n  }\n\n  /**\n   * Configure the processor to use a plugin, a list of usable values, or a\n   * preset.\n   *\n   * If the processor is already using a plugin, the previous plugin\n   * configuration is changed based on the options that are passed in.\n   * In other words, the plugin is not added a second time.\n   *\n   * > 👉 **Note**: `use` cannot be called on *frozen* processors.\n   * > Call the processor first to create a new unfrozen processor.\n   *\n   * @example\n   *   There are many ways to pass plugins to `.use()`.\n   *   This example gives an overview:\n   *\n   *   ```js\n   *   import {unified} from 'unified'\n   *\n   *   unified()\n   *     // Plugin with options:\n   *     .use(pluginA, {x: true, y: true})\n   *     // Passing the same plugin again merges configuration (to `{x: true, y: false, z: true}`):\n   *     .use(pluginA, {y: false, z: true})\n   *     // Plugins:\n   *     .use([pluginB, pluginC])\n   *     // Two plugins, the second with options:\n   *     .use([pluginD, [pluginE, {}]])\n   *     // Preset with plugins and settings:\n   *     .use({plugins: [pluginF, [pluginG, {}]], settings: {position: false}})\n   *     // Settings only:\n   *     .use({settings: {position: false}})\n   *   ```\n   *\n   * @template {Array<unknown>} [Parameters=[]]\n   * @template {Node | string | undefined} [Input=undefined]\n   * @template [Output=Input]\n   *\n   * @overload\n   * @param {Preset | null | undefined} [preset]\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {PluggableList} list\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *\n   * @overload\n   * @param {Plugin<Parameters, Input, Output>} plugin\n   * @param {...(Parameters | [boolean])} parameters\n   * @returns {UsePlugin<ParseTree, HeadTree, TailTree, CompileTree, CompileResult, Input, Output>}\n   *\n   * @param {PluggableList | Plugin | Preset | null | undefined} value\n   *   Usable value.\n   * @param {...unknown} parameters\n   *   Parameters, when a plugin is given as a usable value.\n   * @returns {Processor<ParseTree, HeadTree, TailTree, CompileTree, CompileResult>}\n   *   Current processor.\n   */\n  use(value, ...parameters) {\n    const attachers = this.attachers\n    const namespace = this.namespace\n\n    assertUnfrozen('use', this.frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, parameters)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    return this\n\n    /**\n     * @param {Pluggable} value\n     * @returns {undefined}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value, [])\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...parameters] =\n            /** @type {PluginTuple<Array<unknown>>} */ (value)\n          addPlugin(plugin, parameters)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {undefined}\n     */\n    function addPreset(result) {\n      if (!('plugins' in result) && !('settings' in result)) {\n        throw new Error(\n          'Expected usable value but received an empty preset, which is probably a mistake: presets typically come with `plugins` and sometimes with `settings`, but this has neither'\n        )\n      }\n\n      addList(result.plugins)\n\n      if (result.settings) {\n        namespace.settings = extend(true, namespace.settings, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList | null | undefined} plugins\n     * @returns {undefined}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {Array<unknown>} parameters\n     * @returns {undefined}\n     */\n    function addPlugin(plugin, parameters) {\n      let index = -1\n      let entryIndex = -1\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entryIndex = index\n          break\n        }\n      }\n\n      if (entryIndex === -1) {\n        attachers.push([plugin, ...parameters])\n      }\n      // Only set if there was at least a `primary` value, otherwise we’d change\n      // `arguments.length`.\n      else if (parameters.length > 0) {\n        let [primary, ...rest] = parameters\n        const currentPrimary = attachers[entryIndex][1]\n        if (isPlainObj(currentPrimary) && isPlainObj(primary)) {\n          primary = extend(true, currentPrimary, primary)\n        }\n\n        attachers[entryIndex] = [plugin, primary, ...rest]\n      }\n    }\n  }\n}\n\n// Note: this returns a *callable* instance.\n// That’s why it’s documented as a function.\n/**\n * Create a new processor.\n *\n * @example\n *   This example shows how a new processor can be created (from `remark`) and linked\n *   to **stdin**(4) and **stdout**(4).\n *\n *   ```js\n *   import process from 'node:process'\n *   import concatStream from 'concat-stream'\n *   import {remark} from 'remark'\n *\n *   process.stdin.pipe(\n *     concatStream(function (buf) {\n *       process.stdout.write(String(remark().processSync(buf)))\n *     })\n *   )\n *   ```\n *\n * @returns\n *   New *unfrozen* processor (`processor`).\n *\n *   This processor is configured to work the same as its ancestor.\n *   When the descendant processor is configured in the future it does not\n *   affect the ancestral processor.\n */\nexport const unified = new Processor().freeze()\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {Compatible | undefined} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is Value}\n */\nfunction looksLikeAValue(value) {\n  return typeof value === 'string' || isUint8Array(value)\n}\n\n/**\n * Assert `value` is an `Uint8Array`.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Uint8Array}\n *   Whether `value` is an `Uint8Array`.\n */\nfunction isUint8Array(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'byteLength' in value &&\n      'byteOffset' in value\n  )\n}\n","// Register `Raw` in tree:\n/// <reference types=\"mdast-util-to-hast\" />\n\n/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Parents} Parents\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-to-jsx-runtime').Components} JsxRuntimeComponents\n * @typedef {import('remark-rehype').Options} RemarkRehypeOptions\n * @typedef {import('unist-util-visit').BuildVisitor<Root>} Visitor\n * @typedef {import('unified').PluggableList} PluggableList\n */\n\n/**\n * @callback AllowElement\n *   Filter elements.\n * @param {Readonly<Element>} element\n *   Element to check.\n * @param {number} index\n *   Index of `element` in `parent`.\n * @param {Readonly<Parents> | undefined} parent\n *   Parent of `element`.\n * @returns {boolean | null | undefined}\n *   Whether to allow `element` (default: `false`).\n *\n * @typedef {Partial<JsxRuntimeComponents>} Components\n *   Map tag names to components.\n *\n * @typedef Deprecation\n *   Deprecation.\n * @property {string} from\n *   Old field.\n * @property {string} id\n *   ID in readme.\n * @property {keyof Options} [to]\n *   New field.\n *\n * @typedef Options\n *   Configuration.\n * @property {AllowElement | null | undefined} [allowElement]\n *   Filter elements (optional);\n *   `allowedElements` / `disallowedElements` is used first.\n * @property {ReadonlyArray<string> | null | undefined} [allowedElements]\n *   Tag names to allow (default: all tag names);\n *   cannot combine w/ `disallowedElements`.\n * @property {string | null | undefined} [children]\n *   Markdown.\n * @property {string | null | undefined} [className]\n *   Wrap in a `div` with this class name.\n * @property {Components | null | undefined} [components]\n *   Map tag names to components.\n * @property {ReadonlyArray<string> | null | undefined} [disallowedElements]\n *   Tag names to disallow (default: `[]`);\n *   cannot combine w/ `allowedElements`.\n * @property {PluggableList | null | undefined} [rehypePlugins]\n *   List of rehype plugins to use.\n * @property {PluggableList | null | undefined} [remarkPlugins]\n *   List of remark plugins to use.\n * @property {Readonly<RemarkRehypeOptions> | null | undefined} [remarkRehypeOptions]\n *   Options to pass through to `remark-rehype`.\n * @property {boolean | null | undefined} [skipHtml=false]\n *   Ignore HTML in markdown completely (default: `false`).\n * @property {boolean | null | undefined} [unwrapDisallowed=false]\n *   Extract (unwrap) what’s in disallowed elements (default: `false`);\n *   normally when say `strong` is not allowed, it and it’s children are dropped,\n *   with `unwrapDisallowed` the element itself is replaced by its children.\n * @property {UrlTransform | null | undefined} [urlTransform]\n *   Change URLs (default: `defaultUrlTransform`)\n *\n * @callback UrlTransform\n *   Transform all URLs.\n * @param {string} url\n *   URL.\n * @param {string} key\n *   Property name (example: `'href'`).\n * @param {Readonly<Element>} node\n *   Node.\n * @returns {string | null | undefined}\n *   Transformed URL (optional).\n */\n\nimport {unreachable} from 'devlop'\nimport {toJsxRuntime} from 'hast-util-to-jsx-runtime'\nimport {urlAttributes} from 'html-url-attributes'\n// @ts-expect-error: untyped.\nimport {Fragment, jsx, jsxs} from 'react/jsx-runtime'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport {unified} from 'unified'\nimport {visit} from 'unist-util-visit'\nimport {VFile} from 'vfile'\n\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {PluggableList} */\nconst emptyPlugins = []\n/** @type {Readonly<RemarkRehypeOptions>} */\nconst emptyRemarkRehypeOptions = {allowDangerousHtml: true}\nconst safeProtocol = /^(https?|ircs?|mailto|xmpp)$/i\n\n// Mutable because we `delete` any time it’s used and a message is sent.\n/** @type {ReadonlyArray<Readonly<Deprecation>>} */\nconst deprecations = [\n  {from: 'astPlugins', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'allowDangerousHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {\n    from: 'allowNode',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowElement'\n  },\n  {\n    from: 'allowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'allowedElements'\n  },\n  {\n    from: 'disallowedTypes',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes',\n    to: 'disallowedElements'\n  },\n  {from: 'escapeHtml', id: 'remove-buggy-html-in-markdown-parser'},\n  {from: 'includeElementIndex', id: '#remove-includeelementindex'},\n  {\n    from: 'includeNodeIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  },\n  {from: 'linkTarget', id: 'remove-linktarget'},\n  {from: 'plugins', id: 'change-plugins-to-remarkplugins', to: 'remarkPlugins'},\n  {from: 'rawSourcePos', id: '#remove-rawsourcepos'},\n  {from: 'renderers', id: 'change-renderers-to-components', to: 'components'},\n  {from: 'source', id: 'change-source-to-children', to: 'children'},\n  {from: 'sourcePos', id: '#remove-sourcepos'},\n  {from: 'transformImageUri', id: '#add-urltransform', to: 'urlTransform'},\n  {from: 'transformLinkUri', id: '#add-urltransform', to: 'urlTransform'}\n]\n\n/**\n * Component to render markdown.\n *\n * @param {Readonly<Options>} options\n *   Props.\n * @returns {JSX.Element}\n *   React element.\n */\nexport function Markdown(options) {\n  const allowedElements = options.allowedElements\n  const allowElement = options.allowElement\n  const children = options.children || ''\n  const className = options.className\n  const components = options.components\n  const disallowedElements = options.disallowedElements\n  const rehypePlugins = options.rehypePlugins || emptyPlugins\n  const remarkPlugins = options.remarkPlugins || emptyPlugins\n  const remarkRehypeOptions = options.remarkRehypeOptions\n    ? {...options.remarkRehypeOptions, ...emptyRemarkRehypeOptions}\n    : emptyRemarkRehypeOptions\n  const skipHtml = options.skipHtml\n  const unwrapDisallowed = options.unwrapDisallowed\n  const urlTransform = options.urlTransform || defaultUrlTransform\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(remarkPlugins)\n    .use(remarkRehype, remarkRehypeOptions)\n    .use(rehypePlugins)\n\n  const file = new VFile()\n\n  if (typeof children === 'string') {\n    file.value = children\n  } else {\n    unreachable(\n      'Unexpected value `' +\n        children +\n        '` for `children` prop, expected `string`'\n    )\n  }\n\n  if (allowedElements && disallowedElements) {\n    unreachable(\n      'Unexpected combined `allowedElements` and `disallowedElements`, expected one or the other'\n    )\n  }\n\n  for (const deprecation of deprecations) {\n    if (Object.hasOwn(options, deprecation.from)) {\n      unreachable(\n        'Unexpected `' +\n          deprecation.from +\n          '` prop, ' +\n          (deprecation.to\n            ? 'use `' + deprecation.to + '` instead'\n            : 'remove it') +\n          ' (see <' +\n          changelog +\n          '#' +\n          deprecation.id +\n          '> for more info)'\n      )\n    }\n  }\n\n  const mdastTree = processor.parse(file)\n  /** @type {Nodes} */\n  let hastTree = processor.runSync(mdastTree, file)\n\n  // Wrap in `div` if there’s a class name.\n  if (className) {\n    hastTree = {\n      type: 'element',\n      tagName: 'div',\n      properties: {className},\n      // Assume no doctypes.\n      children: /** @type {Array<ElementContent>} */ (\n        hastTree.type === 'root' ? hastTree.children : [hastTree]\n      )\n    }\n  }\n\n  visit(hastTree, transform)\n\n  return toJsxRuntime(hastTree, {\n    Fragment,\n    components,\n    ignoreInvalidStyle: true,\n    jsx,\n    jsxs,\n    passKeys: true,\n    passNode: true\n  })\n\n  /** @type {Visitor} */\n  function transform(node, index, parent) {\n    if (node.type === 'raw' && parent && typeof index === 'number') {\n      if (skipHtml) {\n        parent.children.splice(index, 1)\n      } else {\n        parent.children[index] = {type: 'text', value: node.value}\n      }\n\n      return index\n    }\n\n    if (node.type === 'element') {\n      /** @type {string} */\n      let key\n\n      for (key in urlAttributes) {\n        if (\n          Object.hasOwn(urlAttributes, key) &&\n          Object.hasOwn(node.properties, key)\n        ) {\n          const value = node.properties[key]\n          const test = urlAttributes[key]\n          if (test === null || test.includes(node.tagName)) {\n            node.properties[key] = urlTransform(String(value || ''), key, node)\n          }\n        }\n      }\n    }\n\n    if (node.type === 'element') {\n      let remove = allowedElements\n        ? !allowedElements.includes(node.tagName)\n        : disallowedElements\n        ? disallowedElements.includes(node.tagName)\n        : false\n\n      if (!remove && allowElement && typeof index === 'number') {\n        remove = !allowElement(node, index, parent)\n      }\n\n      if (remove && parent && typeof index === 'number') {\n        if (unwrapDisallowed && node.children) {\n          parent.children.splice(index, 1, ...node.children)\n        } else {\n          parent.children.splice(index, 1)\n        }\n\n        return index\n      }\n    }\n  }\n}\n\n/**\n * Make a URL safe.\n *\n * @satisfies {UrlTransform}\n * @param {string} value\n *   URL.\n * @returns {string}\n *   Safe URL.\n */\nexport function defaultUrlTransform(value) {\n  // Same as:\n  // <https://github.com/micromark/micromark/blob/929275e/packages/micromark-util-sanitize-uri/dev/index.js#L34>\n  // But without the `encode` part.\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 ||\n    // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) ||\n    // It is a protocol, it should be allowed.\n    safeProtocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n */\n\n/**\n * @template {string} SimpleSelector\n *   Selector type.\n * @template {string} DefaultTagName\n *   Default tag name.\n * @typedef {(\n *   SimpleSelector extends ''\n *     ? DefaultTagName\n *     : SimpleSelector extends `${infer TagName}.${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends `${infer TagName}#${infer Rest}`\n *     ? ExtractTagName<TagName, DefaultTagName>\n *     : SimpleSelector extends string\n *     ? SimpleSelector\n *     : DefaultTagName\n * )} ExtractTagName\n *   Extract tag name from a simple selector.\n */\n\nconst search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @template {string} Selector\n *   Type of selector.\n * @template {string} [DefaultTagName='div']\n *   Type of default tag name (default: `'div'`).\n * @param {Selector | null | undefined} [selector]\n *   Simple CSS selector (optional).\n *\n *   Can contain a tag name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param {DefaultTagName | null | undefined} [defaultTagName='div']\n *   Tag name to use if `selector` does not specify one (default: `'div'`).\n * @returns {Element & {tagName: ExtractTagName<Selector, DefaultTagName>}}\n *   Built element.\n */\nexport function parseSelector(selector, defaultTagName) {\n  const value = selector || ''\n  /** @type {Properties} */\n  const props = {}\n  let start = 0\n  /** @type {string | undefined} */\n  let previous\n  /** @type {string | undefined} */\n  let tagName\n\n  while (start < value.length) {\n    search.lastIndex = start\n    const match = search.exec(value)\n    const subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        tagName = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (Array.isArray(props.className)) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {\n    type: 'element',\n    // @ts-expect-error: tag name is parsed.\n    tagName: tagName || defaultTagName || 'div',\n    properties: props,\n    children: []\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef {Element | Root} Result\n *   Result from a `h` (or `s`) call.\n *\n * @typedef {number | string} StyleValue\n *   Value for a CSS style field.\n * @typedef {Record<string, StyleValue>} Style\n *   Supported value of a `style` prop.\n * @typedef {boolean | number | string | null | undefined} PrimitiveValue\n *   Primitive property value.\n * @typedef {Array<number | string>} ArrayValue\n *   List of property values for space- or comma separated values (such as `className`).\n * @typedef {ArrayValue | PrimitiveValue} PropertyValue\n *   Primitive value or list value.\n * @typedef {{[property: string]: PropertyValue | Style}} Properties\n *   Acceptable value for element properties.\n *\n * @typedef {number | string | null | undefined} PrimitiveChild\n *   Primitive children, either ignored (nullish), or turned into text nodes.\n * @typedef {Array<ArrayChildNested | Nodes | PrimitiveChild>} ArrayChild\n *   List of children.\n * @typedef {Array<Nodes | PrimitiveChild>} ArrayChildNested\n *   List of children (deep).\n * @typedef {ArrayChild | Nodes | PrimitiveChild} Child\n *   Acceptable child value.\n */\n\nimport {parse as commas} from 'comma-separated-tokens'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {find, normalize} from 'property-information'\nimport {parse as spaces} from 'space-separated-tokens'\n\nconst buttonTypes = new Set(['button', 'menu', 'reset', 'submit'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n *   Schema to use.\n * @param {string} defaultTagName\n *   Default tag name.\n * @param {Array<string> | undefined} [caseSensitive]\n *   Case-sensitive tag names (default: `undefined`).\n * @returns\n *   `h`.\n */\nexport function createH(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  /**\n   * Hyperscript compatible DSL for creating virtual hast trees.\n   *\n   * @overload\n   * @param {null | undefined} [selector]\n   * @param {...Child} children\n   * @returns {Root}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {Properties} properties\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @overload\n   * @param {string} selector\n   * @param {...Child} children\n   * @returns {Element}\n   *\n   * @param {string | null | undefined} [selector]\n   *   Selector.\n   * @param {Child | Properties | null | undefined} [properties]\n   *   Properties (or first child) (default: `undefined`).\n   * @param {...Child} children\n   *   Children.\n   * @returns {Result}\n   *   Result.\n   */\n  function h(selector, properties, ...children) {\n    let index = -1\n    /** @type {Result} */\n    let node\n\n    if (selector === undefined || selector === null) {\n      node = {type: 'root', children: []}\n      // Properties are not supported for roots.\n      const child = /** @type {Child} */ (properties)\n      children.unshift(child)\n    } else {\n      node = parseSelector(selector, defaultTagName)\n      // Normalize the name.\n      node.tagName = node.tagName.toLowerCase()\n      if (adjust && own.call(adjust, node.tagName)) {\n        node.tagName = adjust[node.tagName]\n      }\n\n      // Handle props.\n      if (isProperties(properties, node.tagName)) {\n        /** @type {string} */\n        let key\n\n        for (key in properties) {\n          if (own.call(properties, key)) {\n            addProperty(schema, node.properties, key, properties[key])\n          }\n        }\n      } else {\n        children.unshift(properties)\n      }\n    }\n\n    // Handle children.\n    while (++index < children.length) {\n      addChild(node.children, children[index])\n    }\n\n    if (node.type === 'element' && node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  return h\n}\n\n/**\n * Check if something is properties or a child.\n *\n * @param {Child | Properties} value\n *   Value to check.\n * @param {string} name\n *   Tag name.\n * @returns {value is Properties}\n *   Whether `value` is a properties object.\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n *   Schema.\n * @param {Properties} properties\n *   Properties object.\n * @param {string} key\n *   Property name.\n * @param {PropertyValue | Style} value\n *   Property value.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {PropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array<number | string>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // Assume no booleans in array.\n      const value = /** @type {number | string} */ (\n        parsePrimitive(info, info.property, result[index])\n      )\n      finalResult[index] = value\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // Assume no booleans in `className`.\n    const value = /** @type {number | string} */ (result)\n    result = properties.className.concat(value)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array<RootContent>} nodes\n *   Children.\n * @param {Child} value\n *   Child.\n * @returns {undefined}\n *   Nothing.\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n *   Property information.\n * @param {string} name\n *   Property name.\n * @param {PrimitiveValue} value\n *   Property value.\n * @returns {PrimitiveValue}\n *   Property value.\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * Serialize a `style` object as a string.\n *\n * @param {Style} value\n *   Style object.\n * @returns {string}\n *   CSS string.\n */\nfunction style(value) {\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * Create a map to adjust casing.\n *\n * @param {Array<string>} values\n *   List of properly cased keys.\n * @returns {Record<string, string>}\n *   Map of lowercase keys to uppercase keys.\n */\nfunction createAdjustMap(values) {\n  /** @type {Record<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * @typedef {import('./create-h.js').Child} Child\n *   Acceptable child value.\n * @typedef {import('./create-h.js').Properties} Properties\n *   Acceptable value for element properties.\n * @typedef {import('./create-h.js').Result} Result\n *   Result from a `h` (or `s`) call.\n */\n\n// Register the JSX namespace on `h`.\n/**\n * @typedef {import('./jsx-classic.js').Element} h.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} h.JSX.IntrinsicElements\n */\n\n// Register the JSX namespace on `s`.\n/**\n * @typedef {import('./jsx-classic.js').Element} s.JSX.Element\n * @typedef {import('./jsx-classic.js').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n * @typedef {import('./jsx-classic.js').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic.js').IntrinsicElements} s.JSX.IntrinsicElements\n */\n\nimport {html, svg} from 'property-information'\nimport {createH} from './create-h.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const h = createH(html, 'div')\n\n// Note: this explicit type is needed, otherwise TS creates broken types.\n/** @type {ReturnType<createH>} */\nexport const s = createH(svg, 'g', svgCaseSensitiveTagNames)\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('vfile').Value} Value\n * @typedef {import('unist').Point} UnistPoint\n */\n\n/**\n *\n * @typedef PointLike\n *   unist point, allowed as input.\n * @property {number | null | undefined} [line]\n *   Line.\n * @property {number | null | undefined} [column]\n *   Column.\n * @property {number | null | undefined} [offset]\n *   Offset.\n *\n * @callback ToPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n *\n *   Returns `undefined` when given out of bounds input.\n *\n *   Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n *   [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n * @param {number | null | undefined} [offset]\n *   Something that should be an `offset.\n * @returns {UnistPoint | undefined}\n *   Point, if `offset` is valid and in-bounds input.\n *\n * @callback ToOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n * @param {PointLike | null | undefined} [point]\n *   Something that should be a `point.\n * @returns {number | undefined}\n *   Offset (`number`) or `undefined` for invalid or out of bounds input.\n *\n * @typedef Location\n *   Accessors for index.\n * @property {ToPoint} toPoint\n *   Get the line/column based `Point` for `offset` in the bound indices.\n * @property {ToOffset} toOffset\n *   Get the `offset` from a line/column based `Point` in the bound indices.\n */\n\nconst search = /\\r?\\n|\\r/g\n\n/**\n * Create an index of the given document to translate between line/column and\n * offset based positional info.\n *\n * Also implemented in Rust in [`wooorm/markdown-rs`][markdown-rs].\n *\n * [markdown-rs]: https://github.com/wooorm/markdown-rs/blob/main/src/util/location.rs\n *\n * @param {VFile | Value} file\n *   File to index.\n * @returns {Location}\n *   Accessors for index.\n */\nexport function location(file) {\n  const value = String(file)\n  /**\n   * List, where each index is a line number (0-based), and each value is the\n   * byte index *after* where the line ends.\n   *\n   * @type {Array<number>}\n   */\n  const indices = []\n\n  search.lastIndex = 0\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /** @type {ToPoint} */\n  function toPoint(offset) {\n    let index = -1\n\n    if (\n      typeof offset === 'number' &&\n      offset > -1 &&\n      offset < indices[indices.length - 1]\n    ) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (index > 0 ? indices[index - 1] : 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n  }\n\n  /** @type {ToOffset} */\n  function toOffset(point) {\n    const line = point && point.line\n    const column = point && point.column\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      const offset = (indices[line - 2] || 0) + column - 1 || 0\n\n      if (offset > -1 && offset < indices[indices.length - 1]) {\n        return offset\n      }\n    }\n  }\n}\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementData} ElementData\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').Token.ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Token.Location} P5Location\n *\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {DefaultTreeAdapterMap['document']} P5Document\n * @typedef {DefaultTreeAdapterMap['documentFragment']} P5DocumentFragment\n * @typedef {DefaultTreeAdapterMap['documentType']} P5DocumentType\n * @typedef {DefaultTreeAdapterMap['commentNode']} P5Comment\n * @typedef {DefaultTreeAdapterMap['textNode']} P5Text\n * @typedef {DefaultTreeAdapterMap['element']} P5Element\n * @typedef {DefaultTreeAdapterMap['node']} P5Node\n * @typedef {DefaultTreeAdapterMap['template']} P5Template\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n * @property {VFile | null | undefined} [file]\n *   File used to add positional info to nodes (optional).\n *\n *   If given, the file should represent the original HTML source.\n * @property {boolean | null | undefined} [verbose=false]\n *   Whether to add extra positional info about starting tags, closing tags,\n *   and attributes to elements (default: `false`).\n *\n *   > 👉 **Note**: only used when `file` is given.\n *\n * @typedef {'html' | 'svg'} Space\n *   Namespace.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {VFile | undefined} file\n *   Corresponding file.\n * @property {boolean} location\n *   Whether location info was found.\n * @property {Schema} schema\n *   Current schema.\n * @property {boolean | undefined} verbose\n *   Add extra positional info.\n */\n\nimport {ok as assert} from 'devlop'\nimport {h, s} from 'hastscript'\nimport {find, html, svg} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n/** @type {unknown} */\n// type-coverage:ignore-next-line\nconst proto = Object.prototype\n\n/**\n * Transform a `parse5` AST to hast.\n *\n * @param {P5Node} tree\n *   `parse5` tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   hast tree.\n */\nexport function fromParse5(tree, options) {\n  const settings = options || {}\n\n  return one(\n    {\n      file: settings.file || undefined,\n      location: false,\n      schema: settings.space === 'svg' ? svg : html,\n      verbose: settings.verbose || false\n    },\n    tree\n  )\n}\n\n/**\n * Transform a node.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} node\n *   p5 node.\n * @returns {Nodes}\n *   hast node.\n */\nfunction one(state, node) {\n  /** @type {Nodes} */\n  let result\n\n  switch (node.nodeName) {\n    case '#comment': {\n      const reference = /** @type {P5Comment} */ (node)\n      result = {type: 'comment', value: reference.data}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#document':\n    case '#document-fragment': {\n      const reference = /** @type {P5Document | P5DocumentFragment} */ (node)\n      const quirksMode =\n        'mode' in reference\n          ? reference.mode === 'quirks' || reference.mode === 'limited-quirks'\n          : false\n\n      result = {\n        type: 'root',\n        children: all(state, node.childNodes),\n        data: {quirksMode}\n      }\n\n      if (state.file && state.location) {\n        const doc = String(state.file)\n        const loc = location(doc)\n        const start = loc.toPoint(0)\n        const end = loc.toPoint(doc.length)\n        // Always defined as we give valid input.\n        assert(start, 'expected `start`')\n        assert(end, 'expected `end`')\n        result.position = {start, end}\n      }\n\n      return result\n    }\n\n    case '#documentType': {\n      const reference = /** @type {P5DocumentType} */ (node)\n      result = {type: 'doctype'}\n      patch(state, reference, result)\n      return result\n    }\n\n    case '#text': {\n      const reference = /** @type {P5Text} */ (node)\n      result = {type: 'text', value: reference.value}\n      patch(state, reference, result)\n      return result\n    }\n\n    // Element.\n    default: {\n      const reference = /** @type {P5Element} */ (node)\n      result = element(state, reference)\n      return result\n    }\n  }\n}\n\n/**\n * Transform children.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Array<P5Node>} nodes\n *   Nodes.\n * @returns {Array<RootContent>}\n *   hast nodes.\n */\nfunction all(state, nodes) {\n  let index = -1\n  /** @type {Array<RootContent>} */\n  const results = []\n\n  while (++index < nodes.length) {\n    // Assume no roots in `nodes`.\n    const result = /** @type {RootContent} */ (one(state, nodes[index]))\n    results.push(result)\n  }\n\n  return results\n}\n\n/**\n * Transform an element.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Element} node\n *   `parse5` node to transform.\n * @returns {Element}\n *   hast node.\n */\nfunction element(state, node) {\n  const schema = state.schema\n\n  state.schema = node.namespaceURI === webNamespaces.svg ? svg : html\n\n  // Props.\n  let index = -1\n  /** @type {Record<string, string>} */\n  const props = {}\n\n  while (++index < node.attrs.length) {\n    const attribute = node.attrs[index]\n    const name =\n      (attribute.prefix ? attribute.prefix + ':' : '') + attribute.name\n    if (!own.call(proto, name)) {\n      props[name] = attribute.value\n    }\n  }\n\n  // Build.\n  const fn = state.schema.space === 'svg' ? s : h\n  const result = fn(node.tagName, props, all(state, node.childNodes))\n  patch(state, node, result)\n\n  // Switch content.\n  if (result.tagName === 'template') {\n    const reference = /** @type {P5Template} */ (node)\n    const pos = reference.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    // Root in, root out.\n    const content = /** @type {Root} */ (one(state, reference.content))\n\n    if (startTag && endTag && state.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  state.schema = schema\n\n  return result\n}\n\n/**\n * Patch positional info from `from` onto `to`.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {P5Node} from\n *   p5 node.\n * @param {Nodes} to\n *   hast node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(state, from, to) {\n  if ('sourceCodeLocation' in from && from.sourceCodeLocation && state.file) {\n    const position = createLocation(state, to, from.sourceCodeLocation)\n\n    if (position) {\n      state.location = true\n      to.position = position\n    }\n  }\n}\n\n/**\n * Create clean positional information.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Nodes} node\n *   hast node.\n * @param {P5ElementLocation} location\n *   p5 location info.\n * @returns {Position | undefined}\n *   Position, or nothing.\n */\nfunction createLocation(state, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (state.verbose) {\n      /** @type {Record<string, Position | undefined>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      if (location.attrs) {\n        for (key in location.attrs) {\n          if (own.call(location.attrs, key)) {\n            props[find(state.schema, key).property] = position(\n              location.attrs[key]\n            )\n          }\n        }\n      }\n\n      assert(location.startTag, 'a start tag should exist')\n      const opening = position(location.startTag)\n      const closing = location.endTag ? position(location.endTag) : undefined\n      /** @type {ElementData['position']} */\n      const data = {opening}\n      if (closing) data.closing = closing\n      data.properties = props\n\n      node.data = {position: data}\n    }\n  }\n\n  return result\n}\n\n/**\n * Turn a p5 location into a position.\n *\n * @param {P5Location} loc\n *   Location.\n * @returns {Position | undefined}\n *   Position or nothing.\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n\n  // @ts-expect-error: we do use `undefined` for points if one or the other\n  // exists.\n  return start || end ? {start, end} : undefined\n}\n\n/**\n * Filter out invalid points.\n *\n * @param {Point} point\n *   Point with potentially `undefined` values.\n * @returns {Point | undefined}\n *   Point or nothing.\n */\nfunction point(point) {\n  return point.line && point.column ? point : undefined\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap['document']} Parse5Document\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentFragment']} Parse5Fragment\n * @typedef {import('parse5').DefaultTreeAdapterMap['element']} Parse5Element\n * @typedef {import('parse5').DefaultTreeAdapterMap['node']} Parse5Nodes\n * @typedef {import('parse5').DefaultTreeAdapterMap['documentType']} Parse5Doctype\n * @typedef {import('parse5').DefaultTreeAdapterMap['commentNode']} Parse5Comment\n * @typedef {import('parse5').DefaultTreeAdapterMap['textNode']} Parse5Text\n * @typedef {import('parse5').DefaultTreeAdapterMap['parentNode']} Parse5Parent\n * @typedef {import('parse5').Token.Attribute} Parse5Attribute\n *\n * @typedef {import('property-information').Schema} Schema\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {Space | null | undefined} [space='html']\n *   Which space the document is in (default: `'html'`).\n *\n *   When an `<svg>` element is found in the HTML space, this package already\n *   automatically switches to and from the SVG space when entering and exiting\n *   it.\n *\n * @typedef {Exclude<Parse5Nodes, Parse5Document | Parse5Fragment>} Parse5Content\n *\n * @typedef {'html' | 'svg'} Space\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {ok as assert} from 'devlop'\nimport {find, html, svg} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\nconst own = {}.hasOwnProperty\n\nconst one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a hast tree to a `parse5` AST.\n *\n * @param {Nodes} tree\n *   Tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Parse5Nodes}\n *   `parse5` node.\n */\nexport function toParse5(tree, options) {\n  const settings = options || emptyOptions\n  const space = settings.space\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Document}\n *   Parse5 node.\n */\nfunction root(node, schema) {\n  /** @type {Parse5Document} */\n  const result = {\n    nodeName: '#document',\n    // @ts-expect-error: `parse5` uses enums, which are actually strings.\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Root} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Fragment}\n *   Parse5 node.\n */\nfunction fragment(node, schema) {\n  /** @type {Parse5Fragment} */\n  const result = {nodeName: '#document-fragment', childNodes: []}\n  result.childNodes = all(node.children, result, schema)\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Doctype} node\n *   Node (hast) to transform.\n * @returns {Parse5Doctype}\n *   Parse5 node.\n */\nfunction doctype(node) {\n  /** @type {Parse5Doctype} */\n  const result = {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: null\n  }\n\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Text} node\n *   Node (hast) to transform.\n * @returns {Parse5Text}\n *   Parse5 node.\n */\nfunction text(node) {\n  /** @type {Parse5Text} */\n  const result = {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: null\n  }\n  patch(node, result)\n  return result\n}\n\n/**\n * @param {Comment} node\n *   Node (hast) to transform.\n * @returns {Parse5Comment}\n *   Parse5 node.\n */\nfunction comment(node) {\n  /** @type {Parse5Comment} */\n  const result = {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: null\n  }\n\n  patch(node, result)\n\n  return result\n}\n\n/**\n * @param {Element} node\n *   Node (hast) to transform.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Parse5Element}\n *   Parse5 node.\n */\nfunction element(node, schema) {\n  const parentSchema = schema\n  let currentSchema = parentSchema\n\n  if (\n    node.type === 'element' &&\n    node.tagName.toLowerCase() === 'svg' &&\n    parentSchema.space === 'html'\n  ) {\n    currentSchema = svg\n  }\n\n  /** @type {Array<Parse5Attribute>} */\n  const attrs = []\n  /** @type {string} */\n  let prop\n\n  if (node.properties) {\n    for (prop in node.properties) {\n      if (prop !== 'children' && own.call(node.properties, prop)) {\n        const result = createProperty(\n          currentSchema,\n          prop,\n          node.properties[prop]\n        )\n\n        if (result) {\n          attrs.push(result)\n        }\n      }\n    }\n  }\n\n  const space = currentSchema.space\n  // `html` and `svg` both have a space.\n  assert(space)\n\n  /** @type {Parse5Element} */\n  const result = {\n    nodeName: node.tagName,\n    tagName: node.tagName,\n    attrs,\n    // @ts-expect-error: `parse5` types are wrong.\n    namespaceURI: webNamespaces[space],\n    childNodes: [],\n    parentNode: null\n  }\n  result.childNodes = all(node.children, result, currentSchema)\n  patch(node, result)\n\n  if (node.tagName === 'template' && node.content) {\n    // @ts-expect-error: `parse5` types are wrong.\n    result.content = fragment(node.content, currentSchema)\n  }\n\n  return result\n}\n\n/**\n * Handle a property.\n *\n * @param {Schema} schema\n *   Current schema.\n * @param {string} prop\n *   Key.\n * @param {Array<number | string> | boolean | number | string | null | undefined} value\n *   hast property value.\n * @returns {Parse5Attribute | undefined}\n *   Field for runtime, optional.\n */\nfunction createProperty(schema, prop, value) {\n  const info = find(schema, prop)\n\n  // Ignore nullish and `NaN` values.\n  if (\n    value === false ||\n    value === null ||\n    value === undefined ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (!value && info.boolean)\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  /** @type {Parse5Attribute} */\n  const attribute = {\n    name: info.attribute,\n    value: value === true ? '' : String(value)\n  }\n\n  if (info.space && info.space !== 'html' && info.space !== 'svg') {\n    const index = attribute.name.indexOf(':')\n\n    if (index < 0) {\n      attribute.prefix = ''\n    } else {\n      attribute.name = attribute.name.slice(index + 1)\n      attribute.prefix = info.attribute.slice(0, index)\n    }\n\n    attribute.namespace = webNamespaces[info.space]\n  }\n\n  return attribute\n}\n\n/**\n * Transform all hast nodes.\n *\n * @param {Array<RootContent>} children\n *   List of children.\n * @param {Parse5Parent} parentNode\n *   `parse5` parent node.\n * @param {Schema} schema\n *   Current schema.\n * @returns {Array<Parse5Content>}\n *   Transformed children.\n */\nfunction all(children, parentNode, schema) {\n  let index = -1\n  /** @type {Array<Parse5Content>} */\n  const results = []\n\n  if (children) {\n    while (++index < children.length) {\n      /** @type {Parse5Content} */\n      const child = one(children[index], schema)\n\n      child.parentNode = parentNode\n\n      results.push(child)\n    }\n  }\n\n  return results\n}\n\n/**\n * Add position info from `from` to `to`.\n *\n * @param {Nodes} from\n *   hast node.\n * @param {Parse5Nodes} to\n *   `parse5` node.\n * @returns {undefined}\n *   Nothing.\n */\nfunction patch(from, to) {\n  const position = from.position\n\n  if (position && position.start && position.end) {\n    assert(typeof position.start.offset === 'number')\n    assert(typeof position.end.offset === 'number')\n\n    to.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'keygen',\n  'link',\n  'meta',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","const UNDEFINED_CODE_POINTS = new Set([\n    65534, 65535, 131070, 131071, 196606, 196607, 262142, 262143, 327678, 327679, 393214,\n    393215, 458750, 458751, 524286, 524287, 589822, 589823, 655358, 655359, 720894,\n    720895, 786430, 786431, 851966, 851967, 917502, 917503, 983038, 983039, 1048574,\n    1048575, 1114110, 1114111,\n]);\nexport const REPLACEMENT_CHARACTER = '\\uFFFD';\nexport var CODE_POINTS;\n(function (CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"NUMBER_SIGN\"] = 35] = \"NUMBER_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_F\"] = 70] = \"LATIN_CAPITAL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_X\"] = 88] = \"LATIN_CAPITAL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_F\"] = 102] = \"LATIN_SMALL_F\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_X\"] = 120] = \"LATIN_SMALL_X\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n    CODE_POINTS[CODE_POINTS[\"REPLACEMENT_CHARACTER\"] = 65533] = \"REPLACEMENT_CHARACTER\";\n})(CODE_POINTS = CODE_POINTS || (CODE_POINTS = {}));\nexport const SEQUENCES = {\n    DASH_DASH: '--',\n    CDATA_START: '[CDATA[',\n    DOCTYPE: 'doctype',\n    SCRIPT: 'script',\n    PUBLIC: 'public',\n    SYSTEM: 'system',\n};\n//Surrogates\nexport function isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nexport function isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nexport function getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nexport function isControlCodePoint(cp) {\n    return ((cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f) ||\n        (cp >= 0x7f && cp <= 0x9f));\n}\nexport function isUndefinedCodePoint(cp) {\n    return (cp >= 64976 && cp <= 65007) || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceMappingURL=unicode.js.map","export var ERR;\n(function (ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR = ERR || (ERR = {}));\n//# sourceMappingURL=error-codes.js.map","import { CODE_POINTS as $, getSurrogatePairCodePoint, isControlCodePoint, isSurrogate, isSurrogatePair, isUndefinedCodePoint, } from '../common/unicode.js';\nimport { ERR } from '../common/error-codes.js';\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nexport class Preprocessor {\n    constructor(handler) {\n        this.handler = handler;\n        this.html = '';\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */\n    get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code) {\n        const { line, col, offset } = this;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol: col,\n            endCol: col,\n            startOffset: offset,\n            endOffset: offset,\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if (isSurrogatePair(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return getSurrogatePairCodePoint(cp, nextCp);\n            }\n        }\n        //NOTE: we are at the end of a chunk, therefore we can't infer the surrogate pair yet.\n        else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return $.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        }\n        else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for (let i = 0; i < pattern.length; i++) {\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === $.CARRIAGE_RETURN ? $.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return $.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === $.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return $.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === $.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if (isSurrogate(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null ||\n            (cp > 0x1f && cp < 0x7f) ||\n            cp === $.LINE_FEED ||\n            cp === $.CARRIAGE_RETURN ||\n            (cp > 0x9f && cp < 64976);\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if (isControlCodePoint(cp)) {\n            this._err(ERR.controlCharacterInInputStream);\n        }\n        else if (isUndefinedCodePoint(cp)) {\n            this._err(ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while (this.pos < this.lastGapPos) {\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceMappingURL=preprocessor.js.map","export var TokenType;\n(function (TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType = TokenType || (TokenType = {}));\nexport function getTokenAttr(token, attrName) {\n    for (let i = token.attrs.length - 1; i >= 0; i--) {\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceMappingURL=token.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u1d41<\\xd5\\u0131\\u028a\\u049d\\u057b\\u05d0\\u0675\\u06de\\u07a2\\u07d6\\u080f\\u0a4a\\u0a91\\u0da1\\u0e6d\\u0f09\\u0f26\\u10ca\\u1228\\u12e1\\u1415\\u149d\\u14c3\\u14df\\u1525\\0\\0\\0\\0\\0\\0\\u156b\\u16cd\\u198d\\u1c12\\u1ddd\\u1f7e\\u2060\\u21b0\\u228d\\u23c0\\u23fb\\u2442\\u2824\\u2912\\u2d08\\u2e48\\u2fce\\u3016\\u32ba\\u3639\\u37ac\\u38fe\\u3a28\\u3a71\\u3ae0\\u3b2e\\u0800EMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig\\u803b\\xc6\\u40c6P\\u803b&\\u4026cute\\u803b\\xc1\\u40c1reve;\\u4102\\u0100iyx}rc\\u803b\\xc2\\u40c2;\\u4410r;\\uc000\\ud835\\udd04rave\\u803b\\xc0\\u40c0pha;\\u4391acr;\\u4100d;\\u6a53\\u0100gp\\x9d\\xa1on;\\u4104f;\\uc000\\ud835\\udd38plyFunction;\\u6061ing\\u803b\\xc5\\u40c5\\u0100cs\\xbe\\xc3r;\\uc000\\ud835\\udc9cign;\\u6254ilde\\u803b\\xc3\\u40c3ml\\u803b\\xc4\\u40c4\\u0400aceforsu\\xe5\\xfb\\xfe\\u0117\\u011c\\u0122\\u0127\\u012a\\u0100cr\\xea\\xf2kslash;\\u6216\\u0176\\xf6\\xf8;\\u6ae7ed;\\u6306y;\\u4411\\u0180crt\\u0105\\u010b\\u0114ause;\\u6235noullis;\\u612ca;\\u4392r;\\uc000\\ud835\\udd05pf;\\uc000\\ud835\\udd39eve;\\u42d8c\\xf2\\u0113mpeq;\\u624e\\u0700HOacdefhilorsu\\u014d\\u0151\\u0156\\u0180\\u019e\\u01a2\\u01b5\\u01b7\\u01ba\\u01dc\\u0215\\u0273\\u0278\\u027ecy;\\u4427PY\\u803b\\xa9\\u40a9\\u0180cpy\\u015d\\u0162\\u017aute;\\u4106\\u0100;i\\u0167\\u0168\\u62d2talDifferentialD;\\u6145leys;\\u612d\\u0200aeio\\u0189\\u018e\\u0194\\u0198ron;\\u410cdil\\u803b\\xc7\\u40c7rc;\\u4108nint;\\u6230ot;\\u410a\\u0100dn\\u01a7\\u01adilla;\\u40b8terDot;\\u40b7\\xf2\\u017fi;\\u43a7rcle\\u0200DMPT\\u01c7\\u01cb\\u01d1\\u01d6ot;\\u6299inus;\\u6296lus;\\u6295imes;\\u6297o\\u0100cs\\u01e2\\u01f8kwiseContourIntegral;\\u6232eCurly\\u0100DQ\\u0203\\u020foubleQuote;\\u601duote;\\u6019\\u0200lnpu\\u021e\\u0228\\u0247\\u0255on\\u0100;e\\u0225\\u0226\\u6237;\\u6a74\\u0180git\\u022f\\u0236\\u023aruent;\\u6261nt;\\u622fourIntegral;\\u622e\\u0100fr\\u024c\\u024e;\\u6102oduct;\\u6210nterClockwiseContourIntegral;\\u6233oss;\\u6a2fcr;\\uc000\\ud835\\udc9ep\\u0100;C\\u0284\\u0285\\u62d3ap;\\u624d\\u0580DJSZacefios\\u02a0\\u02ac\\u02b0\\u02b4\\u02b8\\u02cb\\u02d7\\u02e1\\u02e6\\u0333\\u048d\\u0100;o\\u0179\\u02a5trahd;\\u6911cy;\\u4402cy;\\u4405cy;\\u440f\\u0180grs\\u02bf\\u02c4\\u02c7ger;\\u6021r;\\u61a1hv;\\u6ae4\\u0100ay\\u02d0\\u02d5ron;\\u410e;\\u4414l\\u0100;t\\u02dd\\u02de\\u6207a;\\u4394r;\\uc000\\ud835\\udd07\\u0100af\\u02eb\\u0327\\u0100cm\\u02f0\\u0322ritical\\u0200ADGT\\u0300\\u0306\\u0316\\u031ccute;\\u40b4o\\u0174\\u030b\\u030d;\\u42d9bleAcute;\\u42ddrave;\\u4060ilde;\\u42dcond;\\u62c4ferentialD;\\u6146\\u0470\\u033d\\0\\0\\0\\u0342\\u0354\\0\\u0405f;\\uc000\\ud835\\udd3b\\u0180;DE\\u0348\\u0349\\u034d\\u40a8ot;\\u60dcqual;\\u6250ble\\u0300CDLRUV\\u0363\\u0372\\u0382\\u03cf\\u03e2\\u03f8ontourIntegra\\xec\\u0239o\\u0274\\u0379\\0\\0\\u037b\\xbb\\u0349nArrow;\\u61d3\\u0100eo\\u0387\\u03a4ft\\u0180ART\\u0390\\u0396\\u03a1rrow;\\u61d0ightArrow;\\u61d4e\\xe5\\u02cang\\u0100LR\\u03ab\\u03c4eft\\u0100AR\\u03b3\\u03b9rrow;\\u67f8ightArrow;\\u67faightArrow;\\u67f9ight\\u0100AT\\u03d8\\u03derrow;\\u61d2ee;\\u62a8p\\u0241\\u03e9\\0\\0\\u03efrrow;\\u61d1ownArrow;\\u61d5erticalBar;\\u6225n\\u0300ABLRTa\\u0412\\u042a\\u0430\\u045e\\u047f\\u037crrow\\u0180;BU\\u041d\\u041e\\u0422\\u6193ar;\\u6913pArrow;\\u61f5reve;\\u4311eft\\u02d2\\u043a\\0\\u0446\\0\\u0450ightVector;\\u6950eeVector;\\u695eector\\u0100;B\\u0459\\u045a\\u61bdar;\\u6956ight\\u01d4\\u0467\\0\\u0471eeVector;\\u695fector\\u0100;B\\u047a\\u047b\\u61c1ar;\\u6957ee\\u0100;A\\u0486\\u0487\\u62a4rrow;\\u61a7\\u0100ct\\u0492\\u0497r;\\uc000\\ud835\\udc9frok;\\u4110\\u0800NTacdfglmopqstux\\u04bd\\u04c0\\u04c4\\u04cb\\u04de\\u04e2\\u04e7\\u04ee\\u04f5\\u0521\\u052f\\u0536\\u0552\\u055d\\u0560\\u0565G;\\u414aH\\u803b\\xd0\\u40d0cute\\u803b\\xc9\\u40c9\\u0180aiy\\u04d2\\u04d7\\u04dcron;\\u411arc\\u803b\\xca\\u40ca;\\u442dot;\\u4116r;\\uc000\\ud835\\udd08rave\\u803b\\xc8\\u40c8ement;\\u6208\\u0100ap\\u04fa\\u04fecr;\\u4112ty\\u0253\\u0506\\0\\0\\u0512mallSquare;\\u65fberySmallSquare;\\u65ab\\u0100gp\\u0526\\u052aon;\\u4118f;\\uc000\\ud835\\udd3csilon;\\u4395u\\u0100ai\\u053c\\u0549l\\u0100;T\\u0542\\u0543\\u6a75ilde;\\u6242librium;\\u61cc\\u0100ci\\u0557\\u055ar;\\u6130m;\\u6a73a;\\u4397ml\\u803b\\xcb\\u40cb\\u0100ip\\u056a\\u056fsts;\\u6203onentialE;\\u6147\\u0280cfios\\u0585\\u0588\\u058d\\u05b2\\u05ccy;\\u4424r;\\uc000\\ud835\\udd09lled\\u0253\\u0597\\0\\0\\u05a3mallSquare;\\u65fcerySmallSquare;\\u65aa\\u0370\\u05ba\\0\\u05bf\\0\\0\\u05c4f;\\uc000\\ud835\\udd3dAll;\\u6200riertrf;\\u6131c\\xf2\\u05cb\\u0600JTabcdfgorst\\u05e8\\u05ec\\u05ef\\u05fa\\u0600\\u0612\\u0616\\u061b\\u061d\\u0623\\u066c\\u0672cy;\\u4403\\u803b>\\u403emma\\u0100;d\\u05f7\\u05f8\\u4393;\\u43dcreve;\\u411e\\u0180eiy\\u0607\\u060c\\u0610dil;\\u4122rc;\\u411c;\\u4413ot;\\u4120r;\\uc000\\ud835\\udd0a;\\u62d9pf;\\uc000\\ud835\\udd3eeater\\u0300EFGLST\\u0635\\u0644\\u064e\\u0656\\u065b\\u0666qual\\u0100;L\\u063e\\u063f\\u6265ess;\\u62dbullEqual;\\u6267reater;\\u6aa2ess;\\u6277lantEqual;\\u6a7eilde;\\u6273cr;\\uc000\\ud835\\udca2;\\u626b\\u0400Aacfiosu\\u0685\\u068b\\u0696\\u069b\\u069e\\u06aa\\u06be\\u06caRDcy;\\u442a\\u0100ct\\u0690\\u0694ek;\\u42c7;\\u405eirc;\\u4124r;\\u610clbertSpace;\\u610b\\u01f0\\u06af\\0\\u06b2f;\\u610dizontalLine;\\u6500\\u0100ct\\u06c3\\u06c5\\xf2\\u06a9rok;\\u4126mp\\u0144\\u06d0\\u06d8ownHum\\xf0\\u012fqual;\\u624f\\u0700EJOacdfgmnostu\\u06fa\\u06fe\\u0703\\u0707\\u070e\\u071a\\u071e\\u0721\\u0728\\u0744\\u0778\\u078b\\u078f\\u0795cy;\\u4415lig;\\u4132cy;\\u4401cute\\u803b\\xcd\\u40cd\\u0100iy\\u0713\\u0718rc\\u803b\\xce\\u40ce;\\u4418ot;\\u4130r;\\u6111rave\\u803b\\xcc\\u40cc\\u0180;ap\\u0720\\u072f\\u073f\\u0100cg\\u0734\\u0737r;\\u412ainaryI;\\u6148lie\\xf3\\u03dd\\u01f4\\u0749\\0\\u0762\\u0100;e\\u074d\\u074e\\u622c\\u0100gr\\u0753\\u0758ral;\\u622bsection;\\u62c2isible\\u0100CT\\u076c\\u0772omma;\\u6063imes;\\u6062\\u0180gpt\\u077f\\u0783\\u0788on;\\u412ef;\\uc000\\ud835\\udd40a;\\u4399cr;\\u6110ilde;\\u4128\\u01eb\\u079a\\0\\u079ecy;\\u4406l\\u803b\\xcf\\u40cf\\u0280cfosu\\u07ac\\u07b7\\u07bc\\u07c2\\u07d0\\u0100iy\\u07b1\\u07b5rc;\\u4134;\\u4419r;\\uc000\\ud835\\udd0dpf;\\uc000\\ud835\\udd41\\u01e3\\u07c7\\0\\u07ccr;\\uc000\\ud835\\udca5rcy;\\u4408kcy;\\u4404\\u0380HJacfos\\u07e4\\u07e8\\u07ec\\u07f1\\u07fd\\u0802\\u0808cy;\\u4425cy;\\u440cppa;\\u439a\\u0100ey\\u07f6\\u07fbdil;\\u4136;\\u441ar;\\uc000\\ud835\\udd0epf;\\uc000\\ud835\\udd42cr;\\uc000\\ud835\\udca6\\u0580JTaceflmost\\u0825\\u0829\\u082c\\u0850\\u0863\\u09b3\\u09b8\\u09c7\\u09cd\\u0a37\\u0a47cy;\\u4409\\u803b<\\u403c\\u0280cmnpr\\u0837\\u083c\\u0841\\u0844\\u084dute;\\u4139bda;\\u439bg;\\u67ealacetrf;\\u6112r;\\u619e\\u0180aey\\u0857\\u085c\\u0861ron;\\u413ddil;\\u413b;\\u441b\\u0100fs\\u0868\\u0970t\\u0500ACDFRTUVar\\u087e\\u08a9\\u08b1\\u08e0\\u08e6\\u08fc\\u092f\\u095b\\u0390\\u096a\\u0100nr\\u0883\\u088fgleBracket;\\u67e8row\\u0180;BR\\u0899\\u089a\\u089e\\u6190ar;\\u61e4ightArrow;\\u61c6eiling;\\u6308o\\u01f5\\u08b7\\0\\u08c3bleBracket;\\u67e6n\\u01d4\\u08c8\\0\\u08d2eeVector;\\u6961ector\\u0100;B\\u08db\\u08dc\\u61c3ar;\\u6959loor;\\u630aight\\u0100AV\\u08ef\\u08f5rrow;\\u6194ector;\\u694e\\u0100er\\u0901\\u0917e\\u0180;AV\\u0909\\u090a\\u0910\\u62a3rrow;\\u61a4ector;\\u695aiangle\\u0180;BE\\u0924\\u0925\\u0929\\u62b2ar;\\u69cfqual;\\u62b4p\\u0180DTV\\u0937\\u0942\\u094cownVector;\\u6951eeVector;\\u6960ector\\u0100;B\\u0956\\u0957\\u61bfar;\\u6958ector\\u0100;B\\u0965\\u0966\\u61bcar;\\u6952ight\\xe1\\u039cs\\u0300EFGLST\\u097e\\u098b\\u0995\\u099d\\u09a2\\u09adqualGreater;\\u62daullEqual;\\u6266reater;\\u6276ess;\\u6aa1lantEqual;\\u6a7dilde;\\u6272r;\\uc000\\ud835\\udd0f\\u0100;e\\u09bd\\u09be\\u62d8ftarrow;\\u61daidot;\\u413f\\u0180npw\\u09d4\\u0a16\\u0a1bg\\u0200LRlr\\u09de\\u09f7\\u0a02\\u0a10eft\\u0100AR\\u09e6\\u09ecrrow;\\u67f5ightArrow;\\u67f7ightArrow;\\u67f6eft\\u0100ar\\u03b3\\u0a0aight\\xe1\\u03bfight\\xe1\\u03caf;\\uc000\\ud835\\udd43er\\u0100LR\\u0a22\\u0a2ceftArrow;\\u6199ightArrow;\\u6198\\u0180cht\\u0a3e\\u0a40\\u0a42\\xf2\\u084c;\\u61b0rok;\\u4141;\\u626a\\u0400acefiosu\\u0a5a\\u0a5d\\u0a60\\u0a77\\u0a7c\\u0a85\\u0a8b\\u0a8ep;\\u6905y;\\u441c\\u0100dl\\u0a65\\u0a6fiumSpace;\\u605flintrf;\\u6133r;\\uc000\\ud835\\udd10nusPlus;\\u6213pf;\\uc000\\ud835\\udd44c\\xf2\\u0a76;\\u439c\\u0480Jacefostu\\u0aa3\\u0aa7\\u0aad\\u0ac0\\u0b14\\u0b19\\u0d91\\u0d97\\u0d9ecy;\\u440acute;\\u4143\\u0180aey\\u0ab4\\u0ab9\\u0aberon;\\u4147dil;\\u4145;\\u441d\\u0180gsw\\u0ac7\\u0af0\\u0b0eative\\u0180MTV\\u0ad3\\u0adf\\u0ae8ediumSpace;\\u600bhi\\u0100cn\\u0ae6\\u0ad8\\xeb\\u0ad9eryThi\\xee\\u0ad9ted\\u0100GL\\u0af8\\u0b06reaterGreate\\xf2\\u0673essLes\\xf3\\u0a48Line;\\u400ar;\\uc000\\ud835\\udd11\\u0200Bnpt\\u0b22\\u0b28\\u0b37\\u0b3areak;\\u6060BreakingSpace;\\u40a0f;\\u6115\\u0680;CDEGHLNPRSTV\\u0b55\\u0b56\\u0b6a\\u0b7c\\u0ba1\\u0beb\\u0c04\\u0c5e\\u0c84\\u0ca6\\u0cd8\\u0d61\\u0d85\\u6aec\\u0100ou\\u0b5b\\u0b64ngruent;\\u6262pCap;\\u626doubleVerticalBar;\\u6226\\u0180lqx\\u0b83\\u0b8a\\u0b9bement;\\u6209ual\\u0100;T\\u0b92\\u0b93\\u6260ilde;\\uc000\\u2242\\u0338ists;\\u6204reater\\u0380;EFGLST\\u0bb6\\u0bb7\\u0bbd\\u0bc9\\u0bd3\\u0bd8\\u0be5\\u626fqual;\\u6271ullEqual;\\uc000\\u2267\\u0338reater;\\uc000\\u226b\\u0338ess;\\u6279lantEqual;\\uc000\\u2a7e\\u0338ilde;\\u6275ump\\u0144\\u0bf2\\u0bfdownHump;\\uc000\\u224e\\u0338qual;\\uc000\\u224f\\u0338e\\u0100fs\\u0c0a\\u0c27tTriangle\\u0180;BE\\u0c1a\\u0c1b\\u0c21\\u62eaar;\\uc000\\u29cf\\u0338qual;\\u62ecs\\u0300;EGLST\\u0c35\\u0c36\\u0c3c\\u0c44\\u0c4b\\u0c58\\u626equal;\\u6270reater;\\u6278ess;\\uc000\\u226a\\u0338lantEqual;\\uc000\\u2a7d\\u0338ilde;\\u6274ested\\u0100GL\\u0c68\\u0c79reaterGreater;\\uc000\\u2aa2\\u0338essLess;\\uc000\\u2aa1\\u0338recedes\\u0180;ES\\u0c92\\u0c93\\u0c9b\\u6280qual;\\uc000\\u2aaf\\u0338lantEqual;\\u62e0\\u0100ei\\u0cab\\u0cb9verseElement;\\u620cghtTriangle\\u0180;BE\\u0ccb\\u0ccc\\u0cd2\\u62ebar;\\uc000\\u29d0\\u0338qual;\\u62ed\\u0100qu\\u0cdd\\u0d0cuareSu\\u0100bp\\u0ce8\\u0cf9set\\u0100;E\\u0cf0\\u0cf3\\uc000\\u228f\\u0338qual;\\u62e2erset\\u0100;E\\u0d03\\u0d06\\uc000\\u2290\\u0338qual;\\u62e3\\u0180bcp\\u0d13\\u0d24\\u0d4eset\\u0100;E\\u0d1b\\u0d1e\\uc000\\u2282\\u20d2qual;\\u6288ceeds\\u0200;EST\\u0d32\\u0d33\\u0d3b\\u0d46\\u6281qual;\\uc000\\u2ab0\\u0338lantEqual;\\u62e1ilde;\\uc000\\u227f\\u0338erset\\u0100;E\\u0d58\\u0d5b\\uc000\\u2283\\u20d2qual;\\u6289ilde\\u0200;EFT\\u0d6e\\u0d6f\\u0d75\\u0d7f\\u6241qual;\\u6244ullEqual;\\u6247ilde;\\u6249erticalBar;\\u6224cr;\\uc000\\ud835\\udca9ilde\\u803b\\xd1\\u40d1;\\u439d\\u0700Eacdfgmoprstuv\\u0dbd\\u0dc2\\u0dc9\\u0dd5\\u0ddb\\u0de0\\u0de7\\u0dfc\\u0e02\\u0e20\\u0e22\\u0e32\\u0e3f\\u0e44lig;\\u4152cute\\u803b\\xd3\\u40d3\\u0100iy\\u0dce\\u0dd3rc\\u803b\\xd4\\u40d4;\\u441eblac;\\u4150r;\\uc000\\ud835\\udd12rave\\u803b\\xd2\\u40d2\\u0180aei\\u0dee\\u0df2\\u0df6cr;\\u414cga;\\u43a9cron;\\u439fpf;\\uc000\\ud835\\udd46enCurly\\u0100DQ\\u0e0e\\u0e1aoubleQuote;\\u601cuote;\\u6018;\\u6a54\\u0100cl\\u0e27\\u0e2cr;\\uc000\\ud835\\udcaaash\\u803b\\xd8\\u40d8i\\u016c\\u0e37\\u0e3cde\\u803b\\xd5\\u40d5es;\\u6a37ml\\u803b\\xd6\\u40d6er\\u0100BP\\u0e4b\\u0e60\\u0100ar\\u0e50\\u0e53r;\\u603eac\\u0100ek\\u0e5a\\u0e5c;\\u63deet;\\u63b4arenthesis;\\u63dc\\u0480acfhilors\\u0e7f\\u0e87\\u0e8a\\u0e8f\\u0e92\\u0e94\\u0e9d\\u0eb0\\u0efcrtialD;\\u6202y;\\u441fr;\\uc000\\ud835\\udd13i;\\u43a6;\\u43a0usMinus;\\u40b1\\u0100ip\\u0ea2\\u0eadncareplan\\xe5\\u069df;\\u6119\\u0200;eio\\u0eb9\\u0eba\\u0ee0\\u0ee4\\u6abbcedes\\u0200;EST\\u0ec8\\u0ec9\\u0ecf\\u0eda\\u627aqual;\\u6aaflantEqual;\\u627cilde;\\u627eme;\\u6033\\u0100dp\\u0ee9\\u0eeeuct;\\u620fortion\\u0100;a\\u0225\\u0ef9l;\\u621d\\u0100ci\\u0f01\\u0f06r;\\uc000\\ud835\\udcab;\\u43a8\\u0200Ufos\\u0f11\\u0f16\\u0f1b\\u0f1fOT\\u803b\\\"\\u4022r;\\uc000\\ud835\\udd14pf;\\u611acr;\\uc000\\ud835\\udcac\\u0600BEacefhiorsu\\u0f3e\\u0f43\\u0f47\\u0f60\\u0f73\\u0fa7\\u0faa\\u0fad\\u1096\\u10a9\\u10b4\\u10bearr;\\u6910G\\u803b\\xae\\u40ae\\u0180cnr\\u0f4e\\u0f53\\u0f56ute;\\u4154g;\\u67ebr\\u0100;t\\u0f5c\\u0f5d\\u61a0l;\\u6916\\u0180aey\\u0f67\\u0f6c\\u0f71ron;\\u4158dil;\\u4156;\\u4420\\u0100;v\\u0f78\\u0f79\\u611cerse\\u0100EU\\u0f82\\u0f99\\u0100lq\\u0f87\\u0f8eement;\\u620builibrium;\\u61cbpEquilibrium;\\u696fr\\xbb\\u0f79o;\\u43a1ght\\u0400ACDFTUVa\\u0fc1\\u0feb\\u0ff3\\u1022\\u1028\\u105b\\u1087\\u03d8\\u0100nr\\u0fc6\\u0fd2gleBracket;\\u67e9row\\u0180;BL\\u0fdc\\u0fdd\\u0fe1\\u6192ar;\\u61e5eftArrow;\\u61c4eiling;\\u6309o\\u01f5\\u0ff9\\0\\u1005bleBracket;\\u67e7n\\u01d4\\u100a\\0\\u1014eeVector;\\u695dector\\u0100;B\\u101d\\u101e\\u61c2ar;\\u6955loor;\\u630b\\u0100er\\u102d\\u1043e\\u0180;AV\\u1035\\u1036\\u103c\\u62a2rrow;\\u61a6ector;\\u695biangle\\u0180;BE\\u1050\\u1051\\u1055\\u62b3ar;\\u69d0qual;\\u62b5p\\u0180DTV\\u1063\\u106e\\u1078ownVector;\\u694feeVector;\\u695cector\\u0100;B\\u1082\\u1083\\u61bear;\\u6954ector\\u0100;B\\u1091\\u1092\\u61c0ar;\\u6953\\u0100pu\\u109b\\u109ef;\\u611dndImplies;\\u6970ightarrow;\\u61db\\u0100ch\\u10b9\\u10bcr;\\u611b;\\u61b1leDelayed;\\u69f4\\u0680HOacfhimoqstu\\u10e4\\u10f1\\u10f7\\u10fd\\u1119\\u111e\\u1151\\u1156\\u1161\\u1167\\u11b5\\u11bb\\u11bf\\u0100Cc\\u10e9\\u10eeHcy;\\u4429y;\\u4428FTcy;\\u442ccute;\\u415a\\u0280;aeiy\\u1108\\u1109\\u110e\\u1113\\u1117\\u6abcron;\\u4160dil;\\u415erc;\\u415c;\\u4421r;\\uc000\\ud835\\udd16ort\\u0200DLRU\\u112a\\u1134\\u113e\\u1149ownArrow\\xbb\\u041eeftArrow\\xbb\\u089aightArrow\\xbb\\u0fddpArrow;\\u6191gma;\\u43a3allCircle;\\u6218pf;\\uc000\\ud835\\udd4a\\u0272\\u116d\\0\\0\\u1170t;\\u621aare\\u0200;ISU\\u117b\\u117c\\u1189\\u11af\\u65a1ntersection;\\u6293u\\u0100bp\\u118f\\u119eset\\u0100;E\\u1197\\u1198\\u628fqual;\\u6291erset\\u0100;E\\u11a8\\u11a9\\u6290qual;\\u6292nion;\\u6294cr;\\uc000\\ud835\\udcaear;\\u62c6\\u0200bcmp\\u11c8\\u11db\\u1209\\u120b\\u0100;s\\u11cd\\u11ce\\u62d0et\\u0100;E\\u11cd\\u11d5qual;\\u6286\\u0100ch\\u11e0\\u1205eeds\\u0200;EST\\u11ed\\u11ee\\u11f4\\u11ff\\u627bqual;\\u6ab0lantEqual;\\u627dilde;\\u627fTh\\xe1\\u0f8c;\\u6211\\u0180;es\\u1212\\u1213\\u1223\\u62d1rset\\u0100;E\\u121c\\u121d\\u6283qual;\\u6287et\\xbb\\u1213\\u0580HRSacfhiors\\u123e\\u1244\\u1249\\u1255\\u125e\\u1271\\u1276\\u129f\\u12c2\\u12c8\\u12d1ORN\\u803b\\xde\\u40deADE;\\u6122\\u0100Hc\\u124e\\u1252cy;\\u440by;\\u4426\\u0100bu\\u125a\\u125c;\\u4009;\\u43a4\\u0180aey\\u1265\\u126a\\u126fron;\\u4164dil;\\u4162;\\u4422r;\\uc000\\ud835\\udd17\\u0100ei\\u127b\\u1289\\u01f2\\u1280\\0\\u1287efore;\\u6234a;\\u4398\\u0100cn\\u128e\\u1298kSpace;\\uc000\\u205f\\u200aSpace;\\u6009lde\\u0200;EFT\\u12ab\\u12ac\\u12b2\\u12bc\\u623cqual;\\u6243ullEqual;\\u6245ilde;\\u6248pf;\\uc000\\ud835\\udd4bipleDot;\\u60db\\u0100ct\\u12d6\\u12dbr;\\uc000\\ud835\\udcafrok;\\u4166\\u0ae1\\u12f7\\u130e\\u131a\\u1326\\0\\u132c\\u1331\\0\\0\\0\\0\\0\\u1338\\u133d\\u1377\\u1385\\0\\u13ff\\u1404\\u140a\\u1410\\u0100cr\\u12fb\\u1301ute\\u803b\\xda\\u40dar\\u0100;o\\u1307\\u1308\\u619fcir;\\u6949r\\u01e3\\u1313\\0\\u1316y;\\u440eve;\\u416c\\u0100iy\\u131e\\u1323rc\\u803b\\xdb\\u40db;\\u4423blac;\\u4170r;\\uc000\\ud835\\udd18rave\\u803b\\xd9\\u40d9acr;\\u416a\\u0100di\\u1341\\u1369er\\u0100BP\\u1348\\u135d\\u0100ar\\u134d\\u1350r;\\u405fac\\u0100ek\\u1357\\u1359;\\u63dfet;\\u63b5arenthesis;\\u63ddon\\u0100;P\\u1370\\u1371\\u62c3lus;\\u628e\\u0100gp\\u137b\\u137fon;\\u4172f;\\uc000\\ud835\\udd4c\\u0400ADETadps\\u1395\\u13ae\\u13b8\\u13c4\\u03e8\\u13d2\\u13d7\\u13f3rrow\\u0180;BD\\u1150\\u13a0\\u13a4ar;\\u6912ownArrow;\\u61c5ownArrow;\\u6195quilibrium;\\u696eee\\u0100;A\\u13cb\\u13cc\\u62a5rrow;\\u61a5own\\xe1\\u03f3er\\u0100LR\\u13de\\u13e8eftArrow;\\u6196ightArrow;\\u6197i\\u0100;l\\u13f9\\u13fa\\u43d2on;\\u43a5ing;\\u416ecr;\\uc000\\ud835\\udcb0ilde;\\u4168ml\\u803b\\xdc\\u40dc\\u0480Dbcdefosv\\u1427\\u142c\\u1430\\u1433\\u143e\\u1485\\u148a\\u1490\\u1496ash;\\u62abar;\\u6aeby;\\u4412ash\\u0100;l\\u143b\\u143c\\u62a9;\\u6ae6\\u0100er\\u1443\\u1445;\\u62c1\\u0180bty\\u144c\\u1450\\u147aar;\\u6016\\u0100;i\\u144f\\u1455cal\\u0200BLST\\u1461\\u1465\\u146a\\u1474ar;\\u6223ine;\\u407ceparator;\\u6758ilde;\\u6240ThinSpace;\\u600ar;\\uc000\\ud835\\udd19pf;\\uc000\\ud835\\udd4dcr;\\uc000\\ud835\\udcb1dash;\\u62aa\\u0280cefos\\u14a7\\u14ac\\u14b1\\u14b6\\u14bcirc;\\u4174dge;\\u62c0r;\\uc000\\ud835\\udd1apf;\\uc000\\ud835\\udd4ecr;\\uc000\\ud835\\udcb2\\u0200fios\\u14cb\\u14d0\\u14d2\\u14d8r;\\uc000\\ud835\\udd1b;\\u439epf;\\uc000\\ud835\\udd4fcr;\\uc000\\ud835\\udcb3\\u0480AIUacfosu\\u14f1\\u14f5\\u14f9\\u14fd\\u1504\\u150f\\u1514\\u151a\\u1520cy;\\u442fcy;\\u4407cy;\\u442ecute\\u803b\\xdd\\u40dd\\u0100iy\\u1509\\u150drc;\\u4176;\\u442br;\\uc000\\ud835\\udd1cpf;\\uc000\\ud835\\udd50cr;\\uc000\\ud835\\udcb4ml;\\u4178\\u0400Hacdefos\\u1535\\u1539\\u153f\\u154b\\u154f\\u155d\\u1560\\u1564cy;\\u4416cute;\\u4179\\u0100ay\\u1544\\u1549ron;\\u417d;\\u4417ot;\\u417b\\u01f2\\u1554\\0\\u155boWidt\\xe8\\u0ad9a;\\u4396r;\\u6128pf;\\u6124cr;\\uc000\\ud835\\udcb5\\u0be1\\u1583\\u158a\\u1590\\0\\u15b0\\u15b6\\u15bf\\0\\0\\0\\0\\u15c6\\u15db\\u15eb\\u165f\\u166d\\0\\u1695\\u169b\\u16b2\\u16b9\\0\\u16becute\\u803b\\xe1\\u40e1reve;\\u4103\\u0300;Ediuy\\u159c\\u159d\\u15a1\\u15a3\\u15a8\\u15ad\\u623e;\\uc000\\u223e\\u0333;\\u623frc\\u803b\\xe2\\u40e2te\\u80bb\\xb4\\u0306;\\u4430lig\\u803b\\xe6\\u40e6\\u0100;r\\xb2\\u15ba;\\uc000\\ud835\\udd1erave\\u803b\\xe0\\u40e0\\u0100ep\\u15ca\\u15d6\\u0100fp\\u15cf\\u15d4sym;\\u6135\\xe8\\u15d3ha;\\u43b1\\u0100ap\\u15dfc\\u0100cl\\u15e4\\u15e7r;\\u4101g;\\u6a3f\\u0264\\u15f0\\0\\0\\u160a\\u0280;adsv\\u15fa\\u15fb\\u15ff\\u1601\\u1607\\u6227nd;\\u6a55;\\u6a5clope;\\u6a58;\\u6a5a\\u0380;elmrsz\\u1618\\u1619\\u161b\\u161e\\u163f\\u164f\\u1659\\u6220;\\u69a4e\\xbb\\u1619sd\\u0100;a\\u1625\\u1626\\u6221\\u0461\\u1630\\u1632\\u1634\\u1636\\u1638\\u163a\\u163c\\u163e;\\u69a8;\\u69a9;\\u69aa;\\u69ab;\\u69ac;\\u69ad;\\u69ae;\\u69aft\\u0100;v\\u1645\\u1646\\u621fb\\u0100;d\\u164c\\u164d\\u62be;\\u699d\\u0100pt\\u1654\\u1657h;\\u6222\\xbb\\xb9arr;\\u637c\\u0100gp\\u1663\\u1667on;\\u4105f;\\uc000\\ud835\\udd52\\u0380;Eaeiop\\u12c1\\u167b\\u167d\\u1682\\u1684\\u1687\\u168a;\\u6a70cir;\\u6a6f;\\u624ad;\\u624bs;\\u4027rox\\u0100;e\\u12c1\\u1692\\xf1\\u1683ing\\u803b\\xe5\\u40e5\\u0180cty\\u16a1\\u16a6\\u16a8r;\\uc000\\ud835\\udcb6;\\u402amp\\u0100;e\\u12c1\\u16af\\xf1\\u0288ilde\\u803b\\xe3\\u40e3ml\\u803b\\xe4\\u40e4\\u0100ci\\u16c2\\u16c8onin\\xf4\\u0272nt;\\u6a11\\u0800Nabcdefiklnoprsu\\u16ed\\u16f1\\u1730\\u173c\\u1743\\u1748\\u1778\\u177d\\u17e0\\u17e6\\u1839\\u1850\\u170d\\u193d\\u1948\\u1970ot;\\u6aed\\u0100cr\\u16f6\\u171ek\\u0200ceps\\u1700\\u1705\\u170d\\u1713ong;\\u624cpsilon;\\u43f6rime;\\u6035im\\u0100;e\\u171a\\u171b\\u623dq;\\u62cd\\u0176\\u1722\\u1726ee;\\u62bded\\u0100;g\\u172c\\u172d\\u6305e\\xbb\\u172drk\\u0100;t\\u135c\\u1737brk;\\u63b6\\u0100oy\\u1701\\u1741;\\u4431quo;\\u601e\\u0280cmprt\\u1753\\u175b\\u1761\\u1764\\u1768aus\\u0100;e\\u010a\\u0109ptyv;\\u69b0s\\xe9\\u170cno\\xf5\\u0113\\u0180ahw\\u176f\\u1771\\u1773;\\u43b2;\\u6136een;\\u626cr;\\uc000\\ud835\\udd1fg\\u0380costuvw\\u178d\\u179d\\u17b3\\u17c1\\u17d5\\u17db\\u17de\\u0180aiu\\u1794\\u1796\\u179a\\xf0\\u0760rc;\\u65efp\\xbb\\u1371\\u0180dpt\\u17a4\\u17a8\\u17adot;\\u6a00lus;\\u6a01imes;\\u6a02\\u0271\\u17b9\\0\\0\\u17becup;\\u6a06ar;\\u6605riangle\\u0100du\\u17cd\\u17d2own;\\u65bdp;\\u65b3plus;\\u6a04e\\xe5\\u1444\\xe5\\u14adarow;\\u690d\\u0180ako\\u17ed\\u1826\\u1835\\u0100cn\\u17f2\\u1823k\\u0180lst\\u17fa\\u05ab\\u1802ozenge;\\u69ebriangle\\u0200;dlr\\u1812\\u1813\\u1818\\u181d\\u65b4own;\\u65beeft;\\u65c2ight;\\u65b8k;\\u6423\\u01b1\\u182b\\0\\u1833\\u01b2\\u182f\\0\\u1831;\\u6592;\\u65914;\\u6593ck;\\u6588\\u0100eo\\u183e\\u184d\\u0100;q\\u1843\\u1846\\uc000=\\u20e5uiv;\\uc000\\u2261\\u20e5t;\\u6310\\u0200ptwx\\u1859\\u185e\\u1867\\u186cf;\\uc000\\ud835\\udd53\\u0100;t\\u13cb\\u1863om\\xbb\\u13cctie;\\u62c8\\u0600DHUVbdhmptuv\\u1885\\u1896\\u18aa\\u18bb\\u18d7\\u18db\\u18ec\\u18ff\\u1905\\u190a\\u1910\\u1921\\u0200LRlr\\u188e\\u1890\\u1892\\u1894;\\u6557;\\u6554;\\u6556;\\u6553\\u0280;DUdu\\u18a1\\u18a2\\u18a4\\u18a6\\u18a8\\u6550;\\u6566;\\u6569;\\u6564;\\u6567\\u0200LRlr\\u18b3\\u18b5\\u18b7\\u18b9;\\u655d;\\u655a;\\u655c;\\u6559\\u0380;HLRhlr\\u18ca\\u18cb\\u18cd\\u18cf\\u18d1\\u18d3\\u18d5\\u6551;\\u656c;\\u6563;\\u6560;\\u656b;\\u6562;\\u655fox;\\u69c9\\u0200LRlr\\u18e4\\u18e6\\u18e8\\u18ea;\\u6555;\\u6552;\\u6510;\\u650c\\u0280;DUdu\\u06bd\\u18f7\\u18f9\\u18fb\\u18fd;\\u6565;\\u6568;\\u652c;\\u6534inus;\\u629flus;\\u629eimes;\\u62a0\\u0200LRlr\\u1919\\u191b\\u191d\\u191f;\\u655b;\\u6558;\\u6518;\\u6514\\u0380;HLRhlr\\u1930\\u1931\\u1933\\u1935\\u1937\\u1939\\u193b\\u6502;\\u656a;\\u6561;\\u655e;\\u653c;\\u6524;\\u651c\\u0100ev\\u0123\\u1942bar\\u803b\\xa6\\u40a6\\u0200ceio\\u1951\\u1956\\u195a\\u1960r;\\uc000\\ud835\\udcb7mi;\\u604fm\\u0100;e\\u171a\\u171cl\\u0180;bh\\u1968\\u1969\\u196b\\u405c;\\u69c5sub;\\u67c8\\u016c\\u1974\\u197el\\u0100;e\\u1979\\u197a\\u6022t\\xbb\\u197ap\\u0180;Ee\\u012f\\u1985\\u1987;\\u6aae\\u0100;q\\u06dc\\u06db\\u0ce1\\u19a7\\0\\u19e8\\u1a11\\u1a15\\u1a32\\0\\u1a37\\u1a50\\0\\0\\u1ab4\\0\\0\\u1ac1\\0\\0\\u1b21\\u1b2e\\u1b4d\\u1b52\\0\\u1bfd\\0\\u1c0c\\u0180cpr\\u19ad\\u19b2\\u19ddute;\\u4107\\u0300;abcds\\u19bf\\u19c0\\u19c4\\u19ca\\u19d5\\u19d9\\u6229nd;\\u6a44rcup;\\u6a49\\u0100au\\u19cf\\u19d2p;\\u6a4bp;\\u6a47ot;\\u6a40;\\uc000\\u2229\\ufe00\\u0100eo\\u19e2\\u19e5t;\\u6041\\xee\\u0693\\u0200aeiu\\u19f0\\u19fb\\u1a01\\u1a05\\u01f0\\u19f5\\0\\u19f8s;\\u6a4don;\\u410ddil\\u803b\\xe7\\u40e7rc;\\u4109ps\\u0100;s\\u1a0c\\u1a0d\\u6a4cm;\\u6a50ot;\\u410b\\u0180dmn\\u1a1b\\u1a20\\u1a26il\\u80bb\\xb8\\u01adptyv;\\u69b2t\\u8100\\xa2;e\\u1a2d\\u1a2e\\u40a2r\\xe4\\u01b2r;\\uc000\\ud835\\udd20\\u0180cei\\u1a3d\\u1a40\\u1a4dy;\\u4447ck\\u0100;m\\u1a47\\u1a48\\u6713ark\\xbb\\u1a48;\\u43c7r\\u0380;Ecefms\\u1a5f\\u1a60\\u1a62\\u1a6b\\u1aa4\\u1aaa\\u1aae\\u65cb;\\u69c3\\u0180;el\\u1a69\\u1a6a\\u1a6d\\u42c6q;\\u6257e\\u0261\\u1a74\\0\\0\\u1a88rrow\\u0100lr\\u1a7c\\u1a81eft;\\u61baight;\\u61bb\\u0280RSacd\\u1a92\\u1a94\\u1a96\\u1a9a\\u1a9f\\xbb\\u0f47;\\u64c8st;\\u629birc;\\u629aash;\\u629dnint;\\u6a10id;\\u6aefcir;\\u69c2ubs\\u0100;u\\u1abb\\u1abc\\u6663it\\xbb\\u1abc\\u02ec\\u1ac7\\u1ad4\\u1afa\\0\\u1b0aon\\u0100;e\\u1acd\\u1ace\\u403a\\u0100;q\\xc7\\xc6\\u026d\\u1ad9\\0\\0\\u1ae2a\\u0100;t\\u1ade\\u1adf\\u402c;\\u4040\\u0180;fl\\u1ae8\\u1ae9\\u1aeb\\u6201\\xee\\u1160e\\u0100mx\\u1af1\\u1af6ent\\xbb\\u1ae9e\\xf3\\u024d\\u01e7\\u1afe\\0\\u1b07\\u0100;d\\u12bb\\u1b02ot;\\u6a6dn\\xf4\\u0246\\u0180fry\\u1b10\\u1b14\\u1b17;\\uc000\\ud835\\udd54o\\xe4\\u0254\\u8100\\xa9;s\\u0155\\u1b1dr;\\u6117\\u0100ao\\u1b25\\u1b29rr;\\u61b5ss;\\u6717\\u0100cu\\u1b32\\u1b37r;\\uc000\\ud835\\udcb8\\u0100bp\\u1b3c\\u1b44\\u0100;e\\u1b41\\u1b42\\u6acf;\\u6ad1\\u0100;e\\u1b49\\u1b4a\\u6ad0;\\u6ad2dot;\\u62ef\\u0380delprvw\\u1b60\\u1b6c\\u1b77\\u1b82\\u1bac\\u1bd4\\u1bf9arr\\u0100lr\\u1b68\\u1b6a;\\u6938;\\u6935\\u0270\\u1b72\\0\\0\\u1b75r;\\u62dec;\\u62dfarr\\u0100;p\\u1b7f\\u1b80\\u61b6;\\u693d\\u0300;bcdos\\u1b8f\\u1b90\\u1b96\\u1ba1\\u1ba5\\u1ba8\\u622arcap;\\u6a48\\u0100au\\u1b9b\\u1b9ep;\\u6a46p;\\u6a4aot;\\u628dr;\\u6a45;\\uc000\\u222a\\ufe00\\u0200alrv\\u1bb5\\u1bbf\\u1bde\\u1be3rr\\u0100;m\\u1bbc\\u1bbd\\u61b7;\\u693cy\\u0180evw\\u1bc7\\u1bd4\\u1bd8q\\u0270\\u1bce\\0\\0\\u1bd2re\\xe3\\u1b73u\\xe3\\u1b75ee;\\u62ceedge;\\u62cfen\\u803b\\xa4\\u40a4earrow\\u0100lr\\u1bee\\u1bf3eft\\xbb\\u1b80ight\\xbb\\u1bbde\\xe4\\u1bdd\\u0100ci\\u1c01\\u1c07onin\\xf4\\u01f7nt;\\u6231lcty;\\u632d\\u0980AHabcdefhijlorstuwz\\u1c38\\u1c3b\\u1c3f\\u1c5d\\u1c69\\u1c75\\u1c8a\\u1c9e\\u1cac\\u1cb7\\u1cfb\\u1cff\\u1d0d\\u1d7b\\u1d91\\u1dab\\u1dbb\\u1dc6\\u1dcdr\\xf2\\u0381ar;\\u6965\\u0200glrs\\u1c48\\u1c4d\\u1c52\\u1c54ger;\\u6020eth;\\u6138\\xf2\\u1133h\\u0100;v\\u1c5a\\u1c5b\\u6010\\xbb\\u090a\\u016b\\u1c61\\u1c67arow;\\u690fa\\xe3\\u0315\\u0100ay\\u1c6e\\u1c73ron;\\u410f;\\u4434\\u0180;ao\\u0332\\u1c7c\\u1c84\\u0100gr\\u02bf\\u1c81r;\\u61catseq;\\u6a77\\u0180glm\\u1c91\\u1c94\\u1c98\\u803b\\xb0\\u40b0ta;\\u43b4ptyv;\\u69b1\\u0100ir\\u1ca3\\u1ca8sht;\\u697f;\\uc000\\ud835\\udd21ar\\u0100lr\\u1cb3\\u1cb5\\xbb\\u08dc\\xbb\\u101e\\u0280aegsv\\u1cc2\\u0378\\u1cd6\\u1cdc\\u1ce0m\\u0180;os\\u0326\\u1cca\\u1cd4nd\\u0100;s\\u0326\\u1cd1uit;\\u6666amma;\\u43ddin;\\u62f2\\u0180;io\\u1ce7\\u1ce8\\u1cf8\\u40f7de\\u8100\\xf7;o\\u1ce7\\u1cf0ntimes;\\u62c7n\\xf8\\u1cf7cy;\\u4452c\\u026f\\u1d06\\0\\0\\u1d0arn;\\u631eop;\\u630d\\u0280lptuw\\u1d18\\u1d1d\\u1d22\\u1d49\\u1d55lar;\\u4024f;\\uc000\\ud835\\udd55\\u0280;emps\\u030b\\u1d2d\\u1d37\\u1d3d\\u1d42q\\u0100;d\\u0352\\u1d33ot;\\u6251inus;\\u6238lus;\\u6214quare;\\u62a1blebarwedg\\xe5\\xfan\\u0180adh\\u112e\\u1d5d\\u1d67ownarrow\\xf3\\u1c83arpoon\\u0100lr\\u1d72\\u1d76ef\\xf4\\u1cb4igh\\xf4\\u1cb6\\u0162\\u1d7f\\u1d85karo\\xf7\\u0f42\\u026f\\u1d8a\\0\\0\\u1d8ern;\\u631fop;\\u630c\\u0180cot\\u1d98\\u1da3\\u1da6\\u0100ry\\u1d9d\\u1da1;\\uc000\\ud835\\udcb9;\\u4455l;\\u69f6rok;\\u4111\\u0100dr\\u1db0\\u1db4ot;\\u62f1i\\u0100;f\\u1dba\\u1816\\u65bf\\u0100ah\\u1dc0\\u1dc3r\\xf2\\u0429a\\xf2\\u0fa6angle;\\u69a6\\u0100ci\\u1dd2\\u1dd5y;\\u445fgrarr;\\u67ff\\u0900Dacdefglmnopqrstux\\u1e01\\u1e09\\u1e19\\u1e38\\u0578\\u1e3c\\u1e49\\u1e61\\u1e7e\\u1ea5\\u1eaf\\u1ebd\\u1ee1\\u1f2a\\u1f37\\u1f44\\u1f4e\\u1f5a\\u0100Do\\u1e06\\u1d34o\\xf4\\u1c89\\u0100cs\\u1e0e\\u1e14ute\\u803b\\xe9\\u40e9ter;\\u6a6e\\u0200aioy\\u1e22\\u1e27\\u1e31\\u1e36ron;\\u411br\\u0100;c\\u1e2d\\u1e2e\\u6256\\u803b\\xea\\u40ealon;\\u6255;\\u444dot;\\u4117\\u0100Dr\\u1e41\\u1e45ot;\\u6252;\\uc000\\ud835\\udd22\\u0180;rs\\u1e50\\u1e51\\u1e57\\u6a9aave\\u803b\\xe8\\u40e8\\u0100;d\\u1e5c\\u1e5d\\u6a96ot;\\u6a98\\u0200;ils\\u1e6a\\u1e6b\\u1e72\\u1e74\\u6a99nters;\\u63e7;\\u6113\\u0100;d\\u1e79\\u1e7a\\u6a95ot;\\u6a97\\u0180aps\\u1e85\\u1e89\\u1e97cr;\\u4113ty\\u0180;sv\\u1e92\\u1e93\\u1e95\\u6205et\\xbb\\u1e93p\\u01001;\\u1e9d\\u1ea4\\u0133\\u1ea1\\u1ea3;\\u6004;\\u6005\\u6003\\u0100gs\\u1eaa\\u1eac;\\u414bp;\\u6002\\u0100gp\\u1eb4\\u1eb8on;\\u4119f;\\uc000\\ud835\\udd56\\u0180als\\u1ec4\\u1ece\\u1ed2r\\u0100;s\\u1eca\\u1ecb\\u62d5l;\\u69e3us;\\u6a71i\\u0180;lv\\u1eda\\u1edb\\u1edf\\u43b5on\\xbb\\u1edb;\\u43f5\\u0200csuv\\u1eea\\u1ef3\\u1f0b\\u1f23\\u0100io\\u1eef\\u1e31rc\\xbb\\u1e2e\\u0269\\u1ef9\\0\\0\\u1efb\\xed\\u0548ant\\u0100gl\\u1f02\\u1f06tr\\xbb\\u1e5dess\\xbb\\u1e7a\\u0180aei\\u1f12\\u1f16\\u1f1als;\\u403dst;\\u625fv\\u0100;D\\u0235\\u1f20D;\\u6a78parsl;\\u69e5\\u0100Da\\u1f2f\\u1f33ot;\\u6253rr;\\u6971\\u0180cdi\\u1f3e\\u1f41\\u1ef8r;\\u612fo\\xf4\\u0352\\u0100ah\\u1f49\\u1f4b;\\u43b7\\u803b\\xf0\\u40f0\\u0100mr\\u1f53\\u1f57l\\u803b\\xeb\\u40ebo;\\u60ac\\u0180cip\\u1f61\\u1f64\\u1f67l;\\u4021s\\xf4\\u056e\\u0100eo\\u1f6c\\u1f74ctatio\\xee\\u0559nential\\xe5\\u0579\\u09e1\\u1f92\\0\\u1f9e\\0\\u1fa1\\u1fa7\\0\\0\\u1fc6\\u1fcc\\0\\u1fd3\\0\\u1fe6\\u1fea\\u2000\\0\\u2008\\u205allingdotse\\xf1\\u1e44y;\\u4444male;\\u6640\\u0180ilr\\u1fad\\u1fb3\\u1fc1lig;\\u8000\\ufb03\\u0269\\u1fb9\\0\\0\\u1fbdg;\\u8000\\ufb00ig;\\u8000\\ufb04;\\uc000\\ud835\\udd23lig;\\u8000\\ufb01lig;\\uc000fj\\u0180alt\\u1fd9\\u1fdc\\u1fe1t;\\u666dig;\\u8000\\ufb02ns;\\u65b1of;\\u4192\\u01f0\\u1fee\\0\\u1ff3f;\\uc000\\ud835\\udd57\\u0100ak\\u05bf\\u1ff7\\u0100;v\\u1ffc\\u1ffd\\u62d4;\\u6ad9artint;\\u6a0d\\u0100ao\\u200c\\u2055\\u0100cs\\u2011\\u2052\\u03b1\\u201a\\u2030\\u2038\\u2045\\u2048\\0\\u2050\\u03b2\\u2022\\u2025\\u2027\\u202a\\u202c\\0\\u202e\\u803b\\xbd\\u40bd;\\u6153\\u803b\\xbc\\u40bc;\\u6155;\\u6159;\\u615b\\u01b3\\u2034\\0\\u2036;\\u6154;\\u6156\\u02b4\\u203e\\u2041\\0\\0\\u2043\\u803b\\xbe\\u40be;\\u6157;\\u615c5;\\u6158\\u01b6\\u204c\\0\\u204e;\\u615a;\\u615d8;\\u615el;\\u6044wn;\\u6322cr;\\uc000\\ud835\\udcbb\\u0880Eabcdefgijlnorstv\\u2082\\u2089\\u209f\\u20a5\\u20b0\\u20b4\\u20f0\\u20f5\\u20fa\\u20ff\\u2103\\u2112\\u2138\\u0317\\u213e\\u2152\\u219e\\u0100;l\\u064d\\u2087;\\u6a8c\\u0180cmp\\u2090\\u2095\\u209dute;\\u41f5ma\\u0100;d\\u209c\\u1cda\\u43b3;\\u6a86reve;\\u411f\\u0100iy\\u20aa\\u20aerc;\\u411d;\\u4433ot;\\u4121\\u0200;lqs\\u063e\\u0642\\u20bd\\u20c9\\u0180;qs\\u063e\\u064c\\u20c4lan\\xf4\\u0665\\u0200;cdl\\u0665\\u20d2\\u20d5\\u20e5c;\\u6aa9ot\\u0100;o\\u20dc\\u20dd\\u6a80\\u0100;l\\u20e2\\u20e3\\u6a82;\\u6a84\\u0100;e\\u20ea\\u20ed\\uc000\\u22db\\ufe00s;\\u6a94r;\\uc000\\ud835\\udd24\\u0100;g\\u0673\\u061bmel;\\u6137cy;\\u4453\\u0200;Eaj\\u065a\\u210c\\u210e\\u2110;\\u6a92;\\u6aa5;\\u6aa4\\u0200Eaes\\u211b\\u211d\\u2129\\u2134;\\u6269p\\u0100;p\\u2123\\u2124\\u6a8arox\\xbb\\u2124\\u0100;q\\u212e\\u212f\\u6a88\\u0100;q\\u212e\\u211bim;\\u62e7pf;\\uc000\\ud835\\udd58\\u0100ci\\u2143\\u2146r;\\u610am\\u0180;el\\u066b\\u214e\\u2150;\\u6a8e;\\u6a90\\u8300>;cdlqr\\u05ee\\u2160\\u216a\\u216e\\u2173\\u2179\\u0100ci\\u2165\\u2167;\\u6aa7r;\\u6a7aot;\\u62d7Par;\\u6995uest;\\u6a7c\\u0280adels\\u2184\\u216a\\u2190\\u0656\\u219b\\u01f0\\u2189\\0\\u218epro\\xf8\\u209er;\\u6978q\\u0100lq\\u063f\\u2196les\\xf3\\u2088i\\xed\\u066b\\u0100en\\u21a3\\u21adrtneqq;\\uc000\\u2269\\ufe00\\xc5\\u21aa\\u0500Aabcefkosy\\u21c4\\u21c7\\u21f1\\u21f5\\u21fa\\u2218\\u221d\\u222f\\u2268\\u227dr\\xf2\\u03a0\\u0200ilmr\\u21d0\\u21d4\\u21d7\\u21dbrs\\xf0\\u1484f\\xbb\\u2024il\\xf4\\u06a9\\u0100dr\\u21e0\\u21e4cy;\\u444a\\u0180;cw\\u08f4\\u21eb\\u21efir;\\u6948;\\u61adar;\\u610firc;\\u4125\\u0180alr\\u2201\\u220e\\u2213rts\\u0100;u\\u2209\\u220a\\u6665it\\xbb\\u220alip;\\u6026con;\\u62b9r;\\uc000\\ud835\\udd25s\\u0100ew\\u2223\\u2229arow;\\u6925arow;\\u6926\\u0280amopr\\u223a\\u223e\\u2243\\u225e\\u2263rr;\\u61fftht;\\u623bk\\u0100lr\\u2249\\u2253eftarrow;\\u61a9ightarrow;\\u61aaf;\\uc000\\ud835\\udd59bar;\\u6015\\u0180clt\\u226f\\u2274\\u2278r;\\uc000\\ud835\\udcbdas\\xe8\\u21f4rok;\\u4127\\u0100bp\\u2282\\u2287ull;\\u6043hen\\xbb\\u1c5b\\u0ae1\\u22a3\\0\\u22aa\\0\\u22b8\\u22c5\\u22ce\\0\\u22d5\\u22f3\\0\\0\\u22f8\\u2322\\u2367\\u2362\\u237f\\0\\u2386\\u23aa\\u23b4cute\\u803b\\xed\\u40ed\\u0180;iy\\u0771\\u22b0\\u22b5rc\\u803b\\xee\\u40ee;\\u4438\\u0100cx\\u22bc\\u22bfy;\\u4435cl\\u803b\\xa1\\u40a1\\u0100fr\\u039f\\u22c9;\\uc000\\ud835\\udd26rave\\u803b\\xec\\u40ec\\u0200;ino\\u073e\\u22dd\\u22e9\\u22ee\\u0100in\\u22e2\\u22e6nt;\\u6a0ct;\\u622dfin;\\u69dcta;\\u6129lig;\\u4133\\u0180aop\\u22fe\\u231a\\u231d\\u0180cgt\\u2305\\u2308\\u2317r;\\u412b\\u0180elp\\u071f\\u230f\\u2313in\\xe5\\u078ear\\xf4\\u0720h;\\u4131f;\\u62b7ed;\\u41b5\\u0280;cfot\\u04f4\\u232c\\u2331\\u233d\\u2341are;\\u6105in\\u0100;t\\u2338\\u2339\\u621eie;\\u69dddo\\xf4\\u2319\\u0280;celp\\u0757\\u234c\\u2350\\u235b\\u2361al;\\u62ba\\u0100gr\\u2355\\u2359er\\xf3\\u1563\\xe3\\u234darhk;\\u6a17rod;\\u6a3c\\u0200cgpt\\u236f\\u2372\\u2376\\u237by;\\u4451on;\\u412ff;\\uc000\\ud835\\udd5aa;\\u43b9uest\\u803b\\xbf\\u40bf\\u0100ci\\u238a\\u238fr;\\uc000\\ud835\\udcben\\u0280;Edsv\\u04f4\\u239b\\u239d\\u23a1\\u04f3;\\u62f9ot;\\u62f5\\u0100;v\\u23a6\\u23a7\\u62f4;\\u62f3\\u0100;i\\u0777\\u23aelde;\\u4129\\u01eb\\u23b8\\0\\u23bccy;\\u4456l\\u803b\\xef\\u40ef\\u0300cfmosu\\u23cc\\u23d7\\u23dc\\u23e1\\u23e7\\u23f5\\u0100iy\\u23d1\\u23d5rc;\\u4135;\\u4439r;\\uc000\\ud835\\udd27ath;\\u4237pf;\\uc000\\ud835\\udd5b\\u01e3\\u23ec\\0\\u23f1r;\\uc000\\ud835\\udcbfrcy;\\u4458kcy;\\u4454\\u0400acfghjos\\u240b\\u2416\\u2422\\u2427\\u242d\\u2431\\u2435\\u243bppa\\u0100;v\\u2413\\u2414\\u43ba;\\u43f0\\u0100ey\\u241b\\u2420dil;\\u4137;\\u443ar;\\uc000\\ud835\\udd28reen;\\u4138cy;\\u4445cy;\\u445cpf;\\uc000\\ud835\\udd5ccr;\\uc000\\ud835\\udcc0\\u0b80ABEHabcdefghjlmnoprstuv\\u2470\\u2481\\u2486\\u248d\\u2491\\u250e\\u253d\\u255a\\u2580\\u264e\\u265e\\u2665\\u2679\\u267d\\u269a\\u26b2\\u26d8\\u275d\\u2768\\u278b\\u27c0\\u2801\\u2812\\u0180art\\u2477\\u247a\\u247cr\\xf2\\u09c6\\xf2\\u0395ail;\\u691barr;\\u690e\\u0100;g\\u0994\\u248b;\\u6a8bar;\\u6962\\u0963\\u24a5\\0\\u24aa\\0\\u24b1\\0\\0\\0\\0\\0\\u24b5\\u24ba\\0\\u24c6\\u24c8\\u24cd\\0\\u24f9ute;\\u413amptyv;\\u69b4ra\\xee\\u084cbda;\\u43bbg\\u0180;dl\\u088e\\u24c1\\u24c3;\\u6991\\xe5\\u088e;\\u6a85uo\\u803b\\xab\\u40abr\\u0400;bfhlpst\\u0899\\u24de\\u24e6\\u24e9\\u24eb\\u24ee\\u24f1\\u24f5\\u0100;f\\u089d\\u24e3s;\\u691fs;\\u691d\\xeb\\u2252p;\\u61abl;\\u6939im;\\u6973l;\\u61a2\\u0180;ae\\u24ff\\u2500\\u2504\\u6aabil;\\u6919\\u0100;s\\u2509\\u250a\\u6aad;\\uc000\\u2aad\\ufe00\\u0180abr\\u2515\\u2519\\u251drr;\\u690crk;\\u6772\\u0100ak\\u2522\\u252cc\\u0100ek\\u2528\\u252a;\\u407b;\\u405b\\u0100es\\u2531\\u2533;\\u698bl\\u0100du\\u2539\\u253b;\\u698f;\\u698d\\u0200aeuy\\u2546\\u254b\\u2556\\u2558ron;\\u413e\\u0100di\\u2550\\u2554il;\\u413c\\xec\\u08b0\\xe2\\u2529;\\u443b\\u0200cqrs\\u2563\\u2566\\u256d\\u257da;\\u6936uo\\u0100;r\\u0e19\\u1746\\u0100du\\u2572\\u2577har;\\u6967shar;\\u694bh;\\u61b2\\u0280;fgqs\\u258b\\u258c\\u0989\\u25f3\\u25ff\\u6264t\\u0280ahlrt\\u2598\\u25a4\\u25b7\\u25c2\\u25e8rrow\\u0100;t\\u0899\\u25a1a\\xe9\\u24f6arpoon\\u0100du\\u25af\\u25b4own\\xbb\\u045ap\\xbb\\u0966eftarrows;\\u61c7ight\\u0180ahs\\u25cd\\u25d6\\u25derrow\\u0100;s\\u08f4\\u08a7arpoon\\xf3\\u0f98quigarro\\xf7\\u21f0hreetimes;\\u62cb\\u0180;qs\\u258b\\u0993\\u25falan\\xf4\\u09ac\\u0280;cdgs\\u09ac\\u260a\\u260d\\u261d\\u2628c;\\u6aa8ot\\u0100;o\\u2614\\u2615\\u6a7f\\u0100;r\\u261a\\u261b\\u6a81;\\u6a83\\u0100;e\\u2622\\u2625\\uc000\\u22da\\ufe00s;\\u6a93\\u0280adegs\\u2633\\u2639\\u263d\\u2649\\u264bppro\\xf8\\u24c6ot;\\u62d6q\\u0100gq\\u2643\\u2645\\xf4\\u0989gt\\xf2\\u248c\\xf4\\u099bi\\xed\\u09b2\\u0180ilr\\u2655\\u08e1\\u265asht;\\u697c;\\uc000\\ud835\\udd29\\u0100;E\\u099c\\u2663;\\u6a91\\u0161\\u2669\\u2676r\\u0100du\\u25b2\\u266e\\u0100;l\\u0965\\u2673;\\u696alk;\\u6584cy;\\u4459\\u0280;acht\\u0a48\\u2688\\u268b\\u2691\\u2696r\\xf2\\u25c1orne\\xf2\\u1d08ard;\\u696bri;\\u65fa\\u0100io\\u269f\\u26a4dot;\\u4140ust\\u0100;a\\u26ac\\u26ad\\u63b0che\\xbb\\u26ad\\u0200Eaes\\u26bb\\u26bd\\u26c9\\u26d4;\\u6268p\\u0100;p\\u26c3\\u26c4\\u6a89rox\\xbb\\u26c4\\u0100;q\\u26ce\\u26cf\\u6a87\\u0100;q\\u26ce\\u26bbim;\\u62e6\\u0400abnoptwz\\u26e9\\u26f4\\u26f7\\u271a\\u272f\\u2741\\u2747\\u2750\\u0100nr\\u26ee\\u26f1g;\\u67ecr;\\u61fdr\\xeb\\u08c1g\\u0180lmr\\u26ff\\u270d\\u2714eft\\u0100ar\\u09e6\\u2707ight\\xe1\\u09f2apsto;\\u67fcight\\xe1\\u09fdparrow\\u0100lr\\u2725\\u2729ef\\xf4\\u24edight;\\u61ac\\u0180afl\\u2736\\u2739\\u273dr;\\u6985;\\uc000\\ud835\\udd5dus;\\u6a2dimes;\\u6a34\\u0161\\u274b\\u274fst;\\u6217\\xe1\\u134e\\u0180;ef\\u2757\\u2758\\u1800\\u65cange\\xbb\\u2758ar\\u0100;l\\u2764\\u2765\\u4028t;\\u6993\\u0280achmt\\u2773\\u2776\\u277c\\u2785\\u2787r\\xf2\\u08a8orne\\xf2\\u1d8car\\u0100;d\\u0f98\\u2783;\\u696d;\\u600eri;\\u62bf\\u0300achiqt\\u2798\\u279d\\u0a40\\u27a2\\u27ae\\u27bbquo;\\u6039r;\\uc000\\ud835\\udcc1m\\u0180;eg\\u09b2\\u27aa\\u27ac;\\u6a8d;\\u6a8f\\u0100bu\\u252a\\u27b3o\\u0100;r\\u0e1f\\u27b9;\\u601arok;\\u4142\\u8400<;cdhilqr\\u082b\\u27d2\\u2639\\u27dc\\u27e0\\u27e5\\u27ea\\u27f0\\u0100ci\\u27d7\\u27d9;\\u6aa6r;\\u6a79re\\xe5\\u25f2mes;\\u62c9arr;\\u6976uest;\\u6a7b\\u0100Pi\\u27f5\\u27f9ar;\\u6996\\u0180;ef\\u2800\\u092d\\u181b\\u65c3r\\u0100du\\u2807\\u280dshar;\\u694ahar;\\u6966\\u0100en\\u2817\\u2821rtneqq;\\uc000\\u2268\\ufe00\\xc5\\u281e\\u0700Dacdefhilnopsu\\u2840\\u2845\\u2882\\u288e\\u2893\\u28a0\\u28a5\\u28a8\\u28da\\u28e2\\u28e4\\u0a83\\u28f3\\u2902Dot;\\u623a\\u0200clpr\\u284e\\u2852\\u2863\\u287dr\\u803b\\xaf\\u40af\\u0100et\\u2857\\u2859;\\u6642\\u0100;e\\u285e\\u285f\\u6720se\\xbb\\u285f\\u0100;s\\u103b\\u2868to\\u0200;dlu\\u103b\\u2873\\u2877\\u287bow\\xee\\u048cef\\xf4\\u090f\\xf0\\u13d1ker;\\u65ae\\u0100oy\\u2887\\u288cmma;\\u6a29;\\u443cash;\\u6014asuredangle\\xbb\\u1626r;\\uc000\\ud835\\udd2ao;\\u6127\\u0180cdn\\u28af\\u28b4\\u28c9ro\\u803b\\xb5\\u40b5\\u0200;acd\\u1464\\u28bd\\u28c0\\u28c4s\\xf4\\u16a7ir;\\u6af0ot\\u80bb\\xb7\\u01b5us\\u0180;bd\\u28d2\\u1903\\u28d3\\u6212\\u0100;u\\u1d3c\\u28d8;\\u6a2a\\u0163\\u28de\\u28e1p;\\u6adb\\xf2\\u2212\\xf0\\u0a81\\u0100dp\\u28e9\\u28eeels;\\u62a7f;\\uc000\\ud835\\udd5e\\u0100ct\\u28f8\\u28fdr;\\uc000\\ud835\\udcc2pos\\xbb\\u159d\\u0180;lm\\u2909\\u290a\\u290d\\u43bctimap;\\u62b8\\u0c00GLRVabcdefghijlmoprstuvw\\u2942\\u2953\\u297e\\u2989\\u2998\\u29da\\u29e9\\u2a15\\u2a1a\\u2a58\\u2a5d\\u2a83\\u2a95\\u2aa4\\u2aa8\\u2b04\\u2b07\\u2b44\\u2b7f\\u2bae\\u2c34\\u2c67\\u2c7c\\u2ce9\\u0100gt\\u2947\\u294b;\\uc000\\u22d9\\u0338\\u0100;v\\u2950\\u0bcf\\uc000\\u226b\\u20d2\\u0180elt\\u295a\\u2972\\u2976ft\\u0100ar\\u2961\\u2967rrow;\\u61cdightarrow;\\u61ce;\\uc000\\u22d8\\u0338\\u0100;v\\u297b\\u0c47\\uc000\\u226a\\u20d2ightarrow;\\u61cf\\u0100Dd\\u298e\\u2993ash;\\u62afash;\\u62ae\\u0280bcnpt\\u29a3\\u29a7\\u29ac\\u29b1\\u29ccla\\xbb\\u02deute;\\u4144g;\\uc000\\u2220\\u20d2\\u0280;Eiop\\u0d84\\u29bc\\u29c0\\u29c5\\u29c8;\\uc000\\u2a70\\u0338d;\\uc000\\u224b\\u0338s;\\u4149ro\\xf8\\u0d84ur\\u0100;a\\u29d3\\u29d4\\u666el\\u0100;s\\u29d3\\u0b38\\u01f3\\u29df\\0\\u29e3p\\u80bb\\xa0\\u0b37mp\\u0100;e\\u0bf9\\u0c00\\u0280aeouy\\u29f4\\u29fe\\u2a03\\u2a10\\u2a13\\u01f0\\u29f9\\0\\u29fb;\\u6a43on;\\u4148dil;\\u4146ng\\u0100;d\\u0d7e\\u2a0aot;\\uc000\\u2a6d\\u0338p;\\u6a42;\\u443dash;\\u6013\\u0380;Aadqsx\\u0b92\\u2a29\\u2a2d\\u2a3b\\u2a41\\u2a45\\u2a50rr;\\u61d7r\\u0100hr\\u2a33\\u2a36k;\\u6924\\u0100;o\\u13f2\\u13f0ot;\\uc000\\u2250\\u0338ui\\xf6\\u0b63\\u0100ei\\u2a4a\\u2a4ear;\\u6928\\xed\\u0b98ist\\u0100;s\\u0ba0\\u0b9fr;\\uc000\\ud835\\udd2b\\u0200Eest\\u0bc5\\u2a66\\u2a79\\u2a7c\\u0180;qs\\u0bbc\\u2a6d\\u0be1\\u0180;qs\\u0bbc\\u0bc5\\u2a74lan\\xf4\\u0be2i\\xed\\u0bea\\u0100;r\\u0bb6\\u2a81\\xbb\\u0bb7\\u0180Aap\\u2a8a\\u2a8d\\u2a91r\\xf2\\u2971rr;\\u61aear;\\u6af2\\u0180;sv\\u0f8d\\u2a9c\\u0f8c\\u0100;d\\u2aa1\\u2aa2\\u62fc;\\u62facy;\\u445a\\u0380AEadest\\u2ab7\\u2aba\\u2abe\\u2ac2\\u2ac5\\u2af6\\u2af9r\\xf2\\u2966;\\uc000\\u2266\\u0338rr;\\u619ar;\\u6025\\u0200;fqs\\u0c3b\\u2ace\\u2ae3\\u2aeft\\u0100ar\\u2ad4\\u2ad9rro\\xf7\\u2ac1ightarro\\xf7\\u2a90\\u0180;qs\\u0c3b\\u2aba\\u2aealan\\xf4\\u0c55\\u0100;s\\u0c55\\u2af4\\xbb\\u0c36i\\xed\\u0c5d\\u0100;r\\u0c35\\u2afei\\u0100;e\\u0c1a\\u0c25i\\xe4\\u0d90\\u0100pt\\u2b0c\\u2b11f;\\uc000\\ud835\\udd5f\\u8180\\xac;in\\u2b19\\u2b1a\\u2b36\\u40acn\\u0200;Edv\\u0b89\\u2b24\\u2b28\\u2b2e;\\uc000\\u22f9\\u0338ot;\\uc000\\u22f5\\u0338\\u01e1\\u0b89\\u2b33\\u2b35;\\u62f7;\\u62f6i\\u0100;v\\u0cb8\\u2b3c\\u01e1\\u0cb8\\u2b41\\u2b43;\\u62fe;\\u62fd\\u0180aor\\u2b4b\\u2b63\\u2b69r\\u0200;ast\\u0b7b\\u2b55\\u2b5a\\u2b5flle\\xec\\u0b7bl;\\uc000\\u2afd\\u20e5;\\uc000\\u2202\\u0338lint;\\u6a14\\u0180;ce\\u0c92\\u2b70\\u2b73u\\xe5\\u0ca5\\u0100;c\\u0c98\\u2b78\\u0100;e\\u0c92\\u2b7d\\xf1\\u0c98\\u0200Aait\\u2b88\\u2b8b\\u2b9d\\u2ba7r\\xf2\\u2988rr\\u0180;cw\\u2b94\\u2b95\\u2b99\\u619b;\\uc000\\u2933\\u0338;\\uc000\\u219d\\u0338ghtarrow\\xbb\\u2b95ri\\u0100;e\\u0ccb\\u0cd6\\u0380chimpqu\\u2bbd\\u2bcd\\u2bd9\\u2b04\\u0b78\\u2be4\\u2bef\\u0200;cer\\u0d32\\u2bc6\\u0d37\\u2bc9u\\xe5\\u0d45;\\uc000\\ud835\\udcc3ort\\u026d\\u2b05\\0\\0\\u2bd6ar\\xe1\\u2b56m\\u0100;e\\u0d6e\\u2bdf\\u0100;q\\u0d74\\u0d73su\\u0100bp\\u2beb\\u2bed\\xe5\\u0cf8\\xe5\\u0d0b\\u0180bcp\\u2bf6\\u2c11\\u2c19\\u0200;Ees\\u2bff\\u2c00\\u0d22\\u2c04\\u6284;\\uc000\\u2ac5\\u0338et\\u0100;e\\u0d1b\\u2c0bq\\u0100;q\\u0d23\\u2c00c\\u0100;e\\u0d32\\u2c17\\xf1\\u0d38\\u0200;Ees\\u2c22\\u2c23\\u0d5f\\u2c27\\u6285;\\uc000\\u2ac6\\u0338et\\u0100;e\\u0d58\\u2c2eq\\u0100;q\\u0d60\\u2c23\\u0200gilr\\u2c3d\\u2c3f\\u2c45\\u2c47\\xec\\u0bd7lde\\u803b\\xf1\\u40f1\\xe7\\u0c43iangle\\u0100lr\\u2c52\\u2c5ceft\\u0100;e\\u0c1a\\u2c5a\\xf1\\u0c26ight\\u0100;e\\u0ccb\\u2c65\\xf1\\u0cd7\\u0100;m\\u2c6c\\u2c6d\\u43bd\\u0180;es\\u2c74\\u2c75\\u2c79\\u4023ro;\\u6116p;\\u6007\\u0480DHadgilrs\\u2c8f\\u2c94\\u2c99\\u2c9e\\u2ca3\\u2cb0\\u2cb6\\u2cd3\\u2ce3ash;\\u62adarr;\\u6904p;\\uc000\\u224d\\u20d2ash;\\u62ac\\u0100et\\u2ca8\\u2cac;\\uc000\\u2265\\u20d2;\\uc000>\\u20d2nfin;\\u69de\\u0180Aet\\u2cbd\\u2cc1\\u2cc5rr;\\u6902;\\uc000\\u2264\\u20d2\\u0100;r\\u2cca\\u2ccd\\uc000<\\u20d2ie;\\uc000\\u22b4\\u20d2\\u0100At\\u2cd8\\u2cdcrr;\\u6903rie;\\uc000\\u22b5\\u20d2im;\\uc000\\u223c\\u20d2\\u0180Aan\\u2cf0\\u2cf4\\u2d02rr;\\u61d6r\\u0100hr\\u2cfa\\u2cfdk;\\u6923\\u0100;o\\u13e7\\u13e5ear;\\u6927\\u1253\\u1a95\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\0\\u2d2d\\0\\u2d38\\u2d48\\u2d60\\u2d65\\u2d72\\u2d84\\u1b07\\0\\0\\u2d8d\\u2dab\\0\\u2dc8\\u2dce\\0\\u2ddc\\u2e19\\u2e2b\\u2e3e\\u2e43\\u0100cs\\u2d31\\u1a97ute\\u803b\\xf3\\u40f3\\u0100iy\\u2d3c\\u2d45r\\u0100;c\\u1a9e\\u2d42\\u803b\\xf4\\u40f4;\\u443e\\u0280abios\\u1aa0\\u2d52\\u2d57\\u01c8\\u2d5alac;\\u4151v;\\u6a38old;\\u69bclig;\\u4153\\u0100cr\\u2d69\\u2d6dir;\\u69bf;\\uc000\\ud835\\udd2c\\u036f\\u2d79\\0\\0\\u2d7c\\0\\u2d82n;\\u42dbave\\u803b\\xf2\\u40f2;\\u69c1\\u0100bm\\u2d88\\u0df4ar;\\u69b5\\u0200acit\\u2d95\\u2d98\\u2da5\\u2da8r\\xf2\\u1a80\\u0100ir\\u2d9d\\u2da0r;\\u69beoss;\\u69bbn\\xe5\\u0e52;\\u69c0\\u0180aei\\u2db1\\u2db5\\u2db9cr;\\u414dga;\\u43c9\\u0180cdn\\u2dc0\\u2dc5\\u01cdron;\\u43bf;\\u69b6pf;\\uc000\\ud835\\udd60\\u0180ael\\u2dd4\\u2dd7\\u01d2r;\\u69b7rp;\\u69b9\\u0380;adiosv\\u2dea\\u2deb\\u2dee\\u2e08\\u2e0d\\u2e10\\u2e16\\u6228r\\xf2\\u1a86\\u0200;efm\\u2df7\\u2df8\\u2e02\\u2e05\\u6a5dr\\u0100;o\\u2dfe\\u2dff\\u6134f\\xbb\\u2dff\\u803b\\xaa\\u40aa\\u803b\\xba\\u40bagof;\\u62b6r;\\u6a56lope;\\u6a57;\\u6a5b\\u0180clo\\u2e1f\\u2e21\\u2e27\\xf2\\u2e01ash\\u803b\\xf8\\u40f8l;\\u6298i\\u016c\\u2e2f\\u2e34de\\u803b\\xf5\\u40f5es\\u0100;a\\u01db\\u2e3as;\\u6a36ml\\u803b\\xf6\\u40f6bar;\\u633d\\u0ae1\\u2e5e\\0\\u2e7d\\0\\u2e80\\u2e9d\\0\\u2ea2\\u2eb9\\0\\0\\u2ecb\\u0e9c\\0\\u2f13\\0\\0\\u2f2b\\u2fbc\\0\\u2fc8r\\u0200;ast\\u0403\\u2e67\\u2e72\\u0e85\\u8100\\xb6;l\\u2e6d\\u2e6e\\u40b6le\\xec\\u0403\\u0269\\u2e78\\0\\0\\u2e7bm;\\u6af3;\\u6afdy;\\u443fr\\u0280cimpt\\u2e8b\\u2e8f\\u2e93\\u1865\\u2e97nt;\\u4025od;\\u402eil;\\u6030enk;\\u6031r;\\uc000\\ud835\\udd2d\\u0180imo\\u2ea8\\u2eb0\\u2eb4\\u0100;v\\u2ead\\u2eae\\u43c6;\\u43d5ma\\xf4\\u0a76ne;\\u660e\\u0180;tv\\u2ebf\\u2ec0\\u2ec8\\u43c0chfork\\xbb\\u1ffd;\\u43d6\\u0100au\\u2ecf\\u2edfn\\u0100ck\\u2ed5\\u2eddk\\u0100;h\\u21f4\\u2edb;\\u610e\\xf6\\u21f4s\\u0480;abcdemst\\u2ef3\\u2ef4\\u1908\\u2ef9\\u2efd\\u2f04\\u2f06\\u2f0a\\u2f0e\\u402bcir;\\u6a23ir;\\u6a22\\u0100ou\\u1d40\\u2f02;\\u6a25;\\u6a72n\\u80bb\\xb1\\u0e9dim;\\u6a26wo;\\u6a27\\u0180ipu\\u2f19\\u2f20\\u2f25ntint;\\u6a15f;\\uc000\\ud835\\udd61nd\\u803b\\xa3\\u40a3\\u0500;Eaceinosu\\u0ec8\\u2f3f\\u2f41\\u2f44\\u2f47\\u2f81\\u2f89\\u2f92\\u2f7e\\u2fb6;\\u6ab3p;\\u6ab7u\\xe5\\u0ed9\\u0100;c\\u0ece\\u2f4c\\u0300;acens\\u0ec8\\u2f59\\u2f5f\\u2f66\\u2f68\\u2f7eppro\\xf8\\u2f43urlye\\xf1\\u0ed9\\xf1\\u0ece\\u0180aes\\u2f6f\\u2f76\\u2f7approx;\\u6ab9qq;\\u6ab5im;\\u62e8i\\xed\\u0edfme\\u0100;s\\u2f88\\u0eae\\u6032\\u0180Eas\\u2f78\\u2f90\\u2f7a\\xf0\\u2f75\\u0180dfp\\u0eec\\u2f99\\u2faf\\u0180als\\u2fa0\\u2fa5\\u2faalar;\\u632eine;\\u6312urf;\\u6313\\u0100;t\\u0efb\\u2fb4\\xef\\u0efbrel;\\u62b0\\u0100ci\\u2fc0\\u2fc5r;\\uc000\\ud835\\udcc5;\\u43c8ncsp;\\u6008\\u0300fiopsu\\u2fda\\u22e2\\u2fdf\\u2fe5\\u2feb\\u2ff1r;\\uc000\\ud835\\udd2epf;\\uc000\\ud835\\udd62rime;\\u6057cr;\\uc000\\ud835\\udcc6\\u0180aeo\\u2ff8\\u3009\\u3013t\\u0100ei\\u2ffe\\u3005rnion\\xf3\\u06b0nt;\\u6a16st\\u0100;e\\u3010\\u3011\\u403f\\xf1\\u1f19\\xf4\\u0f14\\u0a80ABHabcdefhilmnoprstux\\u3040\\u3051\\u3055\\u3059\\u30e0\\u310e\\u312b\\u3147\\u3162\\u3172\\u318e\\u3206\\u3215\\u3224\\u3229\\u3258\\u326e\\u3272\\u3290\\u32b0\\u32b7\\u0180art\\u3047\\u304a\\u304cr\\xf2\\u10b3\\xf2\\u03ddail;\\u691car\\xf2\\u1c65ar;\\u6964\\u0380cdenqrt\\u3068\\u3075\\u3078\\u307f\\u308f\\u3094\\u30cc\\u0100eu\\u306d\\u3071;\\uc000\\u223d\\u0331te;\\u4155i\\xe3\\u116emptyv;\\u69b3g\\u0200;del\\u0fd1\\u3089\\u308b\\u308d;\\u6992;\\u69a5\\xe5\\u0fd1uo\\u803b\\xbb\\u40bbr\\u0580;abcfhlpstw\\u0fdc\\u30ac\\u30af\\u30b7\\u30b9\\u30bc\\u30be\\u30c0\\u30c3\\u30c7\\u30cap;\\u6975\\u0100;f\\u0fe0\\u30b4s;\\u6920;\\u6933s;\\u691e\\xeb\\u225d\\xf0\\u272el;\\u6945im;\\u6974l;\\u61a3;\\u619d\\u0100ai\\u30d1\\u30d5il;\\u691ao\\u0100;n\\u30db\\u30dc\\u6236al\\xf3\\u0f1e\\u0180abr\\u30e7\\u30ea\\u30eer\\xf2\\u17e5rk;\\u6773\\u0100ak\\u30f3\\u30fdc\\u0100ek\\u30f9\\u30fb;\\u407d;\\u405d\\u0100es\\u3102\\u3104;\\u698cl\\u0100du\\u310a\\u310c;\\u698e;\\u6990\\u0200aeuy\\u3117\\u311c\\u3127\\u3129ron;\\u4159\\u0100di\\u3121\\u3125il;\\u4157\\xec\\u0ff2\\xe2\\u30fa;\\u4440\\u0200clqs\\u3134\\u3137\\u313d\\u3144a;\\u6937dhar;\\u6969uo\\u0100;r\\u020e\\u020dh;\\u61b3\\u0180acg\\u314e\\u315f\\u0f44l\\u0200;ips\\u0f78\\u3158\\u315b\\u109cn\\xe5\\u10bbar\\xf4\\u0fa9t;\\u65ad\\u0180ilr\\u3169\\u1023\\u316esht;\\u697d;\\uc000\\ud835\\udd2f\\u0100ao\\u3177\\u3186r\\u0100du\\u317d\\u317f\\xbb\\u047b\\u0100;l\\u1091\\u3184;\\u696c\\u0100;v\\u318b\\u318c\\u43c1;\\u43f1\\u0180gns\\u3195\\u31f9\\u31fcht\\u0300ahlrst\\u31a4\\u31b0\\u31c2\\u31d8\\u31e4\\u31eerrow\\u0100;t\\u0fdc\\u31ada\\xe9\\u30c8arpoon\\u0100du\\u31bb\\u31bfow\\xee\\u317ep\\xbb\\u1092eft\\u0100ah\\u31ca\\u31d0rrow\\xf3\\u0feaarpoon\\xf3\\u0551ightarrows;\\u61c9quigarro\\xf7\\u30cbhreetimes;\\u62ccg;\\u42daingdotse\\xf1\\u1f32\\u0180ahm\\u320d\\u3210\\u3213r\\xf2\\u0feaa\\xf2\\u0551;\\u600foust\\u0100;a\\u321e\\u321f\\u63b1che\\xbb\\u321fmid;\\u6aee\\u0200abpt\\u3232\\u323d\\u3240\\u3252\\u0100nr\\u3237\\u323ag;\\u67edr;\\u61fer\\xeb\\u1003\\u0180afl\\u3247\\u324a\\u324er;\\u6986;\\uc000\\ud835\\udd63us;\\u6a2eimes;\\u6a35\\u0100ap\\u325d\\u3267r\\u0100;g\\u3263\\u3264\\u4029t;\\u6994olint;\\u6a12ar\\xf2\\u31e3\\u0200achq\\u327b\\u3280\\u10bc\\u3285quo;\\u603ar;\\uc000\\ud835\\udcc7\\u0100bu\\u30fb\\u328ao\\u0100;r\\u0214\\u0213\\u0180hir\\u3297\\u329b\\u32a0re\\xe5\\u31f8mes;\\u62cai\\u0200;efl\\u32aa\\u1059\\u1821\\u32ab\\u65b9tri;\\u69celuhar;\\u6968;\\u611e\\u0d61\\u32d5\\u32db\\u32df\\u332c\\u3338\\u3371\\0\\u337a\\u33a4\\0\\0\\u33ec\\u33f0\\0\\u3428\\u3448\\u345a\\u34ad\\u34b1\\u34ca\\u34f1\\0\\u3616\\0\\0\\u3633cute;\\u415bqu\\xef\\u27ba\\u0500;Eaceinpsy\\u11ed\\u32f3\\u32f5\\u32ff\\u3302\\u330b\\u330f\\u331f\\u3326\\u3329;\\u6ab4\\u01f0\\u32fa\\0\\u32fc;\\u6ab8on;\\u4161u\\xe5\\u11fe\\u0100;d\\u11f3\\u3307il;\\u415frc;\\u415d\\u0180Eas\\u3316\\u3318\\u331b;\\u6ab6p;\\u6abaim;\\u62e9olint;\\u6a13i\\xed\\u1204;\\u4441ot\\u0180;be\\u3334\\u1d47\\u3335\\u62c5;\\u6a66\\u0380Aacmstx\\u3346\\u334a\\u3357\\u335b\\u335e\\u3363\\u336drr;\\u61d8r\\u0100hr\\u3350\\u3352\\xeb\\u2228\\u0100;o\\u0a36\\u0a34t\\u803b\\xa7\\u40a7i;\\u403bwar;\\u6929m\\u0100in\\u3369\\xf0nu\\xf3\\xf1t;\\u6736r\\u0100;o\\u3376\\u2055\\uc000\\ud835\\udd30\\u0200acoy\\u3382\\u3386\\u3391\\u33a0rp;\\u666f\\u0100hy\\u338b\\u338fcy;\\u4449;\\u4448rt\\u026d\\u3399\\0\\0\\u339ci\\xe4\\u1464ara\\xec\\u2e6f\\u803b\\xad\\u40ad\\u0100gm\\u33a8\\u33b4ma\\u0180;fv\\u33b1\\u33b2\\u33b2\\u43c3;\\u43c2\\u0400;deglnpr\\u12ab\\u33c5\\u33c9\\u33ce\\u33d6\\u33de\\u33e1\\u33e6ot;\\u6a6a\\u0100;q\\u12b1\\u12b0\\u0100;E\\u33d3\\u33d4\\u6a9e;\\u6aa0\\u0100;E\\u33db\\u33dc\\u6a9d;\\u6a9fe;\\u6246lus;\\u6a24arr;\\u6972ar\\xf2\\u113d\\u0200aeit\\u33f8\\u3408\\u340f\\u3417\\u0100ls\\u33fd\\u3404lsetm\\xe9\\u336ahp;\\u6a33parsl;\\u69e4\\u0100dl\\u1463\\u3414e;\\u6323\\u0100;e\\u341c\\u341d\\u6aaa\\u0100;s\\u3422\\u3423\\u6aac;\\uc000\\u2aac\\ufe00\\u0180flp\\u342e\\u3433\\u3442tcy;\\u444c\\u0100;b\\u3438\\u3439\\u402f\\u0100;a\\u343e\\u343f\\u69c4r;\\u633ff;\\uc000\\ud835\\udd64a\\u0100dr\\u344d\\u0402es\\u0100;u\\u3454\\u3455\\u6660it\\xbb\\u3455\\u0180csu\\u3460\\u3479\\u349f\\u0100au\\u3465\\u346fp\\u0100;s\\u1188\\u346b;\\uc000\\u2293\\ufe00p\\u0100;s\\u11b4\\u3475;\\uc000\\u2294\\ufe00u\\u0100bp\\u347f\\u348f\\u0180;es\\u1197\\u119c\\u3486et\\u0100;e\\u1197\\u348d\\xf1\\u119d\\u0180;es\\u11a8\\u11ad\\u3496et\\u0100;e\\u11a8\\u349d\\xf1\\u11ae\\u0180;af\\u117b\\u34a6\\u05b0r\\u0165\\u34ab\\u05b1\\xbb\\u117car\\xf2\\u1148\\u0200cemt\\u34b9\\u34be\\u34c2\\u34c5r;\\uc000\\ud835\\udcc8tm\\xee\\xf1i\\xec\\u3415ar\\xe6\\u11be\\u0100ar\\u34ce\\u34d5r\\u0100;f\\u34d4\\u17bf\\u6606\\u0100an\\u34da\\u34edight\\u0100ep\\u34e3\\u34eapsilo\\xee\\u1ee0h\\xe9\\u2eafs\\xbb\\u2852\\u0280bcmnp\\u34fb\\u355e\\u1209\\u358b\\u358e\\u0480;Edemnprs\\u350e\\u350f\\u3511\\u3515\\u351e\\u3523\\u352c\\u3531\\u3536\\u6282;\\u6ac5ot;\\u6abd\\u0100;d\\u11da\\u351aot;\\u6ac3ult;\\u6ac1\\u0100Ee\\u3528\\u352a;\\u6acb;\\u628alus;\\u6abfarr;\\u6979\\u0180eiu\\u353d\\u3552\\u3555t\\u0180;en\\u350e\\u3545\\u354bq\\u0100;q\\u11da\\u350feq\\u0100;q\\u352b\\u3528m;\\u6ac7\\u0100bp\\u355a\\u355c;\\u6ad5;\\u6ad3c\\u0300;acens\\u11ed\\u356c\\u3572\\u3579\\u357b\\u3326ppro\\xf8\\u32faurlye\\xf1\\u11fe\\xf1\\u11f3\\u0180aes\\u3582\\u3588\\u331bppro\\xf8\\u331aq\\xf1\\u3317g;\\u666a\\u0680123;Edehlmnps\\u35a9\\u35ac\\u35af\\u121c\\u35b2\\u35b4\\u35c0\\u35c9\\u35d5\\u35da\\u35df\\u35e8\\u35ed\\u803b\\xb9\\u40b9\\u803b\\xb2\\u40b2\\u803b\\xb3\\u40b3;\\u6ac6\\u0100os\\u35b9\\u35bct;\\u6abeub;\\u6ad8\\u0100;d\\u1222\\u35c5ot;\\u6ac4s\\u0100ou\\u35cf\\u35d2l;\\u67c9b;\\u6ad7arr;\\u697bult;\\u6ac2\\u0100Ee\\u35e4\\u35e6;\\u6acc;\\u628blus;\\u6ac0\\u0180eiu\\u35f4\\u3609\\u360ct\\u0180;en\\u121c\\u35fc\\u3602q\\u0100;q\\u1222\\u35b2eq\\u0100;q\\u35e7\\u35e4m;\\u6ac8\\u0100bp\\u3611\\u3613;\\u6ad4;\\u6ad6\\u0180Aan\\u361c\\u3620\\u362drr;\\u61d9r\\u0100hr\\u3626\\u3628\\xeb\\u222e\\u0100;o\\u0a2b\\u0a29war;\\u692alig\\u803b\\xdf\\u40df\\u0be1\\u3651\\u365d\\u3660\\u12ce\\u3673\\u3679\\0\\u367e\\u36c2\\0\\0\\0\\0\\0\\u36db\\u3703\\0\\u3709\\u376c\\0\\0\\0\\u3787\\u0272\\u3656\\0\\0\\u365bget;\\u6316;\\u43c4r\\xeb\\u0e5f\\u0180aey\\u3666\\u366b\\u3670ron;\\u4165dil;\\u4163;\\u4442lrec;\\u6315r;\\uc000\\ud835\\udd31\\u0200eiko\\u3686\\u369d\\u36b5\\u36bc\\u01f2\\u368b\\0\\u3691e\\u01004f\\u1284\\u1281a\\u0180;sv\\u3698\\u3699\\u369b\\u43b8ym;\\u43d1\\u0100cn\\u36a2\\u36b2k\\u0100as\\u36a8\\u36aeppro\\xf8\\u12c1im\\xbb\\u12acs\\xf0\\u129e\\u0100as\\u36ba\\u36ae\\xf0\\u12c1rn\\u803b\\xfe\\u40fe\\u01ec\\u031f\\u36c6\\u22e7es\\u8180\\xd7;bd\\u36cf\\u36d0\\u36d8\\u40d7\\u0100;a\\u190f\\u36d5r;\\u6a31;\\u6a30\\u0180eps\\u36e1\\u36e3\\u3700\\xe1\\u2a4d\\u0200;bcf\\u0486\\u36ec\\u36f0\\u36f4ot;\\u6336ir;\\u6af1\\u0100;o\\u36f9\\u36fc\\uc000\\ud835\\udd65rk;\\u6ada\\xe1\\u3362rime;\\u6034\\u0180aip\\u370f\\u3712\\u3764d\\xe5\\u1248\\u0380adempst\\u3721\\u374d\\u3740\\u3751\\u3757\\u375c\\u375fngle\\u0280;dlqr\\u3730\\u3731\\u3736\\u3740\\u3742\\u65b5own\\xbb\\u1dbbeft\\u0100;e\\u2800\\u373e\\xf1\\u092e;\\u625cight\\u0100;e\\u32aa\\u374b\\xf1\\u105aot;\\u65ecinus;\\u6a3alus;\\u6a39b;\\u69cdime;\\u6a3bezium;\\u63e2\\u0180cht\\u3772\\u377d\\u3781\\u0100ry\\u3777\\u377b;\\uc000\\ud835\\udcc9;\\u4446cy;\\u445brok;\\u4167\\u0100io\\u378b\\u378ex\\xf4\\u1777head\\u0100lr\\u3797\\u37a0eftarro\\xf7\\u084fightarrow\\xbb\\u0f5d\\u0900AHabcdfghlmoprstuw\\u37d0\\u37d3\\u37d7\\u37e4\\u37f0\\u37fc\\u380e\\u381c\\u3823\\u3834\\u3851\\u385d\\u386b\\u38a9\\u38cc\\u38d2\\u38ea\\u38f6r\\xf2\\u03edar;\\u6963\\u0100cr\\u37dc\\u37e2ute\\u803b\\xfa\\u40fa\\xf2\\u1150r\\u01e3\\u37ea\\0\\u37edy;\\u445eve;\\u416d\\u0100iy\\u37f5\\u37farc\\u803b\\xfb\\u40fb;\\u4443\\u0180abh\\u3803\\u3806\\u380br\\xf2\\u13adlac;\\u4171a\\xf2\\u13c3\\u0100ir\\u3813\\u3818sht;\\u697e;\\uc000\\ud835\\udd32rave\\u803b\\xf9\\u40f9\\u0161\\u3827\\u3831r\\u0100lr\\u382c\\u382e\\xbb\\u0957\\xbb\\u1083lk;\\u6580\\u0100ct\\u3839\\u384d\\u026f\\u383f\\0\\0\\u384arn\\u0100;e\\u3845\\u3846\\u631cr\\xbb\\u3846op;\\u630fri;\\u65f8\\u0100al\\u3856\\u385acr;\\u416b\\u80bb\\xa8\\u0349\\u0100gp\\u3862\\u3866on;\\u4173f;\\uc000\\ud835\\udd66\\u0300adhlsu\\u114b\\u3878\\u387d\\u1372\\u3891\\u38a0own\\xe1\\u13b3arpoon\\u0100lr\\u3888\\u388cef\\xf4\\u382digh\\xf4\\u382fi\\u0180;hl\\u3899\\u389a\\u389c\\u43c5\\xbb\\u13faon\\xbb\\u389aparrows;\\u61c8\\u0180cit\\u38b0\\u38c4\\u38c8\\u026f\\u38b6\\0\\0\\u38c1rn\\u0100;e\\u38bc\\u38bd\\u631dr\\xbb\\u38bdop;\\u630eng;\\u416fri;\\u65f9cr;\\uc000\\ud835\\udcca\\u0180dir\\u38d9\\u38dd\\u38e2ot;\\u62f0lde;\\u4169i\\u0100;f\\u3730\\u38e8\\xbb\\u1813\\u0100am\\u38ef\\u38f2r\\xf2\\u38a8l\\u803b\\xfc\\u40fcangle;\\u69a7\\u0780ABDacdeflnoprsz\\u391c\\u391f\\u3929\\u392d\\u39b5\\u39b8\\u39bd\\u39df\\u39e4\\u39e8\\u39f3\\u39f9\\u39fd\\u3a01\\u3a20r\\xf2\\u03f7ar\\u0100;v\\u3926\\u3927\\u6ae8;\\u6ae9as\\xe8\\u03e1\\u0100nr\\u3932\\u3937grt;\\u699c\\u0380eknprst\\u34e3\\u3946\\u394b\\u3952\\u395d\\u3964\\u3996app\\xe1\\u2415othin\\xe7\\u1e96\\u0180hir\\u34eb\\u2ec8\\u3959op\\xf4\\u2fb5\\u0100;h\\u13b7\\u3962\\xef\\u318d\\u0100iu\\u3969\\u396dgm\\xe1\\u33b3\\u0100bp\\u3972\\u3984setneq\\u0100;q\\u397d\\u3980\\uc000\\u228a\\ufe00;\\uc000\\u2acb\\ufe00setneq\\u0100;q\\u398f\\u3992\\uc000\\u228b\\ufe00;\\uc000\\u2acc\\ufe00\\u0100hr\\u399b\\u399fet\\xe1\\u369ciangle\\u0100lr\\u39aa\\u39afeft\\xbb\\u0925ight\\xbb\\u1051y;\\u4432ash\\xbb\\u1036\\u0180elr\\u39c4\\u39d2\\u39d7\\u0180;be\\u2dea\\u39cb\\u39cfar;\\u62bbq;\\u625alip;\\u62ee\\u0100bt\\u39dc\\u1468a\\xf2\\u1469r;\\uc000\\ud835\\udd33tr\\xe9\\u39aesu\\u0100bp\\u39ef\\u39f1\\xbb\\u0d1c\\xbb\\u0d59pf;\\uc000\\ud835\\udd67ro\\xf0\\u0efbtr\\xe9\\u39b4\\u0100cu\\u3a06\\u3a0br;\\uc000\\ud835\\udccb\\u0100bp\\u3a10\\u3a18n\\u0100Ee\\u3980\\u3a16\\xbb\\u397en\\u0100Ee\\u3992\\u3a1e\\xbb\\u3990igzag;\\u699a\\u0380cefoprs\\u3a36\\u3a3b\\u3a56\\u3a5b\\u3a54\\u3a61\\u3a6airc;\\u4175\\u0100di\\u3a40\\u3a51\\u0100bg\\u3a45\\u3a49ar;\\u6a5fe\\u0100;q\\u15fa\\u3a4f;\\u6259erp;\\u6118r;\\uc000\\ud835\\udd34pf;\\uc000\\ud835\\udd68\\u0100;e\\u1479\\u3a66at\\xe8\\u1479cr;\\uc000\\ud835\\udccc\\u0ae3\\u178e\\u3a87\\0\\u3a8b\\0\\u3a90\\u3a9b\\0\\0\\u3a9d\\u3aa8\\u3aab\\u3aaf\\0\\0\\u3ac3\\u3ace\\0\\u3ad8\\u17dc\\u17dftr\\xe9\\u17d1r;\\uc000\\ud835\\udd35\\u0100Aa\\u3a94\\u3a97r\\xf2\\u03c3r\\xf2\\u09f6;\\u43be\\u0100Aa\\u3aa1\\u3aa4r\\xf2\\u03b8r\\xf2\\u09eba\\xf0\\u2713is;\\u62fb\\u0180dpt\\u17a4\\u3ab5\\u3abe\\u0100fl\\u3aba\\u17a9;\\uc000\\ud835\\udd69im\\xe5\\u17b2\\u0100Aa\\u3ac7\\u3acar\\xf2\\u03cer\\xf2\\u0a01\\u0100cq\\u3ad2\\u17b8r;\\uc000\\ud835\\udccd\\u0100pt\\u17d6\\u3adcr\\xe9\\u17d4\\u0400acefiosu\\u3af0\\u3afd\\u3b08\\u3b0c\\u3b11\\u3b15\\u3b1b\\u3b21c\\u0100uy\\u3af6\\u3afbte\\u803b\\xfd\\u40fd;\\u444f\\u0100iy\\u3b02\\u3b06rc;\\u4177;\\u444bn\\u803b\\xa5\\u40a5r;\\uc000\\ud835\\udd36cy;\\u4457pf;\\uc000\\ud835\\udd6acr;\\uc000\\ud835\\udcce\\u0100cm\\u3b26\\u3b29y;\\u444el\\u803b\\xff\\u40ff\\u0500acdefhiosw\\u3b42\\u3b48\\u3b54\\u3b58\\u3b64\\u3b69\\u3b6d\\u3b74\\u3b7a\\u3b80cute;\\u417a\\u0100ay\\u3b4d\\u3b52ron;\\u417e;\\u4437ot;\\u417c\\u0100et\\u3b5d\\u3b61tr\\xe6\\u155fa;\\u43b6r;\\uc000\\ud835\\udd37cy;\\u4436grarr;\\u61ddpf;\\uc000\\ud835\\udd6bcr;\\uc000\\ud835\\udccf\\u0100jn\\u3b85\\u3b87;\\u600dj;\\u600c\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-html.js.map","// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [0, 65533],\n    // C1 Unicode control character reference replacements\n    [128, 8364],\n    [130, 8218],\n    [131, 402],\n    [132, 8222],\n    [133, 8230],\n    [134, 8224],\n    [135, 8225],\n    [136, 710],\n    [137, 8240],\n    [138, 352],\n    [139, 8249],\n    [140, 338],\n    [142, 381],\n    [145, 8216],\n    [146, 8217],\n    [147, 8220],\n    [148, 8221],\n    [149, 8226],\n    [150, 8211],\n    [151, 8212],\n    [152, 732],\n    [153, 8482],\n    [154, 353],\n    [155, 8250],\n    [156, 339],\n    [158, 382],\n    [159, 376],\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */\nexport const fromCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, node/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function (codePoint) {\n    let output = \"\";\n    if (codePoint > 0xffff) {\n        codePoint -= 0x10000;\n        output += String.fromCharCode(((codePoint >>> 10) & 0x3ff) | 0xd800);\n        codePoint = 0xdc00 | (codePoint & 0x3ff);\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */\nexport function replaceCodePoint(codePoint) {\n    var _a;\n    if ((codePoint >= 0xd800 && codePoint <= 0xdfff) || codePoint > 0x10ffff) {\n        return 0xfffd;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */\nexport default function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n}\n//# sourceMappingURL=decode_codepoint.js.map","// Generated using scripts/write-decode-map.ts\nexport default new Uint16Array(\n// prettier-ignore\n\"\\u0200aglq\\t\\x15\\x18\\x1b\\u026d\\x0f\\0\\0\\x12p;\\u4026os;\\u4027t;\\u403et;\\u403cuot;\\u4022\"\n    .split(\"\")\n    .map((c) => c.charCodeAt(0)));\n//# sourceMappingURL=decode-data-xml.js.map","import htmlDecodeTree from \"./generated/decode-data-html.js\";\nimport xmlDecodeTree from \"./generated/decode-data-xml.js\";\nimport decodeCodePoint, { replaceCodePoint, fromCodePoint, } from \"./decode_codepoint.js\";\n// Re-export for use by eg. htmlparser2\nexport { htmlDecodeTree, xmlDecodeTree, decodeCodePoint };\nexport { replaceCodePoint, fromCodePoint } from \"./decode_codepoint.js\";\nvar CharCodes;\n(function (CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */\nconst TO_LOWER_BIT = 0b100000;\nexport var BinTrieFlags;\n(function (BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F));\n}\nfunction isAsciiAlphaNumeric(code) {\n    return ((code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z) ||\n        (code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z) ||\n        isNumber(code));\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */\nfunction isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function (EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nexport var DecodingMode;\n(function (DecodingMode) {\n    /** Entities in text nodes that can end with any character. */\n    DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */\n    DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */\n    DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */\nexport class EntityDecoder {\n    constructor(\n    /** The tree used to decode entities. */\n    decodeTree, \n    /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */\n    emitCodePoint, \n    /** An object that is used to produce errors. */\n    errors) {\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */\n        this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */\n        this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */\n        this.result = 0;\n        /** The current index in the decode tree. */\n        this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */\n        this.excess = 1;\n        /** The mode in which the decoder is operating. */\n        this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */\n    startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param string The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    write(str, offset) {\n        switch (this.state) {\n            case EntityDecoderState.EntityStart: {\n                if (str.charCodeAt(offset) === CharCodes.NUM) {\n                    this.state = EntityDecoderState.NumericStart;\n                    this.consumed += 1;\n                    return this.stateNumericStart(str, offset + 1);\n                }\n                this.state = EntityDecoderState.NamedEntity;\n                return this.stateNamedEntity(str, offset);\n            }\n            case EntityDecoderState.NumericStart: {\n                return this.stateNumericStart(str, offset);\n            }\n            case EntityDecoderState.NumericDecimal: {\n                return this.stateNumericDecimal(str, offset);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.stateNumericHex(str, offset);\n            }\n            case EntityDecoderState.NamedEntity: {\n                return this.stateNamedEntity(str, offset);\n            }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericStart(str, offset) {\n        if (offset >= str.length) {\n            return -1;\n        }\n        if ((str.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(str, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(str, offset);\n    }\n    addToNumericResult(str, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result =\n                this.result * Math.pow(base, digitCount) +\n                    parseInt(str.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericHex(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNumericDecimal(str, offset) {\n        const startIdx = offset;\n        while (offset < str.length) {\n            const char = str.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            }\n            else {\n                this.addToNumericResult(str, startIdx, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(str, startIdx, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */\n    emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        }\n        else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint(replaceCodePoint(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param str The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */\n    stateNamedEntity(str, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for (; offset < str.length; offset++, this.excess++) {\n            const char = str.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 ||\n                    // If we are parsing an attribute\n                    (this.decodeMode === DecodingMode.Attribute &&\n                        // We shouldn't have consumed any characters after the entity,\n                        (valueLength === 0 ||\n                            // And there should be no invalid characters.\n                            isEntityInAttributeInvalidEnd(char)))\n                    ? 0\n                    : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */\n    emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1\n            ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH\n            : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */\n    end() {\n        var _a;\n        switch (this.state) {\n            case EntityDecoderState.NamedEntity: {\n                // Emit a named entity if we have one.\n                return this.result !== 0 &&\n                    (this.decodeMode !== DecodingMode.Attribute ||\n                        this.result === this.treeIndex)\n                    ? this.emitNotTerminatedNamedEntity()\n                    : 0;\n            }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal: {\n                return this.emitNumericEntity(0, 2);\n            }\n            case EntityDecoderState.NumericHex: {\n                return this.emitNumericEntity(0, 3);\n            }\n            case EntityDecoderState.NumericStart: {\n                (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                return 0;\n            }\n            case EntityDecoderState.EntityStart: {\n                // Return 0 if we have no entity.\n                return 0;\n            }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */\nfunction getDecoder(decodeTree) {\n    let ret = \"\";\n    const decoder = new EntityDecoder(decodeTree, (str) => (ret += fromCodePoint(str)));\n    return function decodeWithTrie(str, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while ((offset = str.indexOf(\"&\", offset)) >= 0) {\n            ret += str.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const len = decoder.write(str, \n            // Skip the \"&\"\n            offset + 1);\n            if (len < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + len;\n            // If `len` is 0, skip the current `&` and continue.\n            offset = len === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = ret + str.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        ret = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */\nexport function determineBranch(decodeTree, current, nodeIdx, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIdx : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount\n            ? -1\n            : decodeTree[nodeIdx + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIdx;\n    let hi = lo + branchCount - 1;\n    while (lo <= hi) {\n        const mid = (lo + hi) >>> 1;\n        const midVal = decodeTree[mid];\n        if (midVal < char) {\n            lo = mid + 1;\n        }\n        else if (midVal > char) {\n            hi = mid - 1;\n        }\n        else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = getDecoder(htmlDecodeTree);\nconst xmlDecoder = getDecoder(xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param str The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */\nexport function decodeHTML(str, mode = DecodingMode.Legacy) {\n    return htmlDecoder(str, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLAttribute(str) {\n    return htmlDecoder(str, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeHTMLStrict(str) {\n    return htmlDecoder(str, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param str The string to decode.\n * @returns The decoded string.\n */\nexport function decodeXML(str) {\n    return xmlDecoder(str, DecodingMode.Strict);\n}\n//# sourceMappingURL=decode.js.map","/** All valid namespaces in HTML. */\nexport var NS;\n(function (NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS = NS || (NS = {}));\nexport var ATTRS;\n(function (ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS = ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */\nexport var DOCUMENT_MODE;\n(function (DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE = DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nexport var TAG_NAMES;\n(function (TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES = TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */\nexport var TAG_ID;\n(function (TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 94] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 95] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 96] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 97] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 98] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 99] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 100] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 101] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 102] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 103] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 104] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 105] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 106] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 107] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 108] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 109] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 110] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 111] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 112] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 113] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 114] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 115] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 116] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 117] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 118] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 119] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 120] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 121] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 122] = \"XMP\";\n})(TAG_ID = TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [TAG_NAMES.A, TAG_ID.A],\n    [TAG_NAMES.ADDRESS, TAG_ID.ADDRESS],\n    [TAG_NAMES.ANNOTATION_XML, TAG_ID.ANNOTATION_XML],\n    [TAG_NAMES.APPLET, TAG_ID.APPLET],\n    [TAG_NAMES.AREA, TAG_ID.AREA],\n    [TAG_NAMES.ARTICLE, TAG_ID.ARTICLE],\n    [TAG_NAMES.ASIDE, TAG_ID.ASIDE],\n    [TAG_NAMES.B, TAG_ID.B],\n    [TAG_NAMES.BASE, TAG_ID.BASE],\n    [TAG_NAMES.BASEFONT, TAG_ID.BASEFONT],\n    [TAG_NAMES.BGSOUND, TAG_ID.BGSOUND],\n    [TAG_NAMES.BIG, TAG_ID.BIG],\n    [TAG_NAMES.BLOCKQUOTE, TAG_ID.BLOCKQUOTE],\n    [TAG_NAMES.BODY, TAG_ID.BODY],\n    [TAG_NAMES.BR, TAG_ID.BR],\n    [TAG_NAMES.BUTTON, TAG_ID.BUTTON],\n    [TAG_NAMES.CAPTION, TAG_ID.CAPTION],\n    [TAG_NAMES.CENTER, TAG_ID.CENTER],\n    [TAG_NAMES.CODE, TAG_ID.CODE],\n    [TAG_NAMES.COL, TAG_ID.COL],\n    [TAG_NAMES.COLGROUP, TAG_ID.COLGROUP],\n    [TAG_NAMES.DD, TAG_ID.DD],\n    [TAG_NAMES.DESC, TAG_ID.DESC],\n    [TAG_NAMES.DETAILS, TAG_ID.DETAILS],\n    [TAG_NAMES.DIALOG, TAG_ID.DIALOG],\n    [TAG_NAMES.DIR, TAG_ID.DIR],\n    [TAG_NAMES.DIV, TAG_ID.DIV],\n    [TAG_NAMES.DL, TAG_ID.DL],\n    [TAG_NAMES.DT, TAG_ID.DT],\n    [TAG_NAMES.EM, TAG_ID.EM],\n    [TAG_NAMES.EMBED, TAG_ID.EMBED],\n    [TAG_NAMES.FIELDSET, TAG_ID.FIELDSET],\n    [TAG_NAMES.FIGCAPTION, TAG_ID.FIGCAPTION],\n    [TAG_NAMES.FIGURE, TAG_ID.FIGURE],\n    [TAG_NAMES.FONT, TAG_ID.FONT],\n    [TAG_NAMES.FOOTER, TAG_ID.FOOTER],\n    [TAG_NAMES.FOREIGN_OBJECT, TAG_ID.FOREIGN_OBJECT],\n    [TAG_NAMES.FORM, TAG_ID.FORM],\n    [TAG_NAMES.FRAME, TAG_ID.FRAME],\n    [TAG_NAMES.FRAMESET, TAG_ID.FRAMESET],\n    [TAG_NAMES.H1, TAG_ID.H1],\n    [TAG_NAMES.H2, TAG_ID.H2],\n    [TAG_NAMES.H3, TAG_ID.H3],\n    [TAG_NAMES.H4, TAG_ID.H4],\n    [TAG_NAMES.H5, TAG_ID.H5],\n    [TAG_NAMES.H6, TAG_ID.H6],\n    [TAG_NAMES.HEAD, TAG_ID.HEAD],\n    [TAG_NAMES.HEADER, TAG_ID.HEADER],\n    [TAG_NAMES.HGROUP, TAG_ID.HGROUP],\n    [TAG_NAMES.HR, TAG_ID.HR],\n    [TAG_NAMES.HTML, TAG_ID.HTML],\n    [TAG_NAMES.I, TAG_ID.I],\n    [TAG_NAMES.IMG, TAG_ID.IMG],\n    [TAG_NAMES.IMAGE, TAG_ID.IMAGE],\n    [TAG_NAMES.INPUT, TAG_ID.INPUT],\n    [TAG_NAMES.IFRAME, TAG_ID.IFRAME],\n    [TAG_NAMES.KEYGEN, TAG_ID.KEYGEN],\n    [TAG_NAMES.LABEL, TAG_ID.LABEL],\n    [TAG_NAMES.LI, TAG_ID.LI],\n    [TAG_NAMES.LINK, TAG_ID.LINK],\n    [TAG_NAMES.LISTING, TAG_ID.LISTING],\n    [TAG_NAMES.MAIN, TAG_ID.MAIN],\n    [TAG_NAMES.MALIGNMARK, TAG_ID.MALIGNMARK],\n    [TAG_NAMES.MARQUEE, TAG_ID.MARQUEE],\n    [TAG_NAMES.MATH, TAG_ID.MATH],\n    [TAG_NAMES.MENU, TAG_ID.MENU],\n    [TAG_NAMES.META, TAG_ID.META],\n    [TAG_NAMES.MGLYPH, TAG_ID.MGLYPH],\n    [TAG_NAMES.MI, TAG_ID.MI],\n    [TAG_NAMES.MO, TAG_ID.MO],\n    [TAG_NAMES.MN, TAG_ID.MN],\n    [TAG_NAMES.MS, TAG_ID.MS],\n    [TAG_NAMES.MTEXT, TAG_ID.MTEXT],\n    [TAG_NAMES.NAV, TAG_ID.NAV],\n    [TAG_NAMES.NOBR, TAG_ID.NOBR],\n    [TAG_NAMES.NOFRAMES, TAG_ID.NOFRAMES],\n    [TAG_NAMES.NOEMBED, TAG_ID.NOEMBED],\n    [TAG_NAMES.NOSCRIPT, TAG_ID.NOSCRIPT],\n    [TAG_NAMES.OBJECT, TAG_ID.OBJECT],\n    [TAG_NAMES.OL, TAG_ID.OL],\n    [TAG_NAMES.OPTGROUP, TAG_ID.OPTGROUP],\n    [TAG_NAMES.OPTION, TAG_ID.OPTION],\n    [TAG_NAMES.P, TAG_ID.P],\n    [TAG_NAMES.PARAM, TAG_ID.PARAM],\n    [TAG_NAMES.PLAINTEXT, TAG_ID.PLAINTEXT],\n    [TAG_NAMES.PRE, TAG_ID.PRE],\n    [TAG_NAMES.RB, TAG_ID.RB],\n    [TAG_NAMES.RP, TAG_ID.RP],\n    [TAG_NAMES.RT, TAG_ID.RT],\n    [TAG_NAMES.RTC, TAG_ID.RTC],\n    [TAG_NAMES.RUBY, TAG_ID.RUBY],\n    [TAG_NAMES.S, TAG_ID.S],\n    [TAG_NAMES.SCRIPT, TAG_ID.SCRIPT],\n    [TAG_NAMES.SECTION, TAG_ID.SECTION],\n    [TAG_NAMES.SELECT, TAG_ID.SELECT],\n    [TAG_NAMES.SOURCE, TAG_ID.SOURCE],\n    [TAG_NAMES.SMALL, TAG_ID.SMALL],\n    [TAG_NAMES.SPAN, TAG_ID.SPAN],\n    [TAG_NAMES.STRIKE, TAG_ID.STRIKE],\n    [TAG_NAMES.STRONG, TAG_ID.STRONG],\n    [TAG_NAMES.STYLE, TAG_ID.STYLE],\n    [TAG_NAMES.SUB, TAG_ID.SUB],\n    [TAG_NAMES.SUMMARY, TAG_ID.SUMMARY],\n    [TAG_NAMES.SUP, TAG_ID.SUP],\n    [TAG_NAMES.TABLE, TAG_ID.TABLE],\n    [TAG_NAMES.TBODY, TAG_ID.TBODY],\n    [TAG_NAMES.TEMPLATE, TAG_ID.TEMPLATE],\n    [TAG_NAMES.TEXTAREA, TAG_ID.TEXTAREA],\n    [TAG_NAMES.TFOOT, TAG_ID.TFOOT],\n    [TAG_NAMES.TD, TAG_ID.TD],\n    [TAG_NAMES.TH, TAG_ID.TH],\n    [TAG_NAMES.THEAD, TAG_ID.THEAD],\n    [TAG_NAMES.TITLE, TAG_ID.TITLE],\n    [TAG_NAMES.TR, TAG_ID.TR],\n    [TAG_NAMES.TRACK, TAG_ID.TRACK],\n    [TAG_NAMES.TT, TAG_ID.TT],\n    [TAG_NAMES.U, TAG_ID.U],\n    [TAG_NAMES.UL, TAG_ID.UL],\n    [TAG_NAMES.SVG, TAG_ID.SVG],\n    [TAG_NAMES.VAR, TAG_ID.VAR],\n    [TAG_NAMES.WBR, TAG_ID.WBR],\n    [TAG_NAMES.XMP, TAG_ID.XMP],\n]);\nexport function getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nexport const SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP,\n    ]),\n    [NS.MATHML]: new Set([$.MI, $.MO, $.MN, $.MS, $.MTEXT, $.ANNOTATION_XML]),\n    [NS.SVG]: new Set([$.TITLE, $.FOREIGN_OBJECT, $.DESC]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set(),\n};\nexport function isNumberedHeader(tn) {\n    return tn === $.H1 || tn === $.H2 || tn === $.H3 || tn === $.H4 || tn === $.H5 || tn === $.H6;\n}\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT,\n]);\nexport function hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || (scriptingEnabled && tn === TAG_NAMES.NOSCRIPT);\n}\n//# sourceMappingURL=html.js.map","import { Preprocessor } from './preprocessor.js';\nimport { CODE_POINTS as $, SEQUENCES as $$, REPLACEMENT_CHARACTER, isSurrogate, isUndefinedCodePoint, isControlCodePoint, } from '../common/unicode.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\nimport { htmlDecodeTree, BinTrieFlags, determineBranch } from 'entities/lib/decode.js';\nimport { ERR } from '../common/error-codes.js';\nimport { TAG_ID, getTagID } from '../common/html.js';\n//C1 Unicode control character reference replacements\nconst C1_CONTROLS_REFERENCE_REPLACEMENTS = new Map([\n    [0x80, 8364],\n    [0x82, 8218],\n    [0x83, 402],\n    [0x84, 8222],\n    [0x85, 8230],\n    [0x86, 8224],\n    [0x87, 8225],\n    [0x88, 710],\n    [0x89, 8240],\n    [0x8a, 352],\n    [0x8b, 8249],\n    [0x8c, 338],\n    [0x8e, 381],\n    [0x91, 8216],\n    [0x92, 8217],\n    [0x93, 8220],\n    [0x94, 8221],\n    [0x95, 8226],\n    [0x96, 8211],\n    [0x97, 8212],\n    [0x98, 732],\n    [0x99, 8482],\n    [0x9a, 353],\n    [0x9b, 8250],\n    [0x9c, 339],\n    [0x9e, 382],\n    [0x9f, 376],\n]);\n//States\nvar State;\n(function (State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"NAMED_CHARACTER_REFERENCE\"] = 72] = \"NAMED_CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 73] = \"AMBIGUOUS_AMPERSAND\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE\"] = 74] = \"NUMERIC_CHARACTER_REFERENCE\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE_START\"] = 75] = \"HEXADEMICAL_CHARACTER_REFERENCE_START\";\n    State[State[\"HEXADEMICAL_CHARACTER_REFERENCE\"] = 76] = \"HEXADEMICAL_CHARACTER_REFERENCE\";\n    State[State[\"DECIMAL_CHARACTER_REFERENCE\"] = 77] = \"DECIMAL_CHARACTER_REFERENCE\";\n    State[State[\"NUMERIC_CHARACTER_REFERENCE_END\"] = 78] = \"NUMERIC_CHARACTER_REFERENCE_END\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nexport const TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION,\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= $.DIGIT_0 && cp <= $.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction isAsciiUpperHexDigit(cp) {\n    return cp >= $.LATIN_CAPITAL_A && cp <= $.LATIN_CAPITAL_F;\n}\nfunction isAsciiLowerHexDigit(cp) {\n    return cp >= $.LATIN_SMALL_A && cp <= $.LATIN_SMALL_F;\n}\nfunction isAsciiHexDigit(cp) {\n    return isAsciiDigit(cp) || isAsciiUpperHexDigit(cp) || isAsciiLowerHexDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === $.SPACE || cp === $.LINE_FEED || cp === $.TABULATION || cp === $.FORM_FEED;\n}\nfunction isEntityInAttributeInvalidEnd(nextCp) {\n    return nextCp === $.EQUALS_SIGN || isAsciiAlphaNumeric(nextCp);\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === $.SOLIDUS || cp === $.GREATER_THAN_SIGN;\n}\n//Tokenizer\nexport class Tokenizer {\n    constructor(options, handler) {\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */\n        this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */\n        this.inForeignNode = false;\n        this.lastStartTagName = '';\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.charRefCode = -1;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = { name: '', value: '' };\n        this.preprocessor = new Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    //Errors\n    _err(code) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1,\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop)\n            return;\n        this.inLoop = true;\n        while (this.active && !this.paused) {\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error('Parser was already resumed');\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop)\n            return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this._unconsume(this.consumedAfterSnapshot);\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _unconsume(count) {\n        this.consumedAfterSnapshot -= count;\n        this.preprocessor.retreat(count);\n    }\n    _reconsumeInState(state, cp) {\n        this.state = state;\n        this._callState(cp);\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for (let i = 0; i < count; i++) {\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: TokenType.START_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1),\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: TokenType.END_TAG,\n            tagName: '',\n            tagID: TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2),\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: TokenType.COMMENT,\n            data: '',\n            location: this.getCurrentLocation(offset),\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation,\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation,\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: '',\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if (getTokenAttr(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = ((_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : (_b.attrs = Object.create(null)));\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        }\n        else {\n            this._err(ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = getTagID(ct.tagName);\n        if (ct.type === TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        }\n        else {\n            if (ct.attrs.length > 0) {\n                this._err(ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch (this.currentCharacterToken.type) {\n                case TokenType.CHARACTER: {\n                    this.handler.onCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.NULL_CHARACTER: {\n                    this.handler.onNullCharacter(this.currentCharacterToken);\n                    break;\n                }\n                case TokenType.WHITESPACE_CHARACTER: {\n                    this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                    break;\n                }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({ type: TokenType.EOF, location });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: specification uses only one type of character tokens (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type !== type) {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n            else {\n                this.currentCharacterToken.chars += ch;\n                return;\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp)\n            ? TokenType.WHITESPACE_CHARACTER\n            : cp === $.NULL\n                ? TokenType.NULL_CHARACTER\n                : TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _matchNamedCharacterReference(cp) {\n        let result = null;\n        let excess = 0;\n        let withoutSemicolon = false;\n        for (let i = 0, current = htmlDecodeTree[0]; i >= 0; cp = this._consume()) {\n            i = determineBranch(htmlDecodeTree, current, i + 1, cp);\n            if (i < 0)\n                break;\n            excess += 1;\n            current = htmlDecodeTree[i];\n            const masked = current & BinTrieFlags.VALUE_LENGTH;\n            // If the branch is a value, store it and continue\n            if (masked) {\n                // The mask is the number of bytes of the value, including the current byte.\n                const valueLength = (masked >> 14) - 1;\n                // Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n                // See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n                if (cp !== $.SEMICOLON &&\n                    this._isCharacterReferenceInAttribute() &&\n                    isEntityInAttributeInvalidEnd(this.preprocessor.peek(1))) {\n                    //NOTE: we don't flush all consumed code points here, and instead switch back to the original state after\n                    //emitting an ampersand. This is fine, as alphanumeric characters won't be parsed differently in attributes.\n                    result = [$.AMPERSAND];\n                    // Skip over the value.\n                    i += valueLength;\n                }\n                else {\n                    // If this is a surrogate pair, consume the next two bytes.\n                    result =\n                        valueLength === 0\n                            ? [htmlDecodeTree[i] & ~BinTrieFlags.VALUE_LENGTH]\n                            : valueLength === 1\n                                ? [htmlDecodeTree[++i]]\n                                : [htmlDecodeTree[++i], htmlDecodeTree[++i]];\n                    excess = 0;\n                    withoutSemicolon = cp !== $.SEMICOLON;\n                }\n                if (valueLength === 0) {\n                    // If the value is zero-length, we're done.\n                    this._consume();\n                    break;\n                }\n            }\n        }\n        this._unconsume(excess);\n        if (withoutSemicolon && !this.preprocessor.endOfChunkHit) {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n        }\n        // We want to emit the error above on the code point after the entity.\n        // We always consume one code point too many in the loop, and we wait to\n        // unconsume it until after the error is emitted.\n        this._unconsume(1);\n        return result;\n    }\n    _isCharacterReferenceInAttribute() {\n        return (this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED ||\n            this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED);\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        }\n        else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch (this.state) {\n            case State.DATA: {\n                this._stateData(cp);\n                break;\n            }\n            case State.RCDATA: {\n                this._stateRcdata(cp);\n                break;\n            }\n            case State.RAWTEXT: {\n                this._stateRawtext(cp);\n                break;\n            }\n            case State.SCRIPT_DATA: {\n                this._stateScriptData(cp);\n                break;\n            }\n            case State.PLAINTEXT: {\n                this._statePlaintext(cp);\n                break;\n            }\n            case State.TAG_OPEN: {\n                this._stateTagOpen(cp);\n                break;\n            }\n            case State.END_TAG_OPEN: {\n                this._stateEndTagOpen(cp);\n                break;\n            }\n            case State.TAG_NAME: {\n                this._stateTagName(cp);\n                break;\n            }\n            case State.RCDATA_LESS_THAN_SIGN: {\n                this._stateRcdataLessThanSign(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_OPEN: {\n                this._stateRcdataEndTagOpen(cp);\n                break;\n            }\n            case State.RCDATA_END_TAG_NAME: {\n                this._stateRcdataEndTagName(cp);\n                break;\n            }\n            case State.RAWTEXT_LESS_THAN_SIGN: {\n                this._stateRawtextLessThanSign(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_OPEN: {\n                this._stateRawtextEndTagOpen(cp);\n                break;\n            }\n            case State.RAWTEXT_END_TAG_NAME: {\n                this._stateRawtextEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN: {\n                this._stateScriptDataLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_OPEN: {\n                this._stateScriptDataEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_END_TAG_NAME: {\n                this._stateScriptDataEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START: {\n                this._stateScriptDataEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH: {\n                this._stateScriptDataEscapeStartDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED: {\n                this._stateScriptDataEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH: {\n                this._stateScriptDataEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH: {\n                this._stateScriptDataEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN: {\n                this._stateScriptDataEscapedEndTagOpen(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME: {\n                this._stateScriptDataEscapedEndTagName(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START: {\n                this._stateScriptDataDoubleEscapeStart(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED: {\n                this._stateScriptDataDoubleEscaped(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH: {\n                this._stateScriptDataDoubleEscapedDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH: {\n                this._stateScriptDataDoubleEscapedDashDash(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN: {\n                this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                break;\n            }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END: {\n                this._stateScriptDataDoubleEscapeEnd(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_NAME: {\n                this._stateBeforeAttributeName(cp);\n                break;\n            }\n            case State.ATTRIBUTE_NAME: {\n                this._stateAttributeName(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_NAME: {\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case State.BEFORE_ATTRIBUTE_VALUE: {\n                this._stateBeforeAttributeValue(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED: {\n                this._stateAttributeValueDoubleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED: {\n                this._stateAttributeValueSingleQuoted(cp);\n                break;\n            }\n            case State.ATTRIBUTE_VALUE_UNQUOTED: {\n                this._stateAttributeValueUnquoted(cp);\n                break;\n            }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED: {\n                this._stateAfterAttributeValueQuoted(cp);\n                break;\n            }\n            case State.SELF_CLOSING_START_TAG: {\n                this._stateSelfClosingStartTag(cp);\n                break;\n            }\n            case State.BOGUS_COMMENT: {\n                this._stateBogusComment(cp);\n                break;\n            }\n            case State.MARKUP_DECLARATION_OPEN: {\n                this._stateMarkupDeclarationOpen(cp);\n                break;\n            }\n            case State.COMMENT_START: {\n                this._stateCommentStart(cp);\n                break;\n            }\n            case State.COMMENT_START_DASH: {\n                this._stateCommentStartDash(cp);\n                break;\n            }\n            case State.COMMENT: {\n                this._stateComment(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN: {\n                this._stateCommentLessThanSign(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG: {\n                this._stateCommentLessThanSignBang(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH: {\n                this._stateCommentLessThanSignBangDash(cp);\n                break;\n            }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH: {\n                this._stateCommentLessThanSignBangDashDash(cp);\n                break;\n            }\n            case State.COMMENT_END_DASH: {\n                this._stateCommentEndDash(cp);\n                break;\n            }\n            case State.COMMENT_END: {\n                this._stateCommentEnd(cp);\n                break;\n            }\n            case State.COMMENT_END_BANG: {\n                this._stateCommentEndBang(cp);\n                break;\n            }\n            case State.DOCTYPE: {\n                this._stateDoctype(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_NAME: {\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case State.DOCTYPE_NAME: {\n                this._stateDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_NAME: {\n                this._stateAfterDoctypeName(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD: {\n                this._stateAfterDoctypePublicKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateBeforeDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER: {\n                this._stateAfterDoctypePublicIdentifier(cp);\n                break;\n            }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS: {\n                this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD: {\n                this._stateAfterDoctypeSystemKeyword(cp);\n                break;\n            }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateBeforeDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                break;\n            }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED: {\n                this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                break;\n            }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER: {\n                this._stateAfterDoctypeSystemIdentifier(cp);\n                break;\n            }\n            case State.BOGUS_DOCTYPE: {\n                this._stateBogusDoctype(cp);\n                break;\n            }\n            case State.CDATA_SECTION: {\n                this._stateCdataSection(cp);\n                break;\n            }\n            case State.CDATA_SECTION_BRACKET: {\n                this._stateCdataSectionBracket(cp);\n                break;\n            }\n            case State.CDATA_SECTION_END: {\n                this._stateCdataSectionEnd(cp);\n                break;\n            }\n            case State.CHARACTER_REFERENCE: {\n                this._stateCharacterReference(cp);\n                break;\n            }\n            case State.NAMED_CHARACTER_REFERENCE: {\n                this._stateNamedCharacterReference(cp);\n                break;\n            }\n            case State.AMBIGUOUS_AMPERSAND: {\n                this._stateAmbiguousAmpersand(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE: {\n                this._stateNumericCharacterReference(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE_START: {\n                this._stateHexademicalCharacterReferenceStart(cp);\n                break;\n            }\n            case State.HEXADEMICAL_CHARACTER_REFERENCE: {\n                this._stateHexademicalCharacterReference(cp);\n                break;\n            }\n            case State.DECIMAL_CHARACTER_REFERENCE: {\n                this._stateDecimalCharacterReference(cp);\n                break;\n            }\n            case State.NUMERIC_CHARACTER_REFERENCE_END: {\n                this._stateNumericCharacterReferenceEnd(cp);\n                break;\n            }\n            default: {\n                throw new Error('Unknown state');\n            }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.TAG_OPEN;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.DATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch (cp) {\n            case $.AMPERSAND: {\n                this.returnState = State.RCDATA;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RCDATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch (cp) {\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch (cp) {\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.EXCLAMATION_MARK: {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n                case $.SOLIDUS: {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n                case $.QUESTION_MARK: {\n                    this._err(ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('<');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars('<');\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n            }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        }\n        else\n            switch (cp) {\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofBeforeTagName);\n                    this._emitChars('</');\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._err(ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n            }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.tagName += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                return false;\n            }\n            case $.SOLIDUS: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.state = State.SELF_CLOSING_START_TAG;\n                return false;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._advanceBy(this.lastStartTagName.length);\n                this.emitCurrentTagToken();\n                this.state = State.DATA;\n                return false;\n            }\n            default: {\n                return !this._ensureHibernation();\n            }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch (cp) {\n            case $.SOLIDUS: {\n                this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.SCRIPT_DATA_ESCAPE_START;\n                this._emitChars('<!');\n                break;\n            }\n            default: {\n                this._emitChars('<');\n                this.state = State.SCRIPT_DATA;\n                this._stateScriptData(cp);\n            }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars('-');\n        }\n        else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        }\n        else if (isAsciiLetter(cp)) {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        }\n        else {\n            this._emitChars('<');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        }\n        else {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars('</');\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this._emitChars('-');\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                this._emitChars('<');\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.SCRIPT_DATA;\n                this._emitChars('>');\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitChars(REPLACEMENT_CHARACTER);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInScriptHtmlCommentLikeText);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === $.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars('/');\n        }\n        else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith($$.SCRIPT, false) &&\n            isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek($$.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for (let i = 0; i < $$.SCRIPT.length; i++) {\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        }\n        else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._err(ERR.unexpectedEqualsSignBeforeAttributeName);\n                this._createAttr('=');\n                this.state = State.ATTRIBUTE_NAME;\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED:\n            case $.SOLIDUS:\n            case $.GREATER_THAN_SIGN:\n            case $.EOF: {\n                this._leaveAttrName();\n                this.state = State.AFTER_ATTRIBUTE_NAME;\n                this._stateAfterAttributeName(cp);\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this._leaveAttrName();\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN: {\n                this._err(ERR.unexpectedCharacterInAttributeName);\n                this.currentAttr.name += String.fromCodePoint(cp);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.SOLIDUS: {\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.EQUALS_SIGN: {\n                this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._createAttr('');\n                this.state = State.ATTRIBUTE_NAME;\n                this._stateAttributeName(cp);\n            }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingAttributeValue);\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            default: {\n                this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this._stateAttributeValueUnquoted(cp);\n            }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.AMPERSAND: {\n                this.returnState = State.ATTRIBUTE_VALUE_UNQUOTED;\n                this.state = State.CHARACTER_REFERENCE;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                this.currentAttr.value += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.QUOTATION_MARK:\n            case $.APOSTROPHE:\n            case $.LESS_THAN_SIGN:\n            case $.EQUALS_SIGN:\n            case $.GRAVE_ACCENT: {\n                this._err(ERR.unexpectedCharacterInUnquotedAttributeValue);\n                this.currentAttr.value += String.fromCodePoint(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this.currentAttr.value += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this._leaveAttrValue();\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                break;\n            }\n            case $.SOLIDUS: {\n                this._leaveAttrValue();\n                this.state = State.SELF_CLOSING_START_TAG;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._leaveAttrValue();\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBetweenAttributes);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                const token = this.currentToken;\n                token.selfClosing = true;\n                this.state = State.DATA;\n                this.emitCurrentTagToken();\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInTag);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedSolidusInTag);\n                this.state = State.BEFORE_ATTRIBUTE_NAME;\n                this._stateBeforeAttributeName(cp);\n            }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch($$.DASH_DASH, true)) {\n            this._createCommentToken($$.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        }\n        else if (this._consumeSequenceIfMatch($$.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation($$.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        }\n        else if (this._consumeSequenceIfMatch($$.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            }\n            else {\n                this._err(ERR.cdataInHtmlContent);\n                this._createCommentToken($$.CDATA_START.length + 1);\n                this.currentToken.data = '[CDATA[';\n                this.state = State.BOGUS_COMMENT;\n            }\n        }\n        //NOTE: Sequence lookups can be abrupted by hibernation. In that case, lookup\n        //results are no longer valid and we will need to start over.\n        else if (!this._ensureHibernation()) {\n            this._err(ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_START_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                const token = this.currentToken;\n                this.emitCurrentComment(token);\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptClosingOfEmptyComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                this.state = State.COMMENT_LESS_THAN_SIGN;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.data += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.EXCLAMATION_MARK: {\n                token.data += '!';\n                this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                break;\n            }\n            case $.LESS_THAN_SIGN: {\n                token.data += '<';\n                break;\n            }\n            default: {\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        }\n        else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === $.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        }\n        else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== $.GREATER_THAN_SIGN && cp !== $.EOF) {\n            this._err(ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                this.state = State.COMMENT_END;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '-';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EXCLAMATION_MARK: {\n                this.state = State.COMMENT_END_BANG;\n                break;\n            }\n            case $.HYPHEN_MINUS: {\n                token.data += '-';\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.HYPHEN_MINUS: {\n                token.data += '--!';\n                this.state = State.COMMENT_END_DASH;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.incorrectlyClosedComment);\n                this.state = State.DATA;\n                this.emitCurrentComment(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInComment);\n                this.emitCurrentComment(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.data += '--!';\n                this.state = State.COMMENT;\n                this._stateComment(cp);\n            }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                this._createDoctypeToken(null);\n                const token = this.currentToken;\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingWhitespaceBeforeDoctypeName);\n                this.state = State.BEFORE_DOCTYPE_NAME;\n                this._stateBeforeDoctypeName(cp);\n            }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        }\n        else\n            switch (cp) {\n                case $.SPACE:\n                case $.LINE_FEED:\n                case $.TABULATION:\n                case $.FORM_FEED: {\n                    // Ignore whitespace\n                    break;\n                }\n                case $.NULL: {\n                    this._err(ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n                case $.GREATER_THAN_SIGN: {\n                    this._err(ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n                case $.EOF: {\n                    this._err(ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n                default: {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n            }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.AFTER_DOCTYPE_NAME;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.name += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n            }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                if (this._consumeSequenceIfMatch($$.PUBLIC, false)) {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                }\n                else if (this._consumeSequenceIfMatch($$.SYSTEM, false)) {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                }\n                //NOTE: sequence lookup can be abrupted by hibernation. In that case lookup\n                //results are no longer valid and we will need to start over.\n                else if (!this._ensureHibernation()) {\n                    this._err(ERR.invalidCharacterSequenceAfterDoctypeName);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n            }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.publicId = '';\n                this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.publicId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypePublicIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.publicId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                this._err(ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.QUOTATION_MARK: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                break;\n            }\n            case $.APOSTROPHE: {\n                token.systemId = '';\n                this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.missingDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.DATA;\n                this.emitCurrentDoctype(token);\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.QUOTATION_MARK: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.APOSTROPHE: {\n                this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                token.systemId += REPLACEMENT_CHARACTER;\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this._err(ERR.abruptDoctypeSystemIdentifier);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                token.systemId += String.fromCodePoint(cp);\n            }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.SPACE:\n            case $.LINE_FEED:\n            case $.TABULATION:\n            case $.FORM_FEED: {\n                // Ignore whitespace\n                break;\n            }\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInDoctype);\n                token.forceQuirks = true;\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._err(ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                this.state = State.BOGUS_DOCTYPE;\n                this._stateBogusDoctype(cp);\n            }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.emitCurrentDoctype(token);\n                this.state = State.DATA;\n                break;\n            }\n            case $.NULL: {\n                this._err(ERR.unexpectedNullCharacter);\n                break;\n            }\n            case $.EOF: {\n                this.emitCurrentDoctype(token);\n                this._emitEOFToken();\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch (cp) {\n            case $.RIGHT_SQUARE_BRACKET: {\n                this.state = State.CDATA_SECTION_BRACKET;\n                break;\n            }\n            case $.EOF: {\n                this._err(ERR.eofInCdata);\n                this._emitEOFToken();\n                break;\n            }\n            default: {\n                this._emitCodePoint(cp);\n            }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === $.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        }\n        else {\n            this._emitChars(']');\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch (cp) {\n            case $.GREATER_THAN_SIGN: {\n                this.state = State.DATA;\n                break;\n            }\n            case $.RIGHT_SQUARE_BRACKET: {\n                this._emitChars(']');\n                break;\n            }\n            default: {\n                this._emitChars(']]');\n                this.state = State.CDATA_SECTION;\n                this._stateCdataSection(cp);\n            }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference(cp) {\n        if (cp === $.NUMBER_SIGN) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE;\n        }\n        else if (isAsciiAlphaNumeric(cp)) {\n            this.state = State.NAMED_CHARACTER_REFERENCE;\n            this._stateNamedCharacterReference(cp);\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Named character reference state\n    //------------------------------------------------------------------\n    _stateNamedCharacterReference(cp) {\n        const matchResult = this._matchNamedCharacterReference(cp);\n        //NOTE: Matching can be abrupted by hibernation. In that case, match\n        //results are no longer valid and we will need to start over.\n        if (this._ensureHibernation()) {\n            // Stay in the state, try again.\n        }\n        else if (matchResult) {\n            for (let i = 0; i < matchResult.length; i++) {\n                this._flushCodePointConsumedAsCharacterReference(matchResult[i]);\n            }\n            this.state = this.returnState;\n        }\n        else {\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this.state = State.AMBIGUOUS_AMPERSAND;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }\n        else {\n            if (cp === $.SEMICOLON) {\n                this._err(ERR.unknownNamedCharacterReference);\n            }\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Numeric character reference state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReference(cp) {\n        this.charRefCode = 0;\n        if (cp === $.LATIN_SMALL_X || cp === $.LATIN_CAPITAL_X) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE_START;\n        }\n        // Inlined decimal character reference start state\n        else if (isAsciiDigit(cp)) {\n            this.state = State.DECIMAL_CHARACTER_REFERENCE;\n            this._stateDecimalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._reconsumeInState(this.returnState, cp);\n        }\n    }\n    // Hexademical character reference start state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReferenceStart(cp) {\n        if (isAsciiHexDigit(cp)) {\n            this.state = State.HEXADEMICAL_CHARACTER_REFERENCE;\n            this._stateHexademicalCharacterReference(cp);\n        }\n        else {\n            this._err(ERR.absenceOfDigitsInNumericCharacterReference);\n            this._flushCodePointConsumedAsCharacterReference($.AMPERSAND);\n            this._flushCodePointConsumedAsCharacterReference($.NUMBER_SIGN);\n            this._unconsume(2);\n            this.state = this.returnState;\n        }\n    }\n    // Hexademical character reference state\n    //------------------------------------------------------------------\n    _stateHexademicalCharacterReference(cp) {\n        if (isAsciiUpperHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x37;\n        }\n        else if (isAsciiLowerHexDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x57;\n        }\n        else if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 16 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Decimal character reference state\n    //------------------------------------------------------------------\n    _stateDecimalCharacterReference(cp) {\n        if (isAsciiDigit(cp)) {\n            this.charRefCode = this.charRefCode * 10 + cp - 0x30;\n        }\n        else if (cp === $.SEMICOLON) {\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n        }\n        else {\n            this._err(ERR.missingSemicolonAfterCharacterReference);\n            this.state = State.NUMERIC_CHARACTER_REFERENCE_END;\n            this._stateNumericCharacterReferenceEnd(cp);\n        }\n    }\n    // Numeric character reference end state\n    //------------------------------------------------------------------\n    _stateNumericCharacterReferenceEnd(cp) {\n        if (this.charRefCode === $.NULL) {\n            this._err(ERR.nullCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (this.charRefCode > 1114111) {\n            this._err(ERR.characterReferenceOutsideUnicodeRange);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isSurrogate(this.charRefCode)) {\n            this._err(ERR.surrogateCharacterReference);\n            this.charRefCode = $.REPLACEMENT_CHARACTER;\n        }\n        else if (isUndefinedCodePoint(this.charRefCode)) {\n            this._err(ERR.noncharacterCharacterReference);\n        }\n        else if (isControlCodePoint(this.charRefCode) || this.charRefCode === $.CARRIAGE_RETURN) {\n            this._err(ERR.controlCharacterReference);\n            const replacement = C1_CONTROLS_REFERENCE_REPLACEMENTS.get(this.charRefCode);\n            if (replacement !== undefined) {\n                this.charRefCode = replacement;\n            }\n        }\n        this._flushCodePointConsumedAsCharacterReference(this.charRefCode);\n        this._reconsumeInState(this.returnState, cp);\n    }\n}\n//# sourceMappingURL=index.js.map","import { TAG_ID as $, NS, isNumberedHeader } from '../common/html.js';\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([$.DD, $.DT, $.LI, $.OPTGROUP, $.OPTION, $.P, $.RB, $.RP, $.RT, $.RTC]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    $.CAPTION,\n    $.COLGROUP,\n    $.TBODY,\n    $.TD,\n    $.TFOOT,\n    $.TH,\n    $.THEAD,\n    $.TR,\n]);\nconst SCOPING_ELEMENT_NS = new Map([\n    [$.APPLET, NS.HTML],\n    [$.CAPTION, NS.HTML],\n    [$.HTML, NS.HTML],\n    [$.MARQUEE, NS.HTML],\n    [$.OBJECT, NS.HTML],\n    [$.TABLE, NS.HTML],\n    [$.TD, NS.HTML],\n    [$.TEMPLATE, NS.HTML],\n    [$.TH, NS.HTML],\n    [$.ANNOTATION_XML, NS.MATHML],\n    [$.MI, NS.MATHML],\n    [$.MN, NS.MATHML],\n    [$.MO, NS.MATHML],\n    [$.MS, NS.MATHML],\n    [$.MTEXT, NS.MATHML],\n    [$.DESC, NS.SVG],\n    [$.FOREIGN_OBJECT, NS.SVG],\n    [$.TITLE, NS.SVG],\n]);\nconst NAMED_HEADERS = [$.H1, $.H2, $.H3, $.H4, $.H5, $.H6];\nconst TABLE_ROW_CONTEXT = [$.TR, $.TEMPLATE, $.HTML];\nconst TABLE_BODY_CONTEXT = [$.TBODY, $.TFOOT, $.THEAD, $.TEMPLATE, $.HTML];\nconst TABLE_CONTEXT = [$.TABLE, $.TEMPLATE, $.HTML];\nconst TABLE_CELLS = [$.TD, $.TH];\n//Stack of open elements\nexport class OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler) {\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = $.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === $.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        } while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== NS.HTML);\n        this.shortenToLength(targetIdx < 0 ? 0 : targetIdx);\n    }\n    shortenToLength(idx) {\n        while (this.stackTop >= idx) {\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx < 0 ? 0 : idx);\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(NAMED_HEADERS, NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            if (tagNames.includes(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            }\n            else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === $.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === $.HTML;\n    }\n    //Element in scope\n    hasInScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasNumberedHeaderInScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (isNumberedHeader(tn) && ns === NS.HTML) {\n                return true;\n            }\n            if (SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInListItemScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if (((tn === $.UL || tn === $.OL) && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInButtonScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (tn === tagName && ns === NS.HTML) {\n                return true;\n            }\n            if ((tn === $.BUTTON && ns === NS.HTML) || SCOPING_ELEMENT_NS.get(tn) === ns) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.TEMPLATE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === $.TBODY || tn === $.THEAD || tn === $.TFOOT) {\n                return true;\n            }\n            if (tn === $.TABLE || tn === $.HTML) {\n                return false;\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for (let i = this.stackTop; i >= 0; i--) {\n            const tn = this.tagIDs[i];\n            const ns = this.treeAdapter.getNamespaceURI(this.items[i]);\n            if (ns !== NS.HTML) {\n                continue;\n            }\n            if (tn === tagName) {\n                return true;\n            }\n            if (tn !== $.OPTION && tn !== $.OPTGROUP) {\n                return false;\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while (IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while (IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while (this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)) {\n            this.pop();\n        }\n    }\n}\n//# sourceMappingURL=open-element-stack.js.map","//Const\nconst NOAH_ARK_CAPACITY = 3;\nexport var EntryType;\n(function (EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType = EntryType || (EntryType = {}));\nconst MARKER = { type: EntryType.Marker };\n//List of formatting elements\nexport class FormattingElementList {\n    constructor(treeAdapter) {\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for (let i = 0; i < this.entries.length; i++) {\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName &&\n                this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({ idx: i, attrs: elementAttrs });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY)\n            return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY)\n            return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr) => [neAttr.name, neAttr.value]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for (let i = 0; i < candidates.length; i++) {\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr) => neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token,\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex >= 0) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */\n    clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx >= 0) {\n            this.entries.splice(0, markerIdx + 1);\n        }\n        else {\n            this.entries.length = 0;\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry) => entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry) => entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceMappingURL=formatting-element-list.js.map","import { DOCUMENT_MODE } from '../common/html.js';\nfunction createTextNode(value) {\n    return {\n        nodeName: '#text',\n        value,\n        parentNode: null,\n    };\n}\nexport const defaultTreeAdapter = {\n    //Node construction\n    createDocument() {\n        return {\n            nodeName: '#document',\n            mode: DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: [],\n        };\n    },\n    createDocumentFragment() {\n        return {\n            nodeName: '#document-fragment',\n            childNodes: [],\n        };\n    },\n    createElement(tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null,\n        };\n    },\n    createCommentNode(data) {\n        return {\n            nodeName: '#comment',\n            data,\n            parentNode: null,\n        };\n    },\n    //Tree mutation\n    appendChild(parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore(parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent(templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent(templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType(document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node) => node.nodeName === '#documentType');\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        }\n        else {\n            const node = {\n                nodeName: '#documentType',\n                name,\n                publicId,\n                systemId,\n                parentNode: null,\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode(document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode(document) {\n        return document.mode;\n    },\n    detachNode(node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText(parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, createTextNode(text));\n    },\n    insertTextBefore(parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        }\n        else {\n            defaultTreeAdapter.insertBefore(parentNode, createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes(recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr) => attr.name));\n        for (let j = 0; j < attrs.length; j++) {\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild(node) {\n        return node.childNodes[0];\n    },\n    getChildNodes(node) {\n        return node.childNodes;\n    },\n    getParentNode(node) {\n        return node.parentNode;\n    },\n    getAttrList(element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName(element) {\n        return element.tagName;\n    },\n    getNamespaceURI(element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent(textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent(commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName(doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId(doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId(doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode(node) {\n        return node.nodeName === '#text';\n    },\n    isCommentNode(node) {\n        return node.nodeName === '#comment';\n    },\n    isDocumentTypeNode(node) {\n        return node.nodeName === '#documentType';\n    },\n    isElementNode(node) {\n        return Object.prototype.hasOwnProperty.call(node, 'tagName');\n    },\n    // Source code location\n    setNodeSourceCodeLocation(node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation(node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation(node, endLocation) {\n        node.sourceCodeLocation = { ...node.sourceCodeLocation, ...endLocation };\n    },\n};\n//# sourceMappingURL=default.js.map","import { DOCUMENT_MODE } from './html.js';\n//Const\nconst VALID_DOCTYPE_NAME = 'html';\nconst VALID_SYSTEM_ID = 'about:legacy-compat';\nconst QUIRKS_MODE_SYSTEM_ID = 'http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd';\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    '+//silmaril//dtd html pro v0r11 19970101//',\n    '-//as//dtd html 3.0 aswedit + extensions//',\n    '-//advasoft ltd//dtd html 3.0 aswedit + extensions//',\n    '-//ietf//dtd html 2.0 level 1//',\n    '-//ietf//dtd html 2.0 level 2//',\n    '-//ietf//dtd html 2.0 strict level 1//',\n    '-//ietf//dtd html 2.0 strict level 2//',\n    '-//ietf//dtd html 2.0 strict//',\n    '-//ietf//dtd html 2.0//',\n    '-//ietf//dtd html 2.1e//',\n    '-//ietf//dtd html 3.0//',\n    '-//ietf//dtd html 3.2 final//',\n    '-//ietf//dtd html 3.2//',\n    '-//ietf//dtd html 3//',\n    '-//ietf//dtd html level 0//',\n    '-//ietf//dtd html level 1//',\n    '-//ietf//dtd html level 2//',\n    '-//ietf//dtd html level 3//',\n    '-//ietf//dtd html strict level 0//',\n    '-//ietf//dtd html strict level 1//',\n    '-//ietf//dtd html strict level 2//',\n    '-//ietf//dtd html strict level 3//',\n    '-//ietf//dtd html strict//',\n    '-//ietf//dtd html//',\n    '-//metrius//dtd metrius presentational//',\n    '-//microsoft//dtd internet explorer 2.0 html strict//',\n    '-//microsoft//dtd internet explorer 2.0 html//',\n    '-//microsoft//dtd internet explorer 2.0 tables//',\n    '-//microsoft//dtd internet explorer 3.0 html strict//',\n    '-//microsoft//dtd internet explorer 3.0 html//',\n    '-//microsoft//dtd internet explorer 3.0 tables//',\n    '-//netscape comm. corp.//dtd html//',\n    '-//netscape comm. corp.//dtd strict html//',\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    '-//sq//dtd html 2.0 hotmetal + extensions//',\n    '-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//',\n    '-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//',\n    '-//spyglass//dtd html 2.0 extended//',\n    '-//sun microsystems corp.//dtd hotjava html//',\n    '-//sun microsystems corp.//dtd hotjava strict html//',\n    '-//w3c//dtd html 3 1995-03-24//',\n    '-//w3c//dtd html 3.2 draft//',\n    '-//w3c//dtd html 3.2 final//',\n    '-//w3c//dtd html 3.2//',\n    '-//w3c//dtd html 3.2s draft//',\n    '-//w3c//dtd html 4.0 frameset//',\n    '-//w3c//dtd html 4.0 transitional//',\n    '-//w3c//dtd html experimental 19960712//',\n    '-//w3c//dtd html experimental 970421//',\n    '-//w3c//dtd w3 html//',\n    '-//w3o//dtd w3 html 3.0//',\n    '-//webtechs//dtd mozilla html 2.0//',\n    '-//webtechs//dtd mozilla html//',\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    '-//w3o//dtd w3 html strict 3.0//en//',\n    '-/w3c/dtd html 4.0 transitional/en',\n    'html',\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = ['-//w3c//dtd xhtml 1.0 frameset//', '-//w3c//dtd xhtml 1.0 transitional//'];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    '-//w3c//dtd html 4.01 frameset//',\n    '-//w3c//dtd html 4.01 transitional//',\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix) => publicId.startsWith(prefix));\n}\n//API\nexport function isConforming(token) {\n    return (token.name === VALID_DOCTYPE_NAME &&\n        token.publicId === null &&\n        (token.systemId === null || token.systemId === VALID_SYSTEM_ID));\n}\nexport function getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes =\n            systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceMappingURL=doctype.js.map","import { TAG_ID as $, NS, ATTRS, getTagID } from './html.js';\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: 'text/html',\n    APPLICATION_XML: 'application/xhtml+xml',\n};\n//Attributes\nconst DEFINITION_URL_ATTR = 'definitionurl';\nconst ADJUSTED_DEFINITION_URL_ATTR = 'definitionURL';\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    'attributeName',\n    'attributeType',\n    'baseFrequency',\n    'baseProfile',\n    'calcMode',\n    'clipPathUnits',\n    'diffuseConstant',\n    'edgeMode',\n    'filterUnits',\n    'glyphRef',\n    'gradientTransform',\n    'gradientUnits',\n    'kernelMatrix',\n    'kernelUnitLength',\n    'keyPoints',\n    'keySplines',\n    'keyTimes',\n    'lengthAdjust',\n    'limitingConeAngle',\n    'markerHeight',\n    'markerUnits',\n    'markerWidth',\n    'maskContentUnits',\n    'maskUnits',\n    'numOctaves',\n    'pathLength',\n    'patternContentUnits',\n    'patternTransform',\n    'patternUnits',\n    'pointsAtX',\n    'pointsAtY',\n    'pointsAtZ',\n    'preserveAlpha',\n    'preserveAspectRatio',\n    'primitiveUnits',\n    'refX',\n    'refY',\n    'repeatCount',\n    'repeatDur',\n    'requiredExtensions',\n    'requiredFeatures',\n    'specularConstant',\n    'specularExponent',\n    'spreadMethod',\n    'startOffset',\n    'stdDeviation',\n    'stitchTiles',\n    'surfaceScale',\n    'systemLanguage',\n    'tableValues',\n    'targetX',\n    'targetY',\n    'textLength',\n    'viewBox',\n    'viewTarget',\n    'xChannelSelector',\n    'yChannelSelector',\n    'zoomAndPan',\n].map((attr) => [attr.toLowerCase(), attr]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    ['xlink:actuate', { prefix: 'xlink', name: 'actuate', namespace: NS.XLINK }],\n    ['xlink:arcrole', { prefix: 'xlink', name: 'arcrole', namespace: NS.XLINK }],\n    ['xlink:href', { prefix: 'xlink', name: 'href', namespace: NS.XLINK }],\n    ['xlink:role', { prefix: 'xlink', name: 'role', namespace: NS.XLINK }],\n    ['xlink:show', { prefix: 'xlink', name: 'show', namespace: NS.XLINK }],\n    ['xlink:title', { prefix: 'xlink', name: 'title', namespace: NS.XLINK }],\n    ['xlink:type', { prefix: 'xlink', name: 'type', namespace: NS.XLINK }],\n    ['xml:base', { prefix: 'xml', name: 'base', namespace: NS.XML }],\n    ['xml:lang', { prefix: 'xml', name: 'lang', namespace: NS.XML }],\n    ['xml:space', { prefix: 'xml', name: 'space', namespace: NS.XML }],\n    ['xmlns', { prefix: '', name: 'xmlns', namespace: NS.XMLNS }],\n    ['xmlns:xlink', { prefix: 'xmlns', name: 'xlink', namespace: NS.XMLNS }],\n]);\n//SVG tag names adjustment map\nexport const SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    'altGlyph',\n    'altGlyphDef',\n    'altGlyphItem',\n    'animateColor',\n    'animateMotion',\n    'animateTransform',\n    'clipPath',\n    'feBlend',\n    'feColorMatrix',\n    'feComponentTransfer',\n    'feComposite',\n    'feConvolveMatrix',\n    'feDiffuseLighting',\n    'feDisplacementMap',\n    'feDistantLight',\n    'feFlood',\n    'feFuncA',\n    'feFuncB',\n    'feFuncG',\n    'feFuncR',\n    'feGaussianBlur',\n    'feImage',\n    'feMerge',\n    'feMergeNode',\n    'feMorphology',\n    'feOffset',\n    'fePointLight',\n    'feSpecularLighting',\n    'feSpotLight',\n    'feTile',\n    'feTurbulence',\n    'foreignObject',\n    'glyphRef',\n    'linearGradient',\n    'radialGradient',\n    'textPath',\n].map((tn) => [tn.toLowerCase(), tn]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    $.B,\n    $.BIG,\n    $.BLOCKQUOTE,\n    $.BODY,\n    $.BR,\n    $.CENTER,\n    $.CODE,\n    $.DD,\n    $.DIV,\n    $.DL,\n    $.DT,\n    $.EM,\n    $.EMBED,\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6,\n    $.HEAD,\n    $.HR,\n    $.I,\n    $.IMG,\n    $.LI,\n    $.LISTING,\n    $.MENU,\n    $.META,\n    $.NOBR,\n    $.OL,\n    $.P,\n    $.PRE,\n    $.RUBY,\n    $.S,\n    $.SMALL,\n    $.SPAN,\n    $.STRONG,\n    $.STRIKE,\n    $.SUB,\n    $.SUP,\n    $.TABLE,\n    $.TT,\n    $.U,\n    $.UL,\n    $.VAR,\n]);\n//Check exit from foreign content\nexport function causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === $.FONT &&\n        startTagToken.attrs.some(({ name }) => name === ATTRS.COLOR || name === ATTRS.SIZE || name === ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nexport function adjustTokenMathMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nexport function adjustTokenSVGAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nexport function adjustTokenXMLAttrs(token) {\n    for (let i = 0; i < token.attrs.length; i++) {\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nexport function adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = getTagID(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === NS.MATHML && (tn === $.MI || tn === $.MO || tn === $.MN || tn === $.MS || tn === $.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === NS.MATHML && tn === $.ANNOTATION_XML) {\n        for (let i = 0; i < attrs.length; i++) {\n            if (attrs[i].name === ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === NS.SVG && (tn === $.FOREIGN_OBJECT || tn === $.DESC || tn === $.TITLE);\n}\nexport function isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (((!foreignNS || foreignNS === NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs)) ||\n        ((!foreignNS || foreignNS === NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns)));\n}\n//# sourceMappingURL=foreign-content.js.map","import { Tokenizer, TokenizerMode } from '../tokenizer/index.js';\nimport { OpenElementStack } from './open-element-stack.js';\nimport { FormattingElementList, EntryType } from './formatting-element-list.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\nimport * as doctype from '../common/doctype.js';\nimport * as foreignContent from '../common/foreign-content.js';\nimport { ERR } from '../common/error-codes.js';\nimport * as unicode from '../common/unicode.js';\nimport { TAG_ID as $, TAG_NAMES as TN, NS, ATTRS, SPECIAL_ELEMENTS, DOCUMENT_MODE, isNumberedHeader, getTagID, } from '../common/html.js';\nimport { TokenType, getTokenAttr, } from '../common/token.js';\n//Misc constants\nconst HIDDEN_INPUT_TYPE = 'hidden';\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function (InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1,\n};\nconst TABLE_STRUCTURE_TAGS = new Set([$.TABLE, $.TBODY, $.TFOOT, $.THEAD, $.TR]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: defaultTreeAdapter,\n    onParseError: null,\n};\n//Parser\nexport class Parser {\n    constructor(options, document, fragmentContext = null, scriptHandler = null) {\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        this.insertionMode = InsertionMode.INITIAL;\n        this.originalInsertionMode = InsertionMode.INITIAL;\n        this.headElement = null;\n        this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */\n        this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         */\n        this.tmplInsertionModeStack = [];\n        this.pendingCharacterTokens = [];\n        this.hasNonWhitespacePendingCharacterToken = false;\n        this.framesetOk = true;\n        this.skipNextNewLine = false;\n        this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new Tokenizer(this.options, this);\n        this.activeFormattingElements = new FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? getTagID(this.treeAdapter.getTagName(fragmentContext)) : $.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options,\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : (fragmentContext = opts.treeAdapter.createElement(TN.TEMPLATE, NS.HTML, []));\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement('documentmock', NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === $.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError)\n            return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset,\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0)\n            this._setContextModes(node, tid);\n    }\n    onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            }\n            else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || this.treeAdapter.getNamespaceURI(current) === NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && !this._isIntegrationPoint(tid, current);\n    }\n    _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext\n            ? this.fragmentContext\n            : this.openElements.current;\n    }\n    _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while (node) {\n            if (this.treeAdapter.getTagName(node) === TN.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== NS.HTML) {\n            return;\n        }\n        switch (this.fragmentContextID) {\n            case $.TITLE:\n            case $.TEXTAREA: {\n                this.tokenizer.state = TokenizerMode.RCDATA;\n                break;\n            }\n            case $.STYLE:\n            case $.XMP:\n            case $.IFRAME:\n            case $.NOEMBED:\n            case $.NOFRAMES:\n            case $.NOSCRIPT: {\n                this.tokenizer.state = TokenizerMode.RAWTEXT;\n                break;\n            }\n            case $.SCRIPT: {\n                this.tokenizer.state = TokenizerMode.SCRIPT_DATA;\n                break;\n            }\n            case $.PLAINTEXT: {\n                this.tokenizer.state = TokenizerMode.PLAINTEXT;\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    //Tree mutation\n    _setDocumentType(token) {\n        const name = token.name || '';\n        const publicId = token.publicId || '';\n        const systemId = token.systemId || '';\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node) => this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location,\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        }\n        else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent, element);\n        }\n    }\n    _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(TN.HTML, NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo)\n            this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, $.HTML);\n    }\n    _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            }\n            else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        }\n        else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location)\n            return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, { endLine, endCol, endOffset });\n        }\n        else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    _adoptNodes(donor, recipient) {\n        for (let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)) {\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = \n            // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === TokenType.END_TAG && tn === closingToken.tagName\n                ? {\n                    endTag: { ...ctLoc },\n                    endLine: ctLoc.endLine,\n                    endCol: ctLoc.endCol,\n                    endOffset: ctLoc.endOffset,\n                }\n                : {\n                    endLine: ctLoc.startLine,\n                    endCol: ctLoc.startCol,\n                    endOffset: ctLoc.startOffset,\n                };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML)\n            return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        }\n        else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === $.SVG &&\n            this.treeAdapter.getTagName(current) === TN.ANNOTATION_XML &&\n            this.treeAdapter.getNamespaceURI(current) === NS.MATHML) {\n            return false;\n        }\n        return (\n        // Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode ||\n            // If it _is_ an integration point, then we might have to check that it is not an HTML\n            // integration point.\n            ((token.tagID === $.MGLYPH || token.tagID === $.MALIGNMARK) &&\n                !this._isIntegrationPoint(currentTagId, current, NS.HTML)));\n    }\n    _processToken(token) {\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                this.onCharacter(token);\n                break;\n            }\n            case TokenType.NULL_CHARACTER: {\n                this.onNullCharacter(token);\n                break;\n            }\n            case TokenType.COMMENT: {\n                this.onComment(token);\n                break;\n            }\n            case TokenType.DOCTYPE: {\n                this.onDoctype(token);\n                break;\n            }\n            case TokenType.START_TAG: {\n                this._processStartTag(token);\n                break;\n            }\n            case TokenType.END_TAG: {\n                this.onEndTag(token);\n                break;\n            }\n            case TokenType.EOF: {\n                this.onEof(token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                this.onWhitespaceCharacter(token);\n                break;\n            }\n        }\n    }\n    //Integration points\n    _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return foreignContent.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry) => entry.type === EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex < 0 ? listLength - 1 : endIndex - 1;\n            for (let i = unopenIdx; i >= 0; i--) {\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion($.P);\n        this.openElements.popUntilTagNamePopped($.P);\n    }\n    //Insertion modes\n    _resetInsertionMode() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            //Insertion mode reset map\n            switch (i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]) {\n                case $.TR: {\n                    this.insertionMode = InsertionMode.IN_ROW;\n                    return;\n                }\n                case $.TBODY:\n                case $.THEAD:\n                case $.TFOOT: {\n                    this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    return;\n                }\n                case $.CAPTION: {\n                    this.insertionMode = InsertionMode.IN_CAPTION;\n                    return;\n                }\n                case $.COLGROUP: {\n                    this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                    return;\n                }\n                case $.TABLE: {\n                    this.insertionMode = InsertionMode.IN_TABLE;\n                    return;\n                }\n                case $.BODY: {\n                    this.insertionMode = InsertionMode.IN_BODY;\n                    return;\n                }\n                case $.FRAMESET: {\n                    this.insertionMode = InsertionMode.IN_FRAMESET;\n                    return;\n                }\n                case $.SELECT: {\n                    this._resetInsertionModeForSelect(i);\n                    return;\n                }\n                case $.TEMPLATE: {\n                    this.insertionMode = this.tmplInsertionModeStack[0];\n                    return;\n                }\n                case $.HTML: {\n                    this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                    return;\n                }\n                case $.TD:\n                case $.TH: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_CELL;\n                        return;\n                    }\n                    break;\n                }\n                case $.HEAD: {\n                    if (i > 0) {\n                        this.insertionMode = InsertionMode.IN_HEAD;\n                        return;\n                    }\n                    break;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for (let i = selectIdx - 1; i > 0; i--) {\n                const tn = this.openElements.tagIDs[i];\n                if (tn === $.TEMPLATE) {\n                    break;\n                }\n                else if (tn === $.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    _findFosterParentingLocation() {\n        for (let i = this.openElements.stackTop; i >= 0; i--) {\n            const openElement = this.openElements.items[i];\n            switch (this.openElements.tagIDs[i]) {\n                case $.TEMPLATE: {\n                    if (this.treeAdapter.getNamespaceURI(openElement) === NS.HTML) {\n                        return { parent: this.treeAdapter.getTemplateContent(openElement), beforeElement: null };\n                    }\n                    break;\n                }\n                case $.TABLE: {\n                    const parent = this.treeAdapter.getParentNode(openElement);\n                    if (parent) {\n                        return { parent, beforeElement: openElement };\n                    }\n                    return { parent: this.openElements.items[i - 1], beforeElement: null };\n                }\n                default:\n                // Do nothing\n            }\n        }\n        return { parent: this.openElements.items[0], beforeElement: null };\n    }\n    _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        }\n        else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return SPECIAL_ELEMENTS[ns].has(id);\n    }\n    onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE: {\n                characterInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                characterInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                tokenInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                tokenAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                appendComment(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                appendCommentToRootHtmlElement(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                appendCommentToDocument(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                doctypeInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD: {\n                this._err(token, ERR.misplacedDoctype);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     */\n    _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        }\n        else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    _startTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                startTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                startTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                startTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                startTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                startTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                startTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                startTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                startTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                startTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                startTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                startTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                startTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                startTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                startTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                startTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                startTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                startTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                startTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                startTagAfterAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                startTagAfterAfterFrameset(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        }\n        else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    _endTagOutsideForeignContent(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                endTagBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                endTagBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                endTagInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                endTagInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                endTagAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY: {\n                endTagInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                endTagInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE: {\n                endTagInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_CAPTION: {\n                endTagInCaption(this, token);\n                break;\n            }\n            case InsertionMode.IN_COLUMN_GROUP: {\n                endTagInColumnGroup(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_BODY: {\n                endTagInTableBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_ROW: {\n                endTagInRow(this, token);\n                break;\n            }\n            case InsertionMode.IN_CELL: {\n                endTagInCell(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT: {\n                endTagInSelect(this, token);\n                break;\n            }\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                endTagInSelectInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                endTagInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY: {\n                endTagAfterBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_FRAMESET: {\n                endTagInFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_FRAMESET: {\n                endTagAfterFrameset(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_AFTER_BODY: {\n                tokenAfterAfterBody(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onEof(token) {\n        switch (this.insertionMode) {\n            case InsertionMode.INITIAL: {\n                tokenInInitialMode(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HTML: {\n                tokenBeforeHtml(this, token);\n                break;\n            }\n            case InsertionMode.BEFORE_HEAD: {\n                tokenBeforeHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD: {\n                tokenInHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_HEAD_NO_SCRIPT: {\n                tokenInHeadNoScript(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_HEAD: {\n                tokenAfterHead(this, token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE: {\n                eofInBody(this, token);\n                break;\n            }\n            case InsertionMode.TEXT: {\n                eofInText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                tokenInTableText(this, token);\n                break;\n            }\n            case InsertionMode.IN_TEMPLATE: {\n                eofInTemplate(this, token);\n                break;\n            }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                stopParsing(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n    onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === unicode.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch (this.insertionMode) {\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET: {\n                this._insertCharacters(token);\n                break;\n            }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET: {\n                whitespaceCharacterInBody(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW: {\n                characterInTable(this, token);\n                break;\n            }\n            case InsertionMode.IN_TABLE_TEXT: {\n                whitespaceCharacterInTableText(this, token);\n                break;\n            }\n            default:\n            // Do nothing\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        }\n        else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    }\n    else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for (; idx >= 0; idx--) {\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(idx < 0 ? 0 : idx);\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for (let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement) {\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        }\n        else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = getTagID(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    }\n    else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === $.TEMPLATE && ns === NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for (let i = 0; i < AA_OUTER_LOOP_ITER; i++) {\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor)\n            aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for (let i = p.openElements.stackTop; i >= target; i--) {\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? DOCUMENT_MODE.QUIRKS : doctype.getDocumentMode(token);\n    if (!doctype.isConforming(token)) {\n        p._err(token, ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === $.HTML) {\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    }\n    else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HTML || tn === $.HEAD || tn === $.BODY || tn === $.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.HEAD: {\n            p._insertElement(token, NS.HTML);\n            p.headElement = p.openElements.current;\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        default: {\n            tokenBeforeHead(p, token);\n        }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === $.HEAD || tn === $.BODY || tn === $.HTML || tn === $.BR) {\n        tokenBeforeHead(p, token);\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(TN.HEAD, $.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TITLE: {\n            p._switchToTextParsing(token, TokenizerMode.RCDATA);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            }\n            else {\n                p._insertElement(token, NS.HTML);\n                p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n            }\n            break;\n        }\n        case $.NOFRAMES:\n        case $.STYLE: {\n            p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n            break;\n        }\n        case $.SCRIPT: {\n            p._switchToTextParsing(token, TokenizerMode.SCRIPT_DATA);\n            break;\n        }\n        case $.TEMPLATE: {\n            p._insertTemplate(token);\n            p.activeFormattingElements.insertMarker();\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_TEMPLATE;\n            p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenInHead(p, token);\n        }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch (token.tagID) {\n        case $.HEAD: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.AFTER_HEAD;\n            break;\n        }\n        case $.BODY:\n        case $.BR:\n        case $.HTML: {\n            tokenInHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== $.TEMPLATE) {\n            p._err(token, ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    }\n    else {\n        p._err(token, ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.HEAD:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.STYLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            p._err(token, ERR.nestedNoscriptInHead);\n            break;\n        }\n        default: {\n            tokenInHeadNoScript(p, token);\n        }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch (token.tagID) {\n        case $.NOSCRIPT: {\n            p.openElements.pop();\n            p.insertionMode = InsertionMode.IN_HEAD;\n            break;\n        }\n        case $.BR: {\n            tokenInHeadNoScript(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === TokenType.EOF ? ERR.openElementsLeftAfterEof : ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.BODY: {\n            p._insertElement(token, NS.HTML);\n            p.framesetOk = false;\n            p.insertionMode = InsertionMode.IN_BODY;\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_FRAMESET;\n            break;\n        }\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            p._err(token, ERR.abandonedHeadElementChild);\n            p.openElements.push(p.headElement, $.HEAD);\n            startTagInHead(p, token);\n            p.openElements.remove(p.headElement);\n            break;\n        }\n        case $.HEAD: {\n            p._err(token, ERR.misplacedStartTagForHeadElement);\n            break;\n        }\n        default: {\n            tokenAfterHead(p, token);\n        }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch (token.tagID) {\n        case $.BODY:\n        case $.HTML:\n        case $.BR: {\n            tokenAfterHead(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            p._err(token, ERR.endTagWithoutMatchingOpenElement);\n        }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(TN.BODY, $.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch (token.type) {\n        case TokenType.CHARACTER: {\n            characterInBody(p, token);\n            break;\n        }\n        case TokenType.WHITESPACE_CHARACTER: {\n            whitespaceCharacterInBody(p, token);\n            break;\n        }\n        case TokenType.COMMENT: {\n            appendComment(p, token);\n            break;\n        }\n        case TokenType.START_TAG: {\n            startTagInBody(p, token);\n            break;\n        }\n        case TokenType.END_TAG: {\n            endTagInBody(p, token);\n            break;\n        }\n        case TokenType.EOF: {\n            eofInBody(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    if (isNumberedHeader(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope($.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for (let i = p.openElements.stackTop; i >= 0; i--) {\n        const elementId = p.openElements.tagIDs[i];\n        if ((tn === $.LI && elementId === $.LI) ||\n            ((tn === $.DD || tn === $.DT) && (elementId === $.DD || elementId === $.DT))) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== $.ADDRESS &&\n            elementId !== $.DIV &&\n            elementId !== $.P &&\n            p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.tokenizer.state = TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped($.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(TN.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope($.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = getTokenAttr(token, ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = TN.IMG;\n    token.tagID = $.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope($.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as an user agent with enabled plugins, so we parse\n//<noembed> as rawtext.\nfunction noembedStartTagInBody(p, token) {\n    p._switchToTextParsing(token, TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode =\n        p.insertionMode === InsertionMode.IN_TABLE ||\n            p.insertionMode === InsertionMode.IN_CAPTION ||\n            p.insertionMode === InsertionMode.IN_TABLE_BODY ||\n            p.insertionMode === InsertionMode.IN_ROW ||\n            p.insertionMode === InsertionMode.IN_CELL\n            ? InsertionMode.IN_SELECT_IN_TABLE\n            : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === $.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope($.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.RTC);\n    }\n    p._insertElement(token, NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenMathMLAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.MATHML);\n    }\n    else {\n        p._insertElement(token, NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    foreignContent.adjustTokenSVGAttrs(token);\n    foreignContent.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, NS.SVG);\n    }\n    else {\n        p._insertElement(token, NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.I:\n        case $.S:\n        case $.B:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            bStartTagInBody(p, token);\n            break;\n        }\n        case $.A: {\n            aStartTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderStartTagInBody(p, token);\n            break;\n        }\n        case $.P:\n        case $.DL:\n        case $.OL:\n        case $.UL:\n        case $.DIV:\n        case $.DIR:\n        case $.NAV:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.DETAILS:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressStartTagInBody(p, token);\n            break;\n        }\n        case $.LI:\n        case $.DD:\n        case $.DT: {\n            listItemStartTagInBody(p, token);\n            break;\n        }\n        case $.BR:\n        case $.IMG:\n        case $.WBR:\n        case $.AREA:\n        case $.EMBED:\n        case $.KEYGEN: {\n            areaStartTagInBody(p, token);\n            break;\n        }\n        case $.HR: {\n            hrStartTagInBody(p, token);\n            break;\n        }\n        case $.RB:\n        case $.RTC: {\n            rbStartTagInBody(p, token);\n            break;\n        }\n        case $.RT:\n        case $.RP: {\n            rtStartTagInBody(p, token);\n            break;\n        }\n        case $.PRE:\n        case $.LISTING: {\n            preStartTagInBody(p, token);\n            break;\n        }\n        case $.XMP: {\n            xmpStartTagInBody(p, token);\n            break;\n        }\n        case $.SVG: {\n            svgStartTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlStartTagInBody(p, token);\n            break;\n        }\n        case $.BASE:\n        case $.LINK:\n        case $.META:\n        case $.STYLE:\n        case $.TITLE:\n        case $.SCRIPT:\n        case $.BGSOUND:\n        case $.BASEFONT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.BODY: {\n            bodyStartTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInBody(p, token);\n            break;\n        }\n        case $.NOBR: {\n            nobrStartTagInBody(p, token);\n            break;\n        }\n        case $.MATH: {\n            mathStartTagInBody(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInBody(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInBody(p, token);\n            break;\n        }\n        case $.PARAM:\n        case $.TRACK:\n        case $.SOURCE: {\n            paramStartTagInBody(p, token);\n            break;\n        }\n        case $.IMAGE: {\n            imageStartTagInBody(p, token);\n            break;\n        }\n        case $.BUTTON: {\n            buttonStartTagInBody(p, token);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletStartTagInBody(p, token);\n            break;\n        }\n        case $.IFRAME: {\n            iframeStartTagInBody(p, token);\n            break;\n        }\n        case $.SELECT: {\n            selectStartTagInBody(p, token);\n            break;\n        }\n        case $.OPTION:\n        case $.OPTGROUP: {\n            optgroupStartTagInBody(p, token);\n            break;\n        }\n        case $.NOEMBED: {\n            noembedStartTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            framesetStartTagInBody(p, token);\n            break;\n        }\n        case $.TEXTAREA: {\n            textareaStartTagInBody(p, token);\n            break;\n        }\n        case $.NOSCRIPT: {\n            if (p.options.scriptingEnabled) {\n                noembedStartTagInBody(p, token);\n            }\n            else {\n                genericStartTagInBody(p, token);\n            }\n            break;\n        }\n        case $.PLAINTEXT: {\n            plaintextStartTagInBody(p, token);\n            break;\n        }\n        case $.COL:\n        case $.TH:\n        case $.TD:\n        case $.TR:\n        case $.HEAD:\n        case $.FRAME:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.CAPTION:\n        case $.COLGROUP: {\n            // Ignore token\n            break;\n        }\n        default: {\n            genericStartTagInBody(p, token);\n        }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope($.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope($.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped($.FORM);\n        }\n        else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope($.P)) {\n        p._insertFakeElement(TN.P, $.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope($.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion($.LI);\n        p.openElements.popUntilTagNamePopped($.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(TN.BR, $.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== $.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i)\n                p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch (token.tagID) {\n        case $.A:\n        case $.B:\n        case $.I:\n        case $.S:\n        case $.U:\n        case $.EM:\n        case $.TT:\n        case $.BIG:\n        case $.CODE:\n        case $.FONT:\n        case $.NOBR:\n        case $.SMALL:\n        case $.STRIKE:\n        case $.STRONG: {\n            callAdoptionAgency(p, token);\n            break;\n        }\n        case $.P: {\n            pEndTagInBody(p);\n            break;\n        }\n        case $.DL:\n        case $.UL:\n        case $.OL:\n        case $.DIR:\n        case $.DIV:\n        case $.NAV:\n        case $.PRE:\n        case $.MAIN:\n        case $.MENU:\n        case $.ASIDE:\n        case $.BUTTON:\n        case $.CENTER:\n        case $.FIGURE:\n        case $.FOOTER:\n        case $.HEADER:\n        case $.HGROUP:\n        case $.DIALOG:\n        case $.ADDRESS:\n        case $.ARTICLE:\n        case $.DETAILS:\n        case $.SECTION:\n        case $.SUMMARY:\n        case $.LISTING:\n        case $.FIELDSET:\n        case $.BLOCKQUOTE:\n        case $.FIGCAPTION: {\n            addressEndTagInBody(p, token);\n            break;\n        }\n        case $.LI: {\n            liEndTagInBody(p);\n            break;\n        }\n        case $.DD:\n        case $.DT: {\n            ddEndTagInBody(p, token);\n            break;\n        }\n        case $.H1:\n        case $.H2:\n        case $.H3:\n        case $.H4:\n        case $.H5:\n        case $.H6: {\n            numberedHeaderEndTagInBody(p);\n            break;\n        }\n        case $.BR: {\n            brEndTagInBody(p);\n            break;\n        }\n        case $.BODY: {\n            bodyEndTagInBody(p, token);\n            break;\n        }\n        case $.HTML: {\n            htmlEndTagInBody(p, token);\n            break;\n        }\n        case $.FORM: {\n            formEndTagInBody(p);\n            break;\n        }\n        case $.APPLET:\n        case $.OBJECT:\n        case $.MARQUEE: {\n            appletEndTagInBody(p, token);\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default: {\n            genericEndTagInBody(p, token);\n        }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === $.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch (token.type) {\n            case TokenType.CHARACTER: {\n                characterInTableText(p, token);\n                break;\n            }\n            case TokenType.WHITESPACE_CHARACTER: {\n                whitespaceCharacterInTableText(p, token);\n                break;\n            }\n            // Ignore null\n        }\n    }\n    else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.COLGROUP, $.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(TN.TBODY, $.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope($.TABLE)) {\n        p.openElements.popUntilTagNamePopped($.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, NS.HTML);\n    }\n    else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            tdStartTagInTable(p, token);\n            break;\n        }\n        case $.STYLE:\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            colStartTagInTable(p, token);\n            break;\n        }\n        case $.FORM: {\n            formStartTagInTable(p, token);\n            break;\n        }\n        case $.TABLE: {\n            tableStartTagInTable(p, token);\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            tbodyStartTagInTable(p, token);\n            break;\n        }\n        case $.INPUT: {\n            inputStartTagInTable(p, token);\n            break;\n        }\n        case $.CAPTION: {\n            captionStartTagInTable(p, token);\n            break;\n        }\n        case $.COLGROUP: {\n            colgroupStartTagInTable(p, token);\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch (token.tagID) {\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TABLE)) {\n                p.openElements.popUntilTagNamePopped($.TABLE);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInTable(p, token);\n        }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    }\n    else {\n        for (; i < p.pendingCharacterTokens.length; i++) {\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([$.CAPTION, $.COL, $.COLGROUP, $.TBODY, $.TD, $.TFOOT, $.TH, $.THEAD, $.TR]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped($.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.CAPTION:\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.CAPTION)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped($.CAPTION);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                if (tn === $.TABLE) {\n                    endTagInTable(p, token);\n                }\n            }\n            break;\n        }\n        case $.BODY:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TBODY:\n        case $.TD:\n        case $.TFOOT:\n        case $.TH:\n        case $.THEAD:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.COL: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch (token.tagID) {\n        case $.COLGROUP: {\n            if (p.openElements.currentTagId === $.COLGROUP) {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        case $.COL: {\n            // Ignore token\n            break;\n        }\n        default: {\n            tokenInColumnGroup(p, token);\n        }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === $.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_ROW;\n            break;\n        }\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableBodyContext();\n            p._insertFakeElement(TN.TR, $.TR);\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch (token.tagID) {\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasTableBodyContextInTableScope()) {\n                p.openElements.clearBackToTableBodyContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE;\n                endTagInTable(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH:\n        case $.TR: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TH:\n        case $.TD: {\n            p.openElements.clearBackToTableRowContext();\n            p._insertElement(token, NS.HTML);\n            p.insertionMode = InsertionMode.IN_CELL;\n            p.activeFormattingElements.insertMarker();\n            break;\n        }\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n            }\n            break;\n        }\n        default: {\n            startTagInTable(p, token);\n        }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch (token.tagID) {\n        case $.TR: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            }\n            break;\n        }\n        case $.TABLE: {\n            if (p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope($.TR)) {\n                p.openElements.clearBackToTableRowContext();\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                endTagInTableBody(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML:\n        case $.TD:\n        case $.TH: {\n            // Ignore end tag\n            break;\n        }\n        default: {\n            endTagInTable(p, token);\n        }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope($.TD) || p.openElements.hasInTableScope($.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    }\n    else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch (tn) {\n        case $.TD:\n        case $.TH: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p.openElements.generateImpliedEndTags();\n                p.openElements.popUntilTagNamePopped(tn);\n                p.activeFormattingElements.clearToLastMarker();\n                p.insertionMode = InsertionMode.IN_ROW;\n            }\n            break;\n        }\n        case $.TABLE:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD:\n        case $.TR: {\n            if (p.openElements.hasInTableScope(tn)) {\n                p._closeTableCell();\n                endTagInRow(p, token);\n            }\n            break;\n        }\n        case $.BODY:\n        case $.CAPTION:\n        case $.COL:\n        case $.COLGROUP:\n        case $.HTML: {\n            // Ignore token\n            break;\n        }\n        default: {\n            endTagInBody(p, token);\n        }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.OPTGROUP: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.INPUT:\n        case $.KEYGEN:\n        case $.TEXTAREA:\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n                if (token.tagID !== $.SELECT) {\n                    p._processStartTag(token);\n                }\n            }\n            break;\n        }\n        case $.SCRIPT:\n        case $.TEMPLATE: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch (token.tagID) {\n        case $.OPTGROUP: {\n            if (p.openElements.stackTop > 0 &&\n                p.openElements.currentTagId === $.OPTION &&\n                p.openElements.tagIDs[p.openElements.stackTop - 1] === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            if (p.openElements.currentTagId === $.OPTGROUP) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.OPTION: {\n            if (p.openElements.currentTagId === $.OPTION) {\n                p.openElements.pop();\n            }\n            break;\n        }\n        case $.SELECT: {\n            if (p.openElements.hasInSelectScope($.SELECT)) {\n                p.openElements.popUntilTagNamePopped($.SELECT);\n                p._resetInsertionMode();\n            }\n            break;\n        }\n        case $.TEMPLATE: {\n            templateEndTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        p.openElements.popUntilTagNamePopped($.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n    else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === $.CAPTION ||\n        tn === $.TABLE ||\n        tn === $.TBODY ||\n        tn === $.TFOOT ||\n        tn === $.THEAD ||\n        tn === $.TR ||\n        tn === $.TD ||\n        tn === $.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped($.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    }\n    else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch (token.tagID) {\n        // First, handle tags that can start without a mode change\n        case $.BASE:\n        case $.BASEFONT:\n        case $.BGSOUND:\n        case $.LINK:\n        case $.META:\n        case $.NOFRAMES:\n        case $.SCRIPT:\n        case $.STYLE:\n        case $.TEMPLATE:\n        case $.TITLE: {\n            startTagInHead(p, token);\n            break;\n        }\n        // Re-process the token in the appropriate mode\n        case $.CAPTION:\n        case $.COLGROUP:\n        case $.TBODY:\n        case $.TFOOT:\n        case $.THEAD: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n            break;\n        }\n        case $.COL: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n            p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n            startTagInColumnGroup(p, token);\n            break;\n        }\n        case $.TR: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n            p.insertionMode = InsertionMode.IN_TABLE_BODY;\n            startTagInTableBody(p, token);\n            break;\n        }\n        case $.TD:\n        case $.TH: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n            p.insertionMode = InsertionMode.IN_ROW;\n            startTagInRow(p, token);\n            break;\n        }\n        default: {\n            p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n            p.insertionMode = InsertionMode.IN_BODY;\n            startTagInBody(p, token);\n        }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === $.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped($.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    }\n    else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === $.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === $.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n    else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.FRAMESET: {\n            p._insertElement(token, NS.HTML);\n            break;\n        }\n        case $.FRAME: {\n            p._appendElement(token, NS.HTML);\n            token.ackSelfClosing = true;\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === $.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== $.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === $.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === $.HTML) {\n        startTagInBody(p, token);\n    }\n    else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch (token.tagID) {\n        case $.HTML: {\n            startTagInBody(p, token);\n            break;\n        }\n        case $.NOFRAMES: {\n            startTagInHead(p, token);\n            break;\n        }\n        default:\n        // Do nothing\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = unicode.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while (p.treeAdapter.getNamespaceURI(p.openElements.current) !== NS.HTML &&\n        !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)) {\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (foreignContent.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    }\n    else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === NS.MATHML) {\n            foreignContent.adjustTokenMathMLAttrs(token);\n        }\n        else if (currentNs === NS.SVG) {\n            foreignContent.adjustTokenSVGTagName(token);\n            foreignContent.adjustTokenSVGAttrs(token);\n        }\n        foreignContent.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        }\n        else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === $.P || token.tagID === $.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for (let i = p.openElements.stackTop; i > 0; i--) {\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceMappingURL=index.js.map","export const xmlReplacer = /[\"&'<>$\\x80-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [39, \"&apos;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nexport const getCodePoint = \n// eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt != null\n    ? (str, index) => str.codePointAt(index)\n    : // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        (c, index) => (c.charCodeAt(index) & 0xfc00) === 0xd800\n            ? (c.charCodeAt(index) - 0xd800) * 0x400 +\n                c.charCodeAt(index + 1) -\n                0xdc00 +\n                0x10000\n            : c.charCodeAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */\nexport function encodeXML(str) {\n    let ret = \"\";\n    let lastIdx = 0;\n    let match;\n    while ((match = xmlReplacer.exec(str)) !== null) {\n        const i = match.index;\n        const char = str.charCodeAt(i);\n        const next = xmlCodeMap.get(char);\n        if (next !== undefined) {\n            ret += str.substring(lastIdx, i) + next;\n            lastIdx = i + 1;\n        }\n        else {\n            ret += `${str.substring(lastIdx, i)}&#x${getCodePoint(str, i).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIdx = xmlReplacer.lastIndex += Number((char & 0xfc00) === 0xd800);\n        }\n    }\n    return ret + str.substr(lastIdx);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */\nexport const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */\nfunction getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIdx = 0;\n        let result = \"\";\n        while ((match = regex.exec(data))) {\n            if (lastIdx !== match.index) {\n                result += data.substring(lastIdx, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIdx = match.index + 1;\n        }\n        return result + data.substring(lastIdx);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */\nexport const escapeUTF8 = getEscaper(/[&<>'\"]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeAttribute = getEscaper(/[\"&\\u00A0]/g, new Map([\n    [34, \"&quot;\"],\n    [38, \"&amp;\"],\n    [160, \"&nbsp;\"],\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */\nexport const escapeText = getEscaper(/[&<>\\u00A0]/g, new Map([\n    [38, \"&amp;\"],\n    [60, \"&lt;\"],\n    [62, \"&gt;\"],\n    [160, \"&nbsp;\"],\n]));\n//# sourceMappingURL=escape.js.map","import { TAG_NAMES as $, NS, hasUnescapedText } from '../common/html.js';\nimport { escapeText, escapeAttribute } from 'entities/lib/escape.js';\nimport { defaultTreeAdapter } from '../tree-adapters/default.js';\n// Sets\nconst VOID_ELEMENTS = new Set([\n    $.AREA,\n    $.BASE,\n    $.BASEFONT,\n    $.BGSOUND,\n    $.BR,\n    $.COL,\n    $.EMBED,\n    $.FRAME,\n    $.HR,\n    $.IMG,\n    $.INPUT,\n    $.KEYGEN,\n    $.LINK,\n    $.META,\n    $.PARAM,\n    $.SOURCE,\n    $.TRACK,\n    $.WBR,\n]);\nfunction isVoidElement(node, options) {\n    return (options.treeAdapter.isElementNode(node) &&\n        options.treeAdapter.getNamespaceURI(node) === NS.HTML &&\n        VOID_ELEMENTS.has(options.treeAdapter.getTagName(node)));\n}\nconst defaultOpts = { treeAdapter: defaultTreeAdapter, scriptingEnabled: true };\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serialize(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    if (isVoidElement(node, opts)) {\n        return '';\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const html = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */\nexport function serializeOuter(node, options) {\n    const opts = { ...defaultOpts, ...options };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = '';\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) &&\n        options.treeAdapter.getTagName(parentNode) === $.TEMPLATE &&\n        options.treeAdapter.getNamespaceURI(parentNode) === NS.HTML\n        ? options.treeAdapter.getTemplateContent(parentNode)\n        : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes) {\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return '';\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? '' : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = '';\n    for (const attr of treeAdapter.getAttrList(node)) {\n        html += ' ';\n        if (!attr.namespace) {\n            html += attr.name;\n        }\n        else\n            switch (attr.namespace) {\n                case NS.XML: {\n                    html += `xml:${attr.name}`;\n                    break;\n                }\n                case NS.XMLNS: {\n                    if (attr.name !== 'xmlns') {\n                        html += 'xmlns:';\n                    }\n                    html += attr.name;\n                    break;\n                }\n                case NS.XLINK: {\n                    html += `xlink:${attr.name}`;\n                    break;\n                }\n                default: {\n                    html += `${attr.prefix}:${attr.name}`;\n                }\n            }\n        html += `=\"${escapeAttribute(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn &&\n        treeAdapter.getNamespaceURI(parent) === NS.HTML &&\n        hasUnescapedText(parentTn, options.scriptingEnabled)\n        ? content\n        : escapeText(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceMappingURL=index.js.map","/**\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Doctype} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Nodes} Nodes\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').RootContent} RootContent\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('mdast-util-to-hast').Raw} Raw\n *\n * @typedef {import('parse5').DefaultTreeAdapterMap} DefaultTreeAdapterMap\n * @typedef {import('parse5').ParserOptions<DefaultTreeAdapterMap>} ParserOptions\n * @typedef {import('parse5').Token.CharacterToken} CharacterToken\n * @typedef {import('parse5').Token.CommentToken} CommentToken\n * @typedef {import('parse5').Token.DoctypeToken} DoctypeToken\n * @typedef {import('parse5').Token.Location} Location\n * @typedef {import('parse5').Token.TagToken} TagToken\n *\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {VFile | null | undefined} [file]\n *   Corresponding virtual file representing the input document (optional).\n * @property {Array<Nodes['type']> | null | undefined} [passThrough]\n *   List of custom hast node types to pass through (as in, keep) (optional).\n *\n *   If the passed through nodes have children, those children are expected to\n *   be hast again and will be handled.\n *\n * @typedef State\n *   Info passed around about the current state.\n * @property {(node: Nodes) => undefined} handle\n *   Add a hast node to the parser.\n * @property {Options} options\n *   User configuration.\n * @property {Parser<DefaultTreeAdapterMap>} parser\n *   Current parser.\n * @property {boolean} stitches\n *   Whether there are stitches.\n *\n * @typedef {{type: 'comment', value: {stitch: Nodes}}} Stitch\n *   Custom comment-like value we pass through parse5, which contains a\n *   replacement node that we’ll swap back in afterwards.\n */\n\nimport structuredClone from '@ungap/structured-clone'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {Parser, Token, TokenizerMode, html} from 'parse5'\nimport {pointEnd, pointStart} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\n// Node types associated with MDX.\n// <https://github.com/mdx-js/mdx/blob/8a56312/packages/mdx/lib/node-types.js>\nconst knownMdxNames = new Set([\n  'mdxFlowExpression',\n  'mdxJsxFlowElement',\n  'mdxJsxTextElement',\n  'mdxTextExpression',\n  'mdxjsEsm'\n])\n\n/** @type {ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Pass a hast tree through an HTML parser, which will fix nesting, and turn\n * raw nodes into actual nodes.\n *\n * @param {Nodes} tree\n *   Original hast tree to transform.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {Nodes}\n *   Parsed again tree.\n */\nexport function raw(tree, options) {\n  const document = documentMode(tree)\n  /** @type {(node: Nodes, state: State) => undefined} */\n  const one = zwitch('type', {\n    handlers: {root, element, text, comment, doctype, raw: handleRaw},\n    unknown\n  })\n\n  /** @type {State} */\n  const state = {\n    parser: document\n      ? new Parser(parseOptions)\n      : Parser.getFragmentParser(undefined, parseOptions),\n    handle(node) {\n      one(node, state)\n    },\n    stitches: false,\n    options: options || {}\n  }\n\n  one(tree, state)\n  resetTokenizer(state, pointStart())\n\n  const p5 = document ? state.parser.document : state.parser.getFragment()\n  const result = fromParse5(p5, {\n    // To do: support `space`?\n    file: state.options.file\n  })\n\n  if (state.stitches) {\n    visit(result, 'comment', function (node, index, parent) {\n      const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n      if (stitch.value.stitch && parent && index !== undefined) {\n        /** @type {Array<RootContent>} */\n        const siblings = parent.children\n        // @ts-expect-error: assume the stitch is allowed.\n        siblings[index] = stitch.value.stitch\n        return index\n      }\n    })\n  }\n\n  // Unpack if possible and when not given a `root`.\n  if (\n    result.type === 'root' &&\n    result.children.length === 1 &&\n    result.children[0].type === tree.type\n  ) {\n    return result.children[0]\n  }\n\n  return result\n}\n\n/**\n * Transform all nodes\n *\n * @param {Array<RootContent>} nodes\n *   hast content.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction all(nodes, state) {\n  let index = -1\n\n  /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n  if (nodes) {\n    while (++index < nodes.length) {\n      state.handle(nodes[index])\n    }\n  }\n}\n\n/**\n * Transform a root.\n *\n * @param {Root} node\n *   hast root node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction root(node, state) {\n  all(node.children, state)\n}\n\n/**\n * Transform an element.\n *\n * @param {Element} node\n *   hast element node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction element(node, state) {\n  startTag(node, state)\n\n  all(node.children, state)\n\n  endTag(node, state)\n}\n\n/**\n * Transform a text.\n *\n * @param {Text} node\n *   hast text node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction text(node, state) {\n  /** @type {CharacterToken} */\n  const token = {\n    type: Token.TokenType.CHARACTER,\n    chars: node.value,\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a doctype.\n *\n * @param {Doctype} node\n *   hast doctype node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction doctype(node, state) {\n  /** @type {DoctypeToken} */\n  const token = {\n    type: Token.TokenType.DOCTYPE,\n    name: 'html',\n    forceQuirks: false,\n    publicId: '',\n    systemId: '',\n    location: createParse5Location(node)\n  }\n\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a stitch.\n *\n * @param {Nodes} node\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction stitch(node, state) {\n  // Mark that there are stitches, so we need to walk the tree and revert them.\n  state.stitches = true\n\n  /** @type {Nodes} */\n  const clone = cloneWithoutChildren(node)\n\n  // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n  // passed through node).\n  if ('children' in node && 'children' in clone) {\n    // Root in root out.\n    const fakeRoot = /** @type {Root} */ (\n      raw({type: 'root', children: node.children}, state.options)\n    )\n    clone.children = fakeRoot.children\n  }\n\n  // Hack: `value` is supposed to be a string, but as none of the tools\n  // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n  // through.\n  comment({type: 'comment', value: {stitch: clone}}, state)\n}\n\n/**\n * Transform a comment (or stitch).\n *\n * @param {Comment | Stitch} node\n *   hast comment node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction comment(node, state) {\n  /** @type {string} */\n  // @ts-expect-error: we pass stitches through.\n  const data = node.value\n\n  /** @type {CommentToken} */\n  const token = {\n    type: Token.TokenType.COMMENT,\n    data,\n    location: createParse5Location(node)\n  }\n  resetTokenizer(state, pointStart(node))\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = token\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n}\n\n/**\n * Transform a raw node.\n *\n * @param {Raw} node\n *   hast raw node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction handleRaw(node, state) {\n  // Reset preprocessor:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/preprocessor.ts#L18-L31>.\n  state.parser.tokenizer.preprocessor.html = ''\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.pos = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastGapPos = -2\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.gapStack = []\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.skipNextNewLine = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.lastChunkWritten = false\n  state.parser.tokenizer.preprocessor.endOfChunkHit = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.preprocessor.isEol = false\n\n  // Now pass `node.value`.\n  setPoint(state, pointStart(node))\n  state.parser.tokenizer.write(node.value, false)\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer._runParsingLoop()\n\n  // Character references hang, so if we ended there, we need to flush\n  // those too.\n  // We reset the preprocessor as if the document ends here.\n  // Then one single call to the relevant state does the trick, parse5\n  // consumes the whole token.\n\n  // Note: `State` is not exposed by `parse5`, so these numbers are fragile.\n  // See: <https://github.com/inikulin/parse5/blob/46cba43/packages/parse5/lib/tokenizer/index.ts#L58>\n  // Note: a change to `parse5`, which breaks this, was merged but not released.\n  // Investigate when it is.\n  if (\n    state.parser.tokenizer.state === 72 /* NAMED_CHARACTER_REFERENCE */ ||\n    state.parser.tokenizer.state === 78 /* NUMERIC_CHARACTER_REFERENCE_END */\n  ) {\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lastChunkWritten = true\n    /** @type {number} */\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    const cp = state.parser.tokenizer._consume()\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer._callState(cp)\n  }\n}\n\n/**\n * Crash on an unknown node.\n *\n * @param {unknown} node_\n *   unknown node.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Never.\n */\nfunction unknown(node_, state) {\n  const node = /** @type {Nodes} */ (node_)\n\n  if (\n    state.options.passThrough &&\n    state.options.passThrough.includes(node.type)\n  ) {\n    stitch(node, state)\n  } else {\n    let extra = ''\n\n    if (knownMdxNames.has(node.type)) {\n      extra =\n        \". It looks like you are using MDX nodes with `hast-util-raw` (or `rehype-raw`). If you use this because you are using remark or rehype plugins that inject `'html'` nodes, then please raise an issue with that plugin, as its a bad and slow idea. If you use this because you are using markdown syntax, then you have to configure this utility (or plugin) to pass through these nodes (see `passThrough` in docs), but you can also migrate to use the MDX syntax\"\n    }\n\n    throw new Error('Cannot compile `' + node.type + '` node' + extra)\n  }\n}\n\n/**\n * Reset the tokenizer of a parser.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction resetTokenizer(state, point) {\n  setPoint(state, point)\n\n  // Process final characters if they’re still there after hibernating.\n  /** @type {CharacterToken} */\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  const token = state.parser.tokenizer.currentCharacterToken\n\n  if (token && token.location) {\n    token.location.endLine = state.parser.tokenizer.preprocessor.line\n    token.location.endCol = state.parser.tokenizer.preprocessor.col + 1\n    token.location.endOffset = state.parser.tokenizer.preprocessor.offset + 1\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.currentToken = token\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser._processToken(state.parser.currentToken)\n  }\n\n  // Reset tokenizer:\n  // See: <https://github.com/inikulin/parse5/blob/6f7ca60/packages/parse5/lib/tokenizer/index.ts#L187-L223>.\n  // Especially putting it back in the `data` state is useful: some elements,\n  // like textareas and iframes, change the state.\n  // See GH-7.\n  // But also if broken HTML is in `raw`, and then a correct element is given.\n  // See GH-11.\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.paused = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.inLoop = false\n\n  // Note: don’t reset `state`, `inForeignNode`, or `lastStartTagName`, we\n  // manually update those when needed.\n  state.parser.tokenizer.active = false\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.returnState = TokenizerMode.DATA\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.charRefCode = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.consumedAfterSnapshot = -1\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentLocation = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentCharacterToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentToken = null\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.tokenizer.currentAttr = {name: '', value: ''}\n}\n\n/**\n * Set current location.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Point | undefined} point\n *   Point.\n * @returns {undefined}\n *   Nothing.\n */\nfunction setPoint(state, point) {\n  if (point && point.offset !== undefined) {\n    /** @type {Location} */\n    const location = {\n      startLine: point.line,\n      startCol: point.column,\n      startOffset: point.offset,\n      endLine: -1,\n      endCol: -1,\n      endOffset: -1\n    }\n\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.preprocessor.lineStartPos = -point.column + 1 // Looks weird, but ensures we get correct positional info.\n    state.parser.tokenizer.preprocessor.droppedBufferSize = point.offset\n    state.parser.tokenizer.preprocessor.line = point.line\n    // @ts-expect-error: private.\n    // type-coverage:ignore-next-line\n    state.parser.tokenizer.currentLocation = location\n  }\n}\n\n/**\n * Emit a start tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction startTag(node, state) {\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointStart(node))\n\n  const current = state.parser.openElements.current\n  let ns = 'namespaceURI' in current ? current.namespaceURI : webNamespaces.html\n\n  if (ns === webNamespaces.html && node.tagName === 'svg') {\n    ns = webNamespaces.svg\n  }\n\n  const result = toParse5(\n    // Shallow clone to not delve into `children`: we only need the attributes.\n    {...node, children: []},\n    {space: ns === webNamespaces.svg ? 'svg' : 'html'}\n  )\n  // Always element.\n  /* c8 ignore next */\n  const attrs = 'attrs' in result ? result.attrs : []\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.START_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    // We always send start and end tags.\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs,\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Set a tag name, similar to how the tokenizer would do it.\n  state.parser.tokenizer.lastStartTagName = node.tagName\n\n  // `inForeignNode` is correctly set by the parser.\n}\n\n/**\n * Emit an end tag.\n *\n * @param {Element} node\n *   Element.\n * @param {State} state\n *   Info passed around about the current state.\n * @returns {undefined}\n *   Nothing.\n */\nfunction endTag(node, state) {\n  // Do not emit closing tags for HTML void elements.\n  if (\n    !state.parser.tokenizer.inForeignNode &&\n    htmlVoidElements.includes(node.tagName)\n  ) {\n    return\n  }\n\n  // Ignore tags if we’re in plain text.\n  if (state.parser.tokenizer.state === TokenizerMode.PLAINTEXT) return\n\n  resetTokenizer(state, pointEnd(node))\n\n  /** @type {TagToken} */\n  const tag = {\n    type: Token.TokenType.END_TAG,\n    tagName: node.tagName,\n    tagID: html.getTagID(node.tagName),\n    selfClosing: false,\n    ackSelfClosing: false,\n    attrs: [],\n    location: createParse5Location(node)\n  }\n\n  // The HTML parsing algorithm works by doing half of the state management in\n  // the tokenizer and half in the parser.\n  // We can’t use the tokenizer here, as we don’t have strings.\n  // So we act *as if* the tokenizer emits tokens:\n\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser.currentToken = tag\n  // @ts-expect-error: private.\n  // type-coverage:ignore-next-line\n  state.parser._processToken(state.parser.currentToken)\n\n  // …but then we still need a bunch of work that the tokenizer would normally\n  // do, such as:\n\n  // Switch back to the data state after alternative states that don’t accept\n  // tags:\n  if (\n    // Current element is closed.\n    tag.tagName === state.parser.tokenizer.lastStartTagName &&\n    // `<textarea>` and `<title>`\n    (state.parser.tokenizer.state === TokenizerMode.RCDATA ||\n      // `<iframe>`, `<noembed>`, `<style>`, `<xmp>`\n      state.parser.tokenizer.state === TokenizerMode.RAWTEXT ||\n      // `<script>`\n      state.parser.tokenizer.state === TokenizerMode.SCRIPT_DATA)\n  ) {\n    state.parser.tokenizer.state = TokenizerMode.DATA\n  }\n}\n\n/**\n * Check if `node` represents a whole document or a fragment.\n *\n * @param {Nodes} node\n *   hast node.\n * @returns {boolean}\n *   Whether this represents a whole document or a fragment.\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * Get a `parse5` location from a node.\n *\n * @param {Nodes | Stitch} node\n *   hast node.\n * @returns {Location}\n *   `parse5` location.\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n  const end = pointEnd(node) || {\n    line: undefined,\n    column: undefined,\n    offset: undefined\n  }\n\n  /** @type {Record<keyof Location, number | undefined>} */\n  const location = {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n\n  // @ts-expect-error: unist point values can be `undefined` in hast, which\n  // `parse5` types don’t want.\n  return location\n}\n\n/**\n * @template {Nodes} NodeType\n *   Node type.\n * @param {NodeType} node\n *   Node to clone.\n * @returns {NodeType}\n *   Cloned node, without children.\n */\nfunction cloneWithoutChildren(node) {\n  return 'children' in node\n    ? structuredClone({...node, children: []})\n    : structuredClone(node)\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} RawOptions\n * @typedef {import('vfile').VFile} VFile\n */\n\n/**\n * @typedef {Omit<RawOptions, 'file'>} Options\n *   Configuration.\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Parse the tree (and raw nodes) again, keeping positional info okay.\n *\n * @param {Options | null | undefined}  [options]\n *   Configuration (optional).\n * @returns\n *   Transform.\n */\nexport default function rehypeRaw(options) {\n  /**\n   * @param {Root} tree\n   *   Tree.\n   * @param {VFile} file\n   *   File.\n   * @returns {Root}\n   *   New tree.\n   */\n  return function (tree, file) {\n    // Assume root in -> root out.\n    const result = /** @type {Root} */ (raw(tree, {...options, file}))\n    return result\n  }\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef {import('mdast').Nodes} Nodes\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Text} Text\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * @typedef RegExpMatchObject\n *   Info on the match.\n * @property {number} index\n *   The index of the search at which the result was found.\n * @property {string} input\n *   A copy of the search string in the text node.\n * @property {[...Array<Parents>, Text]} stack\n *   All ancestors of the text node, where the last node is the text itself.\n *\n * @typedef {RegExp | string} Find\n *   Pattern to find.\n *\n *   Strings are escaped and then turned into global expressions.\n *\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *   Several find and replaces, in array form.\n *\n * @typedef {[Find, Replace?]} FindAndReplaceTuple\n *   Find and replace in tuple form.\n *\n * @typedef {ReplaceFunction | string | null | undefined} Replace\n *   Thing to replace with.\n *\n * @callback ReplaceFunction\n *   Callback called when a search matches.\n * @param {...any} parameters\n *   The parameters are the result of corresponding search expression:\n *\n *   * `value` (`string`) — whole match\n *   * `...capture` (`Array<string>`) — matches from regex capture groups\n *   * `match` (`RegExpMatchObject`) — info on the match\n * @returns {Array<PhrasingContent> | PhrasingContent | string | false | null | undefined}\n *   Thing to replace with.\n *\n *   * when `null`, `undefined`, `''`, remove the match\n *   * …or when `false`, do not replace at all\n *   * …or when `string`, replace with a text node of that value\n *   * …or when `Node` or `Array<Node>`, replace with those nodes\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n *   Normalized find and replace.\n *\n * @typedef {Array<Pair>} Pairs\n *   All find and replaced.\n *\n * @typedef Options\n *   Configuration.\n * @property {Test | null | undefined} [ignore]\n *   Test for which nodes to ignore (optional).\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\n/**\n * Find patterns in a tree and replace them.\n *\n * The algorithm searches the tree in *preorder* for complete values in `Text`\n * nodes.\n * Partial matches are not supported.\n *\n * @param {Nodes} tree\n *   Tree to change.\n * @param {FindAndReplaceList | FindAndReplaceTuple} list\n *   Patterns to find.\n * @param {Options | null | undefined} [options]\n *   Configuration (when `find` is not `Find`).\n * @returns {undefined}\n *   Nothing.\n */\nexport function findAndReplace(tree, list, options) {\n  const settings = options || {}\n  const ignored = convert(settings.ignore || [])\n  const pairs = toPairs(list)\n  let pairIndex = -1\n\n  while (++pairIndex < pairs.length) {\n    visitParents(tree, 'text', visitor)\n  }\n\n  /** @type {import('unist-util-visit-parents').BuildVisitor<Root, 'text'>} */\n  function visitor(node, parents) {\n    let index = -1\n    /** @type {Parents | undefined} */\n    let grandparent\n\n    while (++index < parents.length) {\n      const parent = parents[index]\n      /** @type {Array<Nodes> | undefined} */\n      const siblings = grandparent ? grandparent.children : undefined\n\n      if (\n        ignored(\n          parent,\n          siblings ? siblings.indexOf(parent) : undefined,\n          grandparent\n        )\n      ) {\n        return\n      }\n\n      grandparent = parent\n    }\n\n    if (grandparent) {\n      return handler(node, parents)\n    }\n  }\n\n  /**\n   * Handle a text node which is not in an ignored parent.\n   *\n   * @param {Text} node\n   *   Text node.\n   * @param {Array<Parents>} parents\n   *   Parents.\n   * @returns {VisitorResult}\n   *   Result.\n   */\n  function handler(node, parents) {\n    const parent = parents[parents.length - 1]\n    const find = pairs[pairIndex][0]\n    const replace = pairs[pairIndex][1]\n    let start = 0\n    /** @type {Array<Nodes>} */\n    const siblings = parent.children\n    const index = siblings.indexOf(node)\n    let change = false\n    /** @type {Array<PhrasingContent>} */\n    let nodes = []\n\n    find.lastIndex = 0\n\n    let match = find.exec(node.value)\n\n    while (match) {\n      const position = match.index\n      /** @type {RegExpMatchObject} */\n      const matchObject = {\n        index: match.index,\n        input: match.input,\n        stack: [...parents, node]\n      }\n      let value = replace(...match, matchObject)\n\n      if (typeof value === 'string') {\n        value = value.length > 0 ? {type: 'text', value} : undefined\n      }\n\n      // It wasn’t a match after all.\n      if (value === false) {\n        // False acts as if there was no match.\n        // So we need to reset `lastIndex`, which currently being at the end of\n        // the current match, to the beginning.\n        find.lastIndex = position + 1\n      } else {\n        if (start !== position) {\n          nodes.push({\n            type: 'text',\n            value: node.value.slice(start, position)\n          })\n        }\n\n        if (Array.isArray(value)) {\n          nodes.push(...value)\n        } else if (value) {\n          nodes.push(value)\n        }\n\n        start = position + match[0].length\n        change = true\n      }\n\n      if (!find.global) {\n        break\n      }\n\n      match = find.exec(node.value)\n    }\n\n    if (change) {\n      if (start < node.value.length) {\n        nodes.push({type: 'text', value: node.value.slice(start)})\n      }\n\n      parent.children.splice(index, 1, ...nodes)\n    } else {\n      nodes = [node]\n    }\n\n    return index + nodes.length\n  }\n}\n\n/**\n * Turn a tuple or a list of tuples into pairs.\n *\n * @param {FindAndReplaceList | FindAndReplaceTuple} tupleOrList\n *   Schema.\n * @returns {Pairs}\n *   Clean pairs.\n */\nfunction toPairs(tupleOrList) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (!Array.isArray(tupleOrList)) {\n    throw new TypeError('Expected find and replace tuple or list of tuples')\n  }\n\n  /** @type {FindAndReplaceList} */\n  // @ts-expect-error: correct.\n  const list =\n    !tupleOrList[0] || Array.isArray(tupleOrList[0])\n      ? tupleOrList\n      : [tupleOrList]\n\n  let index = -1\n\n  while (++index < list.length) {\n    const tuple = list[index]\n    result.push([toExpression(tuple[0]), toFunction(tuple[1])])\n  }\n\n  return result\n}\n\n/**\n * Turn a find into an expression.\n *\n * @param {Find} find\n *   Find.\n * @returns {RegExp}\n *   Expression.\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * Turn a replace into a function.\n *\n * @param {Replace} replace\n *   Replace.\n * @returns {ReplaceFunction}\n *   Function.\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function'\n    ? replace\n    : function () {\n        return replace\n      }\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n */\n\nimport {ccount} from 'ccount'\nimport {ok as assert} from 'devlop'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\n\n/** @type {ConstructName} */\nconst inConstruct = 'phrasing'\n/** @type {Array<ConstructName>} */\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralFromMarkdown() {\n  return {\n    transforms: [transformGfmAutolinkLiterals],\n    enter: {\n      literalAutolink: enterLiteralAutolink,\n      literalAutolinkEmail: enterLiteralAutolinkValue,\n      literalAutolinkHttp: enterLiteralAutolinkValue,\n      literalAutolinkWww: enterLiteralAutolinkValue\n    },\n    exit: {\n      literalAutolink: exitLiteralAutolink,\n      literalAutolinkEmail: exitLiteralAutolinkEmail,\n      literalAutolinkHttp: exitLiteralAutolinkHttp,\n      literalAutolinkWww: exitLiteralAutolinkWww\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM autolink\n * literals in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM autolink literals.\n */\nexport function gfmAutolinkLiteralToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '@',\n        before: '[+\\\\-.\\\\w]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: '.',\n        before: '[Ww]',\n        after: '[\\\\-.\\\\w]',\n        inConstruct,\n        notInConstruct\n      },\n      {\n        character: ':',\n        before: '[ps]',\n        after: '\\\\/',\n        inConstruct,\n        notInConstruct\n      }\n    ]\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'link')\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n * @returns {Array<PhrasingContent> | Link | false}\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {Link} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n * @returns {Link | false}\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[-\\d_]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string | undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n\n  if (!trailExec) {\n    return [url, undefined]\n  }\n\n  url = url.slice(0, trailExec.index)\n\n  let trail = trailExec[0]\n  let closingParenIndex = trail.indexOf(')')\n  const openingParens = ccount(url, '(')\n  let closingParens = ccount(url, ')')\n\n  while (closingParenIndex !== -1 && openingParens > closingParens) {\n    url += trail.slice(0, closingParenIndex + 1)\n    trail = trail.slice(closingParenIndex + 1)\n    closingParenIndex = trail.indexOf(')')\n    closingParens++\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean | null | undefined} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\nimport {ok as assert} from 'devlop'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\n\nfootnoteReference.peek = footnoteReferencePeek\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown`.\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM footnotes\n * in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown`.\n */\nexport function gfmFootnoteToMarkdown() {\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinition(token) {\n  this.enter(\n    {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n    token\n  )\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteDefinitionLabelString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinitionLabelString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteDefinition')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteDefinition(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCall(token) {\n  this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterFootnoteCallString() {\n  this.buffer()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCallString(token) {\n  const label = this.resume()\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'footnoteReference')\n  node.label = label\n  node.identifier = normalizeIdentifier(\n    this.sliceSerialize(token)\n  ).toLowerCase()\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitFootnoteCall(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteReference} node\n */\nfunction footnoteReference(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteReference')\n  const subexit = state.enter('reference')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  exit()\n  value += tracker.move(']')\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction footnoteReferencePeek() {\n  return '['\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {FootnoteDefinition} node\n */\nfunction footnoteDefinition(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[^')\n  const exit = state.enter('footnoteDefinition')\n  const subexit = state.enter('label')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      ...tracker.current(),\n      before: value,\n      after: ']'\n    })\n  )\n  subexit()\n  value += tracker.move(\n    ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n  )\n  tracker.shift(4)\n  value += tracker.move(\n    state.indentLines(state.containerFlow(node, tracker.current()), map)\n  )\n  exit()\n\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, index, blank) {\n  if (index === 0) {\n    return line\n  }\n\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').ConstructName} ConstructName\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain strikethrough.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * Note: keep in sync with: <https://github.com/syntax-tree/mdast-util-to-markdown/blob/8ce8dbf/lib/unsafe.js#L14>\n *\n * @type {Array<ConstructName>}\n */\nconst constructsWithoutStrikethrough = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\nhandleDelete.peek = peekDelete\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughFromMarkdown() {\n  return {\n    canContainEols: ['delete'],\n    enter: {strikethrough: enterStrikethrough},\n    exit: {strikethrough: exitStrikethrough}\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM\n * strikethrough in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM strikethrough.\n */\nexport function gfmStrikethroughToMarkdown() {\n  return {\n    unsafe: [\n      {\n        character: '~',\n        inConstruct: 'phrasing',\n        notInConstruct: constructsWithoutStrikethrough\n      }\n    ],\n    handlers: {delete: handleDelete}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, state, info) {\n  const tracker = state.createTracker(info)\n  const exit = state.enter('strikethrough')\n  let value = tracker.move('~~')\n  value += state.containerPhrasing(node, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|ReadonlyArray<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {ReadonlyArray<ReadonlyArray<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').ConstructName} ConstructName\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {Html} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').State} State\n */\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = state.compilePattern(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Exit} Exit\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Html} Html\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * > 👉 **Note**: Excludes `html`, which can be both phrasing or flow.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\n\nexport const phrasing =\n  /** @type {(node?: unknown) => node is Exclude<PhrasingContent, Html>} */\n  (\n    convert([\n      'break',\n      'delete',\n      'emphasis',\n      // To do: next major: removed since footnotes were added to GFM.\n      'footnote',\n      'footnoteReference',\n      'image',\n      'imageReference',\n      'inlineCode',\n      // Enabled by `mdast-util-math`:\n      'inlineMath',\n      'link',\n      'linkReference',\n      // Enabled by `mdast-util-mdx`:\n      'mdxJsxTextElement',\n      // Enabled by `mdast-util-mdx`:\n      'mdxTextExpression',\n      'strong',\n      'text',\n      // Enabled by `mdast-util-directive`:\n      'textDirective'\n    ])\n  )\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    state.options.fences === false &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {EXIT, visit} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, function (node) {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? bullet === '.'\n      ? ')'\n      : '.'\n    : checkBulletOther(state)\n  let useDifferentMarker =\n    parent && state.bulletLastUsed ? bullet === state.bulletLastUsed : false\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parents | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'one'\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some(function (d) {\n    return phrasing(d)\n  })\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Text} node\n * @param {Parents | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').Parents} Parents\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parents | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').TableRow} TableRow\n *\n * @typedef {import('markdown-table').Options} MarkdownTableOptions\n *\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n *\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').State} State\n * @typedef {import('mdast-util-to-markdown').Info} Info\n */\n\n/**\n * @typedef Options\n *   Configuration.\n * @property {boolean | null | undefined} [tableCellPadding=true]\n *   Whether to add a space of padding between delimiters and cells (default:\n *   `true`).\n * @property {boolean | null | undefined} [tablePipeAlign=true]\n *   Whether to align the delimiters (default: `true`).\n * @property {MarkdownTableOptions['stringLength'] | null | undefined} [stringLength]\n *   Function to detect the length of table cell content, used when aligning\n *   the delimiters between cells (optional).\n */\n\nimport {ok as assert} from 'devlop'\nimport {markdownTable} from 'markdown-table'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM tables in\n * markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM tables.\n */\nexport function gfmTableFromMarkdown() {\n  return {\n    enter: {\n      table: enterTable,\n      tableData: enterCell,\n      tableHeader: enterCell,\n      tableRow: enterRow\n    },\n    exit: {\n      codeText: exitCodeText,\n      table: exitTable,\n      tableData: exit,\n      tableHeader: exit,\n      tableRow: exit\n    }\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterTable(token) {\n  const align = token._align\n  assert(align, 'expected `_align` on table')\n  this.enter(\n    {\n      type: 'table',\n      align: align.map(function (d) {\n        return d === 'none' ? null : d\n      }),\n      children: []\n    },\n    token\n  )\n  this.data.inTable = true\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitTable(token) {\n  this.exit(token)\n  this.data.inTable = undefined\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.data.inTable) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = this.stack[this.stack.length - 1]\n  assert(node.type === 'inlineCode')\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM tables in\n * markdown.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM tables.\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      inlineCode: inlineCodeWithTable,\n      table: handleTable,\n      tableCell: handleTableCell,\n      tableRow: handleTableRow\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, state, info) {\n    return serializeData(handleTableAsData(node, state, info), node.align)\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, state, info) {\n    const row = handleTableRowAsData(node, state, info)\n    const value = serializeData([row])\n    // `markdown-table` will always add an align row\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, state, info) {\n    const exit = state.enter('tableCell')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...info,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string | null | undefined> | null | undefined} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      alignDelimiters,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      padding,\n      // @ts-expect-error: `markdown-table` types should support `null`.\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = state.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(children[index], state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {State} state\n   * @param {Info} info\n   */\n  function handleTableRowAsData(node, state, info) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = state.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(children[index], node, state, info)\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, state) {\n    let value = defaultHandlers.inlineCode(node, parent, state)\n\n    if (state.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast-util-from-markdown').CompileContext} CompileContext\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {ok as assert} from 'devlop'\nimport {defaultHandlers} from 'mdast-util-to-markdown'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM task\n * list items in markdown.\n *\n * @returns {FromMarkdownExtension}\n *   Extension for `mdast-util-from-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemFromMarkdown() {\n  return {\n    exit: {\n      taskListCheckValueChecked: exitCheck,\n      taskListCheckValueUnchecked: exitCheck,\n      paragraph: exitParagraphWithTaskListItem\n    }\n  }\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM task list\n * items in markdown.\n *\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM task list items.\n */\nexport function gfmTaskListItemToMarkdown() {\n  return {\n    unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n    handlers: {listItem: listItemWithTaskListItem}\n  }\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitCheck(token) {\n  // We’re always in a paragraph, in a list item.\n  const node = this.stack[this.stack.length - 2]\n  assert(node.type === 'listItem')\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/**\n * @this {CompileContext}\n * @type {FromMarkdownHandle}\n */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = this.stack[this.stack.length - 2]\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean'\n  ) {\n    const node = this.stack[this.stack.length - 1]\n    assert(node.type === 'paragraph')\n    const head = node.children[0]\n\n    if (head && head.type === 'text') {\n      const siblings = parent.children\n      let index = -1\n      /** @type {Paragraph | undefined} */\n      let firstParaghraph\n\n      while (++index < siblings.length) {\n        const sibling = siblings[index]\n        if (sibling.type === 'paragraph') {\n          firstParaghraph = sibling\n          break\n        }\n      }\n\n      if (firstParaghraph === node) {\n        // Must start with a space or a tab.\n        head.value = head.value.slice(1)\n\n        if (head.value.length === 0) {\n          node.children.shift()\n        } else if (\n          node.position &&\n          head.position &&\n          typeof head.position.start.offset === 'number'\n        ) {\n          head.position.start.column++\n          head.position.start.offset++\n          node.position.start = Object.assign({}, head.position.start)\n        }\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, state, info) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = state.createTracker(info)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = defaultHandlers.listItem(node, parent, state, {\n    ...info,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst wwwPrefix = {\n  tokenize: tokenizeWwwPrefix,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst trail = {\n  tokenize: tokenizeTrail,\n  partial: true\n}\nconst emailDomainDotTrail = {\n  tokenize: tokenizeEmailDomainDotTrail,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst protocolAutolink = {\n  tokenize: tokenizeProtocolAutolink,\n  previous: previousProtocol\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n\n/** @type {ConstructRecord} */\nconst text = {}\n\n/**\n * Create an extension for `micromark` to support GitHub autolink literal\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   autolink literal syntax.\n */\nexport function gfmAutolinkLiteral() {\n  return {\n    text\n  }\n}\n\n/** @type {Code} */\nlet code = 48\n\n// Add alphanumerics.\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, protocolAutolink]\ntext[104] = [emailAutolink, protocolAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n\n// To do: perform email autolink literals on events, afterwards.\n// That’s where `markdown-rs` and `cmark-gfm` perform it.\n// It should look for `@`, then for atext backwards, and then for a label\n// forwards.\n// To do: `mailto:`, `xmpp:` protocol as prefix.\n\n/**\n * Email autolink literal.\n *\n * ```markdown\n * > | a contact@example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean | undefined} */\n  let dot\n  /** @type {boolean} */\n  let data\n  return start\n\n  /**\n   * Start of email autolink literal.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n\n  /**\n   * In email atext.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n    if (code === 64) {\n      effects.consume(code)\n      return emailDomain\n    }\n    return nok(code)\n  }\n\n  /**\n   * In email domain.\n   *\n   * The reference code is a bit overly complex as it handles the `@`, of which\n   * there may be just one.\n   * Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L318>\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *               ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomain(code) {\n    // Dot followed by alphanumerical (not `-` or `_`).\n    if (code === 46) {\n      return effects.check(\n        emailDomainDotTrail,\n        emailDomainAfter,\n        emailDomainDot\n      )(code)\n    }\n\n    // Alphanumerical, `-`, and `_`.\n    if (code === 45 || code === 95 || asciiAlphanumeric(code)) {\n      data = true\n      effects.consume(code)\n      return emailDomain\n    }\n\n    // To do: `/` if xmpp.\n\n    // Note: normally we’d truncate trailing punctuation from the link.\n    // However, email autolink literals cannot contain any of those markers,\n    // except for `.`, but that can only occur if it isn’t trailing.\n    // So we can ignore truncating!\n    return emailDomainAfter(code)\n  }\n\n  /**\n   * In email domain, on dot that is not a trail.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainDot(code) {\n    effects.consume(code)\n    dot = true\n    return emailDomain\n  }\n\n  /**\n   * After email domain.\n   *\n   * ```markdown\n   * > | a contact@example.org b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function emailDomainAfter(code) {\n    // Domain must not be empty, must include a dot, and must end in alphabetical.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L332>.\n    if (data && dot && asciiAlpha(self.previous)) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n    return nok(code)\n  }\n}\n\n/**\n * `www` autolink literal.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return wwwStart\n\n  /**\n   * Start of www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwStart(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww.call(self, self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww')\n    // Note: we *check*, so we can discard the `www.` we parsed.\n    // If it worked, we consider it as a part of the domain.\n    return effects.check(\n      wwwPrefix,\n      effects.attempt(domain, effects.attempt(path, wwwAfter), nok),\n      nok\n    )(code)\n  }\n\n  /**\n   * After a www autolink literal.\n   *\n   * ```markdown\n   * > | www.example.com/a?b#c\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwAfter(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * Protocol autolink literal.\n *\n * ```markdown\n * > | a https://example.org b\n *       ^^^^^^^^^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeProtocolAutolink(effects, ok, nok) {\n  const self = this\n  let buffer = ''\n  let seen = false\n  return protocolStart\n\n  /**\n   * Start of protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolStart(code) {\n    if (\n      (code === 72 || code === 104) &&\n      previousProtocol.call(self, self.previous) &&\n      !previousUnbalanced(self.events)\n    ) {\n      effects.enter('literalAutolink')\n      effects.enter('literalAutolinkHttp')\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In protocol.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *     ^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolPrefixInside(code) {\n    // `5` is size of `https`\n    if (asciiAlpha(code) && buffer.length < 5) {\n      // @ts-expect-error: definitely number.\n      buffer += String.fromCodePoint(code)\n      effects.consume(code)\n      return protocolPrefixInside\n    }\n    if (code === 58) {\n      const protocol = buffer.toLowerCase()\n      if (protocol === 'http' || protocol === 'https') {\n        effects.consume(code)\n        return protocolSlashesInside\n      }\n    }\n    return nok(code)\n  }\n\n  /**\n   * In slashes.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *           ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolSlashesInside(code) {\n    if (code === 47) {\n      effects.consume(code)\n      if (seen) {\n        return afterProtocol\n      }\n      seen = true\n      return protocolSlashesInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * After protocol, before domain.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *             ^\n   * ```\n   *\n   * @type {State}\n   */\n  function afterProtocol(code) {\n    // To do: this is different from `markdown-rs`:\n    // https://github.com/wooorm/markdown-rs/blob/b3a921c761309ae00a51fe348d8a43adbc54b518/src/construct/gfm_autolink_literal.rs#L172-L182\n    return code === null ||\n      asciiControl(code) ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, protocolAfter), nok)(code)\n  }\n\n  /**\n   * After a protocol autolink literal.\n   *\n   * ```markdown\n   * > | https://example.com/a?b#c\n   *                              ^\n   * ```\n   *\n   * @type {State}\n   */\n  function protocolAfter(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n\n/**\n * `www` prefix.\n *\n * ```markdown\n * > | a www.example.org b\n *       ^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeWwwPrefix(effects, ok, nok) {\n  let size = 0\n  return wwwPrefixInside\n\n  /**\n   * In www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *     ^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixInside(code) {\n    if ((code === 87 || code === 119) && size < 3) {\n      size++\n      effects.consume(code)\n      return wwwPrefixInside\n    }\n    if (code === 46 && size === 3) {\n      effects.consume(code)\n      return wwwPrefixAfter\n    }\n    return nok(code)\n  }\n\n  /**\n   * After www prefix.\n   *\n   * ```markdown\n   * > | www.example.com\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function wwwPrefixAfter(code) {\n    // If there is *anything*, we can link.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n\n/**\n * Domain.\n *\n * ```markdown\n * > | a https://example.org b\n *               ^^^^^^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean | undefined} */\n  let underscoreInLastSegment\n  /** @type {boolean | undefined} */\n  let underscoreInLastLastSegment\n  /** @type {boolean | undefined} */\n  let seen\n  return domainInside\n\n  /**\n   * In domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *             ^^^^^^^^^^^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainInside(code) {\n    // Check whether this marker, which is a trailing punctuation\n    // marker, optionally followed by more trailing markers, and then\n    // followed by an end.\n    if (code === 46 || code === 95) {\n      return effects.check(trail, domainAfter, domainAtPunctuation)(code)\n    }\n\n    // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n    // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L12>.\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return domainAfter(code)\n    }\n    seen = true\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * In domain, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com\n   *                    ^\n   * ```\n   *\n   * @type {State}\n   */\n  function domainAtPunctuation(code) {\n    // There is an underscore in the last segment of the domain\n    if (code === 95) {\n      underscoreInLastSegment = true\n    }\n    // Otherwise, it’s a `.`: save the last segment underscore in the\n    // penultimate segment slot.\n    else {\n      underscoreInLastLastSegment = underscoreInLastSegment\n      underscoreInLastSegment = undefined\n    }\n    effects.consume(code)\n    return domainInside\n  }\n\n  /**\n   * After domain.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^\n   * ```\n   *\n   * @type {State} */\n  function domainAfter(code) {\n    // Note: that’s GH says a dot is needed, but it’s not true:\n    // <https://github.com/github/cmark-gfm/issues/279>\n    if (underscoreInLastLastSegment || underscoreInLastSegment || !seen) {\n      return nok(code)\n    }\n    return ok(code)\n  }\n}\n\n/**\n * Path.\n *\n * ```markdown\n * > | a https://example.org/stuff b\n *                          ^^^^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePath(effects, ok) {\n  let sizeOpen = 0\n  let sizeClose = 0\n  return pathInside\n\n  /**\n   * In path.\n   *\n   * ```markdown\n   * > | https://example.com/a\n   *                        ^^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathInside(code) {\n    if (code === 40) {\n      sizeOpen++\n      effects.consume(code)\n      return pathInside\n    }\n\n    // To do: `markdown-rs` also needs this.\n    // If this is a paren, and there are less closings than openings,\n    // we don’t check for a trail.\n    if (code === 41 && sizeClose < sizeOpen) {\n      return pathAtPunctuation(code)\n    }\n\n    // Check whether this trailing punctuation marker is optionally\n    // followed by more trailing markers, and then followed\n    // by an end.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 38 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 60 ||\n      code === 63 ||\n      code === 93 ||\n      code === 95 ||\n      code === 126\n    ) {\n      return effects.check(trail, ok, pathAtPunctuation)(code)\n    }\n    if (\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    effects.consume(code)\n    return pathInside\n  }\n\n  /**\n   * In path, at potential trailing punctuation, that was not trailing.\n   *\n   * ```markdown\n   * > | https://example.com/a\"b\n   *                          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function pathAtPunctuation(code) {\n    // Count closing parens.\n    if (code === 41) {\n      sizeClose++\n    }\n    effects.consume(code)\n    return pathInside\n  }\n}\n\n/**\n * Trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the entire trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | https://example.com\").\n *                        ^^^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTrail(effects, ok, nok) {\n  return trail\n\n  /**\n   * In trail of domain or path.\n   *\n   * ```markdown\n   * > | https://example.com\").\n   *                        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trail(code) {\n    // Regular trailing punctuation.\n    if (\n      code === 33 ||\n      code === 34 ||\n      code === 39 ||\n      code === 41 ||\n      code === 42 ||\n      code === 44 ||\n      code === 46 ||\n      code === 58 ||\n      code === 59 ||\n      code === 63 ||\n      code === 95 ||\n      code === 126\n    ) {\n      effects.consume(code)\n      return trail\n    }\n\n    // `&` followed by one or more alphabeticals and then a `;`, is\n    // as a whole considered as trailing punctuation.\n    // In all other cases, it is considered as continuation of the URL.\n    if (code === 38) {\n      effects.consume(code)\n      return trailCharRefStart\n    }\n\n    // Needed because we allow literals after `[`, as we fix:\n    // <https://github.com/github/cmark-gfm/issues/278>.\n    // Check that it is not followed by `(` or `[`.\n    if (code === 93) {\n      effects.consume(code)\n      return trailBracketAfter\n    }\n    if (\n      // `<` is an end.\n      code === 60 ||\n      // So is whitespace.\n      code === null ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return nok(code)\n  }\n\n  /**\n   * In trail, after `]`.\n   *\n   * > 👉 **Note**: this deviates from `cmark-gfm` to fix a bug.\n   * > See end of <https://github.com/github/cmark-gfm/issues/278> for more.\n   *\n   * ```markdown\n   * > | https://example.com](\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailBracketAfter(code) {\n    // Whitespace or something that could start a resource or reference is the end.\n    // Switch back to trail otherwise.\n    if (\n      code === null ||\n      code === 40 ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code) ||\n      unicodeWhitespace(code)\n    ) {\n      return ok(code)\n    }\n    return trail(code)\n  }\n\n  /**\n   * In character-reference like trail, after `&`.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefStart(code) {\n    // When non-alpha, it’s not a trail.\n    return asciiAlpha(code) ? trailCharRefInside(code) : nok(code)\n  }\n\n  /**\n   * In character-reference like trail.\n   *\n   * ```markdown\n   * > | https://example.com&amp;).\n   *                         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function trailCharRefInside(code) {\n    // Switch back to trail if this is well-formed.\n    if (code === 59) {\n      effects.consume(code)\n      return trail\n    }\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return trailCharRefInside\n    }\n\n    // It’s not a trail.\n    return nok(code)\n  }\n}\n\n/**\n * Dot in email domain trail.\n *\n * This calls `ok` if this *is* the trail, followed by an end, which means\n * the trail is not part of the link.\n * It calls `nok` if this *is* part of the link.\n *\n * ```markdown\n * > | contact@example.org.\n *                        ^\n * ```\n *\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeEmailDomainDotTrail(effects, ok, nok) {\n  return start\n\n  /**\n   * Dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                    ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    // Must be dot.\n    effects.consume(code)\n    return after\n  }\n\n  /**\n   * After dot.\n   *\n   * ```markdown\n   * > | contact@example.org.\n   *                     ^   ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // Not a trail if alphanumeric.\n    return asciiAlphanumeric(code) ? nok(code) : ok(code)\n  }\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L156>.\n *\n * @type {Previous}\n */\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 91 ||\n    code === 93 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n\n/**\n * See:\n * <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L214>.\n *\n * @type {Previous}\n */\nfunction previousProtocol(code) {\n  return !asciiAlpha(code)\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Previous}\n */\nfunction previousEmail(code) {\n  // Do not allow a slash “inside” atext.\n  // The reference code is a bit weird, but that’s what it results in.\n  // Source: <https://github.com/github/cmark-gfm/blob/ef1cfcb/extensions/autolink.c#L307>.\n  // Other than slash, every preceding character is allowed.\n  return !(code === 47 || gfmAtext(code))\n}\n\n/**\n * @param {Code} code\n * @returns {boolean}\n */\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n  while (index--) {\n    const token = events[index][1]\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    }\n\n    // If we’ve seen this token, and it was marked as not having any unbalanced\n    // bracket before it, we can exit.\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n  if (events.length > 0 && !result) {\n    // Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\n// To do: micromark should support a `_hiddenGfmFootnoteSupport`, which only\n// affects label start (image).\n// That will let us drop `tokenizePotentialGfmFootnote*`.\n// It currently has a `_hiddenFootnoteSupport`, which affects that and more.\n// That can be removed when `micromark-extension-footnote` is archived.\n\n/**\n * Create an extension for `micromark` to enable GFM footnote syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to\n *   enable GFM footnote syntax.\n */\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n\n// To do: remove after micromark update.\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    const token = self.events[index][1]\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    }\n\n    // Exit if we’ve walked far enough.\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n  return start\n\n  /**\n   * @type {State}\n   */\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n    if (id.codePointAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n\n// To do: remove after micromark update.\n/** @type {Resolver} */\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token | undefined} */\n  let labelStart\n\n  // Find an opening.\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker'\n\n  // The whole (without `!`):\n  /** @type {Token} */\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  // The `^` marker\n  /** @type {Token} */\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  }\n  // Increment the end 1 character.\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  /** @type {Token} */\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  /** @type {Token} */\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n\n  /** @type {Array<Event>} */\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context],\n    // The `[`\n    events[index + 3],\n    events[index + 4],\n    // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context],\n    // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context],\n    // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n  let data\n\n  // Note: the implementation of `markdown-rs` is different, because it houses\n  // core *and* extensions in one project.\n  // Therefore, it can include footnote logic inside `label-end`.\n  // We can’t do that, but luckily, we can parse footnotes in a simpler way than\n  // needed for labels.\n  return start\n\n  /**\n   * Start of footnote label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n\n  /**\n   * After `[`, at `^`.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n\n  /**\n   * In label.\n   *\n   * ```markdown\n   * > | a [^b] c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callData(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteCallString')\n      if (!defined.includes(normalizeIdentifier(self.sliceSerialize(token)))) {\n        return nok(code)\n      }\n      effects.enter('gfmFootnoteCallLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteCallLabelMarker')\n      effects.exit('gfmFootnoteCall')\n      return ok\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? callEscape : callData\n  }\n\n  /**\n   * On character after escape.\n   *\n   * ```markdown\n   * > | a [^b\\c] d\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n    return callData(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n  let identifier\n  let size = 0\n  /** @type {boolean | undefined} */\n  let data\n  return start\n\n  /**\n   * Start of GFM footnote definition.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelAtMarker\n  }\n\n  /**\n   * In label, at caret.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAtMarker(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      effects.enter('chunkString').contentType = 'string'\n      return labelInside\n    }\n    return nok(code)\n  }\n\n  /**\n   * In label.\n   *\n   * > 👉 **Note**: `cmark-gfm` prevents whitespace from occurring in footnote\n   * > definition labels.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelInside(code) {\n    if (\n      // Too long.\n      size > 999 ||\n      // Closing brace with nothing.\n      (code === 93 && !data) ||\n      // Space or tab is not supported by GFM for some reason.\n      // `\\n` and `[` not being supported makes sense.\n      code === null ||\n      code === 91 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return nok(code)\n    }\n    if (code === 93) {\n      effects.exit('chunkString')\n      const token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : labelInside\n  }\n\n  /**\n   * After `\\`, at a special character.\n   *\n   * > 👉 **Note**: `cmark-gfm` currently does not support escaped brackets:\n   * > <https://github.com/github/cmark-gfm/issues/240>\n   *\n   * ```markdown\n   * > | [^a\\*b]: c\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return labelInside\n    }\n    return labelInside(code)\n  }\n\n  /**\n   * After definition label.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker')\n      if (!defined.includes(identifier)) {\n        defined.push(identifier)\n      }\n\n      // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n      return factorySpace(\n        effects,\n        whitespaceAfter,\n        'gfmFootnoteDefinitionWhitespace'\n      )\n    }\n    return nok(code)\n  }\n\n  /**\n   * After definition prefix.\n   *\n   * ```markdown\n   * > | [^a]: b\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function whitespaceAfter(code) {\n    // `markdown-rs` has a wrapping token for the prefix that is closed here.\n    return ok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  /// Start of footnote definition continuation.\n  ///\n  /// ```markdown\n  ///   | [^a]: b\n  /// > |     c\n  ///     ^\n  /// ```\n  //\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n\n/** @type {Exiter} */\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n\n  /**\n   * @type {State}\n   */\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (default: `true`).\n *\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\n\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n/**\n * Create an extension for `micromark` to enable GFM strikethrough syntax.\n *\n * @param {Options | null | undefined} [options={}]\n *   Configuration.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions`, to\n *   enable GFM strikethrough syntax.\n */\nexport function gfmStrikethrough(options) {\n  const options_ = options || {}\n  let single = options_.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n  if (single === null || single === undefined) {\n    single = true\n  }\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n  function resolveAllStrikethrough(events, context) {\n    let index = -1\n\n    // Walk through all events.\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index\n\n        // Now walk back to find an opener.\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open &&\n            // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n\n            /** @type {Token} */\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n\n            /** @type {Token} */\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            }\n\n            // Opening.\n            /** @type {Array<Event>} */\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ]\n            const insideSpan = context.parser.constructs.insideSpan.null\n            if (insideSpan) {\n              // Between.\n              splice(\n                nextEvents,\n                nextEvents.length,\n                0,\n                resolveAll(insideSpan, events.slice(open + 1, index), context)\n              )\n            }\n\n            // Closing.\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n    return events\n  }\n\n  /**\n   * @this {TokenizeContext}\n   * @type {Tokenizer}\n   */\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n\n    /** @type {State} */\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n\n    /** @type {State} */\n    function more(code) {\n      const before = classifyCharacter(previous)\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n// Port of `edit_map.rs` from `markdown-rs`.\n// This should move to `markdown-js` later.\n\n// Deal with several changes in events, batching them together.\n//\n// Preferably, changes should be kept to a minimum.\n// Sometimes, it’s needed to change the list of events, because parsing can be\n// messy, and it helps to expose a cleaner interface of events to the compiler\n// and other users.\n// It can also help to merge many adjacent similar events.\n// And, in other cases, it’s needed to parse subcontent: pass some events\n// through another tokenizer and inject the result.\n\n/**\n * @typedef {[number, number, Array<Event>]} Change\n * @typedef {[number, number, number]} Jump\n */\n\n/**\n * Tracks a bunch of edits.\n */\nexport class EditMap {\n  /**\n   * Create a new edit map.\n   */\n  constructor() {\n    /**\n     * Record of changes.\n     *\n     * @type {Array<Change>}\n     */\n    this.map = []\n  }\n\n  /**\n   * Create an edit: a remove and/or add at a certain place.\n   *\n   * @param {number} index\n   * @param {number} remove\n   * @param {Array<Event>} add\n   * @returns {undefined}\n   */\n  add(index, remove, add) {\n    addImpl(this, index, remove, add)\n  }\n\n  // To do: add this when moving to `micromark`.\n  // /**\n  //  * Create an edit: but insert `add` before existing additions.\n  //  *\n  //  * @param {number} index\n  //  * @param {number} remove\n  //  * @param {Array<Event>} add\n  //  * @returns {undefined}\n  //  */\n  // addBefore(index, remove, add) {\n  //   addImpl(this, index, remove, add, true)\n  // }\n\n  /**\n   * Done, change the events.\n   *\n   * @param {Array<Event>} events\n   * @returns {undefined}\n   */\n  consume(events) {\n    this.map.sort(function (a, b) {\n      return a[0] - b[0]\n    })\n\n    /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n    if (this.map.length === 0) {\n      return\n    }\n\n    // To do: if links are added in events, like they are in `markdown-rs`,\n    // this is needed.\n    // // Calculate jumps: where items in the current list move to.\n    // /** @type {Array<Jump>} */\n    // const jumps = []\n    // let index = 0\n    // let addAcc = 0\n    // let removeAcc = 0\n    // while (index < this.map.length) {\n    //   const [at, remove, add] = this.map[index]\n    //   removeAcc += remove\n    //   addAcc += add.length\n    //   jumps.push([at, removeAcc, addAcc])\n    //   index += 1\n    // }\n    //\n    // . shiftLinks(events, jumps)\n\n    let index = this.map.length\n    /** @type {Array<Array<Event>>} */\n    const vecs = []\n    while (index > 0) {\n      index -= 1\n      vecs.push(\n        events.slice(this.map[index][0] + this.map[index][1]),\n        this.map[index][2]\n      )\n\n      // Truncate rest.\n      events.length = this.map[index][0]\n    }\n    vecs.push([...events])\n    events.length = 0\n    let slice = vecs.pop()\n    while (slice) {\n      events.push(...slice)\n      slice = vecs.pop()\n    }\n\n    // Truncate everything.\n    this.map.length = 0\n  }\n}\n\n/**\n * Create an edit.\n *\n * @param {EditMap} editMap\n * @param {number} at\n * @param {number} remove\n * @param {Array<Event>} add\n * @returns {undefined}\n */\nfunction addImpl(editMap, at, remove, add) {\n  let index = 0\n\n  /* c8 ignore next 3 -- `resolve` is never called without tables, so without edits. */\n  if (remove === 0 && add.length === 0) {\n    return\n  }\n  while (index < editMap.map.length) {\n    if (editMap.map[index][0] === at) {\n      editMap.map[index][1] += remove\n\n      // To do: before not used by tables, use when moving to micromark.\n      // if (before) {\n      //   add.push(...editMap.map[index][2])\n      //   editMap.map[index][2] = add\n      // } else {\n      editMap.map[index][2].push(...add)\n      // }\n\n      return\n    }\n    index += 1\n  }\n  editMap.map.push([at, remove, add])\n}\n\n// /**\n//  * Shift `previous` and `next` links according to `jumps`.\n//  *\n//  * This fixes links in case there are events removed or added between them.\n//  *\n//  * @param {Array<Event>} events\n//  * @param {Array<Jump>} jumps\n//  */\n// function shiftLinks(events, jumps) {\n//   let jumpIndex = 0\n//   let index = 0\n//   let add = 0\n//   let rm = 0\n\n//   while (index < events.length) {\n//     const rmCurr = rm\n\n//     while (jumpIndex < jumps.length && jumps[jumpIndex][0] <= index) {\n//       add = jumps[jumpIndex][2]\n//       rm = jumps[jumpIndex][1]\n//       jumpIndex += 1\n//     }\n\n//     // Ignore items that will be removed.\n//     if (rm > rmCurr) {\n//       index += rm - rmCurr\n//     } else {\n//       // ?\n//       // if let Some(link) = &events[index].link {\n//       //     if let Some(next) = link.next {\n//       //         events[next].link.as_mut().unwrap().previous = Some(index + add - rm);\n//       //         while jumpIndex < jumps.len() && jumps[jumpIndex].0 <= next {\n//       //             add = jumps[jumpIndex].2;\n//       //             rm = jumps[jumpIndex].1;\n//       //             jumpIndex += 1;\n//       //         }\n//       //         events[index].link.as_mut().unwrap().next = Some(next + add - rm);\n//       //         index = next;\n//       //         continue;\n//       //     }\n//       // }\n//       index += 1\n//     }\n//   }\n// }\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef {'center' | 'left' | 'none' | 'right'} Align\n */\n\n/**\n * Figure out the alignment of a GFM table.\n *\n * @param {Readonly<Array<Event>>} events\n *   List of events.\n * @param {number} index\n *   Table enter event.\n * @returns {Array<Align>}\n *   List of aligns.\n */\nexport function gfmTableAlign(events, index) {\n  let inDelimiterRow = false\n  /** @type {Array<Align>} */\n  const align = []\n  while (index < events.length) {\n    const event = events[index]\n    if (inDelimiterRow) {\n      if (event[0] === 'enter') {\n        // Start of alignment value: set a new column.\n        // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n        if (event[1].type === 'tableContent') {\n          align.push(\n            events[index + 1][1].type === 'tableDelimiterMarker'\n              ? 'left'\n              : 'none'\n          )\n        }\n      }\n      // Exits:\n      // End of alignment value: change the column.\n      // To do: `markdown-rs` uses `tableDelimiterCellValue`.\n      else if (event[1].type === 'tableContent') {\n        if (events[index - 1][1].type === 'tableDelimiterMarker') {\n          const alignIndex = align.length - 1\n          align[alignIndex] = align[alignIndex] === 'left' ? 'center' : 'right'\n        }\n      }\n      // Done!\n      else if (event[1].type === 'tableDelimiterRow') {\n        break\n      }\n    } else if (event[0] === 'enter' && event[1].type === 'tableDelimiterRow') {\n      inDelimiterRow = true\n    }\n    index += 1\n  }\n  return align\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\n/**\n * @typedef {[number, number, number, number]} Range\n *   Cell info.\n *\n * @typedef {0 | 1 | 2 | 3} RowKind\n *   Where we are: `1` for head row, `2` for delimiter row, `3` for body row.\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {EditMap} from './edit-map.js'\nimport {gfmTableAlign} from './infer.js'\n\n/**\n * Create an HTML extension for `micromark` to support GitHub tables syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   table syntax.\n */\nexport function gfmTable() {\n  return {\n    flow: {\n      null: {\n        tokenize: tokenizeTable,\n        resolveAll: resolveTable\n      }\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  let size = 0\n  let sizeB = 0\n  /** @type {boolean | undefined} */\n  let seen\n  return start\n\n  /**\n   * Start of a GFM table.\n   *\n   * If there is a valid table row or table head before, then we try to parse\n   * another row.\n   * Otherwise, we try to parse a head.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   * @type {State}\n   */\n  function start(code) {\n    let index = self.events.length - 1\n    while (index > -1) {\n      const type = self.events[index][1].type\n      if (\n        type === 'lineEnding' ||\n        // Note: markdown-rs uses `whitespace` instead of `linePrefix`\n        type === 'linePrefix'\n      )\n        index--\n      else break\n    }\n    const tail = index > -1 ? self.events[index][1].type : null\n    const next =\n      tail === 'tableHead' || tail === 'tableRow' ? bodyRowStart : headRowBefore\n\n    // Don’t allow lazy body rows.\n    if (next === bodyRowStart && self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    return next(code)\n  }\n\n  /**\n   * Before table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBefore(code) {\n    effects.enter('tableHead')\n    effects.enter('tableRow')\n    return headRowStart(code)\n  }\n\n  /**\n   * Before table head row, after whitespace.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowStart(code) {\n    if (code === 124) {\n      return headRowBreak(code)\n    }\n\n    // To do: micromark-js should let us parse our own whitespace in extensions,\n    // like `markdown-rs`:\n    //\n    // ```js\n    // // 4+ spaces.\n    // if (markdownSpace(code)) {\n    //   return nok(code)\n    // }\n    // ```\n\n    seen = true\n    // Count the first character, that isn’t a pipe, double.\n    sizeB += 1\n    return headRowBreak(code)\n  }\n\n  /**\n   * At break in table head row.\n   *\n   * ```markdown\n   * > | | a |\n   *     ^\n   *       ^\n   *         ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowBreak(code) {\n    if (code === null) {\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownLineEnding(code)) {\n      // If anything other than one pipe (ignoring whitespace) was used, it’s fine.\n      if (sizeB > 1) {\n        sizeB = 0\n        // To do: check if this works.\n        // Feel free to interrupt:\n        self.interrupt = true\n        effects.exit('tableRow')\n        effects.enter('lineEnding')\n        effects.consume(code)\n        effects.exit('lineEnding')\n        return headDelimiterStart\n      }\n\n      // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n      return nok(code)\n    }\n    if (markdownSpace(code)) {\n      // To do: check if this is fine.\n      // effects.attempt(State::Next(StateName::GfmTableHeadRowBreak), State::Nok)\n      // State::Retry(space_or_tab(tokenizer))\n      return factorySpace(effects, headRowBreak, 'whitespace')(code)\n    }\n    sizeB += 1\n    if (seen) {\n      seen = false\n      // Header cell count.\n      size += 1\n    }\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      // Whether a delimiter was seen.\n      seen = true\n      return headRowBreak\n    }\n\n    // Anything else is cell data.\n    effects.enter('data')\n    return headRowData(code)\n  }\n\n  /**\n   * In table head row data.\n   *\n   * ```markdown\n   * > | | a |\n   *       ^\n   *   | | - |\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return headRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? headRowEscape : headRowData\n  }\n\n  /**\n   * In table head row escape.\n   *\n   * ```markdown\n   * > | | a\\-b |\n   *         ^\n   *   | | ---- |\n   *   | | c    |\n   * ```\n   *\n   * @type {State}\n   */\n  function headRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return headRowData\n    }\n    return headRowData(code)\n  }\n\n  /**\n   * Before delimiter row.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterStart(code) {\n    // Reset `interrupt`.\n    self.interrupt = false\n\n    // Note: in `markdown-rs`, we need to handle piercing here too.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n    effects.enter('tableDelimiterRow')\n    // Track if we’ve seen a `:` or `|`.\n    seen = false\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        headDelimiterBefore,\n        'linePrefix',\n        self.parser.constructs.disable.null.includes('codeIndented')\n          ? undefined\n          : 4\n      )(code)\n    }\n    return headDelimiterBefore(code)\n  }\n\n  /**\n   * Before delimiter row, after optional whitespace.\n   *\n   * Reused when a `|` is found later, to parse another cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *     ^\n   *   | | b |\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterBefore(code) {\n    if (code === 45 || code === 58) {\n      return headDelimiterValueBefore(code)\n    }\n    if (code === 124) {\n      seen = true\n      // If we start with a pipe, we open a cell marker.\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return headDelimiterCellBefore\n    }\n\n    // More whitespace / empty row not allowed at start.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After `|`, before delimiter cell.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *      ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellBefore(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterValueBefore, 'whitespace')(code)\n    }\n    return headDelimiterValueBefore(code)\n  }\n\n  /**\n   * Before delimiter cell value.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterValueBefore(code) {\n    // Align: left.\n    if (code === 58) {\n      sizeB += 1\n      seen = true\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterLeftAlignmentAfter\n    }\n\n    // Align: none.\n    if (code === 45) {\n      sizeB += 1\n      // To do: seems weird that this *isn’t* left aligned, but that state is used?\n      return headDelimiterLeftAlignmentAfter(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      return headDelimiterCellAfter(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * After delimiter cell left alignment marker.\n   *\n   * ```markdown\n   *   | | a  |\n   * > | | :- |\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterLeftAlignmentAfter(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      return headDelimiterFiller(code)\n    }\n\n    // Anything else is not ok after the left-align colon.\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter cell filler.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | - |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterFiller(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return headDelimiterFiller\n    }\n\n    // Align is `center` if it was `left`, `right` otherwise.\n    if (code === 58) {\n      seen = true\n      effects.exit('tableDelimiterFiller')\n      effects.enter('tableDelimiterMarker')\n      effects.consume(code)\n      effects.exit('tableDelimiterMarker')\n      return headDelimiterRightAlignmentAfter\n    }\n    effects.exit('tableDelimiterFiller')\n    return headDelimiterRightAlignmentAfter(code)\n  }\n\n  /**\n   * After delimiter cell right alignment marker.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterRightAlignmentAfter(code) {\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headDelimiterCellAfter, 'whitespace')(code)\n    }\n    return headDelimiterCellAfter(code)\n  }\n\n  /**\n   * After delimiter cell.\n   *\n   * ```markdown\n   *   | |  a |\n   * > | | -: |\n   *          ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterCellAfter(code) {\n    if (code === 124) {\n      return headDelimiterBefore(code)\n    }\n    if (code === null || markdownLineEnding(code)) {\n      // Exit when:\n      // * there was no `:` or `|` at all (it’s a thematic break or setext\n      //   underline instead)\n      // * the header cell count is not the delimiter cell count\n      if (!seen || size !== sizeB) {\n        return headDelimiterNok(code)\n      }\n\n      // Note: in markdown-rs`, a reset is needed here.\n      effects.exit('tableDelimiterRow')\n      effects.exit('tableHead')\n      // To do: in `markdown-rs`, resolvers need to be registered manually.\n      // effects.register_resolver(ResolveName::GfmTable)\n      return ok(code)\n    }\n    return headDelimiterNok(code)\n  }\n\n  /**\n   * In delimiter row, at a disallowed byte.\n   *\n   * ```markdown\n   *   | | a |\n   * > | | x |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function headDelimiterNok(code) {\n    // Note: in `markdown-rs`, we need to reset, in `micromark-js` we don‘t.\n    return nok(code)\n  }\n\n  /**\n   * Before table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowStart(code) {\n    // Note: in `markdown-rs` we need to manually take care of a prefix,\n    // but in `micromark-js` that is done for us, so if we’re here, we’re\n    // never at whitespace.\n    effects.enter('tableRow')\n    return bodyRowBreak(code)\n  }\n\n  /**\n   * At break in table body row.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *     ^\n   *       ^\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowBreak(code) {\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return bodyRowBreak\n    }\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('tableRow')\n      return ok(code)\n    }\n    if (markdownSpace(code)) {\n      return factorySpace(effects, bodyRowBreak, 'whitespace')(code)\n    }\n\n    // Anything else is cell content.\n    effects.enter('data')\n    return bodyRowData(code)\n  }\n\n  /**\n   * In table body row data.\n   *\n   * ```markdown\n   *   | | a |\n   *   | | - |\n   * > | | b |\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowData(code) {\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('data')\n      return bodyRowBreak(code)\n    }\n    effects.consume(code)\n    return code === 92 ? bodyRowEscape : bodyRowData\n  }\n\n  /**\n   * In table body row escape.\n   *\n   * ```markdown\n   *   | | a    |\n   *   | | ---- |\n   * > | | b\\-c |\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function bodyRowEscape(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return bodyRowData\n    }\n    return bodyRowData(code)\n  }\n}\n\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  let inFirstCellAwaitingPipe = true\n  /** @type {RowKind} */\n  let rowKind = 0\n  /** @type {Range} */\n  let lastCell = [0, 0, 0, 0]\n  /** @type {Range} */\n  let cell = [0, 0, 0, 0]\n  let afterHeadAwaitingFirstBodyRow = false\n  let lastTableEnd = 0\n  /** @type {Token | undefined} */\n  let currentTable\n  /** @type {Token | undefined} */\n  let currentBody\n  /** @type {Token | undefined} */\n  let currentCell\n  const map = new EditMap()\n  while (++index < events.length) {\n    const event = events[index]\n    const token = event[1]\n    if (event[0] === 'enter') {\n      // Start of head.\n      if (token.type === 'tableHead') {\n        afterHeadAwaitingFirstBodyRow = false\n\n        // Inject previous (body end and) table end.\n        if (lastTableEnd !== 0) {\n          flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n          currentBody = undefined\n          lastTableEnd = 0\n        }\n\n        // Inject table start.\n        currentTable = {\n          type: 'table',\n          start: Object.assign({}, token.start),\n          // Note: correct end is set later.\n          end: Object.assign({}, token.end)\n        }\n        map.add(index, 0, [['enter', currentTable, context]])\n      } else if (\n        token.type === 'tableRow' ||\n        token.type === 'tableDelimiterRow'\n      ) {\n        inFirstCellAwaitingPipe = true\n        currentCell = undefined\n        lastCell = [0, 0, 0, 0]\n        cell = [0, index + 1, 0, 0]\n\n        // Inject table body start.\n        if (afterHeadAwaitingFirstBodyRow) {\n          afterHeadAwaitingFirstBodyRow = false\n          currentBody = {\n            type: 'tableBody',\n            start: Object.assign({}, token.start),\n            // Note: correct end is set later.\n            end: Object.assign({}, token.end)\n          }\n          map.add(index, 0, [['enter', currentBody, context]])\n        }\n        rowKind = token.type === 'tableDelimiterRow' ? 2 : currentBody ? 3 : 1\n      }\n      // Cell data.\n      else if (\n        rowKind &&\n        (token.type === 'data' ||\n          token.type === 'tableDelimiterMarker' ||\n          token.type === 'tableDelimiterFiller')\n      ) {\n        inFirstCellAwaitingPipe = false\n\n        // First value in cell.\n        if (cell[2] === 0) {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n            lastCell = [0, 0, 0, 0]\n          }\n          cell[2] = index\n        }\n      } else if (token.type === 'tableCellDivider') {\n        if (inFirstCellAwaitingPipe) {\n          inFirstCellAwaitingPipe = false\n        } else {\n          if (lastCell[1] !== 0) {\n            cell[0] = cell[1]\n            currentCell = flushCell(\n              map,\n              context,\n              lastCell,\n              rowKind,\n              undefined,\n              currentCell\n            )\n          }\n          lastCell = cell\n          cell = [lastCell[1], index, 0, 0]\n        }\n      }\n    }\n    // Exit events.\n    else if (token.type === 'tableHead') {\n      afterHeadAwaitingFirstBodyRow = true\n      lastTableEnd = index\n    } else if (\n      token.type === 'tableRow' ||\n      token.type === 'tableDelimiterRow'\n    ) {\n      lastTableEnd = index\n      if (lastCell[1] !== 0) {\n        cell[0] = cell[1]\n        currentCell = flushCell(\n          map,\n          context,\n          lastCell,\n          rowKind,\n          index,\n          currentCell\n        )\n      } else if (cell[1] !== 0) {\n        currentCell = flushCell(map, context, cell, rowKind, index, currentCell)\n      }\n      rowKind = 0\n    } else if (\n      rowKind &&\n      (token.type === 'data' ||\n        token.type === 'tableDelimiterMarker' ||\n        token.type === 'tableDelimiterFiller')\n    ) {\n      cell[3] = index\n    }\n  }\n  if (lastTableEnd !== 0) {\n    flushTableEnd(map, context, lastTableEnd, currentTable, currentBody)\n  }\n  map.consume(context.events)\n\n  // To do: move this into `html`, when events are exposed there.\n  // That’s what `markdown-rs` does.\n  // That needs updates to `mdast-util-gfm-table`.\n  index = -1\n  while (++index < context.events.length) {\n    const event = context.events[index]\n    if (event[0] === 'enter' && event[1].type === 'table') {\n      event[1]._align = gfmTableAlign(context.events, index)\n    }\n  }\n  return events\n}\n\n/**\n * Generate a cell.\n *\n * @param {EditMap} map\n * @param {Readonly<TokenizeContext>} context\n * @param {Readonly<Range>} range\n * @param {RowKind} rowKind\n * @param {number | undefined} rowEnd\n * @param {Token | undefined} previousCell\n * @returns {Token | undefined}\n */\n// eslint-disable-next-line max-params\nfunction flushCell(map, context, range, rowKind, rowEnd, previousCell) {\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCell' : 'tableCell'\n  const groupName =\n    rowKind === 1\n      ? 'tableHeader'\n      : rowKind === 2\n      ? 'tableDelimiter'\n      : 'tableData'\n  // `markdown-rs` uses:\n  // rowKind === 2 ? 'tableDelimiterCellValue' : 'tableCellText'\n  const valueName = 'tableContent'\n\n  // Insert an exit for the previous cell, if there is one.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //          ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[0] !== 0) {\n    previousCell.end = Object.assign({}, getPoint(context.events, range[0]))\n    map.add(range[0], 0, [['exit', previousCell, context]])\n  }\n\n  // Insert enter of this cell.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //           ^-- enter\n  //           ^^^^-- this cell\n  // ```\n  const now = getPoint(context.events, range[1])\n  previousCell = {\n    type: groupName,\n    start: Object.assign({}, now),\n    // Note: correct end is set later.\n    end: Object.assign({}, now)\n  }\n  map.add(range[1], 0, [['enter', previousCell, context]])\n\n  // Insert text start at first data start and end at last data end, and\n  // remove events between.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //            ^-- enter\n  //             ^-- exit\n  //           ^^^^-- this cell\n  // ```\n  if (range[2] !== 0) {\n    const relatedStart = getPoint(context.events, range[2])\n    const relatedEnd = getPoint(context.events, range[3])\n    /** @type {Token} */\n    const valueToken = {\n      type: valueName,\n      start: Object.assign({}, relatedStart),\n      end: Object.assign({}, relatedEnd)\n    }\n    map.add(range[2], 0, [['enter', valueToken, context]])\n    if (rowKind !== 2) {\n      // Fix positional info on remaining events\n      const start = context.events[range[2]]\n      const end = context.events[range[3]]\n      start[1].end = Object.assign({}, end[1].end)\n      start[1].type = 'chunkText'\n      start[1].contentType = 'text'\n\n      // Remove if needed.\n      if (range[3] > range[2] + 1) {\n        const a = range[2] + 1\n        const b = range[3] - range[2] - 1\n        map.add(a, b, [])\n      }\n    }\n    map.add(range[3] + 1, 0, [['exit', valueToken, context]])\n  }\n\n  // Insert an exit for the last cell, if at the row end.\n  //\n  // ```markdown\n  // > | | aa | bb | cc |\n  //                    ^-- exit\n  //               ^^^^^^-- this cell (the last one contains two “between” parts)\n  // ```\n  if (rowEnd !== undefined) {\n    previousCell.end = Object.assign({}, getPoint(context.events, rowEnd))\n    map.add(rowEnd, 0, [['exit', previousCell, context]])\n    previousCell = undefined\n  }\n  return previousCell\n}\n\n/**\n * Generate table end (and table body end).\n *\n * @param {Readonly<EditMap>} map\n * @param {Readonly<TokenizeContext>} context\n * @param {number} index\n * @param {Token} table\n * @param {Token | undefined} tableBody\n */\n// eslint-disable-next-line max-params\nfunction flushTableEnd(map, context, index, table, tableBody) {\n  /** @type {Array<Event>} */\n  const exits = []\n  const related = getPoint(context.events, index)\n  if (tableBody) {\n    tableBody.end = Object.assign({}, related)\n    exits.push(['exit', tableBody, context])\n  }\n  table.end = Object.assign({}, related)\n  exits.push(['exit', table, context])\n  map.add(index + 1, 0, exits)\n}\n\n/**\n * @param {Readonly<Array<Event>>} events\n * @param {number} index\n * @returns {Readonly<Point>}\n */\nfunction getPoint(events, index) {\n  const event = events[index]\n  const side = event[0] === 'enter' ? 'start' : 'end'\n  return event[1][side]\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n */\n\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\n\n/**\n * Create an HTML extension for `micromark` to support GFM task list items\n * syntax.\n *\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM task list items when serializing to HTML.\n */\nexport function gfmTaskListItem() {\n  return {\n    text: {\n      [91]: tasklistCheck\n    }\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n\n  /**\n   * At start of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *       ^\n   * ```\n   *\n   * @type {State}\n   */\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null ||\n      // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n\n  /**\n   * In task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *        ^\n   * ```\n   *\n   * @type {State}\n   */\n  function inside(code) {\n    // Currently we match how GH works in files.\n    // To match how GH works in comments, use `markdownSpace` (`[\\t ]`) instead\n    // of `markdownLineEndingOrSpace` (`[\\t\\n\\r ]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n    return nok(code)\n  }\n\n  /**\n   * At close of task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *         ^\n   * ```\n   *\n   * @type {State}\n   */\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return after\n    }\n    return nok(code)\n  }\n\n  /**\n   * @type {State}\n   */\n  function after(code) {\n    // EOL in paragraph means there must be something else after it.\n    if (markdownLineEnding(code)) {\n      return ok(code)\n    }\n\n    // Space or tab?\n    // Check what comes after.\n    if (markdownSpace(code)) {\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )(code)\n    }\n\n    // EOF, or non-whitespace, both wrong.\n    return nok(code)\n  }\n}\n\n/**\n * @this {TokenizeContext}\n * @type {Tokenizer}\n */\nfunction spaceThenNonSpace(effects, ok, nok) {\n  return factorySpace(effects, after, 'whitespace')\n\n  /**\n   * After whitespace, after task list item check.\n   *\n   * ```markdown\n   * > | * [x] y.\n   *           ^\n   * ```\n   *\n   * @type {State}\n   */\n  function after(code) {\n    // EOF means there was nothing, so bad.\n    // EOL means there’s content after it, so good.\n    // Impossible to have more spaces.\n    // Anything else is good.\n    return code === null ? nok(code) : ok(code)\n  }\n}\n","/// <reference types=\"remark-parse\" />\n/// <reference types=\"remark-stringify\" />\n\n/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-gfm').Options} MdastOptions\n * @typedef {import('micromark-extension-gfm').Options} MicromarkOptions\n * @typedef {import('unified').Processor<Root>} Processor\n */\n\n/**\n * @typedef {MicromarkOptions & MdastOptions} Options\n *   Configuration.\n */\n\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\nimport {gfm} from 'micromark-extension-gfm'\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Add support GFM (autolink literals, footnotes, strikethrough, tables,\n * tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {undefined}\n *   Nothing.\n */\nexport default function remarkGfm(options) {\n  // @ts-expect-error: TS is wrong about `this`.\n  // eslint-disable-next-line unicorn/no-this-assignment\n  const self = /** @type {Processor} */ (this)\n  const settings = options || emptyOptions\n  const data = self.data()\n\n  const micromarkExtensions =\n    data.micromarkExtensions || (data.micromarkExtensions = [])\n  const fromMarkdownExtensions =\n    data.fromMarkdownExtensions || (data.fromMarkdownExtensions = [])\n  const toMarkdownExtensions =\n    data.toMarkdownExtensions || (data.toMarkdownExtensions = [])\n\n  micromarkExtensions.push(gfm(settings))\n  fromMarkdownExtensions.push(gfmFromMarkdown())\n  toMarkdownExtensions.push(gfmToMarkdown(settings))\n}\n","/**\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Create an extension for `micromark` to enable GFM syntax.\n *\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-strikethrough`.\n * @returns {Extension}\n *   Extension for `micromark` that can be passed in `extensions` to enable GFM\n *   syntax.\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral(),\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable(),\n    gfmTaskListItem()\n  ])\n}\n\n/**\n * Create an extension for `micromark` to support GFM when serializing to HTML.\n *\n * @param {HtmlOptions | null | undefined} [options]\n *   Configuration (optional).\n *\n *   Passed to `micromark-extens-gfm-footnote`.\n * @returns {HtmlExtension}\n *   Extension for `micromark` that can be passed in `htmlExtensions` to\n *   support GFM when serializing to HTML.\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml(),\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml(),\n    gfmTableHtml(),\n    gfmTagfilterHtml(),\n    gfmTaskListItemHtml()\n  ])\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n */\n\n/**\n * @typedef {import('mdast-util-gfm-table').Options} Options\n *   Configuration.\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * Create an extension for `mdast-util-from-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @returns {Array<FromMarkdownExtension>}\n *   Extension for `mdast-util-from-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown(),\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown(),\n    gfmTableFromMarkdown(),\n    gfmTaskListItemFromMarkdown()\n  ]\n}\n\n/**\n * Create an extension for `mdast-util-to-markdown` to enable GFM (autolink\n * literals, footnotes, strikethrough, tables, tasklists).\n *\n * @param {Options | null | undefined} [options]\n *   Configuration.\n * @returns {ToMarkdownExtension}\n *   Extension for `mdast-util-to-markdown` to enable GFM (autolink literals,\n *   footnotes, strikethrough, tables, tasklists).\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown(),\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown(),\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown()\n    ]\n  }\n}\n","import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react'; // Get all possible permutations of all power sets\n//\n// Super simple, non-algorithmic solution since the\n// number of class names will not be greater than 4\n\nfunction powerSetPermutations(arr) {\n  var arrLength = arr.length;\n  if (arrLength === 0 || arrLength === 1) return arr;\n\n  if (arrLength === 2) {\n    // prettier-ignore\n    return [arr[0], arr[1], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength === 3) {\n    return [arr[0], arr[1], arr[2], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n\n  if (arrLength >= 4) {\n    // Currently does not support more than 4 extra\n    // class names (after `.token` has been removed)\n    return [arr[0], arr[1], arr[2], arr[3], \"\".concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[3], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[3]), \"\".concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[3], \".\").concat(arr[0]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[2], \".\").concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[1], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[0], \".\").concat(arr[2], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[0], \".\").concat(arr[2]), \"\".concat(arr[3], \".\").concat(arr[1], \".\").concat(arr[2], \".\").concat(arr[0]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[0], \".\").concat(arr[1]), \"\".concat(arr[3], \".\").concat(arr[2], \".\").concat(arr[1], \".\").concat(arr[0])];\n  }\n}\n\nvar classNameCombinations = {};\n\nfunction getClassNameCombinations(classNames) {\n  if (classNames.length === 0 || classNames.length === 1) return classNames;\n  var key = classNames.join('.');\n\n  if (!classNameCombinations[key]) {\n    classNameCombinations[key] = powerSetPermutations(classNames);\n  }\n\n  return classNameCombinations[key];\n}\n\nexport function createStyleObject(classNames) {\n  var elementStyle = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var stylesheet = arguments.length > 2 ? arguments[2] : undefined;\n  var nonTokenClassNames = classNames.filter(function (className) {\n    return className !== 'token';\n  });\n  var classNamesCombinations = getClassNameCombinations(nonTokenClassNames);\n  return classNamesCombinations.reduce(function (styleObject, className) {\n    return _objectSpread(_objectSpread({}, styleObject), stylesheet[className]);\n  }, elementStyle);\n}\nexport function createClassNameString(classNames) {\n  return classNames.join(' ');\n}\nexport function createChildren(stylesheet, useInlineStyles) {\n  var childrenCount = 0;\n  return function (children) {\n    childrenCount += 1;\n    return children.map(function (child, i) {\n      return createElement({\n        node: child,\n        stylesheet: stylesheet,\n        useInlineStyles: useInlineStyles,\n        key: \"code-segment-\".concat(childrenCount, \"-\").concat(i)\n      });\n    });\n  };\n}\nexport default function createElement(_ref) {\n  var node = _ref.node,\n      stylesheet = _ref.stylesheet,\n      _ref$style = _ref.style,\n      style = _ref$style === void 0 ? {} : _ref$style,\n      useInlineStyles = _ref.useInlineStyles,\n      key = _ref.key;\n  var properties = node.properties,\n      type = node.type,\n      TagName = node.tagName,\n      value = node.value;\n\n  if (type === 'text') {\n    return value;\n  } else if (TagName) {\n    var childrenCreator = createChildren(stylesheet, useInlineStyles);\n    var props;\n\n    if (!useInlineStyles) {\n      props = _objectSpread(_objectSpread({}, properties), {}, {\n        className: createClassNameString(properties.className)\n      });\n    } else {\n      var allStylesheetSelectors = Object.keys(stylesheet).reduce(function (classes, selector) {\n        selector.split('.').forEach(function (className) {\n          if (!classes.includes(className)) classes.push(className);\n        });\n        return classes;\n      }, []); // For compatibility with older versions of react-syntax-highlighter\n\n      var startingClassName = properties.className && properties.className.includes('token') ? ['token'] : [];\n      var className = properties.className && startingClassName.concat(properties.className.filter(function (className) {\n        return !allStylesheetSelectors.includes(className);\n      }));\n      props = _objectSpread(_objectSpread({}, properties), {}, {\n        className: createClassNameString(className) || undefined,\n        style: createStyleObject(properties.className, Object.assign({}, properties.style, style), stylesheet)\n      });\n    }\n\n    var children = childrenCreator(node.children);\n    return /*#__PURE__*/React.createElement(TagName, _extends({\n      key: key\n    }, props), children);\n  }\n}","export default (function (astGenerator, language) {\n  var langs = astGenerator.listLanguages();\n  return langs.indexOf(language) !== -1;\n});","import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"language\", \"children\", \"style\", \"customStyle\", \"codeTagProps\", \"useInlineStyles\", \"showLineNumbers\", \"showInlineLineNumbers\", \"startingLineNumber\", \"lineNumberContainerStyle\", \"lineNumberStyle\", \"wrapLines\", \"wrapLongLines\", \"lineProps\", \"renderer\", \"PreTag\", \"CodeTag\", \"code\", \"astGenerator\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport createElement from './create-element';\nimport checkForListedLanguage from './checkForListedLanguage';\nvar newLineRegex = /\\n/g;\n\nfunction getNewLines(str) {\n  return str.match(newLineRegex);\n}\n\nfunction getAllLineNumbers(_ref) {\n  var lines = _ref.lines,\n      startingLineNumber = _ref.startingLineNumber,\n      style = _ref.style;\n  return lines.map(function (_, i) {\n    var number = i + startingLineNumber;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: \"line-\".concat(i),\n      className: \"react-syntax-highlighter-line-number\",\n      style: typeof style === 'function' ? style(number) : style\n    }, \"\".concat(number, \"\\n\"));\n  });\n}\n\nfunction AllLineNumbers(_ref2) {\n  var codeString = _ref2.codeString,\n      codeStyle = _ref2.codeStyle,\n      _ref2$containerStyle = _ref2.containerStyle,\n      containerStyle = _ref2$containerStyle === void 0 ? {\n    \"float\": 'left',\n    paddingRight: '10px'\n  } : _ref2$containerStyle,\n      _ref2$numberStyle = _ref2.numberStyle,\n      numberStyle = _ref2$numberStyle === void 0 ? {} : _ref2$numberStyle,\n      startingLineNumber = _ref2.startingLineNumber;\n  return /*#__PURE__*/React.createElement(\"code\", {\n    style: Object.assign({}, codeStyle, containerStyle)\n  }, getAllLineNumbers({\n    lines: codeString.replace(/\\n$/, '').split('\\n'),\n    style: numberStyle,\n    startingLineNumber: startingLineNumber\n  }));\n}\n\nfunction getEmWidthOfNumber(num) {\n  return \"\".concat(num.toString().length, \".25em\");\n}\n\nfunction getInlineLineNumber(lineNumber, inlineLineNumberStyle) {\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: {\n      key: \"line-number--\".concat(lineNumber),\n      className: ['comment', 'linenumber', 'react-syntax-highlighter-line-number'],\n      style: inlineLineNumberStyle\n    },\n    children: [{\n      type: 'text',\n      value: lineNumber\n    }]\n  };\n}\n\nfunction assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber) {\n  // minimally necessary styling for line numbers\n  var defaultLineNumberStyle = {\n    display: 'inline-block',\n    minWidth: getEmWidthOfNumber(largestLineNumber),\n    paddingRight: '1em',\n    textAlign: 'right',\n    userSelect: 'none'\n  }; // prep custom styling\n\n  var customLineNumberStyle = typeof lineNumberStyle === 'function' ? lineNumberStyle(lineNumber) : lineNumberStyle; // combine\n\n  var assembledStyle = _objectSpread(_objectSpread({}, defaultLineNumberStyle), customLineNumberStyle);\n\n  return assembledStyle;\n}\n\nfunction createLineElement(_ref3) {\n  var children = _ref3.children,\n      lineNumber = _ref3.lineNumber,\n      lineNumberStyle = _ref3.lineNumberStyle,\n      largestLineNumber = _ref3.largestLineNumber,\n      showInlineLineNumbers = _ref3.showInlineLineNumbers,\n      _ref3$lineProps = _ref3.lineProps,\n      lineProps = _ref3$lineProps === void 0 ? {} : _ref3$lineProps,\n      _ref3$className = _ref3.className,\n      className = _ref3$className === void 0 ? [] : _ref3$className,\n      showLineNumbers = _ref3.showLineNumbers,\n      wrapLongLines = _ref3.wrapLongLines;\n  var properties = typeof lineProps === 'function' ? lineProps(lineNumber) : lineProps;\n  properties['className'] = className;\n\n  if (lineNumber && showInlineLineNumbers) {\n    var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n    children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n  }\n\n  if (wrapLongLines & showLineNumbers) {\n    properties.style = _objectSpread(_objectSpread({}, properties.style), {}, {\n      display: 'flex'\n    });\n  }\n\n  return {\n    type: 'element',\n    tagName: 'span',\n    properties: properties,\n    children: children\n  };\n}\n\nfunction flattenCodeTree(tree) {\n  var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var newTree = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n\n  for (var i = 0; i < tree.length; i++) {\n    var node = tree[i];\n\n    if (node.type === 'text') {\n      newTree.push(createLineElement({\n        children: [node],\n        className: _toConsumableArray(new Set(className))\n      }));\n    } else if (node.children) {\n      var classNames = className.concat(node.properties.className);\n      flattenCodeTree(node.children, classNames).forEach(function (i) {\n        return newTree.push(i);\n      });\n    }\n  }\n\n  return newTree;\n}\n\nfunction processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines) {\n  var _ref4;\n\n  var tree = flattenCodeTree(codeTree.value);\n  var newTree = [];\n  var lastLineBreakIndex = -1;\n  var index = 0;\n\n  function createWrappedLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return createLineElement({\n      children: children,\n      lineNumber: lineNumber,\n      lineNumberStyle: lineNumberStyle,\n      largestLineNumber: largestLineNumber,\n      showInlineLineNumbers: showInlineLineNumbers,\n      lineProps: lineProps,\n      className: className,\n      showLineNumbers: showLineNumbers,\n      wrapLongLines: wrapLongLines\n    });\n  }\n\n  function createUnwrappedLine(children, lineNumber) {\n    if (showLineNumbers && lineNumber && showInlineLineNumbers) {\n      var inlineLineNumberStyle = assembleLineNumberStyles(lineNumberStyle, lineNumber, largestLineNumber);\n      children.unshift(getInlineLineNumber(lineNumber, inlineLineNumberStyle));\n    }\n\n    return children;\n  }\n\n  function createLine(children, lineNumber) {\n    var className = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    return wrapLines || className.length > 0 ? createWrappedLine(children, lineNumber, className) : createUnwrappedLine(children, lineNumber);\n  }\n\n  var _loop = function _loop() {\n    var node = tree[index];\n    var value = node.children[0].value;\n    var newLines = getNewLines(value);\n\n    if (newLines) {\n      var splitValue = value.split('\\n');\n      splitValue.forEach(function (text, i) {\n        var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n        var newChild = {\n          type: 'text',\n          value: \"\".concat(text, \"\\n\")\n        }; // if it's the first line\n\n        if (i === 0) {\n          var _children = tree.slice(lastLineBreakIndex + 1, index).concat(createLineElement({\n            children: [newChild],\n            className: node.properties.className\n          }));\n\n          var _line = createLine(_children, lineNumber);\n\n          newTree.push(_line); // if it's the last line\n        } else if (i === splitValue.length - 1) {\n          var stringChild = tree[index + 1] && tree[index + 1].children && tree[index + 1].children[0];\n          var lastLineInPreviousSpan = {\n            type: 'text',\n            value: \"\".concat(text)\n          };\n\n          if (stringChild) {\n            var newElem = createLineElement({\n              children: [lastLineInPreviousSpan],\n              className: node.properties.className\n            });\n            tree.splice(index + 1, 0, newElem);\n          } else {\n            var _children2 = [lastLineInPreviousSpan];\n\n            var _line2 = createLine(_children2, lineNumber, node.properties.className);\n\n            newTree.push(_line2);\n          } // if it's neither the first nor the last line\n\n        } else {\n          var _children3 = [newChild];\n\n          var _line3 = createLine(_children3, lineNumber, node.properties.className);\n\n          newTree.push(_line3);\n        }\n      });\n      lastLineBreakIndex = index;\n    }\n\n    index++;\n  };\n\n  while (index < tree.length) {\n    _loop();\n  }\n\n  if (lastLineBreakIndex !== tree.length - 1) {\n    var children = tree.slice(lastLineBreakIndex + 1, tree.length);\n\n    if (children && children.length) {\n      var lineNumber = showLineNumbers && newTree.length + startingLineNumber;\n      var line = createLine(children, lineNumber);\n      newTree.push(line);\n    }\n  }\n\n  return wrapLines ? newTree : (_ref4 = []).concat.apply(_ref4, newTree);\n}\n\nfunction defaultRenderer(_ref5) {\n  var rows = _ref5.rows,\n      stylesheet = _ref5.stylesheet,\n      useInlineStyles = _ref5.useInlineStyles;\n  return rows.map(function (node, i) {\n    return createElement({\n      node: node,\n      stylesheet: stylesheet,\n      useInlineStyles: useInlineStyles,\n      key: \"code-segement\".concat(i)\n    });\n  });\n} // only highlight.js has the highlightAuto method\n\n\nfunction isHighlightJs(astGenerator) {\n  return astGenerator && typeof astGenerator.highlightAuto !== 'undefined';\n}\n\nfunction getCodeTree(_ref6) {\n  var astGenerator = _ref6.astGenerator,\n      language = _ref6.language,\n      code = _ref6.code,\n      defaultCodeValue = _ref6.defaultCodeValue;\n\n  // figure out whether we're using lowlight/highlight or refractor/prism\n  // then attempt highlighting accordingly\n  // lowlight/highlight?\n  if (isHighlightJs(astGenerator)) {\n    var hasLanguage = checkForListedLanguage(astGenerator, language);\n\n    if (language === 'text') {\n      return {\n        value: defaultCodeValue,\n        language: 'text'\n      };\n    } else if (hasLanguage) {\n      return astGenerator.highlight(language, code);\n    } else {\n      return astGenerator.highlightAuto(code);\n    }\n  } // must be refractor/prism, then\n\n\n  try {\n    return language && language !== 'text' ? {\n      value: astGenerator.highlight(code, language)\n    } : {\n      value: defaultCodeValue\n    };\n  } catch (e) {\n    return {\n      value: defaultCodeValue\n    };\n  }\n}\n\nexport default function (defaultAstGenerator, defaultStyle) {\n  return function SyntaxHighlighter(_ref7) {\n    var language = _ref7.language,\n        children = _ref7.children,\n        _ref7$style = _ref7.style,\n        style = _ref7$style === void 0 ? defaultStyle : _ref7$style,\n        _ref7$customStyle = _ref7.customStyle,\n        customStyle = _ref7$customStyle === void 0 ? {} : _ref7$customStyle,\n        _ref7$codeTagProps = _ref7.codeTagProps,\n        codeTagProps = _ref7$codeTagProps === void 0 ? {\n      className: language ? \"language-\".concat(language) : undefined,\n      style: _objectSpread(_objectSpread({}, style['code[class*=\"language-\"]']), style[\"code[class*=\\\"language-\".concat(language, \"\\\"]\")])\n    } : _ref7$codeTagProps,\n        _ref7$useInlineStyles = _ref7.useInlineStyles,\n        useInlineStyles = _ref7$useInlineStyles === void 0 ? true : _ref7$useInlineStyles,\n        _ref7$showLineNumbers = _ref7.showLineNumbers,\n        showLineNumbers = _ref7$showLineNumbers === void 0 ? false : _ref7$showLineNumbers,\n        _ref7$showInlineLineN = _ref7.showInlineLineNumbers,\n        showInlineLineNumbers = _ref7$showInlineLineN === void 0 ? true : _ref7$showInlineLineN,\n        _ref7$startingLineNum = _ref7.startingLineNumber,\n        startingLineNumber = _ref7$startingLineNum === void 0 ? 1 : _ref7$startingLineNum,\n        lineNumberContainerStyle = _ref7.lineNumberContainerStyle,\n        _ref7$lineNumberStyle = _ref7.lineNumberStyle,\n        lineNumberStyle = _ref7$lineNumberStyle === void 0 ? {} : _ref7$lineNumberStyle,\n        wrapLines = _ref7.wrapLines,\n        _ref7$wrapLongLines = _ref7.wrapLongLines,\n        wrapLongLines = _ref7$wrapLongLines === void 0 ? false : _ref7$wrapLongLines,\n        _ref7$lineProps = _ref7.lineProps,\n        lineProps = _ref7$lineProps === void 0 ? {} : _ref7$lineProps,\n        renderer = _ref7.renderer,\n        _ref7$PreTag = _ref7.PreTag,\n        PreTag = _ref7$PreTag === void 0 ? 'pre' : _ref7$PreTag,\n        _ref7$CodeTag = _ref7.CodeTag,\n        CodeTag = _ref7$CodeTag === void 0 ? 'code' : _ref7$CodeTag,\n        _ref7$code = _ref7.code,\n        code = _ref7$code === void 0 ? (Array.isArray(children) ? children[0] : children) || '' : _ref7$code,\n        astGenerator = _ref7.astGenerator,\n        rest = _objectWithoutProperties(_ref7, _excluded);\n\n    astGenerator = astGenerator || defaultAstGenerator;\n    var allLineNumbers = showLineNumbers ? /*#__PURE__*/React.createElement(AllLineNumbers, {\n      containerStyle: lineNumberContainerStyle,\n      codeStyle: codeTagProps.style || {},\n      numberStyle: lineNumberStyle,\n      startingLineNumber: startingLineNumber,\n      codeString: code\n    }) : null;\n    var defaultPreStyle = style.hljs || style['pre[class*=\"language-\"]'] || {\n      backgroundColor: '#fff'\n    };\n    var generatorClassName = isHighlightJs(astGenerator) ? 'hljs' : 'prismjs';\n    var preProps = useInlineStyles ? Object.assign({}, rest, {\n      style: Object.assign({}, defaultPreStyle, customStyle)\n    }) : Object.assign({}, rest, {\n      className: rest.className ? \"\".concat(generatorClassName, \" \").concat(rest.className) : generatorClassName,\n      style: Object.assign({}, customStyle)\n    });\n\n    if (wrapLongLines) {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre-wrap'\n      });\n    } else {\n      codeTagProps.style = _objectSpread(_objectSpread({}, codeTagProps.style), {}, {\n        whiteSpace: 'pre'\n      });\n    }\n\n    if (!astGenerator) {\n      return /*#__PURE__*/React.createElement(PreTag, preProps, allLineNumbers, /*#__PURE__*/React.createElement(CodeTag, codeTagProps, code));\n    }\n    /*\n     * Some custom renderers rely on individual row elements so we need to turn wrapLines on\n     * if renderer is provided and wrapLines is undefined.\n     */\n\n\n    if (wrapLines === undefined && renderer || wrapLongLines) wrapLines = true;\n    renderer = renderer || defaultRenderer;\n    var defaultCodeValue = [{\n      type: 'text',\n      value: code\n    }];\n    var codeTree = getCodeTree({\n      astGenerator: astGenerator,\n      language: language,\n      code: code,\n      defaultCodeValue: defaultCodeValue\n    });\n\n    if (codeTree.language === null) {\n      codeTree.value = defaultCodeValue;\n    } // determine largest line number so that we can force minWidth on all linenumber elements\n\n\n    var largestLineNumber = codeTree.value.length + startingLineNumber;\n    var rows = processLines(codeTree, wrapLines, lineProps, showLineNumbers, showInlineLineNumbers, startingLineNumber, largestLineNumber, lineNumberStyle, wrapLongLines);\n    return /*#__PURE__*/React.createElement(PreTag, preProps, /*#__PURE__*/React.createElement(CodeTag, codeTagProps, !showInlineLineNumbers && allLineNumbers, renderer({\n      rows: rows,\n      stylesheet: style,\n      useInlineStyles: useInlineStyles\n    })));\n  };\n}","export default {\n  \"code[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"none\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\"\n  },\n  \"pre[class*=\\\"language-\\\"]\": {\n    \"color\": \"black\",\n    \"background\": \"#f5f2f0\",\n    \"textShadow\": \"0 1px white\",\n    \"fontFamily\": \"Consolas, Monaco, 'Andale Mono', 'Ubuntu Mono', monospace\",\n    \"fontSize\": \"1em\",\n    \"textAlign\": \"left\",\n    \"whiteSpace\": \"pre\",\n    \"wordSpacing\": \"normal\",\n    \"wordBreak\": \"normal\",\n    \"wordWrap\": \"normal\",\n    \"lineHeight\": \"1.5\",\n    \"MozTabSize\": \"4\",\n    \"OTabSize\": \"4\",\n    \"tabSize\": \"4\",\n    \"WebkitHyphens\": \"none\",\n    \"MozHyphens\": \"none\",\n    \"msHyphens\": \"none\",\n    \"hyphens\": \"none\",\n    \"padding\": \"1em\",\n    \"margin\": \".5em 0\",\n    \"overflow\": \"auto\"\n  },\n  \"pre[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::-moz-selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"pre[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"]::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \"code[class*=\\\"language-\\\"] ::selection\": {\n    \"textShadow\": \"none\",\n    \"background\": \"#b3d4fc\"\n  },\n  \":not(pre) > code[class*=\\\"language-\\\"]\": {\n    \"background\": \"#f5f2f0\",\n    \"padding\": \".1em\",\n    \"borderRadius\": \".3em\",\n    \"whiteSpace\": \"normal\"\n  },\n  \"comment\": {\n    \"color\": \"slategray\"\n  },\n  \"prolog\": {\n    \"color\": \"slategray\"\n  },\n  \"doctype\": {\n    \"color\": \"slategray\"\n  },\n  \"cdata\": {\n    \"color\": \"slategray\"\n  },\n  \"punctuation\": {\n    \"color\": \"#999\"\n  },\n  \"namespace\": {\n    \"Opacity\": \".7\"\n  },\n  \"property\": {\n    \"color\": \"#905\"\n  },\n  \"tag\": {\n    \"color\": \"#905\"\n  },\n  \"boolean\": {\n    \"color\": \"#905\"\n  },\n  \"number\": {\n    \"color\": \"#905\"\n  },\n  \"constant\": {\n    \"color\": \"#905\"\n  },\n  \"symbol\": {\n    \"color\": \"#905\"\n  },\n  \"deleted\": {\n    \"color\": \"#905\"\n  },\n  \"selector\": {\n    \"color\": \"#690\"\n  },\n  \"attr-name\": {\n    \"color\": \"#690\"\n  },\n  \"string\": {\n    \"color\": \"#690\"\n  },\n  \"char\": {\n    \"color\": \"#690\"\n  },\n  \"builtin\": {\n    \"color\": \"#690\"\n  },\n  \"inserted\": {\n    \"color\": \"#690\"\n  },\n  \"operator\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"entity\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\",\n    \"cursor\": \"help\"\n  },\n  \"url\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".language-css .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \".style .token.string\": {\n    \"color\": \"#9a6e3a\",\n    \"background\": \"hsla(0, 0%, 100%, .5)\"\n  },\n  \"atrule\": {\n    \"color\": \"#07a\"\n  },\n  \"attr-value\": {\n    \"color\": \"#07a\"\n  },\n  \"keyword\": {\n    \"color\": \"#07a\"\n  },\n  \"function\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"class-name\": {\n    \"color\": \"#DD4A68\"\n  },\n  \"regex\": {\n    \"color\": \"#e90\"\n  },\n  \"important\": {\n    \"color\": \"#e90\",\n    \"fontWeight\": \"bold\"\n  },\n  \"variable\": {\n    \"color\": \"#e90\"\n  },\n  \"bold\": {\n    \"fontWeight\": \"bold\"\n  },\n  \"italic\": {\n    \"fontStyle\": \"italic\"\n  }\n};","import highlight from './highlight';\nimport defaultStyle from './styles/prism/prism';\nimport refractor from 'refractor';\nimport supportedLanguages from './languages/prism/supported-languages';\nvar highlighter = highlight(refractor, defaultStyle);\nhighlighter.supportedLanguages = supportedLanguages;\nexport default highlighter;","//\n// This file has been auto-generated by the `npm run build-languages-prism` task\n//\nexport default ['abap', 'abnf', 'actionscript', 'ada', 'agda', 'al', 'antlr4', 'apacheconf', 'apex', 'apl', 'applescript', 'aql', 'arduino', 'arff', 'asciidoc', 'asm6502', 'asmatmel', 'aspnet', 'autohotkey', 'autoit', 'avisynth', 'avro-idl', 'bash', 'basic', 'batch', 'bbcode', 'bicep', 'birb', 'bison', 'bnf', 'brainfuck', 'brightscript', 'bro', 'bsl', 'c', 'cfscript', 'chaiscript', 'cil', 'clike', 'clojure', 'cmake', 'cobol', 'coffeescript', 'concurnas', 'coq', 'cpp', 'crystal', 'csharp', 'cshtml', 'csp', 'css-extras', 'css', 'csv', 'cypher', 'd', 'dart', 'dataweave', 'dax', 'dhall', 'diff', 'django', 'dns-zone-file', 'docker', 'dot', 'ebnf', 'editorconfig', 'eiffel', 'ejs', 'elixir', 'elm', 'erb', 'erlang', 'etlua', 'excel-formula', 'factor', 'false', 'firestore-security-rules', 'flow', 'fortran', 'fsharp', 'ftl', 'gap', 'gcode', 'gdscript', 'gedcom', 'gherkin', 'git', 'glsl', 'gml', 'gn', 'go-module', 'go', 'graphql', 'groovy', 'haml', 'handlebars', 'haskell', 'haxe', 'hcl', 'hlsl', 'hoon', 'hpkp', 'hsts', 'http', 'ichigojam', 'icon', 'icu-message-format', 'idris', 'iecst', 'ignore', 'inform7', 'ini', 'io', 'j', 'java', 'javadoc', 'javadoclike', 'javascript', 'javastacktrace', 'jexl', 'jolie', 'jq', 'js-extras', 'js-templates', 'jsdoc', 'json', 'json5', 'jsonp', 'jsstacktrace', 'jsx', 'julia', 'keepalived', 'keyman', 'kotlin', 'kumir', 'kusto', 'latex', 'latte', 'less', 'lilypond', 'liquid', 'lisp', 'livescript', 'llvm', 'log', 'lolcode', 'lua', 'magma', 'makefile', 'markdown', 'markup-templating', 'markup', 'matlab', 'maxscript', 'mel', 'mermaid', 'mizar', 'mongodb', 'monkey', 'moonscript', 'n1ql', 'n4js', 'nand2tetris-hdl', 'naniscript', 'nasm', 'neon', 'nevod', 'nginx', 'nim', 'nix', 'nsis', 'objectivec', 'ocaml', 'opencl', 'openqasm', 'oz', 'parigp', 'parser', 'pascal', 'pascaligo', 'pcaxis', 'peoplecode', 'perl', 'php-extras', 'php', 'phpdoc', 'plsql', 'powerquery', 'powershell', 'processing', 'prolog', 'promql', 'properties', 'protobuf', 'psl', 'pug', 'puppet', 'pure', 'purebasic', 'purescript', 'python', 'q', 'qml', 'qore', 'qsharp', 'r', 'racket', 'reason', 'regex', 'rego', 'renpy', 'rest', 'rip', 'roboconf', 'robotframework', 'ruby', 'rust', 'sas', 'sass', 'scala', 'scheme', 'scss', 'shell-session', 'smali', 'smalltalk', 'smarty', 'sml', 'solidity', 'solution-file', 'soy', 'sparql', 'splunk-spl', 'sqf', 'sql', 'squirrel', 'stan', 'stylus', 'swift', 'systemd', 't4-cs', 't4-templating', 't4-vb', 'tap', 'tcl', 'textile', 'toml', 'tremor', 'tsx', 'tt2', 'turtle', 'twig', 'typescript', 'typoscript', 'unrealscript', 'uorazor', 'uri', 'v', 'vala', 'vbnet', 'velocity', 'verilog', 'vhdl', 'vim', 'visual-basic', 'warpscript', 'wasm', 'web-idl', 'wiki', 'wolfram', 'wren', 'xeora', 'xml-doc', 'xojo', 'xquery', 'yaml', 'yang', 'zig'];","import React from 'react';\r\nimport Markdown from 'react-markdown'\r\nimport rehypeRaw from 'rehype-raw'\r\nimport remarkGfm from 'remark-gfm'\r\nimport {Prism as SyntaxHighlighter} from 'react-syntax-highlighter'\r\n\r\n/** Renderer component that converts text into a React component according to Markdown format. */\r\nexport default function MarkdownRenderer({ text }) {\r\n  return (\r\n    <Markdown \r\n      remarkPlugins={[remarkGfm]} // enables GFM extensions\r\n      rehypePlugins={[rehypeRaw]} // enables html tags inside markdown file\r\n      components={{\r\n        code(props) { // apply syntax highlighting inside code blocks\r\n          const {children, className, node, ...rest} = props\r\n          const match = /language-(\\w+)/.exec(className || '') // find matching language\r\n          return match ? (\r\n            <SyntaxHighlighter\r\n              {...rest}\r\n              PreTag=\"div\"\r\n              children={String(children).replace(/\\n$/, '')}\r\n              language={match[1]}\r\n              /*style={dark}*/ // dark mode for code block \r\n            />\r\n          ) : (\r\n            <code {...rest} className={className}>\r\n              {children}\r\n            </code>\r\n          )\r\n        }\r\n      }}>\r\n      {text}\r\n    </Markdown>\r\n  );\r\n}","// extracted by mini-css-extract-plugin\nexport var post = \"Post-module--post--83824\";\nexport var post__content = \"Post-module--post__content--4d366\";\nexport var post__side = \"Post-module--post__side--ee9f4\";\nexport var post__side__title = \"Post-module--post__side__title--695ad\";","import React, { useState, useEffect } from 'react';\r\n\r\nimport ContentsTree from \"../components/ContentsTree\"\r\nimport MarkdownRenderer from '../components/MarkdownRenderer';\r\n\r\nimport * as styles from \"../styles/Post.module.css\";\r\n\r\n/** Template component for posting.\r\n    Use 'pageContext' to fetch the markdown file to be used as content. */\r\nexport default function Post({ pageContext }) {\r\n  const [postContent, setPostContent] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        await fetch(`${process.env.GATSBY_PUBLIC_URL}/${pageContext.filePath}`)\r\n        .then((r) => r.text())\r\n        .then(text  => {\r\n          // resolve path variable by replacing placeholder '___MEDIA_FILE_PATH___' inside the markdown file\r\n          const path_resolved = text.replace(/___MEDIA_FILE_PATH___/g, `${process.env.GATSBY_PUBLIC_URL}/${pageContext.mediaPath}`);\r\n          setPostContent(path_resolved);\r\n        })\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n      \r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) { // markdown file not yet fetched\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"post\"]}>\r\n      <div className={styles[\"post__side\"]}>\r\n        <div className={styles[\"post__side__title\"]}>bill0077.log</div>\r\n        <ContentsTree />\r\n      </div>\r\n      <div className={styles[\"post__content\"]}>\r\n        <MarkdownRenderer text={postContent} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","'use strict'\n\nmodule.exports = parse\n\nvar search = /[#.]/g\n\n// Create a hast element from a simple CSS selector.\nfunction parse(selector, defaultTagName) {\n  var value = selector || ''\n  var name = defaultTagName || 'div'\n  var props = {}\n  var start = 0\n  var subvalue\n  var previous\n  var match\n\n  while (start < value.length) {\n    search.lastIndex = start\n    match = search.exec(value)\n    subvalue = value.slice(start, match ? match.index : value.length)\n\n    if (subvalue) {\n      if (!previous) {\n        name = subvalue\n      } else if (previous === '#') {\n        props.id = subvalue\n      } else if (props.className) {\n        props.className.push(subvalue)\n      } else {\n        props.className = [subvalue]\n      }\n\n      start += subvalue.length\n    }\n\n    if (match) {\n      previous = match[0]\n      start++\n    }\n  }\n\n  return {type: 'element', tagName: name, properties: props, children: []}\n}\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function (style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function (node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar inline_style_parser_1 = __importDefault(require(\"inline-style-parser\"));\n/**\n * Parses inline style to object.\n *\n * @param style - Inline style.\n * @param iterator - Iterator.\n * @returns - Style object or null.\n *\n * @example Parsing inline style to object:\n *\n * ```js\n * import parse from 'style-to-object';\n * parse('line-height: 42;'); // { 'line-height': '42' }\n * ```\n */\nfunction StyleToObject(style, iterator) {\n    var styleObject = null;\n    if (!style || typeof style !== 'string') {\n        return styleObject;\n    }\n    var declarations = (0, inline_style_parser_1.default)(style);\n    var hasIterator = typeof iterator === 'function';\n    declarations.forEach(function (declaration) {\n        if (declaration.type !== 'declaration') {\n            return;\n        }\n        var property = declaration.property, value = declaration.value;\n        if (hasIterator) {\n            iterator(property, value, declaration);\n        }\n        else if (value) {\n            styleObject = styleObject || {};\n            styleObject[property] = value;\n        }\n    });\n    return styleObject;\n}\nexports.default = StyleToObject;\n//# sourceMappingURL=index.js.map","'use strict'\n\nvar find = require('property-information/find')\nvar normalize = require('property-information/normalize')\nvar parseSelector = require('hast-util-parse-selector')\nvar spaces = require('space-separated-tokens').parse\nvar commas = require('comma-separated-tokens').parse\n\nmodule.exports = factory\n\nvar own = {}.hasOwnProperty\n\nfunction factory(schema, defaultTagName, caseSensitive) {\n  var adjust = caseSensitive ? createAdjustMap(caseSensitive) : null\n\n  return h\n\n  // Hyperscript compatible DSL for creating virtual hast trees.\n  function h(selector, properties) {\n    var node = parseSelector(selector, defaultTagName)\n    var children = Array.prototype.slice.call(arguments, 2)\n    var name = node.tagName.toLowerCase()\n    var property\n\n    node.tagName = adjust && own.call(adjust, name) ? adjust[name] : name\n\n    if (properties && isChildren(properties, node)) {\n      children.unshift(properties)\n      properties = null\n    }\n\n    if (properties) {\n      for (property in properties) {\n        addProperty(node.properties, property, properties[property])\n      }\n    }\n\n    addChild(node.children, children)\n\n    if (node.tagName === 'template') {\n      node.content = {type: 'root', children: node.children}\n      node.children = []\n    }\n\n    return node\n  }\n\n  function addProperty(properties, key, value) {\n    var info\n    var property\n    var result\n\n    // Ignore nullish and NaN values.\n    if (value === null || value === undefined || value !== value) {\n      return\n    }\n\n    info = find(schema, key)\n    property = info.property\n    result = value\n\n    // Handle list values.\n    if (typeof result === 'string') {\n      if (info.spaceSeparated) {\n        result = spaces(result)\n      } else if (info.commaSeparated) {\n        result = commas(result)\n      } else if (info.commaOrSpaceSeparated) {\n        result = spaces(commas(result).join(' '))\n      }\n    }\n\n    // Accept `object` on style.\n    if (property === 'style' && typeof value !== 'string') {\n      result = style(result)\n    }\n\n    // Class-names (which can be added both on the `selector` and here).\n    if (property === 'className' && properties.className) {\n      result = properties.className.concat(result)\n    }\n\n    properties[property] = parsePrimitives(info, property, result)\n  }\n}\n\nfunction isChildren(value, node) {\n  return (\n    typeof value === 'string' ||\n    'length' in value ||\n    isNode(node.tagName, value)\n  )\n}\n\nfunction isNode(tagName, value) {\n  var type = value.type\n\n  if (tagName === 'input' || !type || typeof type !== 'string') {\n    return false\n  }\n\n  if (typeof value.children === 'object' && 'length' in value.children) {\n    return true\n  }\n\n  type = type.toLowerCase()\n\n  if (tagName === 'button') {\n    return (\n      type !== 'menu' &&\n      type !== 'submit' &&\n      type !== 'reset' &&\n      type !== 'button'\n    )\n  }\n\n  return 'value' in value\n}\n\nfunction addChild(nodes, value) {\n  var index\n  var length\n\n  if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n    return\n  }\n\n  if (typeof value === 'object' && 'length' in value) {\n    index = -1\n    length = value.length\n\n    while (++index < length) {\n      addChild(nodes, value[index])\n    }\n\n    return\n  }\n\n  if (typeof value !== 'object' || !('type' in value)) {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n\n  nodes.push(value)\n}\n\n// Parse a (list of) primitives.\nfunction parsePrimitives(info, name, value) {\n  var index\n  var length\n  var result\n\n  if (typeof value !== 'object' || !('length' in value)) {\n    return parsePrimitive(info, name, value)\n  }\n\n  length = value.length\n  index = -1\n  result = []\n\n  while (++index < length) {\n    result[index] = parsePrimitive(info, name, value[index])\n  }\n\n  return result\n}\n\n// Parse a single primitives.\nfunction parsePrimitive(info, name, value) {\n  var result = value\n\n  if (info.number || info.positiveNumber) {\n    if (!isNaN(result) && result !== '') {\n      result = Number(result)\n    }\n  } else if (info.boolean || info.overloadedBoolean) {\n    // Accept `boolean` and `string`.\n    if (\n      typeof result === 'string' &&\n      (result === '' || normalize(value) === normalize(name))\n    ) {\n      result = true\n    }\n  }\n\n  return result\n}\n\nfunction style(value) {\n  var result = []\n  var key\n\n  for (key in value) {\n    result.push([key, value[key]].join(': '))\n  }\n\n  return result.join('; ')\n}\n\nfunction createAdjustMap(values) {\n  var length = values.length\n  var index = -1\n  var result = {}\n  var value\n\n  while (++index < length) {\n    value = values[index]\n    result[value.toLowerCase()] = value\n  }\n\n  return result\n}\n","'use strict'\n\nvar schema = require('property-information/html')\nvar factory = require('./factory')\n\nvar html = factory(schema, 'div')\nhtml.displayName = 'html'\n\nmodule.exports = html\n","'use strict'\n\nmodule.exports = require('./html')\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n","'use strict'\n\nvar normalize = require('./normalize')\nvar DefinedInfo = require('./lib/util/defined-info')\nvar Info = require('./lib/util/info')\n\nvar data = 'data'\n\nmodule.exports = find\n\nvar valid = /^data[-\\w.:]+$/i\nvar dash = /-[a-z]/g\nvar cap = /[A-Z]/g\n\nfunction find(schema, value) {\n  var normal = normalize(value)\n  var prop = value\n  var Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === data && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      prop = datasetToProperty(value)\n    } else {\n      value = datasetToAttribute(value)\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\nfunction datasetToProperty(attribute) {\n  var value = attribute.slice(5).replace(dash, camelcase)\n  return data + value.charAt(0).toUpperCase() + value.slice(1)\n}\n\nfunction datasetToAttribute(property) {\n  var value = property.slice(4)\n\n  if (dash.test(value)) {\n    return property\n  }\n\n  value = value.replace(cap, kebab)\n\n  if (value.charAt(0) !== '-') {\n    value = '-' + value\n  }\n\n  return data + value\n}\n\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","'use strict'\n\nvar merge = require('./lib/util/merge')\nvar xlink = require('./lib/xlink')\nvar xml = require('./lib/xml')\nvar xmlns = require('./lib/xmlns')\nvar aria = require('./lib/aria')\nvar html = require('./lib/html')\n\nmodule.exports = merge([xml, xlink, xmlns, aria, html])\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\n\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\n\nmodule.exports = create({\n  transform: ariaTransform,\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n\nfunction ariaTransform(_, prop) {\n  return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n}\n","'use strict'\n\nvar types = require('./util/types')\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nvar boolean = types.boolean\nvar overloadedBoolean = types.overloadedBoolean\nvar booleanish = types.booleanish\nvar number = types.number\nvar spaceSeparated = types.spaceSeparated\nvar commaSeparated = types.commaSeparated\n\nmodule.exports = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: commaSeparated,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextMenu: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: commaSeparated,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","'use strict'\n\nvar caseSensitiveTransform = require('./case-sensitive-transform')\n\nmodule.exports = caseInsensitiveTransform\n\nfunction caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","'use strict'\n\nmodule.exports = caseSensitiveTransform\n\nfunction caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","'use strict'\n\nvar normalize = require('../../normalize')\nvar Schema = require('./schema')\nvar DefinedInfo = require('./defined-info')\n\nmodule.exports = create\n\nfunction create(definition) {\n  var space = definition.space\n  var mustUseProperty = definition.mustUseProperty || []\n  var attributes = definition.attributes || {}\n  var props = definition.properties\n  var transform = definition.transform\n  var property = {}\n  var normal = {}\n  var prop\n  var info\n\n  for (prop in props) {\n    info = new DefinedInfo(\n      prop,\n      transform(attributes, prop),\n      props[prop],\n      space\n    )\n\n    if (mustUseProperty.indexOf(prop) !== -1) {\n      info.mustUseProperty = true\n    }\n\n    property[prop] = info\n\n    normal[normalize(prop)] = prop\n    normal[normalize(info.attribute)] = prop\n  }\n\n  return new Schema(property, normal, space)\n}\n","'use strict'\n\nvar Info = require('./info')\nvar types = require('./types')\n\nmodule.exports = DefinedInfo\n\nDefinedInfo.prototype = new Info()\nDefinedInfo.prototype.defined = true\n\nvar checks = [\n  'boolean',\n  'booleanish',\n  'overloadedBoolean',\n  'number',\n  'commaSeparated',\n  'spaceSeparated',\n  'commaOrSpaceSeparated'\n]\nvar checksLength = checks.length\n\nfunction DefinedInfo(property, attribute, mask, space) {\n  var index = -1\n  var check\n\n  mark(this, 'space', space)\n\n  Info.call(this, property, attribute)\n\n  while (++index < checksLength) {\n    check = checks[index]\n    mark(this, check, (mask & types[check]) === types[check])\n  }\n}\n\nfunction mark(values, key, value) {\n  if (value) {\n    values[key] = value\n  }\n}\n","'use strict'\n\nmodule.exports = Info\n\nvar proto = Info.prototype\n\nproto.space = null\nproto.attribute = null\nproto.property = null\nproto.boolean = false\nproto.booleanish = false\nproto.overloadedBoolean = false\nproto.number = false\nproto.commaSeparated = false\nproto.spaceSeparated = false\nproto.commaOrSpaceSeparated = false\nproto.mustUseProperty = false\nproto.defined = false\n\nfunction Info(property, attribute) {\n  this.property = property\n  this.attribute = attribute\n}\n","'use strict'\n\nvar xtend = require('xtend')\nvar Schema = require('./schema')\n\nmodule.exports = merge\n\nfunction merge(definitions) {\n  var length = definitions.length\n  var property = []\n  var normal = []\n  var index = -1\n  var info\n  var space\n\n  while (++index < length) {\n    info = definitions[index]\n    property.push(info.property)\n    normal.push(info.normal)\n    space = info.space\n  }\n\n  return new Schema(\n    xtend.apply(null, property),\n    xtend.apply(null, normal),\n    space\n  )\n}\n","'use strict'\n\nmodule.exports = Schema\n\nvar proto = Schema.prototype\n\nproto.space = null\nproto.normal = {}\nproto.property = {}\n\nfunction Schema(property, normal, space) {\n  this.property = property\n  this.normal = normal\n\n  if (space) {\n    this.space = space\n  }\n}\n","'use strict'\n\nvar powers = 0\n\nexports.boolean = increment()\nexports.booleanish = increment()\nexports.overloadedBoolean = increment()\nexports.number = increment()\nexports.spaceSeparated = increment()\nexports.commaSeparated = increment()\nexports.commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return Math.pow(2, ++powers)\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xlink',\n  transform: xlinkTransform,\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n\nfunction xlinkTransform(_, prop) {\n  return 'xlink:' + prop.slice(5).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\n\nmodule.exports = create({\n  space: 'xml',\n  transform: xmlTransform,\n  properties: {\n    xmlLang: null,\n    xmlBase: null,\n    xmlSpace: null\n  }\n})\n\nfunction xmlTransform(_, prop) {\n  return 'xml:' + prop.slice(3).toLowerCase()\n}\n","'use strict'\n\nvar create = require('./util/create')\nvar caseInsensitiveTransform = require('./util/case-insensitive-transform')\n\nmodule.exports = create({\n  space: 'xmlns',\n  attributes: {\n    xmlnsxlink: 'xmlns:xlink'\n  },\n  transform: caseInsensitiveTransform,\n  properties: {\n    xmlns: null,\n    xmlnsXLink: null\n  }\n})\n","'use strict'\n\nmodule.exports = normalize\n\nfunction normalize(value) {\n  return value.toLowerCase()\n}\n","'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar empty = ''\nvar space = ' '\nvar whiteSpace = /[ \\t\\n\\r\\f]+/g\n\nfunction parse(value) {\n  var input = String(value || empty).trim()\n  return input === empty ? [] : input.split(whiteSpace)\n}\n\nfunction stringify(values) {\n  return values.join(space).trim()\n}\n","'use strict'\n\n/* global window, self */\n\n// istanbul ignore next - Don't allow Prism to run on page load in browser or\n// to start messaging from workers.\nvar ctx =\n  typeof globalThis === 'object'\n    ? globalThis\n    : typeof self === 'object'\n    ? self\n    : typeof window === 'object'\n    ? window\n    : typeof global === 'object'\n    ? global\n    : {}\n\nvar restore = capture()\n\nctx.Prism = {manual: true, disableWorkerMessageHandler: true}\n\n// Load all stuff in `prism.js` itself, except for `prism-file-highlight.js`.\n// The wrapped non-leaky grammars are loaded instead of Prism’s originals.\nvar h = require('hastscript')\nvar decode = require('parse-entities')\nvar Prism = require('prismjs/components/prism-core')\nvar markup = require('./lang/markup')\nvar css = require('./lang/css')\nvar clike = require('./lang/clike')\nvar js = require('./lang/javascript')\n\nrestore()\n\nvar own = {}.hasOwnProperty\n\n// Inherit.\nfunction Refractor() {}\n\nRefractor.prototype = Prism\n\n// Construct.\nvar refract = new Refractor()\n\n// Expose.\nmodule.exports = refract\n\n// Create.\nrefract.highlight = highlight\nrefract.register = register\nrefract.alias = alias\nrefract.registered = registered\nrefract.listLanguages = listLanguages\n\n// Register bundled grammars.\nregister(markup)\nregister(css)\nregister(clike)\nregister(js)\n\nrefract.util.encode = encode\nrefract.Token.stringify = stringify\n\nfunction register(grammar) {\n  if (typeof grammar !== 'function' || !grammar.displayName) {\n    throw new Error('Expected `function` for `grammar`, got `' + grammar + '`')\n  }\n\n  // Do not duplicate registrations.\n  if (refract.languages[grammar.displayName] === undefined) {\n    grammar(refract)\n  }\n}\n\nfunction alias(name, alias) {\n  var languages = refract.languages\n  var map = name\n  var key\n  var list\n  var length\n  var index\n\n  if (alias) {\n    map = {}\n    map[name] = alias\n  }\n\n  for (key in map) {\n    list = map[key]\n    list = typeof list === 'string' ? [list] : list\n    length = list.length\n    index = -1\n\n    while (++index < length) {\n      languages[list[index]] = languages[key]\n    }\n  }\n}\n\nfunction highlight(value, name) {\n  var sup = Prism.highlight\n  var grammar\n\n  if (typeof value !== 'string') {\n    throw new Error('Expected `string` for `value`, got `' + value + '`')\n  }\n\n  // `name` is a grammar object.\n  if (refract.util.type(name) === 'Object') {\n    grammar = name\n    name = null\n  } else {\n    if (typeof name !== 'string') {\n      throw new Error('Expected `string` for `name`, got `' + name + '`')\n    }\n\n    if (own.call(refract.languages, name)) {\n      grammar = refract.languages[name]\n    } else {\n      throw new Error('Unknown language: `' + name + '` is not registered')\n    }\n  }\n\n  return sup.call(this, value, grammar, name)\n}\n\nfunction registered(language) {\n  if (typeof language !== 'string') {\n    throw new Error('Expected `string` for `language`, got `' + language + '`')\n  }\n\n  return own.call(refract.languages, language)\n}\n\nfunction listLanguages() {\n  var languages = refract.languages\n  var list = []\n  var language\n\n  for (language in languages) {\n    if (\n      own.call(languages, language) &&\n      typeof languages[language] === 'object'\n    ) {\n      list.push(language)\n    }\n  }\n\n  return list\n}\n\nfunction stringify(value, language, parent) {\n  var env\n\n  if (typeof value === 'string') {\n    return {type: 'text', value: value}\n  }\n\n  if (refract.util.type(value) === 'Array') {\n    return stringifyAll(value, language)\n  }\n\n  env = {\n    type: value.type,\n    content: refract.Token.stringify(value.content, language, parent),\n    tag: 'span',\n    classes: ['token', value.type],\n    attributes: {},\n    language: language,\n    parent: parent\n  }\n\n  if (value.alias) {\n    env.classes = env.classes.concat(value.alias)\n  }\n\n  refract.hooks.run('wrap', env)\n\n  return h(\n    env.tag + '.' + env.classes.join('.'),\n    attributes(env.attributes),\n    env.content\n  )\n}\n\nfunction stringifyAll(values, language) {\n  var result = []\n  var length = values.length\n  var index = -1\n  var value\n\n  while (++index < length) {\n    value = values[index]\n\n    if (value !== '' && value !== null && value !== undefined) {\n      result.push(value)\n    }\n  }\n\n  index = -1\n  length = result.length\n\n  while (++index < length) {\n    value = result[index]\n    result[index] = refract.Token.stringify(value, language, result)\n  }\n\n  return result\n}\n\nfunction encode(tokens) {\n  return tokens\n}\n\nfunction attributes(attrs) {\n  var key\n\n  for (key in attrs) {\n    attrs[key] = decode(attrs[key])\n  }\n\n  return attrs\n}\n\nfunction capture() {\n  var defined = 'Prism' in ctx\n  /* istanbul ignore next */\n  var current = defined ? ctx.Prism : undefined\n\n  return restore\n\n  function restore() {\n    /* istanbul ignore else - Clean leaks after Prism. */\n    if (defined) {\n      ctx.Prism = current\n    } else {\n      delete ctx.Prism\n    }\n\n    defined = undefined\n    current = undefined\n  }\n}\n","'use strict'\n\nvar refractor = require('./core.js')\n\nmodule.exports = refractor\n\nrefractor.register(require('./lang/abap.js'))\nrefractor.register(require('./lang/abnf.js'))\nrefractor.register(require('./lang/actionscript.js'))\nrefractor.register(require('./lang/ada.js'))\nrefractor.register(require('./lang/agda.js'))\nrefractor.register(require('./lang/al.js'))\nrefractor.register(require('./lang/antlr4.js'))\nrefractor.register(require('./lang/apacheconf.js'))\nrefractor.register(require('./lang/apex.js'))\nrefractor.register(require('./lang/apl.js'))\nrefractor.register(require('./lang/applescript.js'))\nrefractor.register(require('./lang/aql.js'))\nrefractor.register(require('./lang/arduino.js'))\nrefractor.register(require('./lang/arff.js'))\nrefractor.register(require('./lang/asciidoc.js'))\nrefractor.register(require('./lang/asm6502.js'))\nrefractor.register(require('./lang/asmatmel.js'))\nrefractor.register(require('./lang/aspnet.js'))\nrefractor.register(require('./lang/autohotkey.js'))\nrefractor.register(require('./lang/autoit.js'))\nrefractor.register(require('./lang/avisynth.js'))\nrefractor.register(require('./lang/avro-idl.js'))\nrefractor.register(require('./lang/bash.js'))\nrefractor.register(require('./lang/basic.js'))\nrefractor.register(require('./lang/batch.js'))\nrefractor.register(require('./lang/bbcode.js'))\nrefractor.register(require('./lang/bicep.js'))\nrefractor.register(require('./lang/birb.js'))\nrefractor.register(require('./lang/bison.js'))\nrefractor.register(require('./lang/bnf.js'))\nrefractor.register(require('./lang/brainfuck.js'))\nrefractor.register(require('./lang/brightscript.js'))\nrefractor.register(require('./lang/bro.js'))\nrefractor.register(require('./lang/bsl.js'))\nrefractor.register(require('./lang/c.js'))\nrefractor.register(require('./lang/cfscript.js'))\nrefractor.register(require('./lang/chaiscript.js'))\nrefractor.register(require('./lang/cil.js'))\nrefractor.register(require('./lang/clojure.js'))\nrefractor.register(require('./lang/cmake.js'))\nrefractor.register(require('./lang/cobol.js'))\nrefractor.register(require('./lang/coffeescript.js'))\nrefractor.register(require('./lang/concurnas.js'))\nrefractor.register(require('./lang/coq.js'))\nrefractor.register(require('./lang/cpp.js'))\nrefractor.register(require('./lang/crystal.js'))\nrefractor.register(require('./lang/csharp.js'))\nrefractor.register(require('./lang/cshtml.js'))\nrefractor.register(require('./lang/csp.js'))\nrefractor.register(require('./lang/css-extras.js'))\nrefractor.register(require('./lang/csv.js'))\nrefractor.register(require('./lang/cypher.js'))\nrefractor.register(require('./lang/d.js'))\nrefractor.register(require('./lang/dart.js'))\nrefractor.register(require('./lang/dataweave.js'))\nrefractor.register(require('./lang/dax.js'))\nrefractor.register(require('./lang/dhall.js'))\nrefractor.register(require('./lang/diff.js'))\nrefractor.register(require('./lang/django.js'))\nrefractor.register(require('./lang/dns-zone-file.js'))\nrefractor.register(require('./lang/docker.js'))\nrefractor.register(require('./lang/dot.js'))\nrefractor.register(require('./lang/ebnf.js'))\nrefractor.register(require('./lang/editorconfig.js'))\nrefractor.register(require('./lang/eiffel.js'))\nrefractor.register(require('./lang/ejs.js'))\nrefractor.register(require('./lang/elixir.js'))\nrefractor.register(require('./lang/elm.js'))\nrefractor.register(require('./lang/erb.js'))\nrefractor.register(require('./lang/erlang.js'))\nrefractor.register(require('./lang/etlua.js'))\nrefractor.register(require('./lang/excel-formula.js'))\nrefractor.register(require('./lang/factor.js'))\nrefractor.register(require('./lang/false.js'))\nrefractor.register(require('./lang/firestore-security-rules.js'))\nrefractor.register(require('./lang/flow.js'))\nrefractor.register(require('./lang/fortran.js'))\nrefractor.register(require('./lang/fsharp.js'))\nrefractor.register(require('./lang/ftl.js'))\nrefractor.register(require('./lang/gap.js'))\nrefractor.register(require('./lang/gcode.js'))\nrefractor.register(require('./lang/gdscript.js'))\nrefractor.register(require('./lang/gedcom.js'))\nrefractor.register(require('./lang/gherkin.js'))\nrefractor.register(require('./lang/git.js'))\nrefractor.register(require('./lang/glsl.js'))\nrefractor.register(require('./lang/gml.js'))\nrefractor.register(require('./lang/gn.js'))\nrefractor.register(require('./lang/go-module.js'))\nrefractor.register(require('./lang/go.js'))\nrefractor.register(require('./lang/graphql.js'))\nrefractor.register(require('./lang/groovy.js'))\nrefractor.register(require('./lang/haml.js'))\nrefractor.register(require('./lang/handlebars.js'))\nrefractor.register(require('./lang/haskell.js'))\nrefractor.register(require('./lang/haxe.js'))\nrefractor.register(require('./lang/hcl.js'))\nrefractor.register(require('./lang/hlsl.js'))\nrefractor.register(require('./lang/hoon.js'))\nrefractor.register(require('./lang/hpkp.js'))\nrefractor.register(require('./lang/hsts.js'))\nrefractor.register(require('./lang/http.js'))\nrefractor.register(require('./lang/ichigojam.js'))\nrefractor.register(require('./lang/icon.js'))\nrefractor.register(require('./lang/icu-message-format.js'))\nrefractor.register(require('./lang/idris.js'))\nrefractor.register(require('./lang/iecst.js'))\nrefractor.register(require('./lang/ignore.js'))\nrefractor.register(require('./lang/inform7.js'))\nrefractor.register(require('./lang/ini.js'))\nrefractor.register(require('./lang/io.js'))\nrefractor.register(require('./lang/j.js'))\nrefractor.register(require('./lang/java.js'))\nrefractor.register(require('./lang/javadoc.js'))\nrefractor.register(require('./lang/javadoclike.js'))\nrefractor.register(require('./lang/javastacktrace.js'))\nrefractor.register(require('./lang/jexl.js'))\nrefractor.register(require('./lang/jolie.js'))\nrefractor.register(require('./lang/jq.js'))\nrefractor.register(require('./lang/js-extras.js'))\nrefractor.register(require('./lang/js-templates.js'))\nrefractor.register(require('./lang/jsdoc.js'))\nrefractor.register(require('./lang/json.js'))\nrefractor.register(require('./lang/json5.js'))\nrefractor.register(require('./lang/jsonp.js'))\nrefractor.register(require('./lang/jsstacktrace.js'))\nrefractor.register(require('./lang/jsx.js'))\nrefractor.register(require('./lang/julia.js'))\nrefractor.register(require('./lang/keepalived.js'))\nrefractor.register(require('./lang/keyman.js'))\nrefractor.register(require('./lang/kotlin.js'))\nrefractor.register(require('./lang/kumir.js'))\nrefractor.register(require('./lang/kusto.js'))\nrefractor.register(require('./lang/latex.js'))\nrefractor.register(require('./lang/latte.js'))\nrefractor.register(require('./lang/less.js'))\nrefractor.register(require('./lang/lilypond.js'))\nrefractor.register(require('./lang/liquid.js'))\nrefractor.register(require('./lang/lisp.js'))\nrefractor.register(require('./lang/livescript.js'))\nrefractor.register(require('./lang/llvm.js'))\nrefractor.register(require('./lang/log.js'))\nrefractor.register(require('./lang/lolcode.js'))\nrefractor.register(require('./lang/lua.js'))\nrefractor.register(require('./lang/magma.js'))\nrefractor.register(require('./lang/makefile.js'))\nrefractor.register(require('./lang/markdown.js'))\nrefractor.register(require('./lang/markup-templating.js'))\nrefractor.register(require('./lang/matlab.js'))\nrefractor.register(require('./lang/maxscript.js'))\nrefractor.register(require('./lang/mel.js'))\nrefractor.register(require('./lang/mermaid.js'))\nrefractor.register(require('./lang/mizar.js'))\nrefractor.register(require('./lang/mongodb.js'))\nrefractor.register(require('./lang/monkey.js'))\nrefractor.register(require('./lang/moonscript.js'))\nrefractor.register(require('./lang/n1ql.js'))\nrefractor.register(require('./lang/n4js.js'))\nrefractor.register(require('./lang/nand2tetris-hdl.js'))\nrefractor.register(require('./lang/naniscript.js'))\nrefractor.register(require('./lang/nasm.js'))\nrefractor.register(require('./lang/neon.js'))\nrefractor.register(require('./lang/nevod.js'))\nrefractor.register(require('./lang/nginx.js'))\nrefractor.register(require('./lang/nim.js'))\nrefractor.register(require('./lang/nix.js'))\nrefractor.register(require('./lang/nsis.js'))\nrefractor.register(require('./lang/objectivec.js'))\nrefractor.register(require('./lang/ocaml.js'))\nrefractor.register(require('./lang/opencl.js'))\nrefractor.register(require('./lang/openqasm.js'))\nrefractor.register(require('./lang/oz.js'))\nrefractor.register(require('./lang/parigp.js'))\nrefractor.register(require('./lang/parser.js'))\nrefractor.register(require('./lang/pascal.js'))\nrefractor.register(require('./lang/pascaligo.js'))\nrefractor.register(require('./lang/pcaxis.js'))\nrefractor.register(require('./lang/peoplecode.js'))\nrefractor.register(require('./lang/perl.js'))\nrefractor.register(require('./lang/php-extras.js'))\nrefractor.register(require('./lang/php.js'))\nrefractor.register(require('./lang/phpdoc.js'))\nrefractor.register(require('./lang/plsql.js'))\nrefractor.register(require('./lang/powerquery.js'))\nrefractor.register(require('./lang/powershell.js'))\nrefractor.register(require('./lang/processing.js'))\nrefractor.register(require('./lang/prolog.js'))\nrefractor.register(require('./lang/promql.js'))\nrefractor.register(require('./lang/properties.js'))\nrefractor.register(require('./lang/protobuf.js'))\nrefractor.register(require('./lang/psl.js'))\nrefractor.register(require('./lang/pug.js'))\nrefractor.register(require('./lang/puppet.js'))\nrefractor.register(require('./lang/pure.js'))\nrefractor.register(require('./lang/purebasic.js'))\nrefractor.register(require('./lang/purescript.js'))\nrefractor.register(require('./lang/python.js'))\nrefractor.register(require('./lang/q.js'))\nrefractor.register(require('./lang/qml.js'))\nrefractor.register(require('./lang/qore.js'))\nrefractor.register(require('./lang/qsharp.js'))\nrefractor.register(require('./lang/r.js'))\nrefractor.register(require('./lang/racket.js'))\nrefractor.register(require('./lang/reason.js'))\nrefractor.register(require('./lang/regex.js'))\nrefractor.register(require('./lang/rego.js'))\nrefractor.register(require('./lang/renpy.js'))\nrefractor.register(require('./lang/rest.js'))\nrefractor.register(require('./lang/rip.js'))\nrefractor.register(require('./lang/roboconf.js'))\nrefractor.register(require('./lang/robotframework.js'))\nrefractor.register(require('./lang/ruby.js'))\nrefractor.register(require('./lang/rust.js'))\nrefractor.register(require('./lang/sas.js'))\nrefractor.register(require('./lang/sass.js'))\nrefractor.register(require('./lang/scala.js'))\nrefractor.register(require('./lang/scheme.js'))\nrefractor.register(require('./lang/scss.js'))\nrefractor.register(require('./lang/shell-session.js'))\nrefractor.register(require('./lang/smali.js'))\nrefractor.register(require('./lang/smalltalk.js'))\nrefractor.register(require('./lang/smarty.js'))\nrefractor.register(require('./lang/sml.js'))\nrefractor.register(require('./lang/solidity.js'))\nrefractor.register(require('./lang/solution-file.js'))\nrefractor.register(require('./lang/soy.js'))\nrefractor.register(require('./lang/sparql.js'))\nrefractor.register(require('./lang/splunk-spl.js'))\nrefractor.register(require('./lang/sqf.js'))\nrefractor.register(require('./lang/sql.js'))\nrefractor.register(require('./lang/squirrel.js'))\nrefractor.register(require('./lang/stan.js'))\nrefractor.register(require('./lang/stylus.js'))\nrefractor.register(require('./lang/swift.js'))\nrefractor.register(require('./lang/systemd.js'))\nrefractor.register(require('./lang/t4-cs.js'))\nrefractor.register(require('./lang/t4-templating.js'))\nrefractor.register(require('./lang/t4-vb.js'))\nrefractor.register(require('./lang/tap.js'))\nrefractor.register(require('./lang/tcl.js'))\nrefractor.register(require('./lang/textile.js'))\nrefractor.register(require('./lang/toml.js'))\nrefractor.register(require('./lang/tremor.js'))\nrefractor.register(require('./lang/tsx.js'))\nrefractor.register(require('./lang/tt2.js'))\nrefractor.register(require('./lang/turtle.js'))\nrefractor.register(require('./lang/twig.js'))\nrefractor.register(require('./lang/typescript.js'))\nrefractor.register(require('./lang/typoscript.js'))\nrefractor.register(require('./lang/unrealscript.js'))\nrefractor.register(require('./lang/uorazor.js'))\nrefractor.register(require('./lang/uri.js'))\nrefractor.register(require('./lang/v.js'))\nrefractor.register(require('./lang/vala.js'))\nrefractor.register(require('./lang/vbnet.js'))\nrefractor.register(require('./lang/velocity.js'))\nrefractor.register(require('./lang/verilog.js'))\nrefractor.register(require('./lang/vhdl.js'))\nrefractor.register(require('./lang/vim.js'))\nrefractor.register(require('./lang/visual-basic.js'))\nrefractor.register(require('./lang/warpscript.js'))\nrefractor.register(require('./lang/wasm.js'))\nrefractor.register(require('./lang/web-idl.js'))\nrefractor.register(require('./lang/wiki.js'))\nrefractor.register(require('./lang/wolfram.js'))\nrefractor.register(require('./lang/wren.js'))\nrefractor.register(require('./lang/xeora.js'))\nrefractor.register(require('./lang/xml-doc.js'))\nrefractor.register(require('./lang/xojo.js'))\nrefractor.register(require('./lang/xquery.js'))\nrefractor.register(require('./lang/yaml.js'))\nrefractor.register(require('./lang/yang.js'))\nrefractor.register(require('./lang/zig.js'))\n","'use strict'\n\nmodule.exports = abap\nabap.displayName = 'abap'\nabap.aliases = []\nfunction abap(Prism) {\n  Prism.languages.abap = {\n    comment: /^\\*.*/m,\n    string: /(`|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'string-template': {\n      pattern: /([|}])(?:\\\\.|[^\\\\|{\\r\\n])*(?=[|{])/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    /* End Of Line comments should not interfere with strings when the\nquote character occurs within them. We assume a string being highlighted\ninside an EOL comment is more acceptable than the opposite.\n*/\n    'eol-comment': {\n      pattern: /(^|\\s)\".*/m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    keyword: {\n      pattern:\n        /(\\s|\\.|^)(?:SCIENTIFIC_WITH_LEADING_ZERO|SCALE_PRESERVING_SCIENTIFIC|RMC_COMMUNICATION_FAILURE|END-ENHANCEMENT-SECTION|MULTIPLY-CORRESPONDING|SUBTRACT-CORRESPONDING|VERIFICATION-MESSAGE|DIVIDE-CORRESPONDING|ENHANCEMENT-SECTION|CURRENCY_CONVERSION|RMC_SYSTEM_FAILURE|START-OF-SELECTION|MOVE-CORRESPONDING|RMC_INVALID_STATUS|CUSTOMER-FUNCTION|END-OF-DEFINITION|ENHANCEMENT-POINT|SYSTEM-EXCEPTIONS|ADD-CORRESPONDING|SCALE_PRESERVING|SELECTION-SCREEN|CURSOR-SELECTION|END-OF-SELECTION|LOAD-OF-PROGRAM|SCROLL-BOUNDARY|SELECTION-TABLE|EXCEPTION-TABLE|IMPLEMENTATIONS|PARAMETER-TABLE|RIGHT-JUSTIFIED|UNIT_CONVERSION|AUTHORITY-CHECK|LIST-PROCESSING|SIGN_AS_POSTFIX|COL_BACKGROUND|IMPLEMENTATION|INTERFACE-POOL|TRANSFORMATION|IDENTIFICATION|ENDENHANCEMENT|LINE-SELECTION|INITIALIZATION|LEFT-JUSTIFIED|SELECT-OPTIONS|SELECTION-SETS|COMMUNICATION|CORRESPONDING|DECIMAL_SHIFT|PRINT-CONTROL|VALUE-REQUEST|CHAIN-REQUEST|FUNCTION-POOL|FIELD-SYMBOLS|FUNCTIONALITY|INVERTED-DATE|SELECTION-SET|CLASS-METHODS|OUTPUT-LENGTH|CLASS-CODING|COL_NEGATIVE|ERRORMESSAGE|FIELD-GROUPS|HELP-REQUEST|NO-EXTENSION|NO-TOPOFPAGE|REDEFINITION|DISPLAY-MODE|ENDINTERFACE|EXIT-COMMAND|FIELD-SYMBOL|NO-SCROLLING|SHORTDUMP-ID|ACCESSPOLICY|CLASS-EVENTS|COL_POSITIVE|DECLARATIONS|ENHANCEMENTS|FILTER-TABLE|SWITCHSTATES|SYNTAX-CHECK|TRANSPORTING|ASYNCHRONOUS|SYNTAX-TRACE|TOKENIZATION|USER-COMMAND|WITH-HEADING|ABAP-SOURCE|BREAK-POINT|CHAIN-INPUT|COMPRESSION|FIXED-POINT|NEW-SECTION|NON-UNICODE|OCCURRENCES|RESPONSIBLE|SYSTEM-CALL|TRACE-TABLE|ABBREVIATED|CHAR-TO-HEX|END-OF-FILE|ENDFUNCTION|ENVIRONMENT|ASSOCIATION|COL_HEADING|EDITOR-CALL|END-OF-PAGE|ENGINEERING|IMPLEMENTED|INTENSIFIED|RADIOBUTTON|SYSTEM-EXIT|TOP-OF-PAGE|TRANSACTION|APPLICATION|CONCATENATE|DESTINATION|ENHANCEMENT|IMMEDIATELY|NO-GROUPING|PRECOMPILED|REPLACEMENT|TITLE-LINES|ACTIVATION|BYTE-ORDER|CLASS-POOL|CONNECTION|CONVERSION|DEFINITION|DEPARTMENT|EXPIRATION|INHERITING|MESSAGE-ID|NO-HEADING|PERFORMING|QUEUE-ONLY|RIGHTSPACE|SCIENTIFIC|STATUSINFO|STRUCTURES|SYNCPOINTS|WITH-TITLE|ATTRIBUTES|BOUNDARIES|CLASS-DATA|COL_NORMAL|DD\\/MM\\/YYYY|DESCENDING|INTERFACES|LINE-COUNT|MM\\/DD\\/YYYY|NON-UNIQUE|PRESERVING|SELECTIONS|STATEMENTS|SUBROUTINE|TRUNCATION|TYPE-POOLS|ARITHMETIC|BACKGROUND|ENDPROVIDE|EXCEPTIONS|IDENTIFIER|INDEX-LINE|OBLIGATORY|PARAMETERS|PERCENTAGE|PUSHBUTTON|RESOLUTION|COMPONENTS|DEALLOCATE|DISCONNECT|DUPLICATES|FIRST-LINE|HEAD-LINES|NO-DISPLAY|OCCURRENCE|RESPECTING|RETURNCODE|SUBMATCHES|TRACE-FILE|ASCENDING|BYPASSING|ENDMODULE|EXCEPTION|EXCLUDING|EXPORTING|INCREMENT|MATCHCODE|PARAMETER|PARTIALLY|PREFERRED|REFERENCE|REPLACING|RETURNING|SELECTION|SEPARATED|SPECIFIED|STATEMENT|TIMESTAMP|TYPE-POOL|ACCEPTING|APPENDAGE|ASSIGNING|COL_GROUP|COMPARING|CONSTANTS|DANGEROUS|IMPORTING|INSTANCES|LEFTSPACE|LOG-POINT|QUICKINFO|READ-ONLY|SCROLLING|SQLSCRIPT|STEP-LOOP|TOP-LINES|TRANSLATE|APPENDING|AUTHORITY|CHARACTER|COMPONENT|CONDITION|DIRECTORY|DUPLICATE|MESSAGING|RECEIVING|SUBSCREEN|ACCORDING|COL_TOTAL|END-LINES|ENDMETHOD|ENDSELECT|EXPANDING|EXTENSION|INCLUDING|INFOTYPES|INTERFACE|INTERVALS|LINE-SIZE|PF-STATUS|PROCEDURE|PROTECTED|REQUESTED|RESUMABLE|RIGHTPLUS|SAP-SPOOL|SECONDARY|STRUCTURE|SUBSTRING|TABLEVIEW|NUMOFCHAR|ADJACENT|ANALYSIS|ASSIGNED|BACKWARD|CHANNELS|CHECKBOX|CONTINUE|CRITICAL|DATAINFO|DD\\/MM\\/YY|DURATION|ENCODING|ENDCLASS|FUNCTION|LEFTPLUS|LINEFEED|MM\\/DD\\/YY|OVERFLOW|RECEIVED|SKIPPING|SORTABLE|STANDARD|SUBTRACT|SUPPRESS|TABSTRIP|TITLEBAR|TRUNCATE|UNASSIGN|WHENEVER|ANALYZER|COALESCE|COMMENTS|CONDENSE|DECIMALS|DEFERRED|ENDWHILE|EXPLICIT|KEYWORDS|MESSAGES|POSITION|PRIORITY|RECEIVER|RENAMING|TIMEZONE|TRAILING|ALLOCATE|CENTERED|CIRCULAR|CONTROLS|CURRENCY|DELETING|DESCRIBE|DISTANCE|ENDCATCH|EXPONENT|EXTENDED|GENERATE|IGNORING|INCLUDES|INTERNAL|MAJOR-ID|MODIFIER|NEW-LINE|OPTIONAL|PROPERTY|ROLLBACK|STARTING|SUPPLIED|ABSTRACT|CHANGING|CONTEXTS|CREATING|CUSTOMER|DATABASE|DAYLIGHT|DEFINING|DISTINCT|DIVISION|ENABLING|ENDCHAIN|ESCAPING|HARMLESS|IMPLICIT|INACTIVE|LANGUAGE|MINOR-ID|MULTIPLY|NEW-PAGE|NO-TITLE|POS_HIGH|SEPARATE|TEXTPOOL|TRANSFER|SELECTOR|DBMAXLEN|ITERATOR|ARCHIVE|BIT-XOR|BYTE-CO|COLLECT|COMMENT|CURRENT|DEFAULT|DISPLAY|ENDFORM|EXTRACT|LEADING|LISTBOX|LOCATOR|MEMBERS|METHODS|NESTING|POS_LOW|PROCESS|PROVIDE|RAISING|RESERVE|SECONDS|SUMMARY|VISIBLE|BETWEEN|BIT-AND|BYTE-CS|CLEANUP|COMPUTE|CONTROL|CONVERT|DATASET|ENDCASE|FORWARD|HEADERS|HOTSPOT|INCLUDE|INVERSE|KEEPING|NO-ZERO|OBJECTS|OVERLAY|PADDING|PATTERN|PROGRAM|REFRESH|SECTION|SUMMING|TESTING|VERSION|WINDOWS|WITHOUT|BIT-NOT|BYTE-CA|BYTE-NA|CASTING|CONTEXT|COUNTRY|DYNAMIC|ENABLED|ENDLOOP|EXECUTE|FRIENDS|HANDLER|HEADING|INITIAL|\\*-INPUT|LOGFILE|MAXIMUM|MINIMUM|NO-GAPS|NO-SIGN|PRAGMAS|PRIMARY|PRIVATE|REDUCED|REPLACE|REQUEST|RESULTS|UNICODE|WARNING|ALIASES|BYTE-CN|BYTE-NS|CALLING|COL_KEY|COLUMNS|CONNECT|ENDEXEC|ENTRIES|EXCLUDE|FILTERS|FURTHER|HELP-ID|LOGICAL|MAPPING|MESSAGE|NAMETAB|OPTIONS|PACKAGE|PERFORM|RECEIVE|STATICS|VARYING|BINDING|CHARLEN|GREATER|XSTRLEN|ACCEPT|APPEND|DETAIL|ELSEIF|ENDING|ENDTRY|FORMAT|FRAMES|GIVING|HASHED|HEADER|IMPORT|INSERT|MARGIN|MODULE|NATIVE|OBJECT|OFFSET|REMOTE|RESUME|SAVING|SIMPLE|SUBMIT|TABBED|TOKENS|UNIQUE|UNPACK|UPDATE|WINDOW|YELLOW|ACTUAL|ASPECT|CENTER|CURSOR|DELETE|DIALOG|DIVIDE|DURING|ERRORS|EVENTS|EXTEND|FILTER|HANDLE|HAVING|IGNORE|LITTLE|MEMORY|NO-GAP|OCCURS|OPTION|PERSON|PLACES|PUBLIC|REDUCE|REPORT|RESULT|SINGLE|SORTED|SWITCH|SYNTAX|TARGET|VALUES|WRITER|ASSERT|BLOCKS|BOUNDS|BUFFER|CHANGE|COLUMN|COMMIT|CONCAT|COPIES|CREATE|DDMMYY|DEFINE|ENDIAN|ESCAPE|EXPAND|KERNEL|LAYOUT|LEGACY|LEVELS|MMDDYY|NUMBER|OUTPUT|RANGES|READER|RETURN|SCREEN|SEARCH|SELECT|SHARED|SOURCE|STABLE|STATIC|SUBKEY|SUFFIX|TABLES|UNWIND|YYMMDD|ASSIGN|BACKUP|BEFORE|BINARY|BIT-OR|BLANKS|CLIENT|CODING|COMMON|DEMAND|DYNPRO|EXCEPT|EXISTS|EXPORT|FIELDS|GLOBAL|GROUPS|LENGTH|LOCALE|MEDIUM|METHOD|MODIFY|NESTED|OTHERS|REJECT|SCROLL|SUPPLY|SYMBOL|ENDFOR|STRLEN|ALIGN|BEGIN|BOUND|ENDAT|ENTRY|EVENT|FINAL|FLUSH|GRANT|INNER|SHORT|USING|WRITE|AFTER|BLACK|BLOCK|CLOCK|COLOR|COUNT|DUMMY|EMPTY|ENDDO|ENDON|GREEN|INDEX|INOUT|LEAVE|LEVEL|LINES|MODIF|ORDER|OUTER|RANGE|RESET|RETRY|RIGHT|SMART|SPLIT|STYLE|TABLE|THROW|UNDER|UNTIL|UPPER|UTF-8|WHERE|ALIAS|BLANK|CLEAR|CLOSE|EXACT|FETCH|FIRST|FOUND|GROUP|LLANG|LOCAL|OTHER|REGEX|SPOOL|TITLE|TYPES|VALID|WHILE|ALPHA|BOXED|CATCH|CHAIN|CHECK|CLASS|COVER|ENDIF|EQUIV|FIELD|FLOOR|FRAME|INPUT|LOWER|MATCH|NODES|PAGES|PRINT|RAISE|ROUND|SHIFT|SPACE|SPOTS|STAMP|STATE|TASKS|TIMES|TRMAC|ULINE|UNION|VALUE|WIDTH|EQUAL|LOG10|TRUNC|BLOB|CASE|CEIL|CLOB|COND|EXIT|FILE|GAPS|HOLD|INCL|INTO|KEEP|KEYS|LAST|LINE|LONG|LPAD|MAIL|MODE|OPEN|PINK|READ|ROWS|TEST|THEN|ZERO|AREA|BACK|BADI|BYTE|CAST|EDIT|EXEC|FAIL|FIND|FKEQ|FONT|FREE|GKEQ|HIDE|INIT|ITNO|LATE|LOOP|MAIN|MARK|MOVE|NEXT|NULL|RISK|ROLE|UNIT|WAIT|ZONE|BASE|CALL|CODE|DATA|DATE|FKGE|GKGE|HIGH|KIND|LEFT|LIST|MASK|MESH|NAME|NODE|PACK|PAGE|POOL|SEND|SIGN|SIZE|SOME|STOP|TASK|TEXT|TIME|USER|VARY|WITH|WORD|BLUE|CONV|COPY|DEEP|ELSE|FORM|FROM|HINT|ICON|JOIN|LIKE|LOAD|ONLY|PART|SCAN|SKIP|SORT|TYPE|UNIX|VIEW|WHEN|WORK|ACOS|ASIN|ATAN|COSH|EACH|FRAC|LESS|RTTI|SINH|SQRT|TANH|AVG|BIT|DIV|ISO|LET|OUT|PAD|SQL|ALL|CI_|CPI|END|LOB|LPI|MAX|MIN|NEW|OLE|RUN|SET|\\?TO|YES|ABS|ADD|AND|BIG|FOR|HDB|JOB|LOW|NOT|SAP|TRY|VIA|XML|ANY|GET|IDS|KEY|MOD|OFF|PUT|RAW|RED|REF|SUM|TAB|XSD|CNT|COS|EXP|LOG|SIN|TAN|XOR|AT|CO|CP|DO|GT|ID|IF|NS|OR|BT|CA|CS|GE|NA|NB|EQ|IN|LT|NE|NO|OF|ON|PF|TO|AS|BY|CN|IS|LE|NP|UP|E|I|M|O|Z|C|X)\\b/i,\n      lookbehind: true\n    },\n    /* Numbers can be only integers. Decimal or Hex appear only as strings */\n    number: /\\b\\d+\\b/,\n    /* Operators must always be surrounded by whitespace, they cannot be put\nadjacent to operands.\n*/\n    operator: {\n      pattern: /(\\s)(?:\\*\\*?|<[=>]?|>=?|\\?=|[-+\\/=])(?=\\s)/,\n      lookbehind: true\n    },\n    'string-operator': {\n      pattern: /(\\s)&&?(?=\\s)/,\n      lookbehind: true,\n      /* The official editor highlights */\n      alias: 'keyword'\n    },\n    'token-operator': [\n      {\n        /* Special operators used to access structure components, class methods/attributes, etc. */\n        pattern: /(\\w)(?:->?|=>|[~|{}])(?=\\w)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      {\n        /* Special tokens used do delimit string templates */\n        pattern: /[|{}]/,\n        alias: 'punctuation'\n      }\n    ],\n    punctuation: /[,.:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = abnf\nabnf.displayName = 'abnf'\nabnf.aliases = []\nfunction abnf(Prism) {\n  ;(function (Prism) {\n    var coreRules =\n      '(?:ALPHA|BIT|CHAR|CR|CRLF|CTL|DIGIT|DQUOTE|HEXDIG|HTAB|LF|LWSP|OCTET|SP|VCHAR|WSP)'\n    Prism.languages.abnf = {\n      comment: /;.*/,\n      string: {\n        pattern: /(?:%[is])?\"[^\"\\n\\r]*\"/,\n        greedy: true,\n        inside: {\n          punctuation: /^%[is]/\n        }\n      },\n      range: {\n        pattern: /%(?:b[01]+-[01]+|d\\d+-\\d+|x[A-F\\d]+-[A-F\\d]+)/i,\n        alias: 'number'\n      },\n      terminal: {\n        pattern:\n          /%(?:b[01]+(?:\\.[01]+)*|d\\d+(?:\\.\\d+)*|x[A-F\\d]+(?:\\.[A-F\\d]+)*)/i,\n        alias: 'number'\n      },\n      repetition: {\n        pattern: /(^|[^\\w-])(?:\\d*\\*\\d*|\\d+)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      definition: {\n        pattern: /(^[ \\t]*)(?:[a-z][\\w-]*|<[^<>\\r\\n]*>)(?=\\s*=)/m,\n        lookbehind: true,\n        alias: 'keyword',\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      'core-rule': {\n        pattern: RegExp(\n          '(?:(^|[^<\\\\w-])' + coreRules + '|<' + coreRules + '>)(?![\\\\w-])',\n          'i'\n        ),\n        lookbehind: true,\n        alias: ['rule', 'constant'],\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      rule: {\n        pattern: /(^|[^<\\w-])[a-z][\\w-]*|<[^<>\\r\\n]*>/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /<|>/\n        }\n      },\n      operator: /=\\/?|\\//,\n      punctuation: /[()\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = actionscript\nactionscript.displayName = 'actionscript'\nactionscript.aliases = []\nfunction actionscript(Prism) {\n  Prism.languages.actionscript = Prism.languages.extend('javascript', {\n    keyword:\n      /\\b(?:as|break|case|catch|class|const|default|delete|do|dynamic|each|else|extends|final|finally|for|function|get|if|implements|import|in|include|instanceof|interface|internal|is|namespace|native|new|null|override|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|use|var|void|while|with)\\b/,\n    operator: /\\+\\+|--|(?:[+\\-*\\/%^]|&&?|\\|\\|?|<<?|>>?>?|[!=]=?)=?|[~?@]/\n  })\n  Prism.languages.actionscript['class-name'].alias = 'function' // doesn't work with AS because AS is too complex\n  delete Prism.languages.actionscript['parameter']\n  delete Prism.languages.actionscript['literal-property']\n  if (Prism.languages.markup) {\n    Prism.languages.insertBefore('actionscript', 'string', {\n      xml: {\n        pattern:\n          /(^|[^.])<\\/?\\w+(?:\\s+[^\\s>\\/=]+=(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2)*\\s*\\/?>/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      }\n    })\n  }\n}\n","'use strict'\n\nmodule.exports = ada\nada.displayName = 'ada'\nada.aliases = []\nfunction ada(Prism) {\n  Prism.languages.ada = {\n    comment: /--.*/,\n    string: /\"(?:\"\"|[^\"\\r\\f\\n])*\"/,\n    number: [\n      {\n        pattern:\n          /\\b\\d(?:_?\\d)*#[\\dA-F](?:_?[\\dA-F])*(?:\\.[\\dA-F](?:_?[\\dA-F])*)?#(?:E[+-]?\\d(?:_?\\d)*)?/i\n      },\n      {\n        pattern: /\\b\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:E[+-]?\\d(?:_?\\d)*)?\\b/i\n      }\n    ],\n    'attr-name': /\\b'\\w+/,\n    keyword:\n      /\\b(?:abort|abs|abstract|accept|access|aliased|all|and|array|at|begin|body|case|constant|declare|delay|delta|digits|do|else|elsif|end|entry|exception|exit|for|function|generic|goto|if|in|interface|is|limited|loop|mod|new|not|null|of|others|out|overriding|package|pragma|private|procedure|protected|raise|range|record|rem|renames|requeue|return|reverse|select|separate|some|subtype|synchronized|tagged|task|terminate|then|type|until|use|when|while|with|xor)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    operator: /<[=>]?|>=?|=>?|:=|\\/=?|\\*\\*?|[&+-]/,\n    punctuation: /\\.\\.?|[,;():]/,\n    char: /'.'/,\n    variable: /\\b[a-z](?:\\w)*\\b/i\n  }\n}\n","'use strict'\n\nmodule.exports = agda\nagda.displayName = 'agda'\nagda.aliases = []\nfunction agda(Prism) {\n  ;(function (Prism) {\n    Prism.languages.agda = {\n      comment: /\\{-[\\s\\S]*?(?:-\\}|$)|--.*/,\n      string: {\n        pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      punctuation: /[(){}⦃⦄.;@]/,\n      'class-name': {\n        pattern: /((?:data|record) +)\\S+/,\n        lookbehind: true\n      },\n      function: {\n        pattern: /(^[ \\t]*)(?!\\s)[^:\\r\\n]+(?=:)/m,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /(^\\s*|\\s)(?:[=|:∀→λ\\\\?_]|->)(?=\\s)/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:Set|abstract|constructor|data|eta-equality|field|forall|hiding|import|in|inductive|infix|infixl|infixr|instance|let|macro|module|mutual|no-eta-equality|open|overlap|pattern|postulate|primitive|private|public|quote|quoteContext|quoteGoal|quoteTerm|record|renaming|rewrite|syntax|tactic|unquote|unquoteDecl|unquoteDef|using|variable|where|with)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = al\nal.displayName = 'al'\nal.aliases = []\nfunction al(Prism) {\n  // based on https://github.com/microsoft/AL/blob/master/grammar/alsyntax.tmlanguage\n  Prism.languages.al = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(\\b(?:event|procedure|trigger)\\s+|(?:^|[^.])\\.\\s*)[a-z_]\\w*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    keyword: [\n      // keywords\n      /\\b(?:array|asserterror|begin|break|case|do|downto|else|end|event|exit|for|foreach|function|if|implements|in|indataset|interface|internal|local|of|procedure|program|protected|repeat|runonclient|securityfiltering|suppressdispose|temporary|then|to|trigger|until|var|while|with|withevents)\\b/i, // objects and metadata that are used like keywords\n      /\\b(?:action|actions|addafter|addbefore|addfirst|addlast|area|assembly|chartpart|codeunit|column|controladdin|cuegroup|customizes|dataitem|dataset|dotnet|elements|enum|enumextension|extends|field|fieldattribute|fieldelement|fieldgroup|fieldgroups|fields|filter|fixed|grid|group|key|keys|label|labels|layout|modify|moveafter|movebefore|movefirst|movelast|page|pagecustomization|pageextension|part|profile|query|repeater|report|requestpage|schema|separator|systempart|table|tableelement|tableextension|textattribute|textelement|type|usercontrol|value|xmlport)\\b/i\n    ],\n    number:\n      /\\b(?:0x[\\da-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)(?:F|LL?|U(?:LL?)?)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: /\\b(?:Curr(?:FieldNo|Page|Report)|x?Rec|RequestOptionsPage)\\b/,\n    'class-name':\n      /\\b(?:automation|biginteger|bigtext|blob|boolean|byte|char|clienttype|code|completiontriggererrorlevel|connectiontype|database|dataclassification|datascope|date|dateformula|datetime|decimal|defaultlayout|dialog|dictionary|dotnetassembly|dotnettypedeclaration|duration|errorinfo|errortype|executioncontext|executionmode|fieldclass|fieldref|fieldtype|file|filterpagebuilder|guid|httpclient|httpcontent|httpheaders|httprequestmessage|httpresponsemessage|instream|integer|joker|jsonarray|jsonobject|jsontoken|jsonvalue|keyref|list|moduledependencyinfo|moduleinfo|none|notification|notificationscope|objecttype|option|outstream|pageresult|record|recordid|recordref|reportformat|securityfilter|sessionsettings|tableconnectiontype|tablefilter|testaction|testfield|testfilterfield|testpage|testpermissions|testrequestpage|text|textbuilder|textconst|textencoding|time|transactionmodel|transactiontype|variant|verbosity|version|view|views|webserviceactioncontext|webserviceactionresultcode|xmlattribute|xmlattributecollection|xmlcdata|xmlcomment|xmldeclaration|xmldocument|xmldocumenttype|xmlelement|xmlnamespacemanager|xmlnametable|xmlnode|xmlnodelist|xmlprocessinginstruction|xmlreadoptions|xmltext|xmlwriteoptions)\\b/i,\n    operator: /\\.\\.|:[=:]|[-+*/]=?|<>|[<>]=?|=|\\b(?:and|div|mod|not|or|xor)\\b/i,\n    punctuation: /[()\\[\\]{}:.;,]/\n  }\n}\n","'use strict'\n\nmodule.exports = antlr4\nantlr4.displayName = 'antlr4'\nantlr4.aliases = ['g4']\nfunction antlr4(Prism) {\n  Prism.languages.antlr4 = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    string: {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])*'/,\n      greedy: true\n    },\n    'character-class': {\n      pattern: /\\[(?:\\\\.|[^\\\\\\]\\r\\n])*\\]/,\n      greedy: true,\n      alias: 'regex',\n      inside: {\n        range: {\n          pattern: /([^[]|(?:^|[^\\\\])(?:\\\\\\\\)*\\\\\\[)-(?!\\])/,\n          lookbehind: true,\n          alias: 'punctuation'\n        },\n        escape:\n          /\\\\(?:u(?:[a-fA-F\\d]{4}|\\{[a-fA-F\\d]+\\})|[pP]\\{[=\\w-]+\\}|[^\\r\\nupP])/,\n        punctuation: /[\\[\\]]/\n      }\n    },\n    action: {\n      pattern: /\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\}/,\n      greedy: true,\n      inside: {\n        content: {\n          // this might be C, C++, Python, Java, C#, or any other language ANTLR4 compiles to\n          pattern: /(\\{)[\\s\\S]+(?=\\})/,\n          lookbehind: true\n        },\n        punctuation: /[{}]/\n      }\n    },\n    command: {\n      pattern:\n        /(->\\s*(?!\\s))(?:\\s*(?:,\\s*)?\\b[a-z]\\w*(?:\\s*\\([^()\\r\\n]*\\))?)+(?=\\s*;)/i,\n      lookbehind: true,\n      inside: {\n        function: /\\b\\w+(?=\\s*(?:[,(]|$))/,\n        punctuation: /[,()]/\n      }\n    },\n    annotation: {\n      pattern: /@\\w+(?:::\\w+)*/,\n      alias: 'keyword'\n    },\n    label: {\n      pattern: /#[ \\t]*\\w+/,\n      alias: 'punctuation'\n    },\n    keyword:\n      /\\b(?:catch|channels|finally|fragment|grammar|import|lexer|locals|mode|options|parser|returns|throws|tokens)\\b/,\n    definition: [\n      {\n        pattern: /\\b[a-z]\\w*(?=\\s*:)/,\n        alias: ['rule', 'class-name']\n      },\n      {\n        pattern: /\\b[A-Z]\\w*(?=\\s*:)/,\n        alias: ['token', 'constant']\n      }\n    ],\n    constant: /\\b[A-Z][A-Z_]*\\b/,\n    operator: /\\.\\.|->|[|~]|[*+?]\\??/,\n    punctuation: /[;:()=]/\n  }\n  Prism.languages.g4 = Prism.languages.antlr4\n}\n","'use strict'\n\nmodule.exports = apacheconf\napacheconf.displayName = 'apacheconf'\napacheconf.aliases = []\nfunction apacheconf(Prism) {\n  Prism.languages.apacheconf = {\n    comment: /#.*/,\n    'directive-inline': {\n      pattern:\n        /(^[\\t ]*)\\b(?:AcceptFilter|AcceptPathInfo|AccessFileName|Action|Add(?:Alt|AltByEncoding|AltByType|Charset|DefaultCharset|Description|Encoding|Handler|Icon|IconByEncoding|IconByType|InputFilter|Language|ModuleInfo|OutputFilter|OutputFilterByType|Type)|Alias|AliasMatch|Allow(?:CONNECT|EncodedSlashes|Methods|Override|OverrideList)?|Anonymous(?:_LogEmail|_MustGiveEmail|_NoUserID|_VerifyEmail)?|AsyncRequestWorkerFactor|Auth(?:BasicAuthoritative|BasicFake|BasicProvider|BasicUseDigestAlgorithm|DBDUserPWQuery|DBDUserRealmQuery|DBMGroupFile|DBMType|DBMUserFile|Digest(?:Algorithm|Domain|NonceLifetime|Provider|Qop|ShmemSize)|Form(?:Authoritative|Body|DisableNoStore|FakeBasicAuth|Location|LoginRequiredLocation|LoginSuccessLocation|LogoutLocation|Method|Mimetype|Password|Provider|SitePassphrase|Size|Username)|GroupFile|LDAP(?:AuthorizePrefix|BindAuthoritative|BindDN|BindPassword|CharsetConfig|CompareAsUser|CompareDNOnServer|DereferenceAliases|GroupAttribute|GroupAttributeIsDN|InitialBindAsUser|InitialBindPattern|MaxSubGroupDepth|RemoteUserAttribute|RemoteUserIsDN|SearchAsUser|SubGroupAttribute|SubGroupClass|Url)|Merging|Name|nCache(?:Context|Enable|ProvideFor|SOCache|Timeout)|nzFcgiCheckAuthnProvider|nzFcgiDefineProvider|Type|UserFile|zDBDLoginToReferer|zDBDQuery|zDBDRedirectQuery|zDBMType|zSendForbiddenOnFailure)|BalancerGrowth|BalancerInherit|BalancerMember|BalancerPersist|BrowserMatch|BrowserMatchNoCase|BufferedLogs|BufferSize|Cache(?:DefaultExpire|DetailHeader|DirLength|DirLevels|Disable|Enable|File|Header|IgnoreCacheControl|IgnoreHeaders|IgnoreNoLastMod|IgnoreQueryString|IgnoreURLSessionIdentifiers|KeyBaseURL|LastModifiedFactor|Lock|LockMaxAge|LockPath|MaxExpire|MaxFileSize|MinExpire|MinFileSize|NegotiatedDocs|QuickHandler|ReadSize|ReadTime|Root|Socache(?:MaxSize|MaxTime|MinTime|ReadSize|ReadTime)?|StaleOnError|StoreExpired|StoreNoStore|StorePrivate)|CGIDScriptTimeout|CGIMapExtension|CharsetDefault|CharsetOptions|CharsetSourceEnc|CheckCaseOnly|CheckSpelling|ChrootDir|ContentDigest|CookieDomain|CookieExpires|CookieName|CookieStyle|CookieTracking|CoreDumpDirectory|CustomLog|Dav|DavDepthInfinity|DavGenericLockDB|DavLockDB|DavMinTimeout|DBDExptime|DBDInitSQL|DBDKeep|DBDMax|DBDMin|DBDParams|DBDPersist|DBDPrepareSQL|DBDriver|DefaultIcon|DefaultLanguage|DefaultRuntimeDir|DefaultType|Define|Deflate(?:BufferSize|CompressionLevel|FilterNote|InflateLimitRequestBody|InflateRatio(?:Burst|Limit)|MemLevel|WindowSize)|Deny|DirectoryCheckHandler|DirectoryIndex|DirectoryIndexRedirect|DirectorySlash|DocumentRoot|DTracePrivileges|DumpIOInput|DumpIOOutput|EnableExceptionHook|EnableMMAP|EnableSendfile|Error|ErrorDocument|ErrorLog|ErrorLogFormat|Example|ExpiresActive|ExpiresByType|ExpiresDefault|ExtendedStatus|ExtFilterDefine|ExtFilterOptions|FallbackResource|FileETag|FilterChain|FilterDeclare|FilterProtocol|FilterProvider|FilterTrace|ForceLanguagePriority|ForceType|ForensicLog|GprofDir|GracefulShutdownTimeout|Group|Header|HeaderName|Heartbeat(?:Address|Listen|MaxServers|Storage)|HostnameLookups|IdentityCheck|IdentityCheckTimeout|ImapBase|ImapDefault|ImapMenu|Include|IncludeOptional|Index(?:HeadInsert|Ignore|IgnoreReset|Options|OrderDefault|StyleSheet)|InputSed|ISAPI(?:AppendLogToErrors|AppendLogToQuery|CacheFile|FakeAsync|LogNotSupported|ReadAheadBuffer)|KeepAlive|KeepAliveTimeout|KeptBodySize|LanguagePriority|LDAP(?:CacheEntries|CacheTTL|ConnectionPoolTTL|ConnectionTimeout|LibraryDebug|OpCacheEntries|OpCacheTTL|ReferralHopLimit|Referrals|Retries|RetryDelay|SharedCacheFile|SharedCacheSize|Timeout|TrustedClientCert|TrustedGlobalCert|TrustedMode|VerifyServerCert)|Limit(?:InternalRecursion|Request(?:Body|Fields|FieldSize|Line)|XMLRequestBody)|Listen|ListenBackLog|LoadFile|LoadModule|LogFormat|LogLevel|LogMessage|LuaAuthzProvider|LuaCodeCache|Lua(?:Hook(?:AccessChecker|AuthChecker|CheckUserID|Fixups|InsertFilter|Log|MapToStorage|TranslateName|TypeChecker)|Inherit|InputFilter|MapHandler|OutputFilter|PackageCPath|PackagePath|QuickHandler|Root|Scope)|Max(?:ConnectionsPerChild|KeepAliveRequests|MemFree|RangeOverlaps|RangeReversals|Ranges|RequestWorkers|SpareServers|SpareThreads|Threads)|MergeTrailers|MetaDir|MetaFiles|MetaSuffix|MimeMagicFile|MinSpareServers|MinSpareThreads|MMapFile|ModemStandard|ModMimeUsePathInfo|MultiviewsMatch|Mutex|NameVirtualHost|NoProxy|NWSSLTrustedCerts|NWSSLUpgradeable|Options|Order|OutputSed|PassEnv|PidFile|PrivilegesMode|Protocol|ProtocolEcho|Proxy(?:AddHeaders|BadHeader|Block|Domain|ErrorOverride|ExpressDBMFile|ExpressDBMType|ExpressEnable|FtpDirCharset|FtpEscapeWildcards|FtpListOnWildcard|HTML(?:BufSize|CharsetOut|DocType|Enable|Events|Extended|Fixups|Interp|Links|Meta|StripComments|URLMap)|IOBufferSize|MaxForwards|Pass(?:Inherit|InterpolateEnv|Match|Reverse|ReverseCookieDomain|ReverseCookiePath)?|PreserveHost|ReceiveBufferSize|Remote|RemoteMatch|Requests|SCGIInternalRedirect|SCGISendfile|Set|SourceAddress|Status|Timeout|Via)|ReadmeName|ReceiveBufferSize|Redirect|RedirectMatch|RedirectPermanent|RedirectTemp|ReflectorHeader|RemoteIP(?:Header|InternalProxy|InternalProxyList|ProxiesHeader|TrustedProxy|TrustedProxyList)|RemoveCharset|RemoveEncoding|RemoveHandler|RemoveInputFilter|RemoveLanguage|RemoveOutputFilter|RemoveType|RequestHeader|RequestReadTimeout|Require|Rewrite(?:Base|Cond|Engine|Map|Options|Rule)|RLimitCPU|RLimitMEM|RLimitNPROC|Satisfy|ScoreBoardFile|Script(?:Alias|AliasMatch|InterpreterSource|Log|LogBuffer|LogLength|Sock)?|SecureListen|SeeRequestTail|SendBufferSize|Server(?:Admin|Alias|Limit|Name|Path|Root|Signature|Tokens)|Session(?:Cookie(?:Name|Name2|Remove)|Crypto(?:Cipher|Driver|Passphrase|PassphraseFile)|DBD(?:CookieName|CookieName2|CookieRemove|DeleteLabel|InsertLabel|PerUser|SelectLabel|UpdateLabel)|Env|Exclude|Header|Include|MaxAge)?|SetEnv|SetEnvIf|SetEnvIfExpr|SetEnvIfNoCase|SetHandler|SetInputFilter|SetOutputFilter|SSIEndTag|SSIErrorMsg|SSIETag|SSILastModified|SSILegacyExprParser|SSIStartTag|SSITimeFormat|SSIUndefinedEcho|SSL(?:CACertificateFile|CACertificatePath|CADNRequestFile|CADNRequestPath|CARevocationCheck|CARevocationFile|CARevocationPath|CertificateChainFile|CertificateFile|CertificateKeyFile|CipherSuite|Compression|CryptoDevice|Engine|FIPS|HonorCipherOrder|InsecureRenegotiation|OCSP(?:DefaultResponder|Enable|OverrideResponder|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|UseRequestNonce)|OpenSSLConfCmd|Options|PassPhraseDialog|Protocol|Proxy(?:CACertificateFile|CACertificatePath|CARevocation(?:Check|File|Path)|CheckPeer(?:CN|Expire|Name)|CipherSuite|Engine|MachineCertificate(?:ChainFile|File|Path)|Protocol|Verify|VerifyDepth)|RandomSeed|RenegBufferSize|Require|RequireSSL|Session(?:Cache|CacheTimeout|TicketKeyFile|Tickets)|SRPUnknownUserSeed|SRPVerifierFile|Stapling(?:Cache|ErrorCacheTimeout|FakeTryLater|ForceURL|ResponderTimeout|ResponseMaxAge|ResponseTimeSkew|ReturnResponderErrors|StandardCacheTimeout)|StrictSNIVHostCheck|UserName|UseStapling|VerifyClient|VerifyDepth)|StartServers|StartThreads|Substitute|Suexec|SuexecUserGroup|ThreadLimit|ThreadsPerChild|ThreadStackSize|TimeOut|TraceEnable|TransferLog|TypesConfig|UnDefine|UndefMacro|UnsetEnv|Use|UseCanonicalName|UseCanonicalPhysicalPort|User|UserDir|VHostCGIMode|VHostCGIPrivs|VHostGroup|VHostPrivs|VHostSecure|VHostUser|Virtual(?:DocumentRoot|ScriptAlias)(?:IP)?|WatchdogInterval|XBitHack|xml2EncAlias|xml2EncDefault|xml2StartParse)\\b/im,\n      lookbehind: true,\n      alias: 'property'\n    },\n    'directive-block': {\n      pattern:\n        /<\\/?\\b(?:Auth[nz]ProviderAlias|Directory|DirectoryMatch|Else|ElseIf|Files|FilesMatch|If|IfDefine|IfModule|IfVersion|Limit|LimitExcept|Location|LocationMatch|Macro|Proxy|Require(?:All|Any|None)|VirtualHost)\\b.*>/i,\n      inside: {\n        'directive-block': {\n          pattern: /^<\\/?\\w+/,\n          inside: {\n            punctuation: /^<\\/?/\n          },\n          alias: 'tag'\n        },\n        'directive-block-parameter': {\n          pattern: /.*[^>]/,\n          inside: {\n            punctuation: /:/,\n            string: {\n              pattern: /(\"|').*\\1/,\n              inside: {\n                variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n              }\n            }\n          },\n          alias: 'attr-value'\n        },\n        punctuation: />/\n      },\n      alias: 'tag'\n    },\n    'directive-flags': {\n      pattern: /\\[(?:[\\w=],?)+\\]/,\n      alias: 'keyword'\n    },\n    string: {\n      pattern: /(\"|').*\\1/,\n      inside: {\n        variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/\n      }\n    },\n    variable: /[$%]\\{?(?:\\w\\.?[-+:]?)+\\}?/,\n    regex: /\\^?.*\\$|\\^.*\\$?/\n  }\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = apex\napex.displayName = 'apex'\napex.aliases = []\nfunction apex(Prism) {\n  Prism.register(refractorSql)\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:(?:after|before)(?=\\s+[a-z])|abstract|activate|and|any|array|as|asc|autonomous|begin|bigdecimal|blob|boolean|break|bulk|by|byte|case|cast|catch|char|class|collect|commit|const|continue|currency|date|datetime|decimal|default|delete|desc|do|double|else|end|enum|exception|exit|export|extends|final|finally|float|for|from|get(?=\\s*[{};])|global|goto|group|having|hint|if|implements|import|in|inner|insert|instanceof|int|integer|interface|into|join|like|limit|list|long|loop|map|merge|new|not|null|nulls|number|object|of|on|or|outer|override|package|parallel|pragma|private|protected|public|retrieve|return|rollback|select|set|short|sObject|sort|static|string|super|switch|synchronized|system|testmethod|then|this|throw|time|transaction|transient|trigger|try|undelete|update|upsert|using|virtual|void|webservice|when|where|while|(?:inherited|with|without)\\s+sharing)\\b/i\n    var className =\n      /\\b(?:(?=[a-z_]\\w*\\s*[<\\[])|(?!<keyword>))[A-Z_]\\w*(?:\\s*\\.\\s*[A-Z_]\\w*)*\\b(?:\\s*(?:\\[\\s*\\]|<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>))*/.source.replace(\n        /<keyword>/g,\n        function () {\n          return keywords.source\n        }\n      )\n    /** @param {string} pattern */\n    function insertClassName(pattern) {\n      return RegExp(\n        pattern.replace(/<CLASS-NAME>/g, function () {\n          return className\n        }),\n        'i'\n      )\n    }\n    var classNameInside = {\n      keyword: keywords,\n      punctuation: /[()\\[\\]{};,:.<>]/\n    }\n    Prism.languages.apex = {\n      comment: Prism.languages.clike.comment,\n      string: Prism.languages.clike.string,\n      sql: {\n        pattern: /((?:[=,({:]|\\breturn)\\s*)\\[[^\\[\\]]*\\]/i,\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-sql',\n        inside: Prism.languages.sql\n      },\n      annotation: {\n        pattern: /@\\w+\\b/,\n        alias: 'punctuation'\n      },\n      'class-name': [\n        {\n          pattern: insertClassName(\n            /(\\b(?:class|enum|extends|implements|instanceof|interface|new|trigger\\s+\\w+\\s+on)\\s+)<CLASS-NAME>/\n              .source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // cast\n          pattern: insertClassName(\n            /(\\(\\s*)<CLASS-NAME>(?=\\s*\\)\\s*[\\w(])/.source\n          ),\n          lookbehind: true,\n          inside: classNameInside\n        },\n        {\n          // variable/parameter declaration and return types\n          pattern: insertClassName(/<CLASS-NAME>(?=\\s*\\w+\\s*[;=,(){:])/.source),\n          inside: classNameInside\n        }\n      ],\n      trigger: {\n        pattern: /(\\btrigger\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      keyword: keywords,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      boolean: /\\b(?:false|true)\\b/i,\n      number: /(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+|L)?)\\b/i,\n      operator:\n        /[!=](?:==?)?|\\?\\.?|&&|\\|\\||--|\\+\\+|[-+*/^&|]=?|:|<<?=?|>{1,3}=?/,\n      punctuation: /[()\\[\\]{};,.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = apl\napl.displayName = 'apl'\napl.aliases = []\nfunction apl(Prism) {\n  Prism.languages.apl = {\n    comment: /(?:⍝|#[! ]).*$/m,\n    string: {\n      pattern: /'(?:[^'\\r\\n]|'')*'/,\n      greedy: true\n    },\n    number:\n      /¯?(?:\\d*\\.?\\b\\d+(?:e[+¯]?\\d+)?|¯|∞)(?:j¯?(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+¯]?\\d+)?|¯|∞))?/i,\n    statement: /:[A-Z][a-z][A-Za-z]*\\b/,\n    'system-function': {\n      pattern: /⎕[A-Z]+/i,\n      alias: 'function'\n    },\n    constant: /[⍬⌾#⎕⍞]/,\n    function: /[-+×÷⌈⌊∣|⍳⍸?*⍟○!⌹<≤=>≥≠≡≢∊⍷∪∩~∨∧⍱⍲⍴,⍪⌽⊖⍉↑↓⊂⊃⊆⊇⌷⍋⍒⊤⊥⍕⍎⊣⊢⍁⍂≈⍯↗¤→]/,\n    'monadic-operator': {\n      pattern: /[\\\\\\/⌿⍀¨⍨⌶&∥]/,\n      alias: 'operator'\n    },\n    'dyadic-operator': {\n      pattern: /[.⍣⍠⍤∘⌸@⌺⍥]/,\n      alias: 'operator'\n    },\n    assignment: {\n      pattern: /←/,\n      alias: 'keyword'\n    },\n    punctuation: /[\\[;\\]()◇⋄]/,\n    dfn: {\n      pattern: /[{}⍺⍵⍶⍹∇⍫:]/,\n      alias: 'builtin'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = applescript\napplescript.displayName = 'applescript'\napplescript.aliases = []\nfunction applescript(Prism) {\n  Prism.languages.applescript = {\n    comment: [\n      // Allow one level of nesting\n      /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n      /--.+/,\n      /#.+/\n    ],\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?\\b/i,\n    operator: [\n      /[&=≠≤≥*+\\-\\/÷^]|[<>]=?/,\n      /\\b(?:(?:begin|end|start)s? with|(?:contains?|(?:does not|doesn't) contain)|(?:is|isn't|is not) (?:contained by|in)|(?:(?:is|isn't|is not) )?(?:greater|less) than(?: or equal)?(?: to)?|(?:comes|(?:does not|doesn't) come) (?:after|before)|(?:is|isn't|is not) equal(?: to)?|(?:(?:does not|doesn't) equal|equal to|equals|is not|isn't)|(?:a )?(?:ref(?: to)?|reference to)|(?:and|as|div|mod|not|or))\\b/\n    ],\n    keyword:\n      /\\b(?:about|above|after|against|apart from|around|aside from|at|back|before|beginning|behind|below|beneath|beside|between|but|by|considering|continue|copy|does|eighth|else|end|equal|error|every|exit|false|fifth|first|for|fourth|from|front|get|given|global|if|ignoring|in|instead of|into|is|it|its|last|local|me|middle|my|ninth|of|on|onto|out of|over|prop|property|put|repeat|return|returning|second|set|seventh|since|sixth|some|tell|tenth|that|the|then|third|through|thru|timeout|times|to|transaction|true|try|until|where|while|whose|with|without)\\b/,\n    'class-name':\n      /\\b(?:POSIX file|RGB color|alias|application|boolean|centimeters|centimetres|class|constant|cubic centimeters|cubic centimetres|cubic feet|cubic inches|cubic meters|cubic metres|cubic yards|date|degrees Celsius|degrees Fahrenheit|degrees Kelvin|feet|file|gallons|grams|inches|integer|kilograms|kilometers|kilometres|list|liters|litres|meters|metres|miles|number|ounces|pounds|quarts|real|record|reference|script|square feet|square kilometers|square kilometres|square meters|square metres|square miles|square yards|text|yards)\\b/,\n    punctuation: /[{}():,¬«»《》]/\n  }\n}\n","'use strict'\n\nmodule.exports = aql\naql.displayName = 'aql'\naql.aliases = []\nfunction aql(Prism) {\n  Prism.languages.aql = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    property: {\n      pattern:\n        /([{,]\\s*)(?:(?!\\d)\\w+|([\"'´`])(?:(?!\\2)[^\\\\\\r\\n]|\\\\.)*\\2)(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /([´`])(?:(?!\\1)[^\\\\\\r\\n]|\\\\.)*\\1/,\n      greedy: true\n    },\n    variable: /@@?\\w+/,\n    keyword: [\n      {\n        pattern: /(\\bWITH\\s+)COUNT(?=\\s+INTO\\b)/i,\n        lookbehind: true\n      },\n      /\\b(?:AGGREGATE|ALL|AND|ANY|ASC|COLLECT|DESC|DISTINCT|FILTER|FOR|GRAPH|IN|INBOUND|INSERT|INTO|K_PATHS|K_SHORTEST_PATHS|LET|LIKE|LIMIT|NONE|NOT|NULL|OR|OUTBOUND|REMOVE|REPLACE|RETURN|SHORTEST_PATH|SORT|UPDATE|UPSERT|WINDOW|WITH)\\b/i, // pseudo keywords get a lookbehind to avoid false positives\n      {\n        pattern: /(^|[^\\w.[])(?:KEEP|PRUNE|SEARCH|TO)\\b/i,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.[])(?:CURRENT|NEW|OLD)\\b/,\n        lookbehind: true\n      },\n      {\n        pattern: /\\bOPTIONS(?=\\s*\\{)/i\n      }\n    ],\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    boolean: /\\b(?:false|true)\\b/i,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    number: [\n      /\\b0b[01]+/i,\n      /\\b0x[0-9a-f]+/i,\n      /(?:\\B\\.\\d+|\\b(?:0|[1-9]\\d*)(?:\\.\\d+)?)(?:e[+-]?\\d+)?/i\n    ],\n    operator: /\\*{2,}|[=!]~|[!=<>]=?|&&|\\|\\||[-+*/%]/,\n    punctuation: /::|[?.:,;()[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = arduino\narduino.displayName = 'arduino'\narduino.aliases = ['ino']\nfunction arduino(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.arduino = Prism.languages.extend('cpp', {\n    keyword:\n      /\\b(?:String|array|bool|boolean|break|byte|case|catch|continue|default|do|double|else|finally|for|function|goto|if|in|instanceof|int|integer|long|loop|new|null|return|setup|string|switch|throw|try|void|while|word)\\b/,\n    constant:\n      /\\b(?:ANALOG_MESSAGE|DEFAULT|DIGITAL_MESSAGE|EXTERNAL|FIRMATA_STRING|HIGH|INPUT|INPUT_PULLUP|INTERNAL|INTERNAL1V1|INTERNAL2V56|LED_BUILTIN|LOW|OUTPUT|REPORT_ANALOG|REPORT_DIGITAL|SET_PIN_MODE|SYSEX_START|SYSTEM_RESET)\\b/,\n    builtin:\n      /\\b(?:Audio|BSSID|Bridge|Client|Console|EEPROM|Esplora|EsploraTFT|Ethernet|EthernetClient|EthernetServer|EthernetUDP|File|FileIO|FileSystem|Firmata|GPRS|GSM|GSMBand|GSMClient|GSMModem|GSMPIN|GSMScanner|GSMServer|GSMVoiceCall|GSM_SMS|HttpClient|IPAddress|IRread|Keyboard|KeyboardController|LiquidCrystal|LiquidCrystal_I2C|Mailbox|Mouse|MouseController|PImage|Process|RSSI|RobotControl|RobotMotor|SD|SPI|SSID|Scheduler|Serial|Server|Servo|SoftwareSerial|Stepper|Stream|TFT|Task|USBHost|WiFi|WiFiClient|WiFiServer|WiFiUDP|Wire|YunClient|YunServer|abs|addParameter|analogRead|analogReadResolution|analogReference|analogWrite|analogWriteResolution|answerCall|attach|attachGPRS|attachInterrupt|attached|autoscroll|available|background|beep|begin|beginPacket|beginSD|beginSMS|beginSpeaker|beginTFT|beginTransmission|beginWrite|bit|bitClear|bitRead|bitSet|bitWrite|blink|blinkVersion|buffer|changePIN|checkPIN|checkPUK|checkReg|circle|cityNameRead|cityNameWrite|clear|clearScreen|click|close|compassRead|config|connect|connected|constrain|cos|countryNameRead|countryNameWrite|createChar|cursor|debugPrint|delay|delayMicroseconds|detach|detachInterrupt|digitalRead|digitalWrite|disconnect|display|displayLogos|drawBMP|drawCompass|encryptionType|end|endPacket|endSMS|endTransmission|endWrite|exists|exitValue|fill|find|findUntil|flush|gatewayIP|get|getAsynchronously|getBand|getButton|getCurrentCarrier|getIMEI|getKey|getModifiers|getOemKey|getPINUsed|getResult|getSignalStrength|getSocket|getVoiceCallStatus|getXChange|getYChange|hangCall|height|highByte|home|image|interrupts|isActionDone|isDirectory|isListening|isPIN|isPressed|isValid|keyPressed|keyReleased|keyboardRead|knobRead|leftToRight|line|lineFollowConfig|listen|listenOnLocalhost|loadImage|localIP|lowByte|macAddress|maintain|map|max|messageAvailable|micros|millis|min|mkdir|motorsStop|motorsWrite|mouseDragged|mouseMoved|mousePressed|mouseReleased|move|noAutoscroll|noBlink|noBuffer|noCursor|noDisplay|noFill|noInterrupts|noListenOnLocalhost|noStroke|noTone|onReceive|onRequest|open|openNextFile|overflow|parseCommand|parseFloat|parseInt|parsePacket|pauseMode|peek|pinMode|playFile|playMelody|point|pointTo|position|pow|prepare|press|print|printFirmwareVersion|printVersion|println|process|processInput|pulseIn|put|random|randomSeed|read|readAccelerometer|readBlue|readButton|readBytes|readBytesUntil|readGreen|readJoystickButton|readJoystickSwitch|readJoystickX|readJoystickY|readLightSensor|readMessage|readMicrophone|readNetworks|readRed|readSlider|readString|readStringUntil|readTemperature|ready|rect|release|releaseAll|remoteIP|remoteNumber|remotePort|remove|requestFrom|retrieveCallingNumber|rewindDirectory|rightToLeft|rmdir|robotNameRead|robotNameWrite|run|runAsynchronously|runShellCommand|runShellCommandAsynchronously|running|scanNetworks|scrollDisplayLeft|scrollDisplayRight|seek|sendAnalog|sendDigitalPortPair|sendDigitalPorts|sendString|sendSysex|serialEvent|setBand|setBitOrder|setClockDivider|setCursor|setDNS|setDataMode|setFirmwareVersion|setMode|setPINUsed|setSpeed|setTextSize|setTimeout|shiftIn|shiftOut|shutdown|sin|size|sqrt|startLoop|step|stop|stroke|subnetMask|switchPIN|tan|tempoWrite|text|tone|transfer|tuneWrite|turn|updateIR|userNameRead|userNameWrite|voiceCall|waitContinue|width|write|writeBlue|writeGreen|writeJSON|writeMessage|writeMicroseconds|writeRGB|writeRed|yield)\\b/\n  })\n  Prism.languages.ino = Prism.languages.arduino\n}\n","'use strict'\n\nmodule.exports = arff\narff.displayName = 'arff'\narff.aliases = []\nfunction arff(Prism) {\n  Prism.languages.arff = {\n    comment: /%.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: /@(?:attribute|data|end|relation)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    punctuation: /[{},]/\n  }\n}\n","'use strict'\n\nmodule.exports = asciidoc\nasciidoc.displayName = 'asciidoc'\nasciidoc.aliases = ['adoc']\nfunction asciidoc(Prism) {\n  ;(function (Prism) {\n    var attributes = {\n      pattern:\n        /(^[ \\t]*)\\[(?!\\[)(?:([\"'$`])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\[(?:[^\\[\\]\\\\]|\\\\.)*\\]|[^\\[\\]\\\\\"'$`]|\\\\.)*\\]/m,\n      lookbehind: true,\n      inside: {\n        quoted: {\n          pattern: /([$`])(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          inside: {\n            punctuation: /^[$`]|[$`]$/\n          }\n        },\n        interpreted: {\n          pattern: /'(?:[^'\\\\]|\\\\.)*'/,\n          inside: {\n            punctuation: /^'|'$/ // See rest below\n          }\n        },\n        string: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        variable: /\\w+(?==)/,\n        punctuation: /^\\[|\\]$|,/,\n        operator: /=/,\n        // The negative look-ahead prevents blank matches\n        'attr-value': /(?!^\\s+$).+/\n      }\n    }\n    var asciidoc = (Prism.languages.asciidoc = {\n      'comment-block': {\n        pattern: /^(\\/{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1/m,\n        alias: 'comment'\n      },\n      table: {\n        pattern: /^\\|={3,}(?:(?:\\r?\\n|\\r(?!\\n)).*)*?(?:\\r?\\n|\\r)\\|={3,}$/m,\n        inside: {\n          specifiers: {\n            pattern:\n              /(?:(?:(?:\\d+(?:\\.\\d+)?|\\.\\d+)[+*](?:[<^>](?:\\.[<^>])?|\\.[<^>])?|[<^>](?:\\.[<^>])?|\\.[<^>])[a-z]*|[a-z]+)(?=\\|)/,\n            alias: 'attr-value'\n          },\n          punctuation: {\n            pattern: /(^|[^\\\\])[|!]=*/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      'passthrough-block': {\n        pattern: /^(\\+{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^\\++|\\++$/ // See rest below\n        }\n      },\n      // Literal blocks and listing blocks\n      'literal-block': {\n        pattern: /^(-{4,}|\\.{4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\.+)|(?:-+|\\.+)$/ // See rest below\n        }\n      },\n      // Sidebar blocks, quote blocks, example blocks and open blocks\n      'other-block': {\n        pattern:\n          /^(--|\\*{4,}|_{4,}|={4,})(?:\\r?\\n|\\r)(?:[\\s\\S]*(?:\\r?\\n|\\r))??\\1$/m,\n        inside: {\n          punctuation: /^(?:-+|\\*+|_+|=+)|(?:-+|\\*+|_+|=+)$/ // See rest below\n        }\n      },\n      // list-punctuation and list-label must appear before indented-block\n      'list-punctuation': {\n        pattern:\n          /(^[ \\t]*)(?:-|\\*{1,5}|\\.{1,5}|(?:[a-z]|\\d+)\\.|[xvi]+\\))(?= )/im,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'list-label': {\n        pattern: /(^[ \\t]*)[a-z\\d].+(?::{2,4}|;;)(?=\\s)/im,\n        lookbehind: true,\n        alias: 'symbol'\n      },\n      'indented-block': {\n        pattern: /((\\r?\\n|\\r)\\2)([ \\t]+)\\S.*(?:(?:\\r?\\n|\\r)\\3.+)*(?=\\2{2}|$)/,\n        lookbehind: true\n      },\n      comment: /^\\/\\/.*/m,\n      title: {\n        pattern:\n          /^.+(?:\\r?\\n|\\r)(?:={3,}|-{3,}|~{3,}|\\^{3,}|\\+{3,})$|^={1,5} .+|^\\.(?![\\s.]).*/m,\n        alias: 'important',\n        inside: {\n          punctuation: /^(?:\\.|=+)|(?:=+|-+|~+|\\^+|\\++)$/ // See rest below\n        }\n      },\n      'attribute-entry': {\n        pattern: /^:[^:\\r\\n]+:(?: .*?(?: \\+(?:\\r?\\n|\\r).*?)*)?$/m,\n        alias: 'tag'\n      },\n      attributes: attributes,\n      hr: {\n        pattern: /^'{3,}$/m,\n        alias: 'punctuation'\n      },\n      'page-break': {\n        pattern: /^<{3,}$/m,\n        alias: 'punctuation'\n      },\n      admonition: {\n        pattern: /^(?:CAUTION|IMPORTANT|NOTE|TIP|WARNING):/m,\n        alias: 'keyword'\n      },\n      callout: [\n        {\n          pattern: /(^[ \\t]*)<?\\d*>/m,\n          lookbehind: true,\n          alias: 'symbol'\n        },\n        {\n          pattern: /<\\d+>/,\n          alias: 'symbol'\n        }\n      ],\n      macro: {\n        pattern:\n          /\\b[a-z\\d][a-z\\d-]*::?(?:[^\\s\\[\\]]*\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n        inside: {\n          function: /^[a-z\\d-]+(?=:)/,\n          punctuation: /^::?/,\n          attributes: {\n            pattern: /(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*\\1|\\\\.)*\\])/,\n            inside: attributes.inside\n          }\n        }\n      },\n      inline: {\n        /*\nThe initial look-behind prevents the highlighting of escaped quoted text.\nQuoted text can be multi-line but cannot span an empty line.\nAll quoted text can have attributes before [foobar, 'foobar', baz=\"bar\"].\nFirst, we handle the constrained quotes.\nThose must be bounded by non-word chars and cannot have spaces between the delimiter and the first char.\nThey are, in order: _emphasis_, ``double quotes'', `single quotes', `monospace`, 'emphasis', *strong*, +monospace+ and #unquoted#\nThen we handle the unconstrained quotes.\nThose do not have the restrictions of the constrained quotes.\nThey are, in order: __emphasis__, **strong**, ++monospace++, +++passthrough+++, ##unquoted##, $$passthrough$$, ~subscript~, ^superscript^, {attribute-reference}, [[anchor]], [[[bibliography anchor]]], <<xref>>, (((indexes))) and ((indexes))\n*/\n        pattern:\n          /(^|[^\\\\])(?:(?:\\B\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\2)[^\\\\]|\\\\.)*\\2|\\\\.)*\\])?(?:\\b_(?!\\s)(?: _|[^_\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: _|[^_\\\\\\r\\n]|\\\\.)+)*_\\b|\\B``(?!\\s).+?(?:(?:\\r?\\n|\\r).+?)*''\\B|\\B`(?!\\s)(?:[^`'\\s]|\\s+\\S)+['`]\\B|\\B(['*+#])(?!\\s)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+(?:(?:\\r?\\n|\\r)(?: \\3|(?!\\3)[^\\\\\\r\\n]|\\\\.)+)*\\3\\B)|(?:\\[(?:[^\\]\\\\\"']|([\"'])(?:(?!\\4)[^\\\\]|\\\\.)*\\4|\\\\.)*\\])?(?:(__|\\*\\*|\\+\\+\\+?|##|\\$\\$|[~^]).+?(?:(?:\\r?\\n|\\r).+?)*\\5|\\{[^}\\r\\n]+\\}|\\[\\[\\[?.+?(?:(?:\\r?\\n|\\r).+?)*\\]?\\]\\]|<<.+?(?:(?:\\r?\\n|\\r).+?)*>>|\\(\\(\\(?.+?(?:(?:\\r?\\n|\\r).+?)*\\)?\\)\\)))/m,\n        lookbehind: true,\n        inside: {\n          attributes: attributes,\n          url: {\n            pattern: /^(?:\\[\\[\\[?.+?\\]?\\]\\]|<<.+?>>)$/,\n            inside: {\n              punctuation: /^(?:\\[\\[\\[?|<<)|(?:\\]\\]\\]?|>>)$/\n            }\n          },\n          'attribute-ref': {\n            pattern: /^\\{.+\\}$/,\n            inside: {\n              variable: {\n                pattern: /(^\\{)[a-z\\d,+_-]+/,\n                lookbehind: true\n              },\n              operator: /^[=?!#%@$]|!(?=[:}])/,\n              punctuation: /^\\{|\\}$|::?/\n            }\n          },\n          italic: {\n            pattern: /^(['_])[\\s\\S]+\\1$/,\n            inside: {\n              punctuation: /^(?:''?|__?)|(?:''?|__?)$/\n            }\n          },\n          bold: {\n            pattern: /^\\*[\\s\\S]+\\*$/,\n            inside: {\n              punctuation: /^\\*\\*?|\\*\\*?$/\n            }\n          },\n          punctuation:\n            /^(?:``?|\\+{1,3}|##?|\\$\\$|[~^]|\\(\\(\\(?)|(?:''?|\\+{1,3}|##?|\\$\\$|[~^`]|\\)?\\)\\))$/\n        }\n      },\n      replacement: {\n        pattern: /\\((?:C|R|TM)\\)/,\n        alias: 'builtin'\n      },\n      entity: /&#?[\\da-z]{1,8};/i,\n      'line-continuation': {\n        pattern: /(^| )\\+$/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    }) // Allow some nesting. There is no recursion though, so cloning should not be needed.\n    function copyFromAsciiDoc(keys) {\n      keys = keys.split(' ')\n      var o = {}\n      for (var i = 0, l = keys.length; i < l; i++) {\n        o[keys[i]] = asciidoc[keys[i]]\n      }\n      return o\n    }\n    attributes.inside['interpreted'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    )\n    asciidoc['passthrough-block'].inside.rest = copyFromAsciiDoc('macro')\n    asciidoc['literal-block'].inside.rest = copyFromAsciiDoc('callout')\n    asciidoc['table'].inside.rest = copyFromAsciiDoc(\n      'comment-block passthrough-block literal-block other-block list-punctuation indented-block comment title attribute-entry attributes hr page-break admonition list-label callout macro inline replacement entity line-continuation'\n    )\n    asciidoc['other-block'].inside.rest = copyFromAsciiDoc(\n      'table list-punctuation indented-block comment attribute-entry attributes hr page-break admonition list-label macro inline replacement entity line-continuation'\n    )\n    asciidoc['title'].inside.rest = copyFromAsciiDoc(\n      'macro inline replacement entity'\n    ) // Plugin to make entity title show the real entity, idea by Roman Komarov\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type === 'entity') {\n        env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n      }\n    })\n    Prism.languages.adoc = Prism.languages.asciidoc\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = asm6502\nasm6502.displayName = 'asm6502'\nasm6502.aliases = []\nfunction asm6502(Prism) {\n  Prism.languages.asm6502 = {\n    comment: /;.*/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|AND|ASL|BCC|BCS|BEQ|BIT|BMI|BNE|BPL|BRK|BVC|BVS|CLC|CLD|CLI|CLV|CMP|CPX|CPY|DEC|DEX|DEY|EOR|INC|INX|INY|JMP|JSR|LDA|LDX|LDY|LSR|NOP|ORA|PHA|PHP|PLA|PLP|ROL|ROR|RTI|RTS|SBC|SEC|SED|SEI|STA|STX|STY|TAX|TAY|TSX|TXA|TXS|TYA|adc|and|asl|bcc|bcs|beq|bit|bmi|bne|bpl|brk|bvc|bvs|clc|cld|cli|clv|cmp|cpx|cpy|dec|dex|dey|eor|inc|inx|iny|jmp|jsr|lda|ldx|ldy|lsr|nop|ora|pha|php|pla|plp|rol|ror|rti|rts|sbc|sec|sed|sei|sta|stx|sty|tax|tay|tsx|txa|txs|tya)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{1,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[xya]\\b/i,\n      alias: 'variable'\n    },\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = asmatmel\nasmatmel.displayName = 'asmatmel'\nasmatmel.aliases = []\nfunction asmatmel(Prism) {\n  Prism.languages.asmatmel = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    constant: /\\b(?:PORT[A-Z]|DDR[A-Z]|(?:DD|P)[A-Z](?:\\d|[0-2]\\d|3[01]))\\b/,\n    directive: {\n      pattern: /\\.\\w+(?= )/,\n      alias: 'property'\n    },\n    'r-register': {\n      pattern: /\\br(?:\\d|[12]\\d|3[01])\\b/,\n      alias: 'variable'\n    },\n    'op-code': {\n      pattern:\n        /\\b(?:ADC|ADD|ADIW|AND|ANDI|ASR|BCLR|BLD|BRBC|BRBS|BRCC|BRCS|BREAK|BREQ|BRGE|BRHC|BRHS|BRID|BRIE|BRLO|BRLT|BRMI|BRNE|BRPL|BRSH|BRTC|BRTS|BRVC|BRVS|BSET|BST|CALL|CBI|CBR|CLC|CLH|CLI|CLN|CLR|CLS|CLT|CLV|CLZ|COM|CP|CPC|CPI|CPSE|DEC|DES|EICALL|EIJMP|ELPM|EOR|FMUL|FMULS|FMULSU|ICALL|IJMP|IN|INC|JMP|LAC|LAS|LAT|LD|LD[A-Za-z0-9]|LPM|LSL|LSR|MOV|MOVW|MUL|MULS|MULSU|NEG|NOP|OR|ORI|OUT|POP|PUSH|RCALL|RET|RETI|RJMP|ROL|ROR|SBC|SBCI|SBI|SBIC|SBIS|SBIW|SBR|SBRC|SBRS|SEC|SEH|SEI|SEN|SER|SES|SET|SEV|SEZ|SLEEP|SPM|ST|ST[A-Z0-9]|SUB|SUBI|SWAP|TST|WDR|XCH|adc|add|adiw|and|andi|asr|bclr|bld|brbc|brbs|brcc|brcs|break|breq|brge|brhc|brhs|brid|brie|brlo|brlt|brmi|brne|brpl|brsh|brtc|brts|brvc|brvs|bset|bst|call|cbi|cbr|clc|clh|cli|cln|clr|cls|clt|clv|clz|com|cp|cpc|cpi|cpse|dec|des|eicall|eijmp|elpm|eor|fmul|fmuls|fmulsu|icall|ijmp|in|inc|jmp|lac|las|lat|ld|ld[a-z0-9]|lpm|lsl|lsr|mov|movw|mul|muls|mulsu|neg|nop|or|ori|out|pop|push|rcall|ret|reti|rjmp|rol|ror|sbc|sbci|sbi|sbic|sbis|sbiw|sbr|sbrc|sbrs|sec|seh|sei|sen|ser|ses|set|sev|sez|sleep|spm|st|st[a-zA-Z0-9]|sub|subi|swap|tst|wdr|xch)\\b/,\n      alias: 'keyword'\n    },\n    'hex-number': {\n      pattern: /#?\\$[\\da-f]{2,4}\\b/i,\n      alias: 'number'\n    },\n    'binary-number': {\n      pattern: /#?%[01]+\\b/,\n      alias: 'number'\n    },\n    'decimal-number': {\n      pattern: /#?\\b\\d+\\b/,\n      alias: 'number'\n    },\n    register: {\n      pattern: /\\b[acznvshtixy]\\b/i,\n      alias: 'variable'\n    },\n    operator: />>=?|<<=?|&&?|\\|\\|?|[-+*/%&|^!=<>?]=?/,\n    punctuation: /[(),:]/\n  }\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = aspnet\naspnet.displayName = 'aspnet'\naspnet.aliases = []\nfunction aspnet(Prism) {\n  Prism.register(refractorCsharp)\n  Prism.languages.aspnet = Prism.languages.extend('markup', {\n    'page-directive': {\n      pattern: /<%\\s*@.*%>/,\n      alias: 'tag',\n      inside: {\n        'page-directive': {\n          pattern:\n            /<%\\s*@\\s*(?:Assembly|Control|Implements|Import|Master(?:Type)?|OutputCache|Page|PreviousPageType|Reference|Register)?|%>/i,\n          alias: 'tag'\n        },\n        rest: Prism.languages.markup.tag.inside\n      }\n    },\n    directive: {\n      pattern: /<%.*%>/,\n      alias: 'tag',\n      inside: {\n        directive: {\n          pattern: /<%\\s*?[$=%#:]{0,2}|%>/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.csharp\n      }\n    }\n  }) // Regexp copied from prism-markup, with a negative look-ahead added\n  Prism.languages.aspnet.tag.pattern =\n    /<(?!%)\\/?[^\\s>\\/]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/ // match directives of attribute value foo=\"<% Bar %>\"\n  Prism.languages.insertBefore(\n    'inside',\n    'punctuation',\n    {\n      directive: Prism.languages.aspnet['directive']\n    },\n    Prism.languages.aspnet.tag.inside['attr-value']\n  )\n  Prism.languages.insertBefore('aspnet', 'comment', {\n    'asp-comment': {\n      pattern: /<%--[\\s\\S]*?--%>/,\n      alias: ['asp', 'comment']\n    }\n  }) // script runat=\"server\" contains csharp, not javascript\n  Prism.languages.insertBefore(\n    'aspnet',\n    Prism.languages.javascript ? 'script' : 'tag',\n    {\n      'asp-script': {\n        pattern:\n          /(<script(?=.*runat=['\"]?server\\b)[^>]*>)[\\s\\S]*?(?=<\\/script>)/i,\n        lookbehind: true,\n        alias: ['asp', 'script'],\n        inside: Prism.languages.csharp || {}\n      }\n    }\n  )\n}\n","'use strict'\n\nmodule.exports = autohotkey\nautohotkey.displayName = 'autohotkey'\nautohotkey.aliases = []\nfunction autohotkey(Prism) {\n  // NOTES - follows first-first highlight method, block is locked after highlight, different from SyntaxHl\n  Prism.languages.autohotkey = {\n    comment: [\n      {\n        pattern: /(^|\\s);.*/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^[\\t ]*)\\/\\*(?:[\\r\\n](?![ \\t]*\\*\\/)|[^\\r\\n])*(?:[\\r\\n][ \\t]*\\*\\/)?/m,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    tag: {\n      // labels\n      pattern: /^([ \\t]*)[^\\s,`\":]+(?=:[ \\t]*$)/m,\n      lookbehind: true\n    },\n    string: /\"(?:[^\"\\n\\r]|\"\")*\"/,\n    variable: /%\\w+%/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator:\n      /\\?|\\/\\/?=?|:=|\\|[=|]?|&[=&]?|\\+[=+]?|-[=-]?|\\*[=*]?|<(?:<=?|>|=)?|>>?=?|[.^!=~]=?|\\b(?:AND|NOT|OR)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    selector:\n      /\\b(?:AutoTrim|BlockInput|Break|Click|ClipWait|Continue|Control|ControlClick|ControlFocus|ControlGet|ControlGetFocus|ControlGetPos|ControlGetText|ControlMove|ControlSend|ControlSendRaw|ControlSetText|CoordMode|Critical|DetectHiddenText|DetectHiddenWindows|Drive|DriveGet|DriveSpaceFree|EnvAdd|EnvDiv|EnvGet|EnvMult|EnvSet|EnvSub|EnvUpdate|Exit|ExitApp|FileAppend|FileCopy|FileCopyDir|FileCreateDir|FileCreateShortcut|FileDelete|FileEncoding|FileGetAttrib|FileGetShortcut|FileGetSize|FileGetTime|FileGetVersion|FileInstall|FileMove|FileMoveDir|FileRead|FileReadLine|FileRecycle|FileRecycleEmpty|FileRemoveDir|FileSelectFile|FileSelectFolder|FileSetAttrib|FileSetTime|FormatTime|GetKeyState|Gosub|Goto|GroupActivate|GroupAdd|GroupClose|GroupDeactivate|Gui|GuiControl|GuiControlGet|Hotkey|ImageSearch|IniDelete|IniRead|IniWrite|Input|InputBox|KeyWait|ListHotkeys|ListLines|ListVars|Loop|Menu|MouseClick|MouseClickDrag|MouseGetPos|MouseMove|MsgBox|OnExit|OutputDebug|Pause|PixelGetColor|PixelSearch|PostMessage|Process|Progress|Random|RegDelete|RegRead|RegWrite|Reload|Repeat|Return|Run|RunAs|RunWait|Send|SendEvent|SendInput|SendMessage|SendMode|SendPlay|SendRaw|SetBatchLines|SetCapslockState|SetControlDelay|SetDefaultMouseSpeed|SetEnv|SetFormat|SetKeyDelay|SetMouseDelay|SetNumlockState|SetRegView|SetScrollLockState|SetStoreCapslockMode|SetTimer|SetTitleMatchMode|SetWinDelay|SetWorkingDir|Shutdown|Sleep|Sort|SoundBeep|SoundGet|SoundGetWaveVolume|SoundPlay|SoundSet|SoundSetWaveVolume|SplashImage|SplashTextOff|SplashTextOn|SplitPath|StatusBarGetText|StatusBarWait|StringCaseSense|StringGetPos|StringLeft|StringLen|StringLower|StringMid|StringReplace|StringRight|StringSplit|StringTrimLeft|StringTrimRight|StringUpper|Suspend|SysGet|Thread|ToolTip|Transform|TrayTip|URLDownloadToFile|WinActivate|WinActivateBottom|WinClose|WinGet|WinGetActiveStats|WinGetActiveTitle|WinGetClass|WinGetPos|WinGetText|WinGetTitle|WinHide|WinKill|WinMaximize|WinMenuSelectItem|WinMinimize|WinMinimizeAll|WinMinimizeAllUndo|WinMove|WinRestore|WinSet|WinSetTitle|WinShow|WinWait|WinWaitActive|WinWaitClose|WinWaitNotActive)\\b/i,\n    constant:\n      /\\b(?:a_ahkpath|a_ahkversion|a_appdata|a_appdatacommon|a_autotrim|a_batchlines|a_caretx|a_carety|a_computername|a_controldelay|a_cursor|a_dd|a_ddd|a_dddd|a_defaultmousespeed|a_desktop|a_desktopcommon|a_detecthiddentext|a_detecthiddenwindows|a_endchar|a_eventinfo|a_exitreason|a_fileencoding|a_formatfloat|a_formatinteger|a_gui|a_guicontrol|a_guicontrolevent|a_guievent|a_guiheight|a_guiwidth|a_guix|a_guiy|a_hour|a_iconfile|a_iconhidden|a_iconnumber|a_icontip|a_index|a_ipaddress1|a_ipaddress2|a_ipaddress3|a_ipaddress4|a_is64bitos|a_isadmin|a_iscompiled|a_iscritical|a_ispaused|a_issuspended|a_isunicode|a_keydelay|a_language|a_lasterror|a_linefile|a_linenumber|a_loopfield|a_loopfileattrib|a_loopfiledir|a_loopfileext|a_loopfilefullpath|a_loopfilelongpath|a_loopfilename|a_loopfileshortname|a_loopfileshortpath|a_loopfilesize|a_loopfilesizekb|a_loopfilesizemb|a_loopfiletimeaccessed|a_loopfiletimecreated|a_loopfiletimemodified|a_loopreadline|a_loopregkey|a_loopregname|a_loopregsubkey|a_loopregtimemodified|a_loopregtype|a_mday|a_min|a_mm|a_mmm|a_mmmm|a_mon|a_mousedelay|a_msec|a_mydocuments|a_now|a_nowutc|a_numbatchlines|a_ostype|a_osversion|a_priorhotkey|a_priorkey|a_programfiles|a_programs|a_programscommon|a_ptrsize|a_regview|a_screendpi|a_screenheight|a_screenwidth|a_scriptdir|a_scriptfullpath|a_scripthwnd|a_scriptname|a_sec|a_space|a_startmenu|a_startmenucommon|a_startup|a_startupcommon|a_stringcasesense|a_tab|a_temp|a_thisfunc|a_thishotkey|a_thislabel|a_thismenu|a_thismenuitem|a_thismenuitempos|a_tickcount|a_timeidle|a_timeidlephysical|a_timesincepriorhotkey|a_timesincethishotkey|a_titlematchmode|a_titlematchmodespeed|a_username|a_wday|a_windelay|a_windir|a_workingdir|a_yday|a_year|a_yweek|a_yyyy|clipboard|clipboardall|comspec|errorlevel|programfiles)\\b/i,\n    builtin:\n      /\\b(?:abs|acos|asc|asin|atan|ceil|chr|class|comobjactive|comobjarray|comobjconnect|comobjcreate|comobjerror|comobjflags|comobjget|comobjquery|comobjtype|comobjvalue|cos|dllcall|exp|fileexist|Fileopen|floor|format|il_add|il_create|il_destroy|instr|isfunc|islabel|IsObject|ln|log|ltrim|lv_add|lv_delete|lv_deletecol|lv_getcount|lv_getnext|lv_gettext|lv_insert|lv_insertcol|lv_modify|lv_modifycol|lv_setimagelist|mod|numget|numput|onmessage|regexmatch|regexreplace|registercallback|round|rtrim|sb_seticon|sb_setparts|sb_settext|sin|sqrt|strlen|strreplace|strsplit|substr|tan|tv_add|tv_delete|tv_get|tv_getchild|tv_getcount|tv_getnext|tv_getparent|tv_getprev|tv_getselection|tv_gettext|tv_modify|varsetcapacity|winactive|winexist|__Call|__Get|__New|__Set)\\b/i,\n    symbol:\n      /\\b(?:alt|altdown|altup|appskey|backspace|browser_back|browser_favorites|browser_forward|browser_home|browser_refresh|browser_search|browser_stop|bs|capslock|ctrl|ctrlbreak|ctrldown|ctrlup|del|delete|down|end|enter|esc|escape|f1|f10|f11|f12|f13|f14|f15|f16|f17|f18|f19|f2|f20|f21|f22|f23|f24|f3|f4|f5|f6|f7|f8|f9|home|ins|insert|joy1|joy10|joy11|joy12|joy13|joy14|joy15|joy16|joy17|joy18|joy19|joy2|joy20|joy21|joy22|joy23|joy24|joy25|joy26|joy27|joy28|joy29|joy3|joy30|joy31|joy32|joy4|joy5|joy6|joy7|joy8|joy9|joyaxes|joybuttons|joyinfo|joyname|joypov|joyr|joyu|joyv|joyx|joyy|joyz|lalt|launch_app1|launch_app2|launch_mail|launch_media|lbutton|lcontrol|lctrl|left|lshift|lwin|lwindown|lwinup|mbutton|media_next|media_play_pause|media_prev|media_stop|numlock|numpad0|numpad1|numpad2|numpad3|numpad4|numpad5|numpad6|numpad7|numpad8|numpad9|numpadadd|numpadclear|numpaddel|numpaddiv|numpaddot|numpaddown|numpadend|numpadenter|numpadhome|numpadins|numpadleft|numpadmult|numpadpgdn|numpadpgup|numpadright|numpadsub|numpadup|pgdn|pgup|printscreen|ralt|rbutton|rcontrol|rctrl|right|rshift|rwin|rwindown|rwinup|scrolllock|shift|shiftdown|shiftup|space|tab|up|volume_down|volume_mute|volume_up|wheeldown|wheelleft|wheelright|wheelup|xbutton1|xbutton2)\\b/i,\n    important:\n      /#\\b(?:AllowSameLineComments|ClipboardTimeout|CommentFlag|DerefChar|ErrorStdOut|EscapeChar|HotkeyInterval|HotkeyModifierTimeout|Hotstring|If|IfTimeout|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Include|IncludeAgain|InputLevel|InstallKeybdHook|InstallMouseHook|KeyHistory|MaxHotkeysPerInterval|MaxMem|MaxThreads|MaxThreadsBuffer|MaxThreadsPerHotkey|MenuMaskKey|NoEnv|NoTrayIcon|Persistent|SingleInstance|UseHook|Warn|WinActivateForce)\\b/i,\n    keyword:\n      /\\b(?:Abort|AboveNormal|Add|ahk_class|ahk_exe|ahk_group|ahk_id|ahk_pid|All|Alnum|Alpha|AltSubmit|AltTab|AltTabAndMenu|AltTabMenu|AltTabMenuDismiss|AlwaysOnTop|AutoSize|Background|BackgroundTrans|BelowNormal|between|BitAnd|BitNot|BitOr|BitShiftLeft|BitShiftRight|BitXOr|Bold|Border|Button|ByRef|Catch|Checkbox|Checked|CheckedGray|Choose|ChooseString|Close|Color|ComboBox|Contains|ControlList|Count|Date|DateTime|Days|DDL|Default|DeleteAll|Delimiter|Deref|Destroy|Digit|Disable|Disabled|DropDownList|Edit|Eject|Else|Enable|Enabled|Error|Exist|Expand|ExStyle|FileSystem|Finally|First|Flash|Float|FloatFast|Focus|Font|for|global|Grid|Group|GroupBox|GuiClose|GuiContextMenu|GuiDropFiles|GuiEscape|GuiSize|Hdr|Hidden|Hide|High|HKCC|HKCR|HKCU|HKEY_CLASSES_ROOT|HKEY_CURRENT_CONFIG|HKEY_CURRENT_USER|HKEY_LOCAL_MACHINE|HKEY_USERS|HKLM|HKU|Hours|HScroll|Icon|IconSmall|ID|IDLast|If|IfEqual|IfExist|IfGreater|IfGreaterOrEqual|IfInString|IfLess|IfLessOrEqual|IfMsgBox|IfNotEqual|IfNotExist|IfNotInString|IfWinActive|IfWinExist|IfWinNotActive|IfWinNotExist|Ignore|ImageList|in|Integer|IntegerFast|Interrupt|is|italic|Join|Label|LastFound|LastFoundExist|Limit|Lines|List|ListBox|ListView|local|Lock|Logoff|Low|Lower|Lowercase|MainWindow|Margin|Maximize|MaximizeBox|MaxSize|Minimize|MinimizeBox|MinMax|MinSize|Minutes|MonthCal|Mouse|Move|Multi|NA|No|NoActivate|NoDefault|NoHide|NoIcon|NoMainWindow|norm|Normal|NoSort|NoSortHdr|NoStandard|Not|NoTab|NoTimers|Number|Off|Ok|On|OwnDialogs|Owner|Parse|Password|Picture|Pixel|Pos|Pow|Priority|ProcessName|Radio|Range|Read|ReadOnly|Realtime|Redraw|Region|REG_BINARY|REG_DWORD|REG_EXPAND_SZ|REG_MULTI_SZ|REG_SZ|Relative|Rename|Report|Resize|Restore|Retry|RGB|Screen|Seconds|Section|Serial|SetLabel|ShiftAltTab|Show|Single|Slider|SortDesc|Standard|static|Status|StatusBar|StatusCD|strike|Style|Submit|SysMenu|Tab2|TabStop|Text|Theme|Throw|Tile|ToggleCheck|ToggleEnable|ToolWindow|Top|Topmost|TransColor|Transparent|Tray|TreeView|Try|TryAgain|Type|UnCheck|underline|Unicode|Unlock|Until|UpDown|Upper|Uppercase|UseErrorLevel|Vis|VisFirst|Visible|VScroll|Wait|WaitClose|WantCtrlA|WantF2|WantReturn|While|Wrap|Xdigit|xm|xp|xs|Yes|ym|yp|ys)\\b/i,\n    function: /[^(); \\t,\\n+*\\-=?>:\\\\\\/<&%\\[\\]]+(?=\\()/,\n    punctuation: /[{}[\\]():,]/\n  }\n}\n","'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern:\n          /(^[\\t ]*)#(?:comments-start|cs)[\\s\\S]*?^[ \\t]*#(?:ce|comments-end)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^[\\t ]*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^[\\t ]*)#[\\w-]+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword:\n      /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n","'use strict'\n\nmodule.exports = avisynth\navisynth.displayName = 'avisynth'\navisynth.aliases = ['avs']\nfunction avisynth(Prism) {\n  // http://avisynth.nl/index.php/The_full_AviSynth_grammar\n  ;(function (Prism) {\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return replacements[+index]\n      })\n    }\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    var types = /bool|clip|float|int|string|val/.source\n    var internals = [\n      // bools\n      /is(?:bool|clip|float|int|string)|defined|(?:(?:internal)?function|var)?exists?/\n        .source, // control\n      /apply|assert|default|eval|import|nop|select|undefined/.source, // global\n      /opt_(?:allowfloataudio|avipadscanlines|dwchannelmask|enable_(?:b64a|planartopackedrgb|v210|y3_10_10|y3_10_16)|usewaveextensible|vdubplanarhack)|set(?:cachemode|maxcpu|memorymax|planarlegacyalignment|workingdir)/\n        .source, // conv\n      /hex(?:value)?|value/.source, // numeric\n      /abs|ceil|continued(?:denominator|numerator)?|exp|floor|fmod|frac|log(?:10)?|max|min|muldiv|pi|pow|rand|round|sign|spline|sqrt/\n        .source, // trig\n      /a?sinh?|a?cosh?|a?tan[2h]?/.source, // bit\n      /(?:bit(?:and|not|x?or|[lr]?shift[aslu]?|sh[lr]|sa[lr]|[lr]rotatel?|ro[rl]|te?st|set(?:count)?|cl(?:ea)?r|ch(?:an)?ge?))/\n        .source, // runtime\n      /average(?:[bgr]|chroma[uv]|luma)|(?:[rgb]|chroma[uv]|luma|rgb|[yuv](?=difference(?:fromprevious|tonext)))difference(?:fromprevious|tonext)?|[yuvrgb]plane(?:median|min|max|minmaxdifference)/\n        .source, // script\n      /getprocessinfo|logmsg|script(?:dir(?:utf8)?|file(?:utf8)?|name(?:utf8)?)|setlogparams/\n        .source, // string\n      /chr|(?:fill|find|left|mid|replace|rev|right)str|format|[lu]case|ord|str(?:cmpi?|fromutf8|len|toutf8)|time|trim(?:all|left|right)/\n        .source, // version\n      /isversionorgreater|version(?:number|string)/.source, // helper\n      /buildpixeltype|colorspacenametopixeltype/.source, // avsplus\n      /addautoloaddir|on(?:cpu|cuda)|prefetch|setfiltermtmode/.source\n    ].join('|')\n    var properties = [\n      // content\n      /has(?:audio|video)/.source, // resolution\n      /height|width/.source, // framerate\n      /frame(?:count|rate)|framerate(?:denominator|numerator)/.source, // interlacing\n      /getparity|is(?:field|frame)based/.source, // color format\n      /bitspercomponent|componentsize|hasalpha|is(?:planar(?:rgba?)?|interleaved|rgb(?:24|32|48|64)?|y(?:8|u(?:va?|y2))?|yv(?:12|16|24|411)|420|422|444|packedrgb)|numcomponents|pixeltype/\n        .source, // audio\n      /audio(?:bits|channels|duration|length(?:[fs]|hi|lo)?|rate)|isaudio(?:float|int)/\n        .source\n    ].join('|')\n    var filters = [\n      // source\n      /avi(?:file)?source|directshowsource|image(?:reader|source|sourceanim)|opendmlsource|segmented(?:avisource|directshowsource)|wavsource/\n        .source, // color\n      /coloryuv|convertbacktoyuy2|convertto(?:RGB(?:24|32|48|64)|(?:planar)?RGBA?|Y8?|YV(?:12|16|24|411)|YUVA?(?:411|420|422|444)|YUY2)|fixluminance|gr[ae]yscale|invert|levels|limiter|mergea?rgb|merge(?:chroma|luma)|rgbadjust|show(?:alpha|blue|green|red)|swapuv|tweak|[uv]toy8?|ytouv/\n        .source, // overlay\n      /(?:colorkey|reset)mask|layer|mask(?:hs)?|merge|overlay|subtract/.source, // geometry\n      /addborders|(?:bicubic|bilinear|blackman|gauss|lanczos4|lanczos|point|sinc|spline(?:16|36|64))resize|crop(?:bottom)?|flip(?:horizontal|vertical)|(?:horizontal|vertical)?reduceby2|letterbox|skewrows|turn(?:180|left|right)/\n        .source, // pixel\n      /blur|fixbrokenchromaupsampling|generalconvolution|(?:spatial|temporal)soften|sharpen/\n        .source, // timeline\n      /trim|(?:un)?alignedsplice|(?:assume|assumescaled|change|convert)FPS|(?:delete|duplicate)frame|dissolve|fade(?:in|io|out)[02]?|freezeframe|interleave|loop|reverse|select(?:even|odd|(?:range)?every)/\n        .source, // interlace\n      /assume[bt]ff|assume(?:field|frame)based|bob|complementparity|doubleweave|peculiarblend|pulldown|separate(?:columns|fields|rows)|swapfields|weave(?:columns|rows)?/\n        .source, // audio\n      /amplify(?:db)?|assumesamplerate|audiodub(?:ex)?|audiotrim|convertaudioto(?:(?:8|16|24|32)bit|float)|converttomono|delayaudio|ensurevbrmp3sync|get(?:left|right)?channel|kill(?:audio|video)|mergechannels|mixaudio|monotostereo|normalize|resampleaudio|ssrc|supereq|timestretch/\n        .source, // conditional\n      /animate|applyrange|conditional(?:filter|reader|select)|frameevaluate|scriptclip|tcp(?:server|source)|writefile(?:end|if|start)?/\n        .source, // export\n      /imagewriter/.source, // debug\n      /blackness|blankclip|colorbars(?:hd)?|compare|dumpfiltergraph|echo|histogram|info|messageclip|preroll|setgraphanalysis|show(?:framenumber|smpte|time)|showfiveversions|stack(?:horizontal|vertical)|subtitle|tone|version/\n        .source\n    ].join('|')\n    var allinternals = [internals, properties, filters].join('|')\n    Prism.languages.avisynth = {\n      comment: [\n        {\n          // Matches [* *] nestable block comments, but only supports 1 level of nested comments\n          // /\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|<self>)*\\*\\]/\n          pattern:\n            /(^|[^\\\\])\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\])|\\[\\*(?:[^\\[*]|\\[(?!\\*)|\\*(?!\\]))*\\*\\])*\\*\\]/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches /* */ block comments\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // Matches # comments\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // Handle before strings because optional arguments are surrounded by double quotes\n      argument: {\n        pattern: re(/\\b(?:<<0>>)\\s+(\"?)\\w+\\1/.source, [types], 'i'),\n        inside: {\n          keyword: /^\\w+/\n        }\n      },\n      // Optional argument assignment\n      'argument-label': {\n        pattern: /([,(][\\s\\\\]*)\\w+\\s*=(?!=)/,\n        lookbehind: true,\n        inside: {\n          'argument-name': {\n            pattern: /^\\w+/,\n            alias: 'punctuation'\n          },\n          punctuation: /=$/\n        }\n      },\n      string: [\n        {\n          // triple double-quoted\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true\n        },\n        {\n          // single double-quoted\n          pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            constant: {\n              // These *are* case-sensitive!\n              pattern:\n                /\\b(?:DEFAULT_MT_MODE|(?:MAINSCRIPT|PROGRAM|SCRIPT)DIR|(?:MACHINE|USER)_(?:CLASSIC|PLUS)_PLUGINS)\\b/\n            }\n          }\n        }\n      ],\n      // The special \"last\" variable that takes the value of the last implicitly returned clip\n      variable: /\\b(?:last)\\b/i,\n      boolean: /\\b(?:false|no|true|yes)\\b/i,\n      keyword:\n        /\\b(?:catch|else|for|function|global|if|return|try|while|__END__)\\b/i,\n      constant: /\\bMT_(?:MULTI_INSTANCE|NICE_FILTER|SERIALIZED|SPECIAL_MT)\\b/,\n      // AviSynth's internal functions, filters, and properties\n      'builtin-function': {\n        pattern: re(/\\b(?:<<0>>)\\b/.source, [allinternals], 'i'),\n        alias: 'function'\n      },\n      'type-cast': {\n        pattern: re(/\\b(?:<<0>>)(?=\\s*\\()/.source, [types], 'i'),\n        alias: 'keyword'\n      },\n      // External/user-defined filters\n      function: {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()|(\\.)[a-z_]\\w*\\b/i,\n        lookbehind: true\n      },\n      // Matches a \\ as the first or last character on a line\n      'line-continuation': {\n        pattern: /(^[ \\t]*)\\\\|\\\\(?=[ \\t]*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      number:\n        /\\B\\$(?:[\\da-f]{6}|[\\da-f]{8})\\b|(?:(?:\\b|\\B-)\\d+(?:\\.\\d*)?\\b|\\B\\.\\d+\\b)/i,\n      operator: /\\+\\+?|[!=<>]=?|&&|\\|\\||[?:*/%-]/,\n      punctuation: /[{}\\[\\]();,.]/\n    }\n    Prism.languages.avs = Prism.languages.avisynth\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = avroIdl\navroIdl.displayName = 'avroIdl'\navroIdl.aliases = []\nfunction avroIdl(Prism) {\n  // GitHub: https://github.com/apache/avro\n  // Docs: https://avro.apache.org/docs/current/idl.html\n  Prism.languages['avro-idl'] = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    annotation: {\n      pattern: /@(?:[$\\w.-]|`[^\\r\\n`]+`)+/,\n      greedy: true,\n      alias: 'function'\n    },\n    'function-identifier': {\n      pattern: /`[^\\r\\n`]+`(?=\\s*\\()/,\n      greedy: true,\n      alias: 'function'\n    },\n    identifier: {\n      pattern: /`[^\\r\\n`]+`/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:enum|error|protocol|record|throws)\\b\\s+)[$\\w]+/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:array|boolean|bytes|date|decimal|double|enum|error|false|fixed|float|idl|import|int|local_timestamp_ms|long|map|null|oneway|protocol|record|schema|string|throws|time_ms|timestamp_ms|true|union|uuid|void)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: [\n      {\n        pattern:\n          /(^|[^\\w.])-?(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|0x(?:[a-f0-9]+(?:\\.[a-f0-9]*)?|\\.[a-f0-9]+)(?:p[+-]?\\d+)?)[dfl]?(?![\\w.])/i,\n        lookbehind: true\n      },\n      /-?\\b(?:Infinity|NaN)\\b/\n    ],\n    operator: /=/,\n    punctuation: /[()\\[\\]{}<>.:,;-]/\n  }\n  Prism.languages.avdl = Prism.languages['avro-idl']\n}\n","'use strict'\n\nmodule.exports = bash\nbash.displayName = 'bash'\nbash.aliases = ['shell']\nfunction bash(Prism) {\n  ;(function (Prism) {\n    // $ set | grep '^[A-Z][^[:space:]]*=' | cut -d= -f1 | tr '\\n' '|'\n    // + LC_ALL, RANDOM, REPLY, SECONDS.\n    // + make sure PS1..4 are here as they are not always set,\n    // - some useless things.\n    var envVars =\n      '\\\\b(?:BASH|BASHOPTS|BASH_ALIASES|BASH_ARGC|BASH_ARGV|BASH_CMDS|BASH_COMPLETION_COMPAT_DIR|BASH_LINENO|BASH_REMATCH|BASH_SOURCE|BASH_VERSINFO|BASH_VERSION|COLORTERM|COLUMNS|COMP_WORDBREAKS|DBUS_SESSION_BUS_ADDRESS|DEFAULTS_PATH|DESKTOP_SESSION|DIRSTACK|DISPLAY|EUID|GDMSESSION|GDM_LANG|GNOME_KEYRING_CONTROL|GNOME_KEYRING_PID|GPG_AGENT_INFO|GROUPS|HISTCONTROL|HISTFILE|HISTFILESIZE|HISTSIZE|HOME|HOSTNAME|HOSTTYPE|IFS|INSTANCE|JOB|LANG|LANGUAGE|LC_ADDRESS|LC_ALL|LC_IDENTIFICATION|LC_MEASUREMENT|LC_MONETARY|LC_NAME|LC_NUMERIC|LC_PAPER|LC_TELEPHONE|LC_TIME|LESSCLOSE|LESSOPEN|LINES|LOGNAME|LS_COLORS|MACHTYPE|MAILCHECK|MANDATORY_PATH|NO_AT_BRIDGE|OLDPWD|OPTERR|OPTIND|ORBIT_SOCKETDIR|OSTYPE|PAPERSIZE|PATH|PIPESTATUS|PPID|PS1|PS2|PS3|PS4|PWD|RANDOM|REPLY|SECONDS|SELINUX_INIT|SESSION|SESSIONTYPE|SESSION_MANAGER|SHELL|SHELLOPTS|SHLVL|SSH_AUTH_SOCK|TERM|UID|UPSTART_EVENTS|UPSTART_INSTANCE|UPSTART_JOB|UPSTART_SESSION|USER|WINDOWID|XAUTHORITY|XDG_CONFIG_DIRS|XDG_CURRENT_DESKTOP|XDG_DATA_DIRS|XDG_GREETER_DATA_DIR|XDG_MENU_PREFIX|XDG_RUNTIME_DIR|XDG_SEAT|XDG_SEAT_PATH|XDG_SESSION_DESKTOP|XDG_SESSION_ID|XDG_SESSION_PATH|XDG_SESSION_TYPE|XDG_VTNR|XMODIFIERS)\\\\b'\n    var commandAfterHeredoc = {\n      pattern: /(^([\"']?)\\w+\\2)[ \\t]+\\S.*/,\n      lookbehind: true,\n      alias: 'punctuation',\n      // this looks reasonably well in all themes\n      inside: null // see below\n    }\n    var insideString = {\n      bash: commandAfterHeredoc,\n      environment: {\n        pattern: RegExp('\\\\$' + envVars),\n        alias: 'constant'\n      },\n      variable: [\n        // [0]: Arithmetic Environment\n        {\n          pattern: /\\$?\\(\\([\\s\\S]+?\\)\\)/,\n          greedy: true,\n          inside: {\n            // If there is a $ sign at the beginning highlight $(( and )) as variable\n            variable: [\n              {\n                pattern: /(^\\$\\(\\([\\s\\S]+)\\)\\)/,\n                lookbehind: true\n              },\n              /^\\$\\(\\(/\n            ],\n            number:\n              /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n            // Operators according to https://www.gnu.org/software/bash/manual/bashref.html#Shell-Arithmetic\n            operator:\n              /--|\\+\\+|\\*\\*=?|<<=?|>>=?|&&|\\|\\||[=!+\\-*/%<>^&|]=?|[?~:]/,\n            // If there is no $ sign at the beginning highlight (( and )) as punctuation\n            punctuation: /\\(\\(?|\\)\\)?|,|;/\n          }\n        }, // [1]: Command Substitution\n        {\n          pattern: /\\$\\((?:\\([^)]+\\)|[^()])+\\)|`[^`]+`/,\n          greedy: true,\n          inside: {\n            variable: /^\\$\\(|^`|\\)$|`$/\n          }\n        }, // [2]: Brace expansion\n        {\n          pattern: /\\$\\{[^}]+\\}/,\n          greedy: true,\n          inside: {\n            operator: /:[-=?+]?|[!\\/]|##?|%%?|\\^\\^?|,,?/,\n            punctuation: /[\\[\\]]/,\n            environment: {\n              pattern: RegExp('(\\\\{)' + envVars),\n              lookbehind: true,\n              alias: 'constant'\n            }\n          }\n        },\n        /\\$(?:\\w+|[#?*!@$])/\n      ],\n      // Escape sequences from echo and printf's manuals, and escaped quotes.\n      entity:\n        /\\\\(?:[abceEfnrtv\\\\\"]|O?[0-7]{1,3}|U[0-9a-fA-F]{8}|u[0-9a-fA-F]{4}|x[0-9a-fA-F]{1,2})/\n    }\n    Prism.languages.bash = {\n      shebang: {\n        pattern: /^#!\\s*\\/.*/,\n        alias: 'important'\n      },\n      comment: {\n        pattern: /(^|[^\"{\\\\$])#.*/,\n        lookbehind: true\n      },\n      'function-name': [\n        // a) function foo {\n        // b) foo() {\n        // c) function foo() {\n        // but not “foo {”\n        {\n          // a) and c)\n          pattern: /(\\bfunction\\s+)[\\w-]+(?=(?:\\s*\\(?:\\s*\\))?\\s*\\{)/,\n          lookbehind: true,\n          alias: 'function'\n        },\n        {\n          // b)\n          pattern: /\\b[\\w-]+(?=\\s*\\(\\s*\\)\\s*\\{)/,\n          alias: 'function'\n        }\n      ],\n      // Highlight variable names as variables in for and select beginnings.\n      'for-or-select': {\n        pattern: /(\\b(?:for|select)\\s+)\\w+(?=\\s+in\\s)/,\n        alias: 'variable',\n        lookbehind: true\n      },\n      // Highlight variable names as variables in the left-hand part\n      // of assignments (“=” and “+=”).\n      'assign-left': {\n        pattern: /(^|[\\s;|&]|[<>]\\()\\w+(?=\\+?=)/,\n        inside: {\n          environment: {\n            pattern: RegExp('(^|[\\\\s;|&]|[<>]\\\\()' + envVars),\n            lookbehind: true,\n            alias: 'constant'\n          }\n        },\n        alias: 'variable',\n        lookbehind: true\n      },\n      string: [\n        // Support for Here-documents https://en.wikipedia.org/wiki/Here_document\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)(\\w+)\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\2/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        }, // Here-document with quotes around the tag\n        // → No expansion (so no “inside”).\n        {\n          pattern: /((?:^|[^<])<<-?\\s*)([\"'])(\\w+)\\2\\s[\\s\\S]*?(?:\\r?\\n|\\r)\\3/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            bash: commandAfterHeredoc\n          }\n        }, // “Normal” string\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Double-Quotes.html\n          pattern:\n            /(^|[^\\\\](?:\\\\\\\\)*)\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/,\n          lookbehind: true,\n          greedy: true,\n          inside: insideString\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/Single-Quotes.html\n          pattern: /(^|[^$\\\\])'[^']*'/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // https://www.gnu.org/software/bash/manual/html_node/ANSI_002dC-Quoting.html\n          pattern: /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n          greedy: true,\n          inside: {\n            entity: insideString.entity\n          }\n        }\n      ],\n      environment: {\n        pattern: RegExp('\\\\$?' + envVars),\n        alias: 'constant'\n      },\n      variable: insideString.variable,\n      function: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:add|apropos|apt|apt-cache|apt-get|aptitude|aspell|automysqlbackup|awk|basename|bash|bc|bconsole|bg|bzip2|cal|cat|cfdisk|chgrp|chkconfig|chmod|chown|chroot|cksum|clear|cmp|column|comm|composer|cp|cron|crontab|csplit|curl|cut|date|dc|dd|ddrescue|debootstrap|df|diff|diff3|dig|dir|dircolors|dirname|dirs|dmesg|docker|docker-compose|du|egrep|eject|env|ethtool|expand|expect|expr|fdformat|fdisk|fg|fgrep|file|find|fmt|fold|format|free|fsck|ftp|fuser|gawk|git|gparted|grep|groupadd|groupdel|groupmod|groups|grub-mkconfig|gzip|halt|head|hg|history|host|hostname|htop|iconv|id|ifconfig|ifdown|ifup|import|install|ip|jobs|join|kill|killall|less|link|ln|locate|logname|logrotate|look|lpc|lpr|lprint|lprintd|lprintq|lprm|ls|lsof|lynx|make|man|mc|mdadm|mkconfig|mkdir|mke2fs|mkfifo|mkfs|mkisofs|mknod|mkswap|mmv|more|most|mount|mtools|mtr|mutt|mv|nano|nc|netstat|nice|nl|node|nohup|notify-send|npm|nslookup|op|open|parted|passwd|paste|pathchk|ping|pkill|pnpm|podman|podman-compose|popd|pr|printcap|printenv|ps|pushd|pv|quota|quotacheck|quotactl|ram|rar|rcp|reboot|remsync|rename|renice|rev|rm|rmdir|rpm|rsync|scp|screen|sdiff|sed|sendmail|seq|service|sftp|sh|shellcheck|shuf|shutdown|sleep|slocate|sort|split|ssh|stat|strace|su|sudo|sum|suspend|swapon|sync|tac|tail|tar|tee|time|timeout|top|touch|tr|traceroute|tsort|tty|umount|uname|unexpand|uniq|units|unrar|unshar|unzip|update-grub|uptime|useradd|userdel|usermod|users|uudecode|uuencode|v|vcpkg|vdir|vi|vim|virsh|vmstat|wait|watch|wc|wget|whereis|which|who|whoami|write|xargs|xdg-open|yarn|yes|zenity|zip|zsh|zypper)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:case|do|done|elif|else|esac|fi|for|function|if|in|select|then|until|while)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      // https://www.gnu.org/software/bash/manual/html_node/Shell-Builtin-Commands.html\n      builtin: {\n        pattern:\n          /(^|[\\s;|&]|[<>]\\()(?:\\.|:|alias|bind|break|builtin|caller|cd|command|continue|declare|echo|enable|eval|exec|exit|export|getopts|hash|help|let|local|logout|mapfile|printf|pwd|read|readarray|readonly|return|set|shift|shopt|source|test|times|trap|type|typeset|ulimit|umask|unalias|unset)(?=$|[)\\s;|&])/,\n        lookbehind: true,\n        // Alias added to make those easier to distinguish from strings.\n        alias: 'class-name'\n      },\n      boolean: {\n        pattern: /(^|[\\s;|&]|[<>]\\()(?:false|true)(?=$|[)\\s;|&])/,\n        lookbehind: true\n      },\n      'file-descriptor': {\n        pattern: /\\B&\\d\\b/,\n        alias: 'important'\n      },\n      operator: {\n        // Lots of redirections here, but not just that.\n        pattern:\n          /\\d?<>|>\\||\\+=|=[=~]?|!=?|<<[<-]?|[&\\d]?>>|\\d[<>]&?|[<>][&=]?|&[>&]?|\\|[&|]?/,\n        inside: {\n          'file-descriptor': {\n            pattern: /^\\d/,\n            alias: 'important'\n          }\n        }\n      },\n      punctuation: /\\$?\\(\\(?|\\)\\)?|\\.\\.|[{}[\\];\\\\]/,\n      number: {\n        pattern: /(^|\\s)(?:[1-9]\\d*|0)(?:[.,]\\d+)?\\b/,\n        lookbehind: true\n      }\n    }\n    commandAfterHeredoc.inside = Prism.languages.bash\n    /* Patterns in command substitution. */\n    var toBeCopied = [\n      'comment',\n      'function-name',\n      'for-or-select',\n      'assign-left',\n      'string',\n      'environment',\n      'function',\n      'keyword',\n      'builtin',\n      'boolean',\n      'file-descriptor',\n      'operator',\n      'punctuation',\n      'number'\n    ]\n    var inside = insideString.variable[1].inside\n    for (var i = 0; i < toBeCopied.length; i++) {\n      inside[toBeCopied[i]] = Prism.languages.bash[toBeCopied[i]]\n    }\n    Prism.languages.shell = Prism.languages.bash\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = basic\nbasic.displayName = 'basic'\nbasic.aliases = []\nfunction basic(Prism) {\n  Prism.languages.basic = {\n    comment: {\n      pattern: /(?:!|REM\\b).+/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:AS|BEEP|BLOAD|BSAVE|CALL(?: ABSOLUTE)?|CASE|CHAIN|CHDIR|CLEAR|CLOSE|CLS|COM|COMMON|CONST|DATA|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DIM|DO|DOUBLE|ELSE|ELSEIF|END|ENVIRON|ERASE|ERROR|EXIT|FIELD|FILES|FOR|FUNCTION|GET|GOSUB|GOTO|IF|INPUT|INTEGER|IOCTL|KEY|KILL|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|MKDIR|NAME|NEXT|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPTION BASE|OUT|POKE|PUT|READ|REDIM|REM|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SELECT CASE|SHARED|SHELL|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|SUB|SWAP|SYSTEM|THEN|TIMER|TO|TROFF|TRON|TYPE|UNLOCK|UNTIL|USING|VIEW PRINT|WAIT|WEND|WHILE|WRITE)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ACCESS|ACOS|ANGLE|AREA|ARITHMETIC|ARRAY|ASIN|ASK|AT|ATN|BASE|BEGIN|BREAK|CAUSE|CEIL|CHR|CLIP|COLLATE|COLOR|CON|COS|COSH|COT|CSC|DATE|DATUM|DEBUG|DECIMAL|DEF|DEG|DEGREES|DELETE|DET|DEVICE|DISPLAY|DOT|ELAPSED|EPS|ERASABLE|EXLINE|EXP|EXTERNAL|EXTYPE|FILETYPE|FIXED|FP|GO|GRAPH|HANDLER|IDN|IMAGE|IN|INT|INTERNAL|IP|IS|KEYED|LBOUND|LCASE|LEFT|LEN|LENGTH|LET|LINE|LINES|LOG|LOG10|LOG2|LTRIM|MARGIN|MAT|MAX|MAXNUM|MID|MIN|MISSING|MOD|NATIVE|NUL|NUMERIC|OF|OPTION|ORD|ORGANIZATION|OUTIN|OUTPUT|PI|POINT|POINTER|POINTS|POS|PRINT|PROGRAM|PROMPT|RAD|RADIANS|RANDOMIZE|RECORD|RECSIZE|RECTYPE|RELATIVE|REMAINDER|REPEAT|REST|RETRY|REWRITE|RIGHT|RND|ROUND|RTRIM|SAME|SEC|SELECT|SEQUENTIAL|SET|SETTER|SGN|SIN|SINH|SIZE|SKIP|SQR|STANDARD|STATUS|STR|STREAM|STYLE|TAB|TAN|TANH|TEMPLATE|TEXT|THERE|TIME|TIMEOUT|TRACE|TRANSFORM|TRUNCATE|UBOUND|UCASE|USE|VAL|VARIABLE|VIEWPORT|WHEN|WINDOW|WITH|ZER|ZONEWIDTH)(?:\\$|\\b)/i,\n    operator: /<[=>]?|>=?|[+\\-*\\/^=&]|\\b(?:AND|EQV|IMP|NOT|OR|XOR)\\b/i,\n    punctuation: /[,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = batch\nbatch.displayName = 'batch'\nbatch.aliases = []\nfunction batch(Prism) {\n  ;(function (Prism) {\n    var variable = /%%?[~:\\w]+%?|!\\S+!/\n    var parameter = {\n      pattern: /\\/[a-z?]+(?=[ :]|$):?|-[a-z]\\b|--[a-z-]+\\b/im,\n      alias: 'attr-name',\n      inside: {\n        punctuation: /:/\n      }\n    }\n    var string = /\"(?:[\\\\\"]\"|[^\"])*\"(?!\")/\n    var number = /(?:\\b|-)\\d+\\b/\n    Prism.languages.batch = {\n      comment: [\n        /^::.*/m,\n        {\n          pattern: /((?:^|[&(])[ \\t]*)rem\\b(?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true\n        }\n      ],\n      label: {\n        pattern: /^:.*/m,\n        alias: 'property'\n      },\n      command: [\n        {\n          // FOR command\n          pattern:\n            /((?:^|[&(])[ \\t]*)for(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* \\S+ in \\([^)]+\\) do/im,\n          lookbehind: true,\n          inside: {\n            keyword: /\\b(?:do|in)\\b|^for\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // IF command\n          pattern:\n            /((?:^|[&(])[ \\t]*)if(?: \\/[a-z?](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:not )?(?:cmdextversion \\d+|defined \\w+|errorlevel \\d+|exist \\S+|(?:\"[^\"]*\"|(?!\")(?:(?!==)\\S)+)?(?:==| (?:equ|geq|gtr|leq|lss|neq) )(?:\"[^\"]*\"|[^\\s\"]\\S*))/im,\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:cmdextversion|defined|errorlevel|exist|not)\\b|^if\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: variable,\n            number: number,\n            operator: /\\^|==|\\b(?:equ|geq|gtr|leq|lss|neq)\\b/i\n          }\n        },\n        {\n          // ELSE command\n          pattern: /((?:^|[&()])[ \\t]*)else\\b/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^else\\b/i\n          }\n        },\n        {\n          // SET command\n          pattern:\n            /((?:^|[&(])[ \\t]*)set(?: \\/[a-z](?:[ :](?:\"[^\"]*\"|[^\\s\"/]\\S*))?)* (?:[^^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/im,\n          lookbehind: true,\n          inside: {\n            keyword: /^set\\b/i,\n            string: string,\n            parameter: parameter,\n            variable: [variable, /\\w+(?=(?:[*\\/%+\\-&^|]|<<|>>)?=)/],\n            number: number,\n            operator: /[*\\/%+\\-&^|]=?|<<=?|>>=?|[!~_=]/,\n            punctuation: /[()',]/\n          }\n        },\n        {\n          // Other commands\n          pattern:\n            /((?:^|[&(])[ \\t]*@?)\\w+\\b(?:\"(?:[\\\\\"]\"|[^\"])*\"(?!\")|[^\"^&)\\r\\n]|\\^(?:\\r\\n|[\\s\\S]))*/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^\\w+\\b/,\n            string: string,\n            parameter: parameter,\n            label: {\n              pattern: /(^\\s*):\\S+/m,\n              lookbehind: true,\n              alias: 'property'\n            },\n            variable: variable,\n            number: number,\n            operator: /\\^/\n          }\n        }\n      ],\n      operator: /[&@]/,\n      punctuation: /[()']/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = bbcode\nbbcode.displayName = 'bbcode'\nbbcode.aliases = ['shortcode']\nfunction bbcode(Prism) {\n  Prism.languages.bbcode = {\n    tag: {\n      pattern:\n        /\\[\\/?[^\\s=\\]]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))?(?:\\s+[^\\s=\\]]+\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+))*\\s*\\]/,\n      inside: {\n        tag: {\n          pattern: /^\\[\\/?[^\\s=\\]]+/,\n          inside: {\n            punctuation: /^\\[\\/?/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\"\\]=]+)/,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\]/,\n        'attr-name': /[^\\s=\\]]+/\n      }\n    }\n  }\n  Prism.languages.shortcode = Prism.languages.bbcode\n}\n","'use strict'\n\nmodule.exports = bicep\nbicep.displayName = 'bicep'\nbicep.aliases = []\nfunction bicep(Prism) {\n  // based loosely upon: https://github.com/Azure/bicep/blob/main/src/textmate/bicep.tmlanguage\n  Prism.languages.bicep = {\n    comment: [\n      {\n        // multiline comments eg /* ASDF */\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        // singleline comments eg // ASDF\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    property: [\n      {\n        pattern: /([\\r\\n][ \\t]*)[a-z_]\\w*(?=[ \\t]*:)/i,\n        lookbehind: true\n      },\n      {\n        pattern: /([\\r\\n][ \\t]*)'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'(?=[ \\t]*:)/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: /'''[^'][\\s\\S]*?'''/,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?!\\{)|[^'\\\\\\r\\n$])*'/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    'interpolated-string': {\n      pattern: /(^|[^\\\\'])'(?:\\\\.|\\$(?:(?!\\{)|\\{[^{}\\r\\n]*\\})|[^'\\\\\\r\\n$])*'/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}\\r\\n]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true\n            },\n            punctuation: /^\\$\\{|\\}$/\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    datatype: {\n      pattern: /(\\b(?:output|param)\\b[ \\t]+\\w+[ \\t]+)\\w+\\b/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    // https://github.com/Azure/bicep/blob/114a3251b4e6e30082a58729f19a8cc4e374ffa6/src/textmate/bicep.tmlanguage#L184\n    keyword:\n      /\\b(?:existing|for|if|in|module|null|output|param|resource|targetScope|var)\\b/,\n    decorator: /@\\w+\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.bicep['interpolated-string'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.bicep\n}\n","'use strict'\n\nmodule.exports = birb\nbirb.displayName = 'birb'\nbirb.aliases = []\nfunction birb(Prism) {\n  Prism.languages.birb = Prism.languages.extend('clike', {\n    string: {\n      pattern: /r?(\"|')(?:\\\\.|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    'class-name': [\n      /\\b[A-Z](?:[\\d_]*[a-zA-Z]\\w*)?\\b/, // matches variable and function return types (parameters as well).\n      /\\b(?:[A-Z]\\w*|(?!(?:var|void)\\b)[a-z]\\w*)(?=\\s+\\w+\\s*[;,=()])/\n    ],\n    keyword:\n      /\\b(?:assert|break|case|class|const|default|else|enum|final|follows|for|grab|if|nest|new|next|noSeeb|return|static|switch|throw|var|void|while)\\b/,\n    operator: /\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?|:/,\n    variable: /\\b[a-z_]\\w*\\b/\n  })\n  Prism.languages.insertBefore('birb', 'function', {\n    metadata: {\n      pattern: /<\\w+>/,\n      greedy: true,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = bison\nbison.displayName = 'bison'\nbison.aliases = []\nfunction bison(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.bison = Prism.languages.extend('c', {})\n  Prism.languages.insertBefore('bison', 'comment', {\n    bison: {\n      // This should match all the beginning of the file\n      // including the prologue(s), the bison declarations and\n      // the grammar rules.\n      pattern: /^(?:[^%]|%(?!%))*%%[\\s\\S]*?%%/,\n      inside: {\n        c: {\n          // Allow for one level of nested braces\n          pattern: /%\\{[\\s\\S]*?%\\}|\\{(?:\\{[^}]*\\}|[^{}])*\\}/,\n          inside: {\n            delimiter: {\n              pattern: /^%?\\{|%?\\}$/,\n              alias: 'punctuation'\n            },\n            'bison-variable': {\n              pattern: /[$@](?:<[^\\s>]+>)?[\\w$]+/,\n              alias: 'variable',\n              inside: {\n                punctuation: /<|>/\n              }\n            },\n            rest: Prism.languages.c\n          }\n        },\n        comment: Prism.languages.c.comment,\n        string: Prism.languages.c.string,\n        property: /\\S+(?=:)/,\n        keyword: /%\\w+/,\n        number: {\n          pattern: /(^|[^@])\\b(?:0x[\\da-f]+|\\d+)/i,\n          lookbehind: true\n        },\n        punctuation: /%[%?]|[|:;\\[\\]<>]/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = bnf\nbnf.displayName = 'bnf'\nbnf.aliases = ['rbnf']\nfunction bnf(Prism) {\n  Prism.languages.bnf = {\n    string: {\n      pattern: /\"[^\\r\\n\"]*\"|'[^\\r\\n']*'/\n    },\n    definition: {\n      pattern: /<[^<>\\r\\n\\t]+>(?=\\s*::=)/,\n      alias: ['rule', 'keyword'],\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    rule: {\n      pattern: /<[^<>\\r\\n\\t]+>/,\n      inside: {\n        punctuation: /^<|>$/\n      }\n    },\n    operator: /::=|[|()[\\]{}*+?]|\\.{3}/\n  }\n  Prism.languages.rbnf = Prism.languages.bnf\n}\n","'use strict'\n\nmodule.exports = brainfuck\nbrainfuck.displayName = 'brainfuck'\nbrainfuck.aliases = []\nfunction brainfuck(Prism) {\n  Prism.languages.brainfuck = {\n    pointer: {\n      pattern: /<|>/,\n      alias: 'keyword'\n    },\n    increment: {\n      pattern: /\\+/,\n      alias: 'inserted'\n    },\n    decrement: {\n      pattern: /-/,\n      alias: 'deleted'\n    },\n    branching: {\n      pattern: /\\[|\\]/,\n      alias: 'important'\n    },\n    operator: /[.,]/,\n    comment: /\\S+/\n  }\n}\n","'use strict'\n\nmodule.exports = brightscript\nbrightscript.displayName = 'brightscript'\nbrightscript.aliases = []\nfunction brightscript(Prism) {\n  Prism.languages.brightscript = {\n    comment: /(?:\\brem|').*/i,\n    'directive-statement': {\n      pattern: /(^[\\t ]*)#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if).*/im,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        'error-message': {\n          pattern: /(^#error).+/,\n          lookbehind: true\n        },\n        directive: {\n          pattern: /^#(?:const|else(?:[\\t ]+if)?|end[\\t ]+if|error|if)/,\n          alias: 'keyword'\n        },\n        expression: {\n          pattern: /[\\s\\S]+/,\n          inside: null // see below\n        }\n      }\n    },\n    property: {\n      pattern:\n        /([\\r\\n{,][\\t ]*)(?:(?!\\d)\\w+|\"(?:[^\"\\r\\n]|\"\")*\"(?!\"))(?=[ \\t]*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\bAs[\\t ]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:As|Dim|Each|Else|Elseif|End|Exit|For|Function|Goto|If|In|Print|Return|Step|Stop|Sub|Then|To|While)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\b(?!\\d)\\w+(?=[\\t ]*\\()/,\n    number: /(?:\\b\\d+(?:\\.\\d+)?(?:[ed][+-]\\d+)?|&h[a-f\\d]+)\\b[%&!#]?/i,\n    operator:\n      /--|\\+\\+|>>=?|<<=?|<>|[-+*/\\\\<>]=?|[:^=?]|\\b(?:and|mod|not|or)\\b/i,\n    punctuation: /[.,;()[\\]{}]/,\n    constant: /\\b(?:LINE_NUM)\\b/i\n  }\n  Prism.languages.brightscript['directive-statement'].inside.expression.inside =\n    Prism.languages.brightscript\n}\n","'use strict'\n\nmodule.exports = bro\nbro.displayName = 'bro'\nbro.aliases = []\nfunction bro(Prism) {\n  Prism.languages.bro = {\n    comment: {\n      pattern: /(^|[^\\\\$])#.*/,\n      lookbehind: true,\n      inside: {\n        italic: /\\b(?:FIXME|TODO|XXX)\\b/\n      }\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    boolean: /\\b[TF]\\b/,\n    function: {\n      pattern: /(\\b(?:event|function|hook)[ \\t]+)\\w+(?:::\\w+)?/,\n      lookbehind: true\n    },\n    builtin:\n      /(?:@(?:load(?:-(?:plugin|sigs))?|unload|prefixes|ifn?def|else|(?:end)?if|DIR|FILENAME))|(?:&?(?:add_func|create_expire|default|delete_func|encrypt|error_handler|expire_func|group|log|mergeable|optional|persistent|priority|raw_output|read_expire|redef|rotate_interval|rotate_size|synchronized|type_column|write_expire))/,\n    constant: {\n      pattern: /(\\bconst[ \\t]+)\\w+/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:add|addr|alarm|any|bool|break|const|continue|count|delete|double|else|enum|event|export|file|for|function|global|hook|if|in|int|interval|local|module|next|of|opaque|pattern|port|print|record|return|schedule|set|string|subnet|table|time|timeout|using|vector|when)\\b/,\n    operator: /--?|\\+\\+?|!=?=?|<=?|>=?|==?=?|&&|\\|\\|?|\\?|\\*|\\/|~|\\^|%/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = bsl\nbsl.displayName = 'bsl'\nbsl.aliases = []\nfunction bsl(Prism) {\n  /* eslint-disable no-misleading-character-class */\n  // 1C:Enterprise\n  // https://github.com/Diversus23/\n  //\n  Prism.languages.bsl = {\n    comment: /\\/\\/.*/,\n    string: [\n      // Строки\n      // Strings\n      {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      }, // Дата и время\n      // Date & time\n      {\n        pattern: /'(?:[^'\\r\\n\\\\]|\\\\.)*'/\n      }\n    ],\n    keyword: [\n      {\n        // RU\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:пока|для|новый|прервать|попытка|исключение|вызватьисключение|иначе|конецпопытки|неопределено|функция|перем|возврат|конецфункции|если|иначеесли|процедура|конецпроцедуры|тогда|знач|экспорт|конецесли|из|каждого|истина|ложь|по|цикл|конеццикла|выполнить)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      },\n      {\n        // EN\n        pattern:\n          /\\b(?:break|do|each|else|elseif|enddo|endfunction|endif|endprocedure|endtry|except|execute|export|false|for|function|if|in|new|null|procedure|raise|return|then|to|true|try|undefined|val|var|while)\\b/i\n      }\n    ],\n    number: {\n      pattern:\n        /(^(?=\\d)|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:E[+-]?\\d+)?/i,\n      lookbehind: true\n    },\n    operator: [\n      /[<>+\\-*/]=?|[%=]/, // RU\n      {\n        pattern:\n          /(^|[^\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])(?:и|или|не)(?![\\w\\u0400-\\u0484\\u0487-\\u052f\\u1d2b\\u1d78\\u2de0-\\u2dff\\ua640-\\ua69f\\ufe2e\\ufe2f])/i,\n        lookbehind: true\n      }, // EN\n      {\n        pattern: /\\b(?:and|not|or)\\b/i\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/,\n    directive: [\n      // Теги препроцессора вида &Клиент, &Сервер, ...\n      // Preprocessor tags of the type &Client, &Server, ...\n      {\n        pattern: /^([ \\t]*)&.*/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }, // Инструкции препроцессора вида:\n      // #Если Сервер Тогда\n      // ...\n      // #КонецЕсли\n      // Preprocessor instructions of the form:\n      // #If Server Then\n      // ...\n      // #EndIf\n      {\n        pattern: /^([ \\t]*)#.*/gm,\n        lookbehind: true,\n        greedy: true,\n        alias: 'important'\n      }\n    ]\n  }\n  Prism.languages.oscript = Prism.languages['bsl']\n}\n","'use strict'\n\nmodule.exports = c\nc.displayName = 'c'\nc.aliases = []\nfunction c(Prism) {\n  Prism.languages.c = Prism.languages.extend('clike', {\n    comment: {\n      pattern:\n        /\\/\\/(?:[^\\r\\n\\\\]|\\\\(?:\\r\\n?|\\n|(?![\\r\\n])))*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    string: {\n      // https://en.cppreference.com/w/c/language/string_literal\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|struct)\\s+(?:__attribute__\\s*\\(\\([\\s\\S]*?\\)\\)\\s*)?)\\w+|\\b[a-z]\\w*_t\\b/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_Alignas|_Alignof|_Atomic|_Bool|_Complex|_Generic|_Imaginary|_Noreturn|_Static_assert|_Thread_local|__attribute__|asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|inline|int|long|register|return|short|signed|sizeof|static|struct|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number:\n      /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ful]{0,4}/i,\n    operator: />>=?|<<=?|->|([-+&|:])\\1|[?:~]|[-+*/%&|^!=<>]=?/\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    char: {\n      // https://en.cppreference.com/w/c/language/character_constant\n      pattern: /'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n]){0,32}'/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('c', 'string', {\n    macro: {\n      // allow for multiline macro definitions\n      // spaces after the # character compile fine with gcc\n      pattern:\n        /(^[\\t ]*)#\\s*[a-z](?:[^\\r\\n\\\\/]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        string: [\n          {\n            // highlight the path of the include statement as a string\n            pattern: /^(#\\s*include\\s*)<[^>]+>/,\n            lookbehind: true\n          },\n          Prism.languages.c['string']\n        ],\n        char: Prism.languages.c['char'],\n        comment: Prism.languages.c['comment'],\n        'macro-name': [\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?!\\()/i,\n            lookbehind: true\n          },\n          {\n            pattern: /(^#\\s*define\\s+)\\w+\\b(?=\\()/i,\n            lookbehind: true,\n            alias: 'function'\n          }\n        ],\n        // highlight macro directives as keywords\n        directive: {\n          pattern: /^(#\\s*)[a-z]+/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        'directive-hash': /^#/,\n        punctuation: /##|\\\\(?=[\\r\\n])/,\n        expression: {\n          pattern: /\\S[\\s\\S]*/,\n          inside: Prism.languages.c\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('c', 'function', {\n    // highlight predefined macros as constants\n    constant:\n      /\\b(?:EOF|NULL|SEEK_CUR|SEEK_END|SEEK_SET|__DATE__|__FILE__|__LINE__|__TIMESTAMP__|__TIME__|__func__|stderr|stdin|stdout)\\b/\n  })\n  delete Prism.languages.c['boolean']\n}\n","'use strict'\n\nmodule.exports = cfscript\ncfscript.displayName = 'cfscript'\ncfscript.aliases = []\nfunction cfscript(Prism) {\n  // https://cfdocs.org/script\n  Prism.languages.cfscript = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        inside: {\n          annotation: {\n            pattern: /(?:^|[^.])@[\\w\\.]+/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|break|catch|component|continue|default|do|else|extends|final|finally|for|function|if|in|include|package|private|property|public|remote|required|rethrow|return|static|switch|throw|try|var|while|xml)\\b(?!\\s*=)/,\n    operator: [\n      /\\+\\+|--|&&|\\|\\||::|=>|[!=]==|<=?|>=?|[-+*/%&|^!=<>]=?|\\?(?:\\.|:)?|[?:]/,\n      /\\b(?:and|contains|eq|equal|eqv|gt|gte|imp|is|lt|lte|mod|not|or|xor)\\b/\n    ],\n    scope: {\n      pattern:\n        /\\b(?:application|arguments|cgi|client|cookie|local|session|super|this|variables)\\b/,\n      alias: 'global'\n    },\n    type: {\n      pattern:\n        /\\b(?:any|array|binary|boolean|date|guid|numeric|query|string|struct|uuid|void|xml)\\b/,\n      alias: 'builtin'\n    }\n  })\n  Prism.languages.insertBefore('cfscript', 'keyword', {\n    // This must be declared before keyword because we use \"function\" inside the lookahead\n    'function-variable': {\n      pattern:\n        /[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    }\n  })\n  delete Prism.languages.cfscript['class-name']\n  Prism.languages.cfc = Prism.languages['cfscript']\n}\n","'use strict'\nvar refractorCpp = require('./cpp.js')\nmodule.exports = chaiscript\nchaiscript.displayName = 'chaiscript'\nchaiscript.aliases = []\nfunction chaiscript(Prism) {\n  Prism.register(refractorCpp)\n  Prism.languages.chaiscript = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': [\n      {\n        // e.g. class Rectangle { ... }\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      },\n      {\n        // e.g. attr Rectangle::height, def Rectangle::area() { ... }\n        pattern: /(\\b(?:attr|def)\\s+)\\w+(?=\\s*::)/,\n        lookbehind: true\n      }\n    ],\n    keyword:\n      /\\b(?:attr|auto|break|case|catch|class|continue|def|default|else|finally|for|fun|global|if|return|switch|this|try|var|while)\\b/,\n    number: [Prism.languages.cpp.number, /\\b(?:Infinity|NaN)\\b/],\n    operator:\n      />>=?|<<=?|\\|\\||&&|:[:=]?|--|\\+\\+|[=!<>+\\-*/%|&^]=?|[?~]|`[^`\\r\\n]{1,4}`/\n  })\n  Prism.languages.insertBefore('chaiscript', 'operator', {\n    'parameter-type': {\n      // e.g. def foo(int x, Vector y) {...}\n      pattern: /([,(]\\s*)\\w+(?=\\s+\\w)/,\n      lookbehind: true,\n      alias: 'class-name'\n    }\n  })\n  Prism.languages.insertBefore('chaiscript', 'string', {\n    'string-interpolation': {\n      pattern:\n        /(^|[^\\\\])\"(?:[^\"$\\\\]|\\\\[\\s\\S]|\\$(?!\\{)|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-expression': {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              inside: Prism.languages.chaiscript\n            },\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = cil\ncil.displayName = 'cil'\ncil.aliases = []\nfunction cil(Prism) {\n  Prism.languages.cil = {\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    directive: {\n      pattern: /(^|\\W)\\.[a-z]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'class-name'\n    },\n    // Actually an assembly reference\n    variable: /\\[[\\w\\.]+\\]/,\n    keyword:\n      /\\b(?:abstract|ansi|assembly|auto|autochar|beforefieldinit|bool|bstr|byvalstr|catch|char|cil|class|currency|date|decimal|default|enum|error|explicit|extends|extern|famandassem|family|famorassem|final(?:ly)?|float32|float64|hidebysig|u?int(?:8|16|32|64)?|iant|idispatch|implements|import|initonly|instance|interface|iunknown|literal|lpstr|lpstruct|lptstr|lpwstr|managed|method|native(?:Type)?|nested|newslot|object(?:ref)?|pinvokeimpl|private|privatescope|public|reqsecobj|rtspecialname|runtime|sealed|sequential|serializable|specialname|static|string|struct|syschar|tbstr|unicode|unmanagedexp|unsigned|value(?:type)?|variant|virtual|void)\\b/,\n    function:\n      /\\b(?:(?:constrained|no|readonly|tail|unaligned|volatile)\\.)?(?:conv\\.(?:[iu][1248]?|ovf\\.[iu][1248]?(?:\\.un)?|r\\.un|r4|r8)|ldc\\.(?:i4(?:\\.\\d+|\\.[mM]1|\\.s)?|i8|r4|r8)|ldelem(?:\\.[iu][1248]?|\\.r[48]|\\.ref|a)?|ldind\\.(?:[iu][1248]?|r[48]|ref)|stelem\\.?(?:i[1248]?|r[48]|ref)?|stind\\.(?:i[1248]?|r[48]|ref)?|end(?:fault|filter|finally)|ldarg(?:\\.[0-3s]|a(?:\\.s)?)?|ldloc(?:\\.\\d+|\\.s)?|sub(?:\\.ovf(?:\\.un)?)?|mul(?:\\.ovf(?:\\.un)?)?|add(?:\\.ovf(?:\\.un)?)?|stloc(?:\\.[0-3s])?|refany(?:type|val)|blt(?:\\.un)?(?:\\.s)?|ble(?:\\.un)?(?:\\.s)?|bgt(?:\\.un)?(?:\\.s)?|bge(?:\\.un)?(?:\\.s)?|unbox(?:\\.any)?|init(?:blk|obj)|call(?:i|virt)?|brfalse(?:\\.s)?|bne\\.un(?:\\.s)?|ldloca(?:\\.s)?|brzero(?:\\.s)?|brtrue(?:\\.s)?|brnull(?:\\.s)?|brinst(?:\\.s)?|starg(?:\\.s)?|leave(?:\\.s)?|shr(?:\\.un)?|rem(?:\\.un)?|div(?:\\.un)?|clt(?:\\.un)?|alignment|castclass|ldvirtftn|beq(?:\\.s)?|ckfinite|ldsflda|ldtoken|localloc|mkrefany|rethrow|cgt\\.un|arglist|switch|stsfld|sizeof|newobj|newarr|ldsfld|ldnull|ldflda|isinst|throw|stobj|stfld|ldstr|ldobj|ldlen|ldftn|ldfld|cpobj|cpblk|break|br\\.s|xor|shl|ret|pop|not|nop|neg|jmp|dup|cgt|ceq|box|and|or|br)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b-?(?:0x[0-9a-f]+|\\d+)(?:\\.[0-9a-f]+)?\\b/i,\n    punctuation: /[{}[\\];(),:=]|IL_[0-9A-Za-z]+/\n  }\n}\n","'use strict'\n\nmodule.exports = clike\nclike.displayName = 'clike'\nclike.aliases = []\nfunction clike(Prism) {\n  Prism.languages.clike = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /[.\\\\]/\n      }\n    },\n    keyword:\n      /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b\\w+(?=\\()/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = clojure\nclojure.displayName = 'clojure'\nclojure.aliases = []\nfunction clojure(Prism) {\n  // Copied from https://github.com/jeluard/prism-clojure\n  Prism.languages.clojure = {\n    comment: {\n      pattern: /;.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n      greedy: true\n    },\n    char: /\\\\\\w+/,\n    symbol: {\n      pattern: /(^|[\\s()\\[\\]{},])::?[\\w*+!?'<>=/.-]+/,\n      lookbehind: true\n    },\n    keyword: {\n      pattern:\n        /(\\()(?:-|->|->>|\\.|\\.\\.|\\*|\\/|\\+|<|<=|=|==|>|>=|accessor|agent|agent-errors|aget|alength|all-ns|alter|and|append-child|apply|array-map|aset|aset-boolean|aset-byte|aset-char|aset-double|aset-float|aset-int|aset-long|aset-short|assert|assoc|await|await-for|bean|binding|bit-and|bit-not|bit-or|bit-shift-left|bit-shift-right|bit-xor|boolean|branch\\?|butlast|byte|cast|char|children|class|clear-agent-errors|comment|commute|comp|comparator|complement|concat|cond|conj|cons|constantly|construct-proxy|contains\\?|count|create-ns|create-struct|cycle|dec|declare|def|def-|definline|definterface|defmacro|defmethod|defmulti|defn|defn-|defonce|defproject|defprotocol|defrecord|defstruct|deftype|deref|difference|disj|dissoc|distinct|do|doall|doc|dorun|doseq|dosync|dotimes|doto|double|down|drop|drop-while|edit|end\\?|ensure|eval|every\\?|false\\?|ffirst|file-seq|filter|find|find-doc|find-ns|find-var|first|float|flush|fn|fnseq|for|frest|gensym|get|get-proxy-class|hash-map|hash-set|identical\\?|identity|if|if-let|if-not|import|in-ns|inc|index|insert-child|insert-left|insert-right|inspect-table|inspect-tree|instance\\?|int|interleave|intersection|into|into-array|iterate|join|key|keys|keyword|keyword\\?|last|lazy-cat|lazy-cons|left|lefts|let|line-seq|list|list\\*|load|load-file|locking|long|loop|macroexpand|macroexpand-1|make-array|make-node|map|map-invert|map\\?|mapcat|max|max-key|memfn|merge|merge-with|meta|min|min-key|monitor-enter|name|namespace|neg\\?|new|newline|next|nil\\?|node|not|not-any\\?|not-every\\?|not=|ns|ns-imports|ns-interns|ns-map|ns-name|ns-publics|ns-refers|ns-resolve|ns-unmap|nth|nthrest|or|parse|partial|path|peek|pop|pos\\?|pr|pr-str|print|print-str|println|println-str|prn|prn-str|project|proxy|proxy-mappings|quot|quote|rand|rand-int|range|re-find|re-groups|re-matcher|re-matches|re-pattern|re-seq|read|read-line|recur|reduce|ref|ref-set|refer|rem|remove|remove-method|remove-ns|rename|rename-keys|repeat|replace|replicate|resolve|rest|resultset-seq|reverse|rfirst|right|rights|root|rrest|rseq|second|select|select-keys|send|send-off|seq|seq-zip|seq\\?|set|set!|short|slurp|some|sort|sort-by|sorted-map|sorted-map-by|sorted-set|special-symbol\\?|split-at|split-with|str|string\\?|struct|struct-map|subs|subvec|symbol|symbol\\?|sync|take|take-nth|take-while|test|throw|time|to-array|to-array-2d|tree-seq|true\\?|try|union|up|update-proxy|val|vals|var|var-get|var-set|var\\?|vector|vector-zip|vector\\?|when|when-first|when-let|when-not|with-local-vars|with-meta|with-open|with-out-str|xml-seq|xml-zip|zero\\?|zipmap|zipper)(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: {\n      pattern:\n        /(^|[^\\w$@])(?:\\d+(?:[/.]\\d+)?(?:e[+-]?\\d+)?|0x[a-f0-9]+|[1-9]\\d?r[a-z0-9]+)[lmn]?(?![\\w$@])/i,\n      lookbehind: true\n    },\n    function: {\n      pattern: /((?:^|[^'])\\()[\\w*+!?'<>=/.-]+(?=[\\s)]|$)/,\n      lookbehind: true\n    },\n    operator: /[#@^`~]/,\n    punctuation: /[{}\\[\\](),]/\n  }\n}\n","'use strict'\n\nmodule.exports = cmake\ncmake.displayName = 'cmake'\ncmake.aliases = []\nfunction cmake(Prism) {\n  Prism.languages.cmake = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{(?:[^{}$]|\\$\\{[^{}$]*\\})*\\}/,\n          inside: {\n            punctuation: /\\$\\{|\\}/,\n            variable: /\\w+/\n          }\n        }\n      }\n    },\n    variable:\n      /\\b(?:CMAKE_\\w+|\\w+_(?:(?:BINARY|SOURCE)_DIR|DESCRIPTION|HOMEPAGE_URL|ROOT|VERSION(?:_MAJOR|_MINOR|_PATCH|_TWEAK)?)|(?:ANDROID|APPLE|BORLAND|BUILD_SHARED_LIBS|CACHE|CPACK_(?:ABSOLUTE_DESTINATION_FILES|COMPONENT_INCLUDE_TOPLEVEL_DIRECTORY|ERROR_ON_ABSOLUTE_INSTALL_DESTINATION|INCLUDE_TOPLEVEL_DIRECTORY|INSTALL_DEFAULT_DIRECTORY_PERMISSIONS|INSTALL_SCRIPT|PACKAGING_INSTALL_PREFIX|SET_DESTDIR|WARN_ON_ABSOLUTE_INSTALL_DESTINATION)|CTEST_(?:BINARY_DIRECTORY|BUILD_COMMAND|BUILD_NAME|BZR_COMMAND|BZR_UPDATE_OPTIONS|CHANGE_ID|CHECKOUT_COMMAND|CONFIGURATION_TYPE|CONFIGURE_COMMAND|COVERAGE_COMMAND|COVERAGE_EXTRA_FLAGS|CURL_OPTIONS|CUSTOM_(?:COVERAGE_EXCLUDE|ERROR_EXCEPTION|ERROR_MATCH|ERROR_POST_CONTEXT|ERROR_PRE_CONTEXT|MAXIMUM_FAILED_TEST_OUTPUT_SIZE|MAXIMUM_NUMBER_OF_(?:ERRORS|WARNINGS)|MAXIMUM_PASSED_TEST_OUTPUT_SIZE|MEMCHECK_IGNORE|POST_MEMCHECK|POST_TEST|PRE_MEMCHECK|PRE_TEST|TESTS_IGNORE|WARNING_EXCEPTION|WARNING_MATCH)|CVS_CHECKOUT|CVS_COMMAND|CVS_UPDATE_OPTIONS|DROP_LOCATION|DROP_METHOD|DROP_SITE|DROP_SITE_CDASH|DROP_SITE_PASSWORD|DROP_SITE_USER|EXTRA_COVERAGE_GLOB|GIT_COMMAND|GIT_INIT_SUBMODULES|GIT_UPDATE_CUSTOM|GIT_UPDATE_OPTIONS|HG_COMMAND|HG_UPDATE_OPTIONS|LABELS_FOR_SUBPROJECTS|MEMORYCHECK_(?:COMMAND|COMMAND_OPTIONS|SANITIZER_OPTIONS|SUPPRESSIONS_FILE|TYPE)|NIGHTLY_START_TIME|P4_CLIENT|P4_COMMAND|P4_OPTIONS|P4_UPDATE_OPTIONS|RUN_CURRENT_SCRIPT|SCP_COMMAND|SITE|SOURCE_DIRECTORY|SUBMIT_URL|SVN_COMMAND|SVN_OPTIONS|SVN_UPDATE_OPTIONS|TEST_LOAD|TEST_TIMEOUT|TRIGGER_SITE|UPDATE_COMMAND|UPDATE_OPTIONS|UPDATE_VERSION_ONLY|USE_LAUNCHERS)|CYGWIN|ENV|EXECUTABLE_OUTPUT_PATH|GHS-MULTI|IOS|LIBRARY_OUTPUT_PATH|MINGW|MSVC(?:10|11|12|14|60|70|71|80|90|_IDE|_TOOLSET_VERSION|_VERSION)?|MSYS|PROJECT_(?:BINARY_DIR|DESCRIPTION|HOMEPAGE_URL|NAME|SOURCE_DIR|VERSION|VERSION_(?:MAJOR|MINOR|PATCH|TWEAK))|UNIX|WIN32|WINCE|WINDOWS_PHONE|WINDOWS_STORE|XCODE|XCODE_VERSION))\\b/,\n    property:\n      /\\b(?:cxx_\\w+|(?:ARCHIVE_OUTPUT_(?:DIRECTORY|NAME)|COMPILE_DEFINITIONS|COMPILE_PDB_NAME|COMPILE_PDB_OUTPUT_DIRECTORY|EXCLUDE_FROM_DEFAULT_BUILD|IMPORTED_(?:IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_LANGUAGES|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|NO_SONAME|OBJECTS|SONAME)|INTERPROCEDURAL_OPTIMIZATION|LIBRARY_OUTPUT_DIRECTORY|LIBRARY_OUTPUT_NAME|LINK_FLAGS|LINK_INTERFACE_LIBRARIES|LINK_INTERFACE_MULTIPLICITY|LOCATION|MAP_IMPORTED_CONFIG|OSX_ARCHITECTURES|OUTPUT_NAME|PDB_NAME|PDB_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_DIRECTORY|RUNTIME_OUTPUT_NAME|STATIC_LIBRARY_FLAGS|VS_CSHARP|VS_DOTNET_REFERENCEPROP|VS_DOTNET_REFERENCE|VS_GLOBAL_SECTION_POST|VS_GLOBAL_SECTION_PRE|VS_GLOBAL|XCODE_ATTRIBUTE)_\\w+|\\w+_(?:CLANG_TIDY|COMPILER_LAUNCHER|CPPCHECK|CPPLINT|INCLUDE_WHAT_YOU_USE|OUTPUT_NAME|POSTFIX|VISIBILITY_PRESET)|ABSTRACT|ADDITIONAL_MAKE_CLEAN_FILES|ADVANCED|ALIASED_TARGET|ALLOW_DUPLICATE_CUSTOM_TARGETS|ANDROID_(?:ANT_ADDITIONAL_OPTIONS|API|API_MIN|ARCH|ASSETS_DIRECTORIES|GUI|JAR_DEPENDENCIES|NATIVE_LIB_DEPENDENCIES|NATIVE_LIB_DIRECTORIES|PROCESS_MAX|PROGUARD|PROGUARD_CONFIG_PATH|SECURE_PROPS_PATH|SKIP_ANT_STEP|STL_TYPE)|ARCHIVE_OUTPUT_DIRECTORY|ATTACHED_FILES|ATTACHED_FILES_ON_FAIL|AUTOGEN_(?:BUILD_DIR|ORIGIN_DEPENDS|PARALLEL|SOURCE_GROUP|TARGETS_FOLDER|TARGET_DEPENDS)|AUTOMOC|AUTOMOC_(?:COMPILER_PREDEFINES|DEPEND_FILTERS|EXECUTABLE|MACRO_NAMES|MOC_OPTIONS|SOURCE_GROUP|TARGETS_FOLDER)|AUTORCC|AUTORCC_EXECUTABLE|AUTORCC_OPTIONS|AUTORCC_SOURCE_GROUP|AUTOUIC|AUTOUIC_EXECUTABLE|AUTOUIC_OPTIONS|AUTOUIC_SEARCH_PATHS|BINARY_DIR|BUILDSYSTEM_TARGETS|BUILD_RPATH|BUILD_RPATH_USE_ORIGIN|BUILD_WITH_INSTALL_NAME_DIR|BUILD_WITH_INSTALL_RPATH|BUNDLE|BUNDLE_EXTENSION|CACHE_VARIABLES|CLEAN_NO_CUSTOM|COMMON_LANGUAGE_RUNTIME|COMPATIBLE_INTERFACE_(?:BOOL|NUMBER_MAX|NUMBER_MIN|STRING)|COMPILE_(?:DEFINITIONS|FEATURES|FLAGS|OPTIONS|PDB_NAME|PDB_OUTPUT_DIRECTORY)|COST|CPACK_DESKTOP_SHORTCUTS|CPACK_NEVER_OVERWRITE|CPACK_PERMANENT|CPACK_STARTUP_SHORTCUTS|CPACK_START_MENU_SHORTCUTS|CPACK_WIX_ACL|CROSSCOMPILING_EMULATOR|CUDA_EXTENSIONS|CUDA_PTX_COMPILATION|CUDA_RESOLVE_DEVICE_SYMBOLS|CUDA_SEPARABLE_COMPILATION|CUDA_STANDARD|CUDA_STANDARD_REQUIRED|CXX_EXTENSIONS|CXX_STANDARD|CXX_STANDARD_REQUIRED|C_EXTENSIONS|C_STANDARD|C_STANDARD_REQUIRED|DEBUG_CONFIGURATIONS|DEFINE_SYMBOL|DEFINITIONS|DEPENDS|DEPLOYMENT_ADDITIONAL_FILES|DEPLOYMENT_REMOTE_DIRECTORY|DISABLED|DISABLED_FEATURES|ECLIPSE_EXTRA_CPROJECT_CONTENTS|ECLIPSE_EXTRA_NATURES|ENABLED_FEATURES|ENABLED_LANGUAGES|ENABLE_EXPORTS|ENVIRONMENT|EXCLUDE_FROM_ALL|EXCLUDE_FROM_DEFAULT_BUILD|EXPORT_NAME|EXPORT_PROPERTIES|EXTERNAL_OBJECT|EchoString|FAIL_REGULAR_EXPRESSION|FIND_LIBRARY_USE_LIB32_PATHS|FIND_LIBRARY_USE_LIB64_PATHS|FIND_LIBRARY_USE_LIBX32_PATHS|FIND_LIBRARY_USE_OPENBSD_VERSIONING|FIXTURES_CLEANUP|FIXTURES_REQUIRED|FIXTURES_SETUP|FOLDER|FRAMEWORK|Fortran_FORMAT|Fortran_MODULE_DIRECTORY|GENERATED|GENERATOR_FILE_NAME|GENERATOR_IS_MULTI_CONFIG|GHS_INTEGRITY_APP|GHS_NO_SOURCE_GROUP_FILE|GLOBAL_DEPENDS_DEBUG_MODE|GLOBAL_DEPENDS_NO_CYCLES|GNUtoMS|HAS_CXX|HEADER_FILE_ONLY|HELPSTRING|IMPLICIT_DEPENDS_INCLUDE_TRANSFORM|IMPORTED|IMPORTED_(?:COMMON_LANGUAGE_RUNTIME|CONFIGURATIONS|GLOBAL|IMPLIB|LIBNAME|LINK_DEPENDENT_LIBRARIES|LINK_INTERFACE_(?:LANGUAGES|LIBRARIES|MULTIPLICITY)|LOCATION|NO_SONAME|OBJECTS|SONAME)|IMPORT_PREFIX|IMPORT_SUFFIX|INCLUDE_DIRECTORIES|INCLUDE_REGULAR_EXPRESSION|INSTALL_NAME_DIR|INSTALL_RPATH|INSTALL_RPATH_USE_LINK_PATH|INTERFACE_(?:AUTOUIC_OPTIONS|COMPILE_DEFINITIONS|COMPILE_FEATURES|COMPILE_OPTIONS|INCLUDE_DIRECTORIES|LINK_DEPENDS|LINK_DIRECTORIES|LINK_LIBRARIES|LINK_OPTIONS|POSITION_INDEPENDENT_CODE|SOURCES|SYSTEM_INCLUDE_DIRECTORIES)|INTERPROCEDURAL_OPTIMIZATION|IN_TRY_COMPILE|IOS_INSTALL_COMBINED|JOB_POOLS|JOB_POOL_COMPILE|JOB_POOL_LINK|KEEP_EXTENSION|LABELS|LANGUAGE|LIBRARY_OUTPUT_DIRECTORY|LINKER_LANGUAGE|LINK_(?:DEPENDS|DEPENDS_NO_SHARED|DIRECTORIES|FLAGS|INTERFACE_LIBRARIES|INTERFACE_MULTIPLICITY|LIBRARIES|OPTIONS|SEARCH_END_STATIC|SEARCH_START_STATIC|WHAT_YOU_USE)|LISTFILE_STACK|LOCATION|MACOSX_BUNDLE|MACOSX_BUNDLE_INFO_PLIST|MACOSX_FRAMEWORK_INFO_PLIST|MACOSX_PACKAGE_LOCATION|MACOSX_RPATH|MACROS|MANUALLY_ADDED_DEPENDENCIES|MEASUREMENT|MODIFIED|NAME|NO_SONAME|NO_SYSTEM_FROM_IMPORTED|OBJECT_DEPENDS|OBJECT_OUTPUTS|OSX_ARCHITECTURES|OUTPUT_NAME|PACKAGES_FOUND|PACKAGES_NOT_FOUND|PARENT_DIRECTORY|PASS_REGULAR_EXPRESSION|PDB_NAME|PDB_OUTPUT_DIRECTORY|POSITION_INDEPENDENT_CODE|POST_INSTALL_SCRIPT|PREDEFINED_TARGETS_FOLDER|PREFIX|PRE_INSTALL_SCRIPT|PRIVATE_HEADER|PROCESSORS|PROCESSOR_AFFINITY|PROJECT_LABEL|PUBLIC_HEADER|REPORT_UNDEFINED_PROPERTIES|REQUIRED_FILES|RESOURCE|RESOURCE_LOCK|RULE_LAUNCH_COMPILE|RULE_LAUNCH_CUSTOM|RULE_LAUNCH_LINK|RULE_MESSAGES|RUNTIME_OUTPUT_DIRECTORY|RUN_SERIAL|SKIP_AUTOGEN|SKIP_AUTOMOC|SKIP_AUTORCC|SKIP_AUTOUIC|SKIP_BUILD_RPATH|SKIP_RETURN_CODE|SOURCES|SOURCE_DIR|SOVERSION|STATIC_LIBRARY_FLAGS|STATIC_LIBRARY_OPTIONS|STRINGS|SUBDIRECTORIES|SUFFIX|SYMBOLIC|TARGET_ARCHIVES_MAY_BE_SHARED_LIBS|TARGET_MESSAGES|TARGET_SUPPORTS_SHARED_LIBS|TESTS|TEST_INCLUDE_FILE|TEST_INCLUDE_FILES|TIMEOUT|TIMEOUT_AFTER_MATCH|TYPE|USE_FOLDERS|VALUE|VARIABLES|VERSION|VISIBILITY_INLINES_HIDDEN|VS_(?:CONFIGURATION_TYPE|COPY_TO_OUT_DIR|DEBUGGER_(?:COMMAND|COMMAND_ARGUMENTS|ENVIRONMENT|WORKING_DIRECTORY)|DEPLOYMENT_CONTENT|DEPLOYMENT_LOCATION|DOTNET_REFERENCES|DOTNET_REFERENCES_COPY_LOCAL|GLOBAL_KEYWORD|GLOBAL_PROJECT_TYPES|GLOBAL_ROOTNAMESPACE|INCLUDE_IN_VSIX|IOT_STARTUP_TASK|KEYWORD|RESOURCE_GENERATOR|SCC_AUXPATH|SCC_LOCALPATH|SCC_PROJECTNAME|SCC_PROVIDER|SDK_REFERENCES|SHADER_(?:DISABLE_OPTIMIZATIONS|ENABLE_DEBUG|ENTRYPOINT|FLAGS|MODEL|OBJECT_FILE_NAME|OUTPUT_HEADER_FILE|TYPE|VARIABLE_NAME)|STARTUP_PROJECT|TOOL_OVERRIDE|USER_PROPS|WINRT_COMPONENT|WINRT_EXTENSIONS|WINRT_REFERENCES|XAML_TYPE)|WILL_FAIL|WIN32_EXECUTABLE|WINDOWS_EXPORT_ALL_SYMBOLS|WORKING_DIRECTORY|WRAP_EXCLUDE|XCODE_(?:EMIT_EFFECTIVE_PLATFORM_NAME|EXPLICIT_FILE_TYPE|FILE_ATTRIBUTES|LAST_KNOWN_FILE_TYPE|PRODUCT_TYPE|SCHEME_(?:ADDRESS_SANITIZER|ADDRESS_SANITIZER_USE_AFTER_RETURN|ARGUMENTS|DISABLE_MAIN_THREAD_CHECKER|DYNAMIC_LIBRARY_LOADS|DYNAMIC_LINKER_API_USAGE|ENVIRONMENT|EXECUTABLE|GUARD_MALLOC|MAIN_THREAD_CHECKER_STOP|MALLOC_GUARD_EDGES|MALLOC_SCRIBBLE|MALLOC_STACK|THREAD_SANITIZER(?:_STOP)?|UNDEFINED_BEHAVIOUR_SANITIZER(?:_STOP)?|ZOMBIE_OBJECTS))|XCTEST)\\b/,\n    keyword:\n      /\\b(?:add_compile_definitions|add_compile_options|add_custom_command|add_custom_target|add_definitions|add_dependencies|add_executable|add_library|add_link_options|add_subdirectory|add_test|aux_source_directory|break|build_command|build_name|cmake_host_system_information|cmake_minimum_required|cmake_parse_arguments|cmake_policy|configure_file|continue|create_test_sourcelist|ctest_build|ctest_configure|ctest_coverage|ctest_empty_binary_directory|ctest_memcheck|ctest_read_custom_files|ctest_run_script|ctest_sleep|ctest_start|ctest_submit|ctest_test|ctest_update|ctest_upload|define_property|else|elseif|enable_language|enable_testing|endforeach|endfunction|endif|endmacro|endwhile|exec_program|execute_process|export|export_library_dependencies|file|find_file|find_library|find_package|find_path|find_program|fltk_wrap_ui|foreach|function|get_cmake_property|get_directory_property|get_filename_component|get_property|get_source_file_property|get_target_property|get_test_property|if|include|include_directories|include_external_msproject|include_guard|include_regular_expression|install|install_files|install_programs|install_targets|link_directories|link_libraries|list|load_cache|load_command|macro|make_directory|mark_as_advanced|math|message|option|output_required_files|project|qt_wrap_cpp|qt_wrap_ui|remove|remove_definitions|return|separate_arguments|set|set_directory_properties|set_property|set_source_files_properties|set_target_properties|set_tests_properties|site_name|source_group|string|subdir_depends|subdirs|target_compile_definitions|target_compile_features|target_compile_options|target_include_directories|target_link_directories|target_link_libraries|target_link_options|target_sources|try_compile|try_run|unset|use_mangled_mesa|utility_source|variable_requires|variable_watch|while|write_file)(?=\\s*\\()\\b/,\n    boolean: /\\b(?:FALSE|OFF|ON|TRUE)\\b/,\n    namespace:\n      /\\b(?:INTERFACE|PRIVATE|PROPERTIES|PUBLIC|SHARED|STATIC|TARGET_OBJECTS)\\b/,\n    operator:\n      /\\b(?:AND|DEFINED|EQUAL|GREATER|LESS|MATCHES|NOT|OR|STREQUAL|STRGREATER|STRLESS|VERSION_EQUAL|VERSION_GREATER|VERSION_LESS)\\b/,\n    inserted: {\n      pattern: /\\b\\w+::\\w+\\b/,\n      alias: 'class-name'\n    },\n    number: /\\b\\d+(?:\\.\\d+)*\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()\\b/i,\n    punctuation: /[()>}]|\\$[<{]/\n  }\n}\n","'use strict'\n\nmodule.exports = cobol\ncobol.displayName = 'cobol'\ncobol.aliases = []\nfunction cobol(Prism) {\n  Prism.languages.cobol = {\n    comment: {\n      pattern: /\\*>.*|(^[ \\t]*)\\*.*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /[xzgn]?(?:\"(?:[^\\r\\n\"]|\"\")*\"(?!\")|'(?:[^\\r\\n']|'')*'(?!'))/i,\n      greedy: true\n    },\n    level: {\n      pattern: /(^[ \\t]*)\\d+\\b/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'number'\n    },\n    'class-name': {\n      // https://github.com/antlr/grammars-v4/blob/42edd5b687d183b5fa679e858a82297bd27141e7/cobol85/Cobol85.g4#L1015\n      pattern:\n        /(\\bpic(?:ture)?\\s+)(?:(?:[-\\w$/,:*+<>]|\\.(?!\\s|$))(?:\\(\\d+\\))?)+/i,\n      lookbehind: true,\n      inside: {\n        number: {\n          pattern: /(\\()\\d+/,\n          lookbehind: true\n        },\n        punctuation: /[()]/\n      }\n    },\n    keyword: {\n      pattern:\n        /(^|[^\\w-])(?:ABORT|ACCEPT|ACCESS|ADD|ADDRESS|ADVANCING|AFTER|ALIGNED|ALL|ALPHABET|ALPHABETIC|ALPHABETIC-LOWER|ALPHABETIC-UPPER|ALPHANUMERIC|ALPHANUMERIC-EDITED|ALSO|ALTER|ALTERNATE|ANY|ARE|AREA|AREAS|AS|ASCENDING|ASCII|ASSIGN|ASSOCIATED-DATA|ASSOCIATED-DATA-LENGTH|AT|ATTRIBUTE|AUTHOR|AUTO|AUTO-SKIP|BACKGROUND-COLOR|BACKGROUND-COLOUR|BASIS|BEEP|BEFORE|BEGINNING|BELL|BINARY|BIT|BLANK|BLINK|BLOCK|BOTTOM|BOUNDS|BY|BYFUNCTION|BYTITLE|CALL|CANCEL|CAPABLE|CCSVERSION|CD|CF|CH|CHAINING|CHANGED|CHANNEL|CHARACTER|CHARACTERS|CLASS|CLASS-ID|CLOCK-UNITS|CLOSE|CLOSE-DISPOSITION|COBOL|CODE|CODE-SET|COL|COLLATING|COLUMN|COM-REG|COMMA|COMMITMENT|COMMON|COMMUNICATION|COMP|COMP-1|COMP-2|COMP-3|COMP-4|COMP-5|COMPUTATIONAL|COMPUTATIONAL-1|COMPUTATIONAL-2|COMPUTATIONAL-3|COMPUTATIONAL-4|COMPUTATIONAL-5|COMPUTE|CONFIGURATION|CONTAINS|CONTENT|CONTINUE|CONTROL|CONTROL-POINT|CONTROLS|CONVENTION|CONVERTING|COPY|CORR|CORRESPONDING|COUNT|CRUNCH|CURRENCY|CURSOR|DATA|DATA-BASE|DATE|DATE-COMPILED|DATE-WRITTEN|DAY|DAY-OF-WEEK|DBCS|DE|DEBUG-CONTENTS|DEBUG-ITEM|DEBUG-LINE|DEBUG-NAME|DEBUG-SUB-1|DEBUG-SUB-2|DEBUG-SUB-3|DEBUGGING|DECIMAL-POINT|DECLARATIVES|DEFAULT|DEFAULT-DISPLAY|DEFINITION|DELETE|DELIMITED|DELIMITER|DEPENDING|DESCENDING|DESTINATION|DETAIL|DFHRESP|DFHVALUE|DISABLE|DISK|DISPLAY|DISPLAY-1|DIVIDE|DIVISION|DONTCARE|DOUBLE|DOWN|DUPLICATES|DYNAMIC|EBCDIC|EGCS|EGI|ELSE|EMI|EMPTY-CHECK|ENABLE|END|END-ACCEPT|END-ADD|END-CALL|END-COMPUTE|END-DELETE|END-DIVIDE|END-EVALUATE|END-IF|END-MULTIPLY|END-OF-PAGE|END-PERFORM|END-READ|END-RECEIVE|END-RETURN|END-REWRITE|END-SEARCH|END-START|END-STRING|END-SUBTRACT|END-UNSTRING|END-WRITE|ENDING|ENTER|ENTRY|ENTRY-PROCEDURE|ENVIRONMENT|EOL|EOP|EOS|ERASE|ERROR|ESCAPE|ESI|EVALUATE|EVENT|EVERY|EXCEPTION|EXCLUSIVE|EXHIBIT|EXIT|EXPORT|EXTEND|EXTENDED|EXTERNAL|FD|FILE|FILE-CONTROL|FILLER|FINAL|FIRST|FOOTING|FOR|FOREGROUND-COLOR|FOREGROUND-COLOUR|FROM|FULL|FUNCTION|FUNCTION-POINTER|FUNCTIONNAME|GENERATE|GIVING|GLOBAL|GO|GOBACK|GRID|GROUP|HEADING|HIGH-VALUE|HIGH-VALUES|HIGHLIGHT|I-O|I-O-CONTROL|ID|IDENTIFICATION|IF|IMPLICIT|IMPORT|IN|INDEX|INDEXED|INDICATE|INITIAL|INITIALIZE|INITIATE|INPUT|INPUT-OUTPUT|INSPECT|INSTALLATION|INTEGER|INTO|INVALID|INVOKE|IS|JUST|JUSTIFIED|KANJI|KEPT|KEY|KEYBOARD|LABEL|LANGUAGE|LAST|LB|LD|LEADING|LEFT|LEFTLINE|LENGTH|LENGTH-CHECK|LIBACCESS|LIBPARAMETER|LIBRARY|LIMIT|LIMITS|LINAGE|LINAGE-COUNTER|LINE|LINE-COUNTER|LINES|LINKAGE|LIST|LOCAL|LOCAL-STORAGE|LOCK|LONG-DATE|LONG-TIME|LOW-VALUE|LOW-VALUES|LOWER|LOWLIGHT|MEMORY|MERGE|MESSAGE|MMDDYYYY|MODE|MODULES|MORE-LABELS|MOVE|MULTIPLE|MULTIPLY|NAMED|NATIONAL|NATIONAL-EDITED|NATIVE|NEGATIVE|NETWORK|NEXT|NO|NO-ECHO|NULL|NULLS|NUMBER|NUMERIC|NUMERIC-DATE|NUMERIC-EDITED|NUMERIC-TIME|OBJECT-COMPUTER|OCCURS|ODT|OF|OFF|OMITTED|ON|OPEN|OPTIONAL|ORDER|ORDERLY|ORGANIZATION|OTHER|OUTPUT|OVERFLOW|OVERLINE|OWN|PACKED-DECIMAL|PADDING|PAGE|PAGE-COUNTER|PASSWORD|PERFORM|PF|PH|PIC|PICTURE|PLUS|POINTER|PORT|POSITION|POSITIVE|PRINTER|PRINTING|PRIVATE|PROCEDURE|PROCEDURE-POINTER|PROCEDURES|PROCEED|PROCESS|PROGRAM|PROGRAM-ID|PROGRAM-LIBRARY|PROMPT|PURGE|QUEUE|QUOTE|QUOTES|RANDOM|RD|READ|READER|REAL|RECEIVE|RECEIVED|RECORD|RECORDING|RECORDS|RECURSIVE|REDEFINES|REEL|REF|REFERENCE|REFERENCES|RELATIVE|RELEASE|REMAINDER|REMARKS|REMOTE|REMOVAL|REMOVE|RENAMES|REPLACE|REPLACING|REPORT|REPORTING|REPORTS|REQUIRED|RERUN|RESERVE|RESET|RETURN|RETURN-CODE|RETURNING|REVERSE-VIDEO|REVERSED|REWIND|REWRITE|RF|RH|RIGHT|ROUNDED|RUN|SAME|SAVE|SCREEN|SD|SEARCH|SECTION|SECURE|SECURITY|SEGMENT|SEGMENT-LIMIT|SELECT|SEND|SENTENCE|SEPARATE|SEQUENCE|SEQUENTIAL|SET|SHARED|SHAREDBYALL|SHAREDBYRUNUNIT|SHARING|SHIFT-IN|SHIFT-OUT|SHORT-DATE|SIGN|SIZE|SORT|SORT-CONTROL|SORT-CORE-SIZE|SORT-FILE-SIZE|SORT-MERGE|SORT-MESSAGE|SORT-MODE-SIZE|SORT-RETURN|SOURCE|SOURCE-COMPUTER|SPACE|SPACES|SPECIAL-NAMES|STANDARD|STANDARD-1|STANDARD-2|START|STATUS|STOP|STRING|SUB-QUEUE-1|SUB-QUEUE-2|SUB-QUEUE-3|SUBTRACT|SUM|SUPPRESS|SYMBOL|SYMBOLIC|SYNC|SYNCHRONIZED|TABLE|TALLY|TALLYING|TAPE|TASK|TERMINAL|TERMINATE|TEST|TEXT|THEN|THREAD|THREAD-LOCAL|THROUGH|THRU|TIME|TIMER|TIMES|TITLE|TO|TODAYS-DATE|TODAYS-NAME|TOP|TRAILING|TRUNCATED|TYPE|TYPEDEF|UNDERLINE|UNIT|UNSTRING|UNTIL|UP|UPON|USAGE|USE|USING|VALUE|VALUES|VARYING|VIRTUAL|WAIT|WHEN|WHEN-COMPILED|WITH|WORDS|WORKING-STORAGE|WRITE|YEAR|YYYYDDD|YYYYMMDD|ZERO-FILL|ZEROES|ZEROS)(?![\\w-])/i,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[^\\w-])(?:false|true)(?![\\w-])/i,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^\\w-])(?:[+-]?(?:(?:\\d+(?:[.,]\\d+)?|[.,]\\d+)(?:e[+-]?\\d+)?|zero))(?![\\w-])/i,\n      lookbehind: true\n    },\n    operator: [\n      /<>|[<>]=?|[=+*/&]/,\n      {\n        pattern: /(^|[^\\w-])(?:-|and|equal|greater|less|not|or|than)(?![\\w-])/i,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[.:,()]/\n  }\n}\n","'use strict'\n\nmodule.exports = coffeescript\ncoffeescript.displayName = 'coffeescript'\ncoffeescript.aliases = ['coffee']\nfunction coffeescript(Prism) {\n  ;(function (Prism) {\n    // Ignore comments starting with { to privilege string interpolation highlighting\n    var comment = /#(?!\\{).+/\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      alias: 'variable'\n    }\n    Prism.languages.coffeescript = Prism.languages.extend('javascript', {\n      comment: comment,\n      string: [\n        // Strings are multiline\n        {\n          pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n          greedy: true\n        },\n        {\n          // Strings are multiline\n          pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ],\n      keyword:\n        /\\b(?:and|break|by|catch|class|continue|debugger|delete|do|each|else|extend|extends|false|finally|for|if|in|instanceof|is|isnt|let|loop|namespace|new|no|not|null|of|off|on|or|own|return|super|switch|then|this|throw|true|try|typeof|undefined|unless|until|when|while|window|with|yes|yield)\\b/,\n      'class-member': {\n        pattern: /@(?!\\d)\\w+/,\n        alias: 'variable'\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'comment', {\n      'multiline-comment': {\n        pattern: /###[\\s\\S]+?###/,\n        alias: 'comment'\n      },\n      // Block regexp can contain comments and interpolation\n      'block-regex': {\n        pattern: /\\/{3}[\\s\\S]*?\\/{3}/,\n        alias: 'regex',\n        inside: {\n          comment: comment,\n          interpolation: interpolation\n        }\n      }\n    })\n    Prism.languages.insertBefore('coffeescript', 'string', {\n      'inline-javascript': {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        inside: {\n          delimiter: {\n            pattern: /^`|`$/,\n            alias: 'punctuation'\n          },\n          script: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-javascript',\n            inside: Prism.languages.javascript\n          }\n        }\n      },\n      // Block strings\n      'multiline-string': [\n        {\n          pattern: /'''[\\s\\S]*?'''/,\n          greedy: true,\n          alias: 'string'\n        },\n        {\n          pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            interpolation: interpolation\n          }\n        }\n      ]\n    })\n    Prism.languages.insertBefore('coffeescript', 'keyword', {\n      // Object property\n      property: /(?!\\d)\\w+(?=\\s*:(?!:))/\n    })\n    delete Prism.languages.coffeescript['template-string']\n    Prism.languages.coffee = Prism.languages.coffeescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = concurnas\nconcurnas.displayName = 'concurnas'\nconcurnas.aliases = ['conc']\nfunction concurnas(Prism) {\n  Prism.languages.concurnas = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    langext: {\n      pattern: /\\b\\w+\\s*\\|\\|[\\s\\S]+?\\|\\|/,\n      greedy: true,\n      inside: {\n        'class-name': /^\\w+/,\n        string: {\n          pattern: /(^\\s*\\|\\|)[\\s\\S]+(?=\\|\\|$)/,\n          lookbehind: true\n        },\n        punctuation: /\\|\\|/\n      }\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|also|annotation|assert|async|await|bool|boolean|break|byte|case|catch|changed|char|class|closed|constant|continue|def|default|del|double|elif|else|enum|every|extends|false|finally|float|for|from|global|gpudef|gpukernel|if|import|in|init|inject|int|lambda|local|long|loop|match|new|nodefault|null|of|onchange|open|out|override|package|parfor|parforsync|post|pre|private|protected|provide|provider|public|return|shared|short|single|size_t|sizeof|super|sync|this|throw|trait|trans|transient|true|try|typedef|unchecked|using|val|var|void|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /\\b0b[01][01_]*L?\\b|\\b0x(?:[\\da-f_]*\\.)?[\\da-f_p+-]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfls]?/i,\n    punctuation: /[{}[\\];(),.:]/,\n    operator:\n      /<==|>==|=>|->|<-|<>|&==|&<>|\\?:?|\\.\\?|\\+\\+|--|[-+*/=<>]=?|[!^~]|\\b(?:and|as|band|bor|bxor|comp|is|isnot|mod|or)\\b=?/,\n    annotation: {\n      pattern: /@(?:\\w+:)?(?:\\w+|\\[[^\\]]+\\])?/,\n      alias: 'builtin'\n    }\n  }\n  Prism.languages.insertBefore('concurnas', 'langext', {\n    'regex-literal': {\n      pattern: /\\br(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        regex: /[\\s\\S]+/\n      }\n    },\n    'string-literal': {\n      pattern: /(?:\\B|\\bs)(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: Prism.languages.concurnas\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.conc = Prism.languages.concurnas\n}\n","'use strict'\n\nmodule.exports = coq\ncoq.displayName = 'coq'\ncoq.aliases = []\nfunction coq(Prism) {\n  ;(function (Prism) {\n    // https://github.com/coq/coq\n    var commentSource = /\\(\\*(?:[^(*]|\\((?!\\*)|\\*(?!\\))|<self>)*\\*\\)/.source\n    for (var i = 0; i < 2; i++) {\n      commentSource = commentSource.replace(/<self>/g, function () {\n        return commentSource\n      })\n    }\n    commentSource = commentSource.replace(/<self>/g, '[]')\n    Prism.languages.coq = {\n      comment: RegExp(commentSource),\n      string: {\n        pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n        greedy: true\n      },\n      attribute: [\n        {\n          pattern: RegExp(\n            /#\\[(?:[^\\[\\](\"]|\"(?:[^\"]|\"\")*\"(?!\")|\\((?!\\*)|<comment>)*\\]/.source.replace(\n              /<comment>/g,\n              function () {\n                return commentSource\n              }\n            )\n          ),\n          greedy: true,\n          alias: 'attr-name',\n          inside: {\n            comment: RegExp(commentSource),\n            string: {\n              pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n              greedy: true\n            },\n            operator: /=/,\n            punctuation: /^#\\[|\\]$|[,()]/\n          }\n        },\n        {\n          pattern:\n            /\\b(?:Cumulative|Global|Local|Monomorphic|NonCumulative|Polymorphic|Private|Program)\\b/,\n          alias: 'attr-name'\n        }\n      ],\n      keyword:\n        /\\b(?:Abort|About|Add|Admit|Admitted|All|Arguments|As|Assumptions|Axiom|Axioms|Back|BackTo|Backtrace|BinOp|BinOpSpec|BinRel|Bind|Blacklist|Canonical|Case|Cd|Check|Class|Classes|Close|CoFixpoint|CoInductive|Coercion|Coercions|Collection|Combined|Compute|Conjecture|Conjectures|Constant|Constants|Constraint|Constructors|Context|Corollary|Create|CstOp|Custom|Cut|Debug|Declare|Defined|Definition|Delimit|Dependencies|Dependent|Derive|Diffs|Drop|Elimination|End|Entry|Equality|Eval|Example|Existential|Existentials|Existing|Export|Extern|Extraction|Fact|Fail|Field|File|Firstorder|Fixpoint|Flags|Focus|From|Funclass|Function|Functional|GC|Generalizable|Goal|Grab|Grammar|Graph|Guarded|Haskell|Heap|Hide|Hint|HintDb|Hints|Hypotheses|Hypothesis|IF|Identity|Immediate|Implicit|Implicits|Import|Include|Induction|Inductive|Infix|Info|Initial|InjTyp|Inline|Inspect|Instance|Instances|Intro|Intros|Inversion|Inversion_clear|JSON|Language|Left|Lemma|Let|Lia|Libraries|Library|Load|LoadPath|Locate|Ltac|Ltac2|ML|Match|Method|Minimality|Module|Modules|Morphism|Next|NoInline|Notation|Number|OCaml|Obligation|Obligations|Opaque|Open|Optimize|Parameter|Parameters|Parametric|Path|Paths|Prenex|Preterm|Primitive|Print|Profile|Projections|Proof|Prop|PropBinOp|PropOp|PropUOp|Property|Proposition|Pwd|Qed|Quit|Rec|Record|Recursive|Redirect|Reduction|Register|Relation|Remark|Remove|Require|Reserved|Reset|Resolve|Restart|Rewrite|Right|Ring|Rings|SProp|Saturate|Save|Scheme|Scope|Scopes|Search|SearchHead|SearchPattern|SearchRewrite|Section|Separate|Set|Setoid|Show|Signatures|Solve|Solver|Sort|Sortclass|Sorted|Spec|Step|Strategies|Strategy|String|Structure|SubClass|Subgraph|SuchThat|Tactic|Term|TestCompile|Theorem|Time|Timeout|To|Transparent|Type|Typeclasses|Types|Typing|UnOp|UnOpSpec|Undelimit|Undo|Unfocus|Unfocused|Unfold|Universe|Universes|Unshelve|Variable|Variables|Variant|Verbose|View|Visibility|Zify|_|apply|as|at|by|cofix|else|end|exists|exists2|fix|for|forall|fun|if|in|let|match|measure|move|removed|return|struct|then|using|wf|where|with)\\b/,\n      number:\n        /\\b(?:0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]+)?(?:p[+-]?\\d[\\d_]*)?|\\d[\\d_]*(?:\\.[\\d_]+)?(?:e[+-]?\\d[\\d_]*)?)\\b/i,\n      punct: {\n        pattern: /@\\{|\\{\\||\\[=|:>/,\n        alias: 'punctuation'\n      },\n      operator:\n        /\\/\\\\|\\\\\\/|\\.{2,3}|:{1,2}=|\\*\\*|[-=]>|<(?:->?|[+:=>]|<:)|>(?:=|->)|\\|[-|]?|[-!%&*+/<=>?@^~']/,\n      punctuation: /\\.\\(|`\\(|@\\{|`\\{|\\{\\||\\[=|:>|[:.,;(){}\\[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = cpp\ncpp.displayName = 'cpp'\ncpp.aliases = []\nfunction cpp(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    var keyword =\n      /\\b(?:alignas|alignof|asm|auto|bool|break|case|catch|char|char16_t|char32_t|char8_t|class|co_await|co_return|co_yield|compl|concept|const|const_cast|consteval|constexpr|constinit|continue|decltype|default|delete|do|double|dynamic_cast|else|enum|explicit|export|extern|final|float|for|friend|goto|if|import|inline|int|int16_t|int32_t|int64_t|int8_t|long|module|mutable|namespace|new|noexcept|nullptr|operator|override|private|protected|public|register|reinterpret_cast|requires|return|short|signed|sizeof|static|static_assert|static_cast|struct|switch|template|this|thread_local|throw|try|typedef|typeid|typename|uint16_t|uint32_t|uint64_t|uint8_t|union|unsigned|using|virtual|void|volatile|wchar_t|while)\\b/\n    var modName = /\\b(?!<keyword>)\\w+(?:\\s*\\.\\s*\\w+)*\\b/.source.replace(\n      /<keyword>/g,\n      function () {\n        return keyword.source\n      }\n    )\n    Prism.languages.cpp = Prism.languages.extend('c', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\b(?:class|concept|enum|struct|typename)\\s+)(?!<keyword>)\\w+/.source.replace(\n              /<keyword>/g,\n              function () {\n                return keyword.source\n              }\n            )\n          ),\n          lookbehind: true\n        }, // This is intended to capture the class name of method implementations like:\n        //   void foo::bar() const {}\n        // However! The `foo` in the above example could also be a namespace, so we only capture the class name if\n        // it starts with an uppercase letter. This approximation should give decent results.\n        /\\b[A-Z]\\w*(?=\\s*::\\s*\\w+\\s*\\()/, // This will capture the class name before destructors like:\n        //   Foo::~Foo() {}\n        /\\b[A-Z_]\\w*(?=\\s*::\\s*~\\w+\\s*\\()/i, // This also intends to capture the class name of method implementations but here the class has template\n        // parameters, so it can't be a namespace (until C++ adds generic namespaces).\n        /\\b\\w+(?=\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>\\s*::\\s*\\w+\\s*\\()/\n      ],\n      keyword: keyword,\n      number: {\n        pattern:\n          /(?:\\b0b[01']+|\\b0x(?:[\\da-f']+(?:\\.[\\da-f']*)?|\\.[\\da-f']+)(?:p[+-]?[\\d']+)?|(?:\\b[\\d']+(?:\\.[\\d']*)?|\\B\\.[\\d']+)(?:e[+-]?[\\d']+)?)[ful]{0,4}/i,\n        greedy: true\n      },\n      operator:\n        />>=?|<<=?|->|--|\\+\\+|&&|\\|\\||[?:~]|<=>|[-+*/%&|^!=<>]=?|\\b(?:and|and_eq|bitand|bitor|not|not_eq|or|or_eq|xor|xor_eq)\\b/,\n      boolean: /\\b(?:false|true)\\b/\n    })\n    Prism.languages.insertBefore('cpp', 'string', {\n      module: {\n        // https://en.cppreference.com/w/cpp/language/modules\n        pattern: RegExp(\n          /(\\b(?:import|module)\\s+)/.source +\n            '(?:' + // header-name\n            /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|<[^<>\\r\\n]*>/.source +\n            '|' + // module name or partition or both\n            /<mod-name>(?:\\s*:\\s*<mod-name>)?|:\\s*<mod-name>/.source.replace(\n              /<mod-name>/g,\n              function () {\n                return modName\n              }\n            ) +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: /^[<\"][\\s\\S]+/,\n          operator: /:/,\n          punctuation: /\\./\n        }\n      },\n      'raw-string': {\n        pattern: /R\"([^()\\\\ ]{0,16})\\([\\s\\S]*?\\)\\1\"/,\n        alias: 'string',\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'keyword', {\n      'generic-function': {\n        pattern: /\\b(?!operator\\b)[a-z_]\\w*\\s*<(?:[^<>]|<[^<>]*>)*>(?=\\s*\\()/i,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            alias: 'class-name',\n            inside: Prism.languages.cpp\n          }\n        }\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('cpp', 'class-name', {\n      // the base clause is an optional list of parent classes\n      // https://en.cppreference.com/w/cpp/language/class\n      'base-clause': {\n        pattern:\n          /(\\b(?:class|struct)\\s+\\w+\\s*:\\s*)[^;{}\"'\\s]+(?:\\s+[^;{}\"'\\s]+)*(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: Prism.languages.extend('cpp', {})\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'double-colon',\n      {\n        // All untokenized words that are not namespaces should be class names\n        'class-name': /\\b[a-z_]\\w*\\b(?!\\s*::)/i\n      },\n      Prism.languages.cpp['base-clause']\n    )\n  })(Prism)\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = crystal\ncrystal.displayName = 'crystal'\ncrystal.aliases = []\nfunction crystal(Prism) {\n  Prism.register(refractorRuby)\n  ;(function (Prism) {\n    Prism.languages.crystal = Prism.languages.extend('ruby', {\n      keyword: [\n        /\\b(?:__DIR__|__END_LINE__|__FILE__|__LINE__|abstract|alias|annotation|as|asm|begin|break|case|class|def|do|else|elsif|end|ensure|enum|extend|for|fun|if|ifdef|include|instance_sizeof|lib|macro|module|next|of|out|pointerof|private|protected|ptr|require|rescue|return|select|self|sizeof|struct|super|then|type|typeof|undef|uninitialized|union|unless|until|when|while|with|yield)\\b/,\n        {\n          pattern: /(\\.\\s*)(?:is_a|responds_to)\\?/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b(?:0b[01_]*[01]|0o[0-7_]*[0-7]|0x[\\da-fA-F_]*[\\da-fA-F]|(?:\\d(?:[\\d_]*\\d)?)(?:\\.[\\d_]*\\d)?(?:[eE][+-]?[\\d_]*\\d)?)(?:_(?:[uif](?:8|16|32|64))?)?\\b/,\n      operator: [/->/, Prism.languages.ruby.operator],\n      punctuation: /[(){}[\\].,;\\\\]/\n    })\n    Prism.languages.insertBefore('crystal', 'string-literal', {\n      attribute: {\n        pattern: /@\\[.*?\\]/,\n        inside: {\n          delimiter: {\n            pattern: /^@\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          attribute: {\n            pattern: /^(\\s*)\\w+/,\n            lookbehind: true,\n            alias: 'class-name'\n          },\n          args: {\n            pattern: /\\S(?:[\\s\\S]*\\S)?/,\n            inside: Prism.languages.crystal\n          }\n        }\n      },\n      expansion: {\n        pattern: /\\{(?:\\{.*?\\}|%.*?%)\\}/,\n        inside: {\n          content: {\n            pattern: /^(\\{.)[\\s\\S]+(?=.\\}$)/,\n            lookbehind: true,\n            inside: Prism.languages.crystal\n          },\n          delimiter: {\n            pattern: /^\\{[\\{%]|[\\}%]\\}$/,\n            alias: 'operator'\n          }\n        }\n      },\n      char: {\n        pattern:\n          /'(?:[^\\\\\\r\\n]{1,2}|\\\\(?:.|u(?:[A-Fa-f0-9]{1,4}|\\{[A-Fa-f0-9]{1,6}\\})))'/,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csharp\ncsharp.displayName = 'csharp'\ncsharp.aliases = ['dotnet', 'cs']\nfunction csharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/keywords/\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'bool byte char decimal double dynamic float int long object sbyte short string uint ulong ushort var void',\n      // keywords which are used to declare a type\n      typeDeclaration: 'class enum interface record struct',\n      // contextual keywords\n      // (\"var\" and \"dynamic\" are missing because they are used like types)\n      contextual:\n        'add alias and ascending async await by descending from(?=\\\\s*(?:\\\\w|$)) get global group into init(?=\\\\s*;) join let nameof not notnull on or orderby partial remove select set unmanaged value when where with(?=\\\\s*{)',\n      // all other keywords\n      other:\n        'abstract as base break case catch checked const continue default delegate do else event explicit extern finally fixed for foreach goto if implicit in internal is lock namespace new null operator out override params private protected public readonly ref return sealed sizeof stackalloc static switch this throw try typeof unchecked unsafe using virtual volatile while yield'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var typeDeclarationKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration\n    )\n    var keywords = RegExp(\n      keywordsToPattern(\n        keywordKinds.type +\n          ' ' +\n          keywordKinds.typeDeclaration +\n          ' ' +\n          keywordKinds.contextual +\n          ' ' +\n          keywordKinds.other\n      )\n    )\n    var nonTypeKeywords = keywordsToPattern(\n      keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.contextual +\n        ' ' +\n        keywordKinds.other\n    )\n    var nonContextualKeywords = keywordsToPattern(\n      keywordKinds.type +\n        ' ' +\n        keywordKinds.typeDeclaration +\n        ' ' +\n        keywordKinds.other\n    ) // types\n    var generic = nested(/<(?:[^<>;=+\\-*/%&|^]|<<self>>)*>/.source, 2) // the idea behind the other forbidden characters is to prevent false positives. Same for tupleElement.\n    var nestedRound = nested(/\\((?:[^()]|<<self>>)*\\)/.source, 2)\n    var name = /@?\\b[A-Za-z_]\\w*\\b/.source\n    var genericName = replace(/<<0>>(?:\\s*<<1>>)?/.source, [name, generic])\n    var identifier = replace(/(?!<<0>>)<<1>>(?:\\s*\\.\\s*<<1>>)*/.source, [\n      nonTypeKeywords,\n      genericName\n    ])\n    var array = /\\[\\s*(?:,\\s*)*\\]/.source\n    var typeExpressionWithoutTuple = replace(\n      /<<0>>(?:\\s*(?:\\?\\s*)?<<1>>)*(?:\\s*\\?)?/.source,\n      [identifier, array]\n    )\n    var tupleElement = replace(\n      /[^,()<>[\\];=+\\-*/%&|^]|<<0>>|<<1>>|<<2>>/.source,\n      [generic, nestedRound, array]\n    )\n    var tuple = replace(/\\(<<0>>+(?:,<<0>>+)+\\)/.source, [tupleElement])\n    var typeExpression = replace(\n      /(?:<<0>>|<<1>>)(?:\\s*(?:\\?\\s*)?<<2>>)*(?:\\s*\\?)?/.source,\n      [tuple, identifier, array]\n    )\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings & characters\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#character-literals\n    // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#string-literals\n    var character = /'(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'/.source // simplified pattern\n    var regularString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/.source\n    var verbatimString = /@\"(?:\"\"|\\\\[\\s\\S]|[^\\\\\"])*\"(?!\")/.source\n    Prism.languages.csharp = Prism.languages.extend('clike', {\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [verbatimString]),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: re(/(^|[^@$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // Using static\n          // using static System.Math;\n          pattern: re(/(\\busing\\s+static\\s+)<<0>>(?=\\s*;)/.source, [\n            identifier\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (type)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+<<0>>\\s*=\\s*)<<1>>(?=\\s*;)/.source, [\n            name,\n            typeExpression\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Using alias (alias)\n          // using Project = PC.MyCompany.Project;\n          pattern: re(/(\\busing\\s+)<<0>>(?=\\s*=)/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Type declarations\n          // class Foo<A, B>\n          // interface Foo<out A, B>\n          pattern: re(/(\\b<<0>>\\s+)<<1>>/.source, [\n            typeDeclarationKeywords,\n            genericName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Single catch exception declaration\n          // catch(Foo)\n          // (things like catch(Foo e) is covered by variable declaration)\n          pattern: re(/(\\bcatch\\s*\\(\\s*)<<0>>/.source, [identifier]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Name of the type parameter of generic constraints\n          // where Foo : class\n          pattern: re(/(\\bwhere\\s+)<<0>>/.source, [name]),\n          lookbehind: true\n        },\n        {\n          // Casts and checks via as and is.\n          // as Foo<A>, is Bar<B>\n          // (things like if(a is Foo b) is covered by variable declaration)\n          pattern: re(/(\\b(?:is(?:\\s+not)?|as)\\s+)<<0>>/.source, [\n            typeExpressionWithoutTuple\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // Variable, field and parameter declaration\n          // (Foo bar, Bar baz, Foo[,,] bay, Foo<Bar, FooBar<Bar>> bax)\n          pattern: re(\n            /\\b<<0>>(?=\\s+(?!<<1>>|with\\s*\\{)<<2>>(?:\\s*[=,;:{)\\]]|\\s+(?:in|when)\\b))/\n              .source,\n            [typeExpression, nonContextualKeywords, name]\n          ),\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      // https://docs.microsoft.com/en-us/dotnet/csharp/language-reference/language-specification/lexical-structure#literals\n      number:\n        /(?:\\b0(?:x[\\da-f_]*[\\da-f]|b[01_]*[01])|(?:\\B\\.\\d+(?:_+\\d+)*|\\b\\d+(?:_+\\d+)*(?:\\.\\d+(?:_+\\d+)*)?)(?:e[-+]?\\d+(?:_+\\d+)*)?)(?:[dflmu]|lu|ul)?\\b/i,\n      operator: />>=?|<<=?|[-=]>|([-+&|])\\1|~|\\?\\?=?|[-+*/%&|^!=<>]=?/,\n      punctuation: /\\?\\.?|::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('csharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'punctuation', {\n      'named-parameter': {\n        pattern: re(/([(,]\\s*)<<0>>(?=\\s*:)/.source, [name]),\n        lookbehind: true,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      namespace: {\n        // namespace Foo.Bar {}\n        // using Foo.Bar;\n        pattern: re(\n          /(\\b(?:namespace|using)\\s+)<<0>>(?:\\s*\\.\\s*<<0>>)*(?=\\s*[;{])/.source,\n          [name]\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      'type-expression': {\n        // default(Foo), typeof(Foo<Bar>), sizeof(int)\n        pattern: re(\n          /(\\b(?:default|sizeof|typeof)\\s*\\(\\s*(?!\\s))(?:[^()\\s]|\\s(?!\\s)|<<0>>)*(?=\\s*\\))/\n            .source,\n          [nestedRound]\n        ),\n        lookbehind: true,\n        alias: 'class-name',\n        inside: typeInside\n      },\n      'return-type': {\n        // Foo<Bar> ForBar(); Foo IFoo.Bar() => 0\n        // int this[int index] => 0; T IReadOnlyList<T>.this[int index] => this[index];\n        // int Foo => 0; int Foo { get; set } = 0;\n        pattern: re(\n          /<<0>>(?=\\s+(?:<<1>>\\s*(?:=>|[({]|\\.\\s*this\\s*\\[)|this\\s*\\[))/.source,\n          [typeExpression, identifier]\n        ),\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      'constructor-invocation': {\n        // new List<Foo<Bar[]>> { }\n        pattern: re(/(\\bnew\\s+)<<0>>(?=\\s*[[({])/.source, [typeExpression]),\n        lookbehind: true,\n        inside: typeInside,\n        alias: 'class-name'\n      },\n      /*'explicit-implementation': {\n// int IFoo<Foo>.Bar => 0; void IFoo<Foo<Foo>>.Foo<T>();\npattern: replace(/\\b<<0>>(?=\\.<<1>>)/, className, methodOrPropertyDeclaration),\ninside: classNameInside,\nalias: 'class-name'\n},*/\n      'generic-method': {\n        // foo<Bar>()\n        pattern: re(/<<0>>\\s*<<1>>(?=\\s*\\()/.source, [name, generic]),\n        inside: {\n          function: re(/^<<0>>/.source, [name]),\n          generic: {\n            pattern: RegExp(generic),\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      },\n      'type-list': {\n        // The list of types inherited or of generic constraints\n        // class Foo<F> : Bar, IList<FooBar>\n        // where F : Bar, IList<int>\n        pattern: re(\n          /\\b((?:<<0>>\\s+<<1>>|record\\s+<<1>>\\s*<<5>>|where\\s+<<2>>)\\s*:\\s*)(?:<<3>>|<<4>>|<<1>>\\s*<<5>>|<<6>>)(?:\\s*,\\s*(?:<<3>>|<<4>>|<<6>>))*(?=\\s*(?:where|[{;]|=>|$))/\n            .source,\n          [\n            typeDeclarationKeywords,\n            genericName,\n            name,\n            typeExpression,\n            keywords.source,\n            nestedRound,\n            /\\bnew\\s*\\(\\s*\\)/.source\n          ]\n        ),\n        lookbehind: true,\n        inside: {\n          'record-arguments': {\n            pattern: re(/(^(?!new\\s*\\()<<0>>\\s*)<<1>>/.source, [\n              genericName,\n              nestedRound\n            ]),\n            lookbehind: true,\n            greedy: true,\n            inside: Prism.languages.csharp\n          },\n          keyword: keywords,\n          'class-name': {\n            pattern: RegExp(typeExpression),\n            greedy: true,\n            inside: typeInside\n          },\n          punctuation: /[,()]/\n        }\n      },\n      preprocessor: {\n        pattern: /(^[\\t ]*)#.*/m,\n        lookbehind: true,\n        alias: 'property',\n        inside: {\n          // highlight preprocessor directives as keywords\n          directive: {\n            pattern:\n              /(#)\\b(?:define|elif|else|endif|endregion|error|if|line|nullable|pragma|region|undef|warning)\\b/,\n            lookbehind: true,\n            alias: 'keyword'\n          }\n        }\n      }\n    }) // attributes\n    var regularStringOrCharacter = regularString + '|' + character\n    var regularStringCharacterOrComment = replace(\n      /\\/(?![*/])|\\/\\/[^\\r\\n]*[\\r\\n]|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>/.source,\n      [regularStringOrCharacter]\n    )\n    var roundExpression = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    ) // https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/concepts/attributes/#attribute-targets\n    var attrTarget =\n      /\\b(?:assembly|event|field|method|module|param|property|return|type)\\b/\n        .source\n    var attr = replace(/<<0>>(?:\\s*\\(<<1>>*\\))?/.source, [\n      identifier,\n      roundExpression\n    ])\n    Prism.languages.insertBefore('csharp', 'class-name', {\n      attribute: {\n        // Attributes\n        // [Foo], [Foo(1), Bar(2, Prop = \"foo\")], [return: Foo(1), Bar(2)], [assembly: Foo(Bar)]\n        pattern: re(\n          /((?:^|[^\\s\\w>)?])\\s*\\[\\s*)(?:<<0>>\\s*:\\s*)?<<1>>(?:\\s*,\\s*<<1>>)*(?=\\s*\\])/\n            .source,\n          [attrTarget, attr]\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          target: {\n            pattern: re(/^<<0>>(?=\\s*:)/.source, [attrTarget]),\n            alias: 'keyword'\n          },\n          'attribute-arguments': {\n            pattern: re(/\\(<<0>>*\\)/.source, [roundExpression]),\n            inside: Prism.languages.csharp\n          },\n          'class-name': {\n            pattern: RegExp(identifier),\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          punctuation: /[:,]/\n        }\n      }\n    }) // string interpolation\n    var formatString = /:[^}\\r\\n]+/.source // multi line\n    var mInterpolationRound = nested(\n      replace(/[^\"'/()]|<<0>>|\\(<<self>>*\\)/.source, [\n        regularStringCharacterOrComment\n      ]),\n      2\n    )\n    var mInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      mInterpolationRound,\n      formatString\n    ]) // single line\n    var sInterpolationRound = nested(\n      replace(\n        /[^\"'/()]|\\/(?!\\*)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|<<0>>|\\(<<self>>*\\)/\n          .source,\n        [regularStringOrCharacter]\n      ),\n      2\n    )\n    var sInterpolation = replace(/\\{(?!\\{)(?:(?![}:])<<0>>)*<<1>>?\\}/.source, [\n      sInterpolationRound,\n      formatString\n    ])\n    function createInterpolationInside(interpolation, interpolationRound) {\n      return {\n        interpolation: {\n          pattern: re(/((?:^|[^{])(?:\\{\\{)*)<<0>>/.source, [interpolation]),\n          lookbehind: true,\n          inside: {\n            'format-string': {\n              pattern: re(/(^\\{(?:(?![}:])<<0>>)*)<<1>>(?=\\}$)/.source, [\n                interpolationRound,\n                formatString\n              ]),\n              lookbehind: true,\n              inside: {\n                punctuation: /^:/\n              }\n            },\n            punctuation: /^\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              alias: 'language-csharp',\n              inside: Prism.languages.csharp\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.insertBefore('csharp', 'string', {\n      'interpolation-string': [\n        {\n          pattern: re(\n            /(^|[^\\\\])(?:\\$@|@\\$)\"(?:\"\"|\\\\[\\s\\S]|\\{\\{|<<0>>|[^\\\\{\"])*\"/.source,\n            [mInterpolation]\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(mInterpolation, mInterpolationRound)\n        },\n        {\n          pattern: re(/(^|[^@\\\\])\\$\"(?:\\\\.|\\{\\{|<<0>>|[^\\\\\"{])*\"/.source, [\n            sInterpolation\n          ]),\n          lookbehind: true,\n          greedy: true,\n          inside: createInterpolationInside(sInterpolation, sInterpolationRound)\n        }\n      ],\n      char: {\n        pattern: RegExp(character),\n        greedy: true\n      }\n    })\n    Prism.languages.dotnet = Prism.languages.cs = Prism.languages.csharp\n  })(Prism)\n}\n","'use strict'\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = cshtml\ncshtml.displayName = 'cshtml'\ncshtml.aliases = ['razor']\nfunction cshtml(Prism) {\n  Prism.register(refractorCsharp)\n  // Docs:\n  // https://docs.microsoft.com/en-us/aspnet/core/razor-pages/?view=aspnetcore-5.0&tabs=visual-studio\n  // https://docs.microsoft.com/en-us/aspnet/core/mvc/views/razor?view=aspnetcore-5.0\n  ;(function (Prism) {\n    var commentLike = /\\/(?![/*])|\\/\\/.*[\\r\\n]|\\/\\*[^*]*(?:\\*(?!\\/)[^*]*)*\\*\\//\n      .source\n    var stringLike =\n      /@(?!\")|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|@\"(?:[^\\\\\"]|\"\"|\\\\[\\s\\S])*\"(?!\")/.source +\n      '|' +\n      /'(?:(?:[^\\r\\n'\\\\]|\\\\.|\\\\[Uux][\\da-fA-F]{1,8})'|(?=[^\\\\](?!')))/.source\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<self>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern\n        .replace(/<self>/g, '[^\\\\s\\\\S]')\n        .replace(/<str>/g, '(?:' + stringLike + ')')\n        .replace(/<comment>/g, '(?:' + commentLike + ')')\n    }\n    var round = nested(/\\((?:[^()'\"@/]|<str>|<comment>|<self>)*\\)/.source, 2)\n    var square = nested(/\\[(?:[^\\[\\]'\"@/]|<str>|<comment>|<self>)*\\]/.source, 2)\n    var curly = nested(/\\{(?:[^{}'\"@/]|<str>|<comment>|<self>)*\\}/.source, 2)\n    var angle = nested(/<(?:[^<>'\"@/]|<str>|<comment>|<self>)*>/.source, 2) // Note about the above bracket patterns:\n    // They all ignore HTML expressions that might be in the C# code. This is a problem because HTML (like strings and\n    // comments) is parsed differently. This is a huge problem because HTML might contain brackets and quotes which\n    // messes up the bracket and string counting implemented by the above patterns.\n    //\n    // This problem is not fixable because 1) HTML expression are highly context sensitive and very difficult to detect\n    // and 2) they require one capturing group at every nested level. See the `tagRegion` pattern to admire the\n    // complexity of an HTML expression.\n    //\n    // To somewhat alleviate the problem a bit, the patterns for characters (e.g. 'a') is very permissive, it also\n    // allows invalid characters to support HTML expressions like this: <p>That's it!</p>.\n    var tagAttrs =\n      /(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?/\n        .source\n    var tagContent = /(?!\\d)[^\\s>\\/=$<%]+/.source + tagAttrs + /\\s*\\/?>/.source\n    var tagRegion =\n      /\\B@?/.source +\n      '(?:' +\n      /<([a-zA-Z][\\w:]*)/.source +\n      tagAttrs +\n      /\\s*>/.source +\n      '(?:' +\n      (/[^<]/.source +\n        '|' + // all tags that are not the start tag\n        // eslint-disable-next-line regexp/strict\n        /<\\/?(?!\\1\\b)/.source +\n        tagContent +\n        '|' + // nested start tag\n        nested(\n          // eslint-disable-next-line regexp/strict\n          /<\\1/.source +\n            tagAttrs +\n            /\\s*>/.source +\n            '(?:' +\n            (/[^<]/.source +\n              '|' + // all tags that are not the start tag\n              // eslint-disable-next-line regexp/strict\n              /<\\/?(?!\\1\\b)/.source +\n              tagContent +\n              '|' +\n              '<self>') +\n            ')*' + // eslint-disable-next-line regexp/strict\n            /<\\/\\1\\s*>/.source,\n          2\n        )) +\n      ')*' + // eslint-disable-next-line regexp/strict\n      /<\\/\\1\\s*>/.source +\n      '|' +\n      /</.source +\n      tagContent +\n      ')' // Now for the actual language definition(s):\n    //\n    // Razor as a language has 2 parts:\n    //  1) CSHTML: A markup-like language that has been extended with inline C# code expressions and blocks.\n    //  2) C#+HTML: A variant of C# that can contain CSHTML tags as expressions.\n    //\n    // In the below code, both CSHTML and C#+HTML will be create as separate language definitions that reference each\n    // other. However, only CSHTML will be exported via `Prism.languages`.\n    Prism.languages.cshtml = Prism.languages.extend('markup', {})\n    var csharpWithHtml = Prism.languages.insertBefore(\n      'csharp',\n      'string',\n      {\n        html: {\n          pattern: RegExp(tagRegion),\n          greedy: true,\n          inside: Prism.languages.cshtml\n        }\n      },\n      {\n        csharp: Prism.languages.extend('csharp', {})\n      }\n    )\n    var cs = {\n      pattern: /\\S[\\s\\S]*/,\n      alias: 'language-csharp',\n      inside: csharpWithHtml\n    }\n    Prism.languages.insertBefore('cshtml', 'prolog', {\n      'razor-comment': {\n        pattern: /@\\*[\\s\\S]*?\\*@/,\n        greedy: true,\n        alias: 'comment'\n      },\n      block: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            '(?:' +\n            [\n              // @{ ... }\n              curly, // @code{ ... }\n              /(?:code|functions)\\s*/.source + curly, // @for (...) { ... }\n              /(?:for|foreach|lock|switch|using|while)\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly, // @do { ... } while (...);\n              /do\\s*/.source +\n                curly +\n                /\\s*while\\s*/.source +\n                round +\n                /(?:\\s*;)?/.source, // @try { ... } catch (...) { ... } finally { ... }\n              /try\\s*/.source +\n                curly +\n                /\\s*catch\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                /\\s*finally\\s*/.source +\n                curly, // @if (...) {...} else if (...) {...} else {...}\n              /if\\s*/.source +\n                round +\n                /\\s*/.source +\n                curly +\n                '(?:' +\n                /\\s*else/.source +\n                '(?:' +\n                /\\s+if\\s*/.source +\n                round +\n                ')?' +\n                /\\s*/.source +\n                curly +\n                ')*'\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w*/,\n          csharp: cs\n        }\n      },\n      directive: {\n        pattern:\n          /^([ \\t]*)@(?:addTagHelper|attribute|implements|inherits|inject|layout|model|namespace|page|preservewhitespace|removeTagHelper|section|tagHelperPrefix|using)(?=\\s).*/m,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^@\\w+/,\n          csharp: cs\n        }\n      },\n      value: {\n        pattern: RegExp(\n          /(^|[^@])@/.source +\n            /(?:await\\b\\s*)?/.source +\n            '(?:' +\n            /\\w+\\b/.source +\n            '|' +\n            round +\n            ')' +\n            '(?:' +\n            /[?!]?\\.\\w+\\b/.source +\n            '|' +\n            round +\n            '|' +\n            square +\n            '|' +\n            angle +\n            round +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'variable',\n        inside: {\n          keyword: /^@/,\n          csharp: cs\n        }\n      },\n      'delegate-operator': {\n        pattern: /(^|[^@])@(?=<)/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.razor = Prism.languages.cshtml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csp\ncsp.displayName = 'csp'\ncsp.aliases = []\nfunction csp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/csp-cheat-sheet/\n   *\n   * Supports the following:\n   *  - https://www.w3.org/TR/CSP1/\n   *  - https://www.w3.org/TR/CSP2/\n   *  - https://www.w3.org/TR/CSP3/\n   */\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @returns {RegExp}\n     */\n    function value(source) {\n      return RegExp(\n        /([ \\t])/.source + '(?:' + source + ')' + /(?=[\\s;]|$)/.source,\n        'i'\n      )\n    }\n    Prism.languages.csp = {\n      directive: {\n        pattern:\n          /(^|[\\s;])(?:base-uri|block-all-mixed-content|(?:child|connect|default|font|frame|img|manifest|media|object|prefetch|script|style|worker)-src|disown-opener|form-action|frame-(?:ancestors|options)|input-protection(?:-(?:clip|selectors))?|navigate-to|plugin-types|policy-uri|referrer|reflected-xss|report-(?:to|uri)|require-sri-for|sandbox|(?:script|style)-src-(?:attr|elem)|upgrade-insecure-requests)(?=[\\s;]|$)/i,\n        lookbehind: true,\n        alias: 'property'\n      },\n      scheme: {\n        pattern: value(/[a-z][a-z0-9.+-]*:/.source),\n        lookbehind: true\n      },\n      none: {\n        pattern: value(/'none'/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      nonce: {\n        pattern: value(/'nonce-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      hash: {\n        pattern: value(/'sha(?:256|384|512)-[-+/\\w=]+'/.source),\n        lookbehind: true,\n        alias: 'number'\n      },\n      host: {\n        pattern: value(\n          /[a-z][a-z0-9.+-]*:\\/\\/[^\\s;,']*/.source +\n            '|' +\n            /\\*[^\\s;,']*/.source +\n            '|' +\n            /[a-z0-9-]+(?:\\.[a-z0-9-]+)+(?::[\\d*]+)?(?:\\/[^\\s;,']*)?/.source\n        ),\n        lookbehind: true,\n        alias: 'url',\n        inside: {\n          important: /\\*/\n        }\n      },\n      keyword: [\n        {\n          pattern: value(/'unsafe-[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'unsafe'\n        },\n        {\n          pattern: value(/'[a-z-]+'/.source),\n          lookbehind: true,\n          alias: 'safe'\n        }\n      ],\n      punctuation: /;/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = cssExtras\ncssExtras.displayName = 'cssExtras'\ncssExtras.aliases = []\nfunction cssExtras(Prism) {\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var selectorInside\n    Prism.languages.css.selector = {\n      pattern: Prism.languages.css.selector.pattern,\n      lookbehind: true,\n      inside: (selectorInside = {\n        'pseudo-element':\n          /:(?:after|before|first-letter|first-line|selection)|::[-\\w]+/,\n        'pseudo-class': /:[-\\w]+/,\n        class: /\\.[-\\w]+/,\n        id: /#[-\\w]+/,\n        attribute: {\n          pattern: RegExp('\\\\[(?:[^[\\\\]\"\\']|' + string.source + ')*\\\\]'),\n          greedy: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            'case-sensitivity': {\n              pattern: /(\\s)[si]$/i,\n              lookbehind: true,\n              alias: 'keyword'\n            },\n            namespace: {\n              pattern: /^(\\s*)(?:(?!\\s)[-*\\w\\xA0-\\uFFFF])*\\|(?!=)/,\n              lookbehind: true,\n              inside: {\n                punctuation: /\\|$/\n              }\n            },\n            'attr-name': {\n              pattern: /^(\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+/,\n              lookbehind: true\n            },\n            'attr-value': [\n              string,\n              {\n                pattern: /(=\\s*)(?:(?!\\s)[-\\w\\xA0-\\uFFFF])+(?=\\s*$)/,\n                lookbehind: true\n              }\n            ],\n            operator: /[|~*^$]?=/\n          }\n        },\n        'n-th': [\n          {\n            pattern: /(\\(\\s*)[+-]?\\d*[\\dn](?:\\s*[+-]\\s*\\d+)?(?=\\s*\\))/,\n            lookbehind: true,\n            inside: {\n              number: /[\\dn]+/,\n              operator: /[+-]/\n            }\n          },\n          {\n            pattern: /(\\(\\s*)(?:even|odd)(?=\\s*\\))/i,\n            lookbehind: true\n          }\n        ],\n        combinator: />|\\+|~|\\|\\|/,\n        // the `tag` token has been existed and removed.\n        // because we can't find a perfect tokenize to match it.\n        // if you want to add it, please read https://github.com/PrismJS/prism/pull/2373 first.\n        punctuation: /[(),]/\n      })\n    }\n    Prism.languages.css['atrule'].inside['selector-function-argument'].inside =\n      selectorInside\n    Prism.languages.insertBefore('css', 'property', {\n      variable: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])--(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*/i,\n        lookbehind: true\n      }\n    })\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+(?![\\w-]))/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    Prism.languages.insertBefore('css', 'function', {\n      operator: {\n        pattern: /(\\s)[+\\-*\\/](?=\\s)/,\n        lookbehind: true\n      },\n      // CAREFUL!\n      // Previewers and Inline color use hexcode and color.\n      hexcode: {\n        pattern: /\\B#[\\da-f]{3,8}\\b/i,\n        alias: 'color'\n      },\n      color: [\n        {\n          pattern:\n            /(^|[^\\w-])(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)(?![\\w-])/i,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      // it's important that there is no boundary assertion after the hex digits\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      number: number\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = css\ncss.displayName = 'css'\ncss.aliases = []\nfunction css(Prism) {\n  ;(function (Prism) {\n    var string =\n      /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/\n    Prism.languages.css = {\n      comment: /\\/\\*[\\s\\S]*?\\*\\//,\n      atrule: {\n        pattern: /@[\\w-](?:[^;{\\s]|\\s+(?![\\s{]))*(?:;|(?=\\s*\\{))/,\n        inside: {\n          rule: /^@[\\w-]+/,\n          'selector-function-argument': {\n            pattern:\n              /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n            lookbehind: true,\n            alias: 'selector'\n          },\n          keyword: {\n            pattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n            lookbehind: true\n          } // See rest below\n        }\n      },\n      url: {\n        // https://drafts.csswg.org/css-values-3/#urls\n        pattern: RegExp(\n          '\\\\burl\\\\((?:' +\n            string.source +\n            '|' +\n            /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source +\n            ')\\\\)',\n          'i'\n        ),\n        greedy: true,\n        inside: {\n          function: /^url/i,\n          punctuation: /^\\(|\\)$/,\n          string: {\n            pattern: RegExp('^' + string.source + '$'),\n            alias: 'url'\n          }\n        }\n      },\n      selector: {\n        pattern: RegExp(\n          '(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' +\n            string.source +\n            ')*(?=\\\\s*\\\\{)'\n        ),\n        lookbehind: true\n      },\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      property: {\n        pattern:\n          /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n        lookbehind: true\n      },\n      important: /!important\\b/i,\n      function: {\n        pattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n        lookbehind: true\n      },\n      punctuation: /[(){};:,]/\n    }\n    Prism.languages.css['atrule'].inside.rest = Prism.languages.css\n    var markup = Prism.languages.markup\n    if (markup) {\n      markup.tag.addInlined('style', 'css')\n      markup.tag.addAttribute('style', 'css')\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = csv\ncsv.displayName = 'csv'\ncsv.aliases = []\nfunction csv(Prism) {\n  // https://tools.ietf.org/html/rfc4180\n  Prism.languages.csv = {\n    value: /[^\\r\\n,\"]+|\"(?:[^\"]|\"\")*\"(?!\")/,\n    punctuation: /,/\n  }\n}\n","'use strict'\n\nmodule.exports = cypher\ncypher.displayName = 'cypher'\ncypher.aliases = []\nfunction cypher(Prism) {\n  Prism.languages.cypher = {\n    // https://neo4j.com/docs/cypher-manual/current/syntax/comments/\n    comment: /\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)(?=\\s*[{):])/,\n      lookbehind: true,\n      greedy: true\n    },\n    relationship: {\n      pattern:\n        /(-\\[\\s*(?:\\w+\\s*|`(?:[^`\\\\\\r\\n])*`\\s*)?:\\s*|\\|\\s*:\\s*)(?:\\w+|`(?:[^`\\\\\\r\\n])*`)/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    identifier: {\n      pattern: /`(?:[^`\\\\\\r\\n])*`/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/reserved/\n    keyword:\n      /\\b(?:ADD|ALL|AND|AS|ASC|ASCENDING|ASSERT|BY|CALL|CASE|COMMIT|CONSTRAINT|CONTAINS|CREATE|CSV|DELETE|DESC|DESCENDING|DETACH|DISTINCT|DO|DROP|ELSE|END|ENDS|EXISTS|FOR|FOREACH|IN|INDEX|IS|JOIN|KEY|LIMIT|LOAD|MANDATORY|MATCH|MERGE|NODE|NOT|OF|ON|OPTIONAL|OR|ORDER(?=\\s+BY)|PERIODIC|REMOVE|REQUIRE|RETURN|SCALAR|SCAN|SET|SKIP|START|STARTS|THEN|UNION|UNIQUE|UNWIND|USING|WHEN|WHERE|WITH|XOR|YIELD)\\b/i,\n    function: /\\b\\w+\\b(?=\\s*\\()/,\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: /\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)\\b/,\n    // https://neo4j.com/docs/cypher-manual/current/syntax/operators/\n    operator: /:|<--?|--?>?|<>|=~?|[<>]=?|[+*/%^|]|\\.\\.\\.?/,\n    punctuation: /[()[\\]{},;.]/\n  }\n}\n","'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    comment: [\n      {\n        // Shebang\n        pattern: /^\\s*#!.+/,\n        greedy: true\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\\\\])/.source +\n            '(?:' +\n            [\n              // /+ comment +/\n              // Allow one level of nesting\n              /\\/\\+(?:\\/\\+(?:[^+]|\\+(?!\\/))*\\+\\/|(?!\\/\\+)[\\s\\S])*?\\+\\//.source, // // comment\n              /\\/\\/.*/.source, // /* comment */\n              /\\/\\*[\\s\\S]*?\\*\\//.source\n            ].join('|') +\n            ')'\n        ),\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: [\n      {\n        pattern: RegExp(\n          [\n            // r\"\", x\"\"\n            /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/.source, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n            /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/.source, // q\"IDENT\n            // ...\n            // IDENT\"\n            /\\bq\"((?!\\d)\\w+)$[\\s\\S]*?^\\1\"/.source, // q\"//\", q\"||\", etc.\n            // eslint-disable-next-line regexp/strict\n            /\\bq\"(.)[\\s\\S]*?\\2\"/.source, // eslint-disable-next-line regexp/strict\n            /([\"`])(?:\\\\[\\s\\S]|(?!\\3)[^\\\\])*\\3[cwd]?/.source\n          ].join('|'),\n          'm'\n        ),\n        greedy: true\n      },\n      {\n        pattern: /\\bq\\{(?:\\{[^{}]*\\}|[^{}])*\\}/,\n        greedy: true,\n        alias: 'token-string'\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword:\n      /\\$|\\b(?:__(?:(?:DATE|EOF|FILE|FUNCTION|LINE|MODULE|PRETTY_FUNCTION|TIMESTAMP|TIME|VENDOR|VERSION)__|gshared|parameters|traits|vector)|abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|dstring|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|ptrdiff_t|public|pure|real|ref|return|scope|shared|short|size_t|static|string|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|wstring)\\b/,\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]{0,4}/i,\n      {\n        pattern:\n          /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]{0,4}/i,\n        lookbehind: true\n      }\n    ],\n    operator:\n      /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.insertBefore('d', 'string', {\n    // Characters\n    // 'a', '\\\\', '\\n', '\\xFF', '\\377', '\\uFFFF', '\\U0010FFFF', '\\quot'\n    char: /'(?:\\\\(?:\\W|\\w+)|[^\\\\])'/\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern:\n        /\\b(?:[ABCD][LHX]|E?(?:BP|DI|SI|SP)|[BS]PL|[ECSDGF]S|CR[0234]|[DS]IL|DR[012367]|E[ABCD]X|X?MM[0-7]|R(?:1[0-5]|[89])[BWD]?|R[ABCD]X|R[BS]P|R[DS]I|TR[3-7]|XMM(?:1[0-5]|[89])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = dart\ndart.displayName = 'dart'\ndart.aliases = []\nfunction dart(Prism) {\n  ;(function (Prism) {\n    var keywords = [\n      /\\b(?:async|sync|yield)\\*/,\n      /\\b(?:abstract|assert|async|await|break|case|catch|class|const|continue|covariant|default|deferred|do|dynamic|else|enum|export|extends|extension|external|factory|final|finally|for|get|hide|if|implements|import|in|interface|library|mixin|new|null|on|operator|part|rethrow|return|set|show|static|super|switch|sync|this|throw|try|typedef|var|void|while|with|yield)\\b/\n    ] // Handles named imports, such as http.Client\n    var packagePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the dart naming conventions\n    var className = {\n      pattern: RegExp(packagePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        }\n      }\n    }\n    Prism.languages.dart = Prism.languages.extend('clike', {\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            packagePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      operator:\n        /\\bis!|\\b(?:as|is)\\b|\\+\\+|--|&&|\\|\\||<<=?|>>=?|~(?:\\/=?)?|[+\\-*\\/%&^|=!<>]=?|\\?/\n    })\n    Prism.languages.insertBefore('dart', 'string', {\n      'string-literal': {\n        pattern:\n          /r?(?:(\"\"\"|''')[\\s\\S]*?\\1|([\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2(?!\\2))/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\$\\{?|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                inside: Prism.languages.dart\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      },\n      string: undefined\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      metadata: {\n        pattern: /@\\w+/,\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore('dart', 'class-name', {\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<(?:[\\w\\s,.&?]|<[\\w\\s,.&?]*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dataweave\ndataweave.displayName = 'dataweave'\ndataweave.aliases = []\nfunction dataweave(Prism) {\n  ;(function (Prism) {\n    Prism.languages.dataweave = {\n      url: /\\b[A-Za-z]+:\\/\\/[\\w/:.?=&-]+|\\burn:[\\w:.?=&-]+/,\n      property: {\n        pattern: /(?:\\b\\w+#)?(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|\\b\\w+)(?=\\s*[:@])/,\n        greedy: true\n      },\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      'mime-type':\n        /\\b(?:application|audio|image|multipart|text|video)\\/[\\w+-]+/,\n      date: {\n        pattern: /\\|[\\w:+-]+\\|/,\n        greedy: true\n      },\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      regex: {\n        pattern: /\\/(?:[^\\\\\\/\\r\\n]|\\\\[^\\r\\n])+\\//,\n        greedy: true\n      },\n      keyword:\n        /\\b(?:and|as|at|case|do|else|fun|if|input|is|match|not|ns|null|or|output|type|unless|update|using|var)\\b/,\n      function: /\\b[A-Z_]\\w*(?=\\s*\\()/i,\n      number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n      punctuation: /[{}[\\];(),.:@]/,\n      operator: /<<|>>|->|[<>~=]=?|!=|--?-?|\\+\\+?|!|\\?/,\n      boolean: /\\b(?:false|true)\\b/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dax\ndax.displayName = 'dax'\ndax.aliases = []\nfunction dax(Prism) {\n  Prism.languages.dax = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/).*)/,\n      lookbehind: true\n    },\n    'data-field': {\n      pattern:\n        /'(?:[^']|'')*'(?!')(?:\\[[ \\w\\xA0-\\uFFFF]+\\])?|\\w+\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'symbol'\n    },\n    measure: {\n      pattern: /\\[[ \\w\\xA0-\\uFFFF]+\\]/,\n      alias: 'constant'\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    function:\n      /\\b(?:ABS|ACOS|ACOSH|ACOT|ACOTH|ADDCOLUMNS|ADDMISSINGITEMS|ALL|ALLCROSSFILTERED|ALLEXCEPT|ALLNOBLANKROW|ALLSELECTED|AND|APPROXIMATEDISTINCTCOUNT|ASIN|ASINH|ATAN|ATANH|AVERAGE|AVERAGEA|AVERAGEX|BETA\\.DIST|BETA\\.INV|BLANK|CALCULATE|CALCULATETABLE|CALENDAR|CALENDARAUTO|CEILING|CHISQ\\.DIST|CHISQ\\.DIST\\.RT|CHISQ\\.INV|CHISQ\\.INV\\.RT|CLOSINGBALANCEMONTH|CLOSINGBALANCEQUARTER|CLOSINGBALANCEYEAR|COALESCE|COMBIN|COMBINA|COMBINEVALUES|CONCATENATE|CONCATENATEX|CONFIDENCE\\.NORM|CONFIDENCE\\.T|CONTAINS|CONTAINSROW|CONTAINSSTRING|CONTAINSSTRINGEXACT|CONVERT|COS|COSH|COT|COTH|COUNT|COUNTA|COUNTAX|COUNTBLANK|COUNTROWS|COUNTX|CROSSFILTER|CROSSJOIN|CURRENCY|CURRENTGROUP|CUSTOMDATA|DATATABLE|DATE|DATEADD|DATEDIFF|DATESBETWEEN|DATESINPERIOD|DATESMTD|DATESQTD|DATESYTD|DATEVALUE|DAY|DEGREES|DETAILROWS|DISTINCT|DISTINCTCOUNT|DISTINCTCOUNTNOBLANK|DIVIDE|EARLIER|EARLIEST|EDATE|ENDOFMONTH|ENDOFQUARTER|ENDOFYEAR|EOMONTH|ERROR|EVEN|EXACT|EXCEPT|EXP|EXPON\\.DIST|FACT|FALSE|FILTER|FILTERS|FIND|FIRSTDATE|FIRSTNONBLANK|FIRSTNONBLANKVALUE|FIXED|FLOOR|FORMAT|GCD|GENERATE|GENERATEALL|GENERATESERIES|GEOMEAN|GEOMEANX|GROUPBY|HASONEFILTER|HASONEVALUE|HOUR|IF|IF\\.EAGER|IFERROR|IGNORE|INT|INTERSECT|ISBLANK|ISCROSSFILTERED|ISEMPTY|ISERROR|ISEVEN|ISFILTERED|ISINSCOPE|ISLOGICAL|ISNONTEXT|ISNUMBER|ISO\\.CEILING|ISODD|ISONORAFTER|ISSELECTEDMEASURE|ISSUBTOTAL|ISTEXT|KEEPFILTERS|KEYWORDMATCH|LASTDATE|LASTNONBLANK|LASTNONBLANKVALUE|LCM|LEFT|LEN|LN|LOG|LOG10|LOOKUPVALUE|LOWER|MAX|MAXA|MAXX|MEDIAN|MEDIANX|MID|MIN|MINA|MINUTE|MINX|MOD|MONTH|MROUND|NATURALINNERJOIN|NATURALLEFTOUTERJOIN|NEXTDAY|NEXTMONTH|NEXTQUARTER|NEXTYEAR|NONVISUAL|NORM\\.DIST|NORM\\.INV|NORM\\.S\\.DIST|NORM\\.S\\.INV|NOT|NOW|ODD|OPENINGBALANCEMONTH|OPENINGBALANCEQUARTER|OPENINGBALANCEYEAR|OR|PARALLELPERIOD|PATH|PATHCONTAINS|PATHITEM|PATHITEMREVERSE|PATHLENGTH|PERCENTILE\\.EXC|PERCENTILE\\.INC|PERCENTILEX\\.EXC|PERCENTILEX\\.INC|PERMUT|PI|POISSON\\.DIST|POWER|PREVIOUSDAY|PREVIOUSMONTH|PREVIOUSQUARTER|PREVIOUSYEAR|PRODUCT|PRODUCTX|QUARTER|QUOTIENT|RADIANS|RAND|RANDBETWEEN|RANK\\.EQ|RANKX|RELATED|RELATEDTABLE|REMOVEFILTERS|REPLACE|REPT|RIGHT|ROLLUP|ROLLUPADDISSUBTOTAL|ROLLUPGROUP|ROLLUPISSUBTOTAL|ROUND|ROUNDDOWN|ROUNDUP|ROW|SAMEPERIODLASTYEAR|SAMPLE|SEARCH|SECOND|SELECTCOLUMNS|SELECTEDMEASURE|SELECTEDMEASUREFORMATSTRING|SELECTEDMEASURENAME|SELECTEDVALUE|SIGN|SIN|SINH|SQRT|SQRTPI|STARTOFMONTH|STARTOFQUARTER|STARTOFYEAR|STDEV\\.P|STDEV\\.S|STDEVX\\.P|STDEVX\\.S|SUBSTITUTE|SUBSTITUTEWITHINDEX|SUM|SUMMARIZE|SUMMARIZECOLUMNS|SUMX|SWITCH|T\\.DIST|T\\.DIST\\.2T|T\\.DIST\\.RT|T\\.INV|T\\.INV\\.2T|TAN|TANH|TIME|TIMEVALUE|TODAY|TOPN|TOPNPERLEVEL|TOPNSKIP|TOTALMTD|TOTALQTD|TOTALYTD|TREATAS|TRIM|TRUE|TRUNC|UNICHAR|UNICODE|UNION|UPPER|USERELATIONSHIP|USERNAME|USEROBJECTID|USERPRINCIPALNAME|UTCNOW|UTCTODAY|VALUE|VALUES|VAR\\.P|VAR\\.S|VARX\\.P|VARX\\.S|WEEKDAY|WEEKNUM|XIRR|XNPV|YEAR|YEARFRAC)(?=\\s*\\()/i,\n    keyword:\n      /\\b(?:DEFINE|EVALUATE|MEASURE|ORDER\\s+BY|RETURN|VAR|START\\s+AT|ASC|DESC)\\b/i,\n    boolean: {\n      pattern: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n      alias: 'constant'\n    },\n    number: /\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/,\n    operator: /:=|[-+*\\/=^]|&&?|\\|\\||<(?:=>?|<|>)?|>[>=]?|\\b(?:IN|NOT)\\b/i,\n    punctuation: /[;\\[\\](){}`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = dhall\ndhall.displayName = 'dhall'\ndhall.aliases = []\nfunction dhall(Prism) {\n  // ABNF grammar:\n  // https://github.com/dhall-lang/dhall-lang/blob/master/standard/dhall.abnf\n  Prism.languages.dhall = {\n    // Multi-line comments can be nested. E.g. {- foo {- bar -} -}\n    // The multi-line pattern is essentially this:\n    //   \\{-(?:[^-{]|-(?!\\})|\\{(?!-)|<SELF>)*-\\}\n    comment:\n      /--.*|\\{-(?:[^-{]|-(?!\\})|\\{(?!-)|\\{-(?:[^-{]|-(?!\\})|\\{(?!-))*-\\})*-\\}/,\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\.)*\"|''(?:[^']|'(?!')|'''|''\\$\\{)*''(?!'|\\$)/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$\\{[^{}]*\\}/,\n          inside: {\n            expression: {\n              pattern: /(^\\$\\{)[\\s\\S]+(?=\\}$)/,\n              lookbehind: true,\n              alias: 'language-dhall',\n              inside: null // see blow\n            },\n            punctuation: /\\$\\{|\\}/\n          }\n        }\n      }\n    },\n    label: {\n      pattern: /`[^`]*`/,\n      greedy: true\n    },\n    url: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L596\n      pattern:\n        /\\bhttps?:\\/\\/[\\w.:%!$&'*+;=@~-]+(?:\\/[\\w.:%!$&'*+;=@~-]*)*(?:\\?[/?\\w.:%!$&'*+;=@~-]*)?/,\n      greedy: true\n    },\n    env: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L661\n      pattern: /\\benv:(?:(?!\\d)\\w+|\"(?:[^\"\\\\=]|\\\\.)*\")/,\n      greedy: true,\n      inside: {\n        function: /^env/,\n        operator: /^:/,\n        variable: /[\\s\\S]+/\n      }\n    },\n    hash: {\n      // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L725\n      pattern: /\\bsha256:[\\da-fA-F]{64}\\b/,\n      inside: {\n        function: /sha256/,\n        operator: /:/,\n        number: /[\\da-fA-F]{64}/\n      }\n    },\n    // https://github.com/dhall-lang/dhall-lang/blob/5fde8ef1bead6fb4e999d3c1ffe7044cd019d63a/standard/dhall.abnf#L359\n    keyword:\n      /\\b(?:as|assert|else|forall|if|in|let|merge|missing|then|toMap|using|with)\\b|\\u2200/,\n    builtin: /\\b(?:None|Some)\\b/,\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /\\bNaN\\b|-?\\bInfinity\\b|[+-]?\\b(?:0x[\\da-fA-F]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/,\n    operator:\n      /\\/\\\\|\\/\\/\\\\\\\\|&&|\\|\\||===|[!=]=|\\/\\/|->|\\+\\+|::|[+*#@=:?<>|\\\\\\u2227\\u2a53\\u2261\\u2afd\\u03bb\\u2192]/,\n    punctuation: /\\.\\.|[{}\\[\\](),./]/,\n    // we'll just assume that every capital word left is a type name\n    'class-name': /\\b[A-Z]\\w*\\b/\n  }\n  Prism.languages.dhall.string.inside.interpolation.inside.expression.inside =\n    Prism.languages.dhall\n}\n","'use strict'\n\nmodule.exports = diff\ndiff.displayName = 'diff'\ndiff.aliases = []\nfunction diff(Prism) {\n  ;(function (Prism) {\n    Prism.languages.diff = {\n      coord: [\n        // Match all kinds of coord lines (prefixed by \"+++\", \"---\" or \"***\").\n        /^(?:\\*{3}|-{3}|\\+{3}).*$/m, // Match \"@@ ... @@\" coord lines in unified diff.\n        /^@@.*@@$/m, // Match coord lines in normal diff (starts with a number).\n        /^\\d.*$/m\n      ] // deleted, inserted, unchanged, diff\n    }\n    /**\n     * A map from the name of a block to its line prefix.\n     *\n     * @type {Object<string, string>}\n     */\n    var PREFIXES = {\n      'deleted-sign': '-',\n      'deleted-arrow': '<',\n      'inserted-sign': '+',\n      'inserted-arrow': '>',\n      unchanged: ' ',\n      diff: '!'\n    } // add a token for each prefix\n    Object.keys(PREFIXES).forEach(function (name) {\n      var prefix = PREFIXES[name]\n      var alias = []\n      if (!/^\\w+$/.test(name)) {\n        // \"deleted-sign\" -> \"deleted\"\n        alias.push(/\\w+/.exec(name)[0])\n      }\n      if (name === 'diff') {\n        alias.push('bold')\n      }\n      Prism.languages.diff[name] = {\n        pattern: RegExp(\n          '^(?:[' + prefix + '].*(?:\\r\\n?|\\n|(?![\\\\s\\\\S])))+',\n          'm'\n        ),\n        alias: alias,\n        inside: {\n          line: {\n            pattern: /(.)(?=[\\s\\S]).*(?:\\r\\n?|\\n)?/,\n            lookbehind: true\n          },\n          prefix: {\n            pattern: /[\\s\\S]/,\n            alias: /\\w+/.exec(name)[0]\n          }\n        }\n      }\n    }) // make prefixes available to Diff plugin\n    Object.defineProperty(Prism.languages.diff, 'PREFIXES', {\n      value: PREFIXES\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = django\ndjango.displayName = 'django'\ndjango.aliases = ['jinja2']\nfunction django(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  // Django/Jinja2 syntax definition for Prism.js <http://prismjs.com> syntax highlighter.\n  // Mostly it works OK but can paint code incorrectly on complex html/template tag combinations.\n  ;(function (Prism) {\n    Prism.languages.django = {\n      comment: /^\\{#[\\s\\S]*?#\\}$/,\n      tag: {\n        pattern: /(^\\{%[+-]?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      delimiter: {\n        pattern: /^\\{[{%][+-]?|[+-]?[}%]\\}$/,\n        alias: 'punctuation'\n      },\n      string: {\n        pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      },\n      filter: {\n        pattern: /(\\|)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      test: {\n        pattern: /(\\bis\\s+(?:not\\s+)?)(?!not\\b)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b[a-z_]\\w+(?=\\s*\\()/i,\n      keyword:\n        /\\b(?:and|as|by|else|for|if|import|in|is|loop|not|or|recursive|with|without)\\b/,\n      operator: /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      boolean: /[Ff]alse|[Nn]one|[Tt]rue/,\n      variable: /\\b\\w+\\b/,\n      punctuation: /[{}[\\](),.:;]/\n    }\n    var pattern = /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}|\\{#[\\s\\S]*?#\\}/g\n    var markupTemplating = Prism.languages['markup-templating']\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'django', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'django')\n    }) // Add an Jinja2 alias\n    Prism.languages.jinja2 = Prism.languages.django\n    Prism.hooks.add('before-tokenize', function (env) {\n      markupTemplating.buildPlaceholders(env, 'jinja2', pattern)\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      markupTemplating.tokenizePlaceholders(env, 'jinja2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dnsZoneFile\ndnsZoneFile.displayName = 'dnsZoneFile'\ndnsZoneFile.aliases = []\nfunction dnsZoneFile(Prism) {\n  Prism.languages['dns-zone-file'] = {\n    comment: /;.*/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(^\\$ORIGIN[ \\t]+)\\S+/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|\\s)@(?=\\s|$)/,\n        lookbehind: true\n      }\n    ],\n    keyword: /^\\$(?:INCLUDE|ORIGIN|TTL)(?=\\s|$)/m,\n    class: {\n      // https://tools.ietf.org/html/rfc1035#page-13\n      pattern: /(^|\\s)(?:CH|CS|HS|IN)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      // https://en.wikipedia.org/wiki/List_of_DNS_record_types\n      pattern:\n        /(^|\\s)(?:A|A6|AAAA|AFSDB|APL|ATMA|CAA|CDNSKEY|CDS|CERT|CNAME|DHCID|DLV|DNAME|DNSKEY|DS|EID|GID|GPOS|HINFO|HIP|IPSECKEY|ISDN|KEY|KX|LOC|MAILA|MAILB|MB|MD|MF|MG|MINFO|MR|MX|NAPTR|NB|NBSTAT|NIMLOC|NINFO|NS|NSAP|NSAP-PTR|NSEC|NSEC3|NSEC3PARAM|NULL|NXT|OPENPGPKEY|PTR|PX|RKEY|RP|RRSIG|RT|SIG|SINK|SMIMEA|SOA|SPF|SRV|SSHFP|TA|TKEY|TLSA|TSIG|TXT|UID|UINFO|UNSPEC|URI|WKS|X25)(?=\\s|$)/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    punctuation: /[()]/\n  }\n  Prism.languages['dns-zone'] = Prism.languages['dns-zone-file']\n}\n","'use strict'\n\nmodule.exports = docker\ndocker.displayName = 'docker'\ndocker.aliases = ['dockerfile']\nfunction docker(Prism) {\n  ;(function (Prism) {\n    // Many of the following regexes will contain negated lookaheads like `[ \\t]+(?![ \\t])`. This is a trick to ensure\n    // that quantifiers behave *atomically*. Atomic quantifiers are necessary to prevent exponential backtracking.\n    var spaceAfterBackSlash =\n      /\\\\[\\r\\n](?:\\s|\\\\[\\r\\n]|#.*(?!.))*(?![\\s#]|\\\\[\\r\\n])/.source // At least one space, comment, or line break\n    var space = /(?:[ \\t]+(?![ \\t])(?:<SP_BS>)?|<SP_BS>)/.source.replace(\n      /<SP_BS>/g,\n      function () {\n        return spaceAfterBackSlash\n      }\n    )\n    var string =\n      /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"|'(?:[^'\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*'/\n        .source\n    var option = /--[\\w-]+=(?:<STR>|(?![\"'])(?:[^\\s\\\\]|\\\\.)+)/.source.replace(\n      /<STR>/g,\n      function () {\n        return string\n      }\n    )\n    var stringRule = {\n      pattern: RegExp(string),\n      greedy: true\n    }\n    var commentRule = {\n      pattern: /(^[ \\t]*)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<OPT>/g, function () {\n          return option\n        })\n        .replace(/<SP>/g, function () {\n          return space\n        })\n      return RegExp(source, flags)\n    }\n    Prism.languages.docker = {\n      instruction: {\n        pattern:\n          /(^[ \\t]*)(?:ADD|ARG|CMD|COPY|ENTRYPOINT|ENV|EXPOSE|FROM|HEALTHCHECK|LABEL|MAINTAINER|ONBUILD|RUN|SHELL|STOPSIGNAL|USER|VOLUME|WORKDIR)(?=\\s)(?:\\\\.|[^\\r\\n\\\\])*(?:\\\\$(?:\\s|#.*$)*(?![\\s#])(?:\\\\.|[^\\r\\n\\\\])*)*/im,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          options: {\n            pattern: re(\n              /(^(?:ONBUILD<SP>)?\\w+<SP>)<OPT>(?:<SP><OPT>)*/.source,\n              'i'\n            ),\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              property: {\n                pattern: /(^|\\s)--[\\w-]+/,\n                lookbehind: true\n              },\n              string: [\n                stringRule,\n                {\n                  pattern: /(=)(?![\"'])(?:[^\\s\\\\]|\\\\.)+/,\n                  lookbehind: true\n                }\n              ],\n              operator: /\\\\$/m,\n              punctuation: /=/\n            }\n          },\n          keyword: [\n            {\n              // https://docs.docker.com/engine/reference/builder/#healthcheck\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?HEALTHCHECK<SP>(?:<OPT><SP>)*)(?:CMD|NONE)\\b/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#from\n              pattern: re(\n                /(^(?:ONBUILD<SP>)?FROM<SP>(?:<OPT><SP>)*(?!--)[^ \\t\\\\]+<SP>)AS/\n                  .source,\n                'i'\n              ),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              // https://docs.docker.com/engine/reference/builder/#onbuild\n              pattern: re(/(^ONBUILD<SP>)\\w+/.source, 'i'),\n              lookbehind: true,\n              greedy: true\n            },\n            {\n              pattern: /^\\w+/,\n              greedy: true\n            }\n          ],\n          comment: commentRule,\n          string: stringRule,\n          variable: /\\$(?:\\w+|\\{[^{}\"'\\\\]*\\})/,\n          operator: /\\\\$/m\n        }\n      },\n      comment: commentRule\n    }\n    Prism.languages.dockerfile = Prism.languages.docker\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = dot\ndot.displayName = 'dot'\ndot.aliases = ['gv']\nfunction dot(Prism) {\n  // https://www.graphviz.org/doc/info/lang.html\n  ;(function (Prism) {\n    var ID =\n      '(?:' +\n      [\n        // an identifier\n        /[a-zA-Z_\\x80-\\uFFFF][\\w\\x80-\\uFFFF]*/.source, // a number\n        /-?(?:\\.\\d+|\\d+(?:\\.\\d*)?)/.source, // a double-quoted string\n        /\"[^\"\\\\]*(?:\\\\[\\s\\S][^\"\\\\]*)*\"/.source, // HTML-like string\n        /<(?:[^<>]|(?!<!--)<(?:[^<>\"']|\"[^\"]*\"|'[^']*')+>|<!--(?:[^-]|-(?!->))*-->)*>/\n          .source\n      ].join('|') +\n      ')'\n    var IDInside = {\n      markup: {\n        pattern: /(^<)[\\s\\S]+(?=>$)/,\n        lookbehind: true,\n        alias: ['language-markup', 'language-html', 'language-xml'],\n        inside: Prism.languages.markup\n      }\n    }\n    /**\n     * @param {string} source\n     * @param {string} flags\n     * @returns {RegExp}\n     */\n    function withID(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return ID\n        }),\n        flags\n      )\n    }\n    Prism.languages.dot = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|^#.*/m,\n        greedy: true\n      },\n      'graph-name': {\n        pattern: withID(\n          /(\\b(?:digraph|graph|subgraph)[ \\t\\r\\n]+)<ID>/.source,\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name',\n        inside: IDInside\n      },\n      'attr-value': {\n        pattern: withID(/(=[ \\t\\r\\n]*)<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      'attr-name': {\n        pattern: withID(/([\\[;, \\t\\r\\n])<ID>(?=[ \\t\\r\\n]*=)/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      keyword: /\\b(?:digraph|edge|graph|node|strict|subgraph)\\b/i,\n      'compass-point': {\n        pattern: /(:[ \\t\\r\\n]*)(?:[ewc_]|[ns][ew]?)(?![\\w\\x80-\\uFFFF])/,\n        lookbehind: true,\n        alias: 'builtin'\n      },\n      node: {\n        pattern: withID(/(^|[^-.\\w\\x80-\\uFFFF\\\\])<ID>/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: IDInside\n      },\n      operator: /[=:]|-[->]/,\n      punctuation: /[\\[\\]{};,]/\n    }\n    Prism.languages.gv = Prism.languages.dot\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^([\\t ]*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /\\b[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*\\b/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n","'use strict'\n\nmodule.exports = editorconfig\neditorconfig.displayName = 'editorconfig'\neditorconfig.aliases = []\nfunction editorconfig(Prism) {\n  Prism.languages.editorconfig = {\n    // https://editorconfig-specification.readthedocs.io\n    comment: /[;#].*/,\n    section: {\n      pattern: /(^[ \\t]*)\\[.+\\]/m,\n      lookbehind: true,\n      alias: 'selector',\n      inside: {\n        regex: /\\\\\\\\[\\[\\]{},!?.*]/,\n        // Escape special characters with '\\\\'\n        operator: /[!?]|\\.\\.|\\*{1,2}/,\n        punctuation: /[\\[\\]{},]/\n      }\n    },\n    key: {\n      pattern: /(^[ \\t]*)[^\\s=]+(?=[ \\t]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /=.*/,\n      alias: 'attr-value',\n      inside: {\n        punctuation: /^=/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%(?:(?!\\n)\\s)*\\n\\s*%|%\\S|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword:\n      /\\b(?:across|agent|alias|all|and|as|assign|attached|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:False|True)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': /\\b[A-Z][\\dA-Z_]*\\b/,\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\b\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*\\b|\\b\\d(?:_*\\d)*\\b\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ejs\nejs.displayName = 'ejs'\nejs.aliases = ['eta']\nfunction ejs(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.ejs = {\n      delimiter: {\n        pattern: /^<%[-_=]?|[-_]?%>$/,\n        alias: 'punctuation'\n      },\n      comment: /^#[\\s\\S]*/,\n      'language-javascript': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.javascript\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var ejsPattern = /<%(?!%)[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ejs',\n        ejsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ejs')\n    })\n    Prism.languages.eta = Prism.languages.ejs\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = elixir\nelixir.displayName = 'elixir'\nelixir.aliases = []\nfunction elixir(Prism) {\n  Prism.languages.elixir = {\n    doc: {\n      pattern:\n        /@(?:doc|moduledoc)\\s+(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2)/,\n      inside: {\n        attribute: /^@\\w+/,\n        string: /['\"][\\s\\S]+/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    // ~r\"\"\"foo\"\"\" (multi-line), ~r'''foo''' (multi-line), ~r/foo/, ~r|foo|, ~r\"foo\", ~r'foo', ~r(foo), ~r[foo], ~r{foo}, ~r<foo>\n    regex: {\n      pattern:\n        /~[rR](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|[^\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[uismxfr]*/,\n      greedy: true\n    },\n    string: [\n      {\n        // ~s\"\"\"foo\"\"\" (multi-line), ~s'''foo''' (multi-line), ~s/foo/, ~s|foo|, ~s\"foo\", ~s'foo', ~s(foo), ~s[foo], ~s{foo} (with interpolation care), ~s<foo>\n        pattern:\n          /~[cCsSwW](?:(\"\"\"|''')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1|([\\/|\"'])(?:\\\\.|(?!\\2)[^\\\\\\r\\n])+\\2|\\((?:\\\\.|[^\\\\)\\r\\n])+\\)|\\[(?:\\\\.|[^\\\\\\]\\r\\n])+\\]|\\{(?:\\\\.|#\\{[^}]+\\}|#(?!\\{)|[^#\\\\}\\r\\n])+\\}|<(?:\\\\.|[^\\\\>\\r\\n])+>)[csa]?/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      },\n      {\n        // Multi-line strings are allowed\n        pattern: /(\"|')(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          // See interpolation below\n        }\n      }\n    ],\n    atom: {\n      // Look-behind prevents bad highlighting of the :: operator\n      pattern: /(^|[^:]):\\w+/,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    module: {\n      pattern: /\\b[A-Z]\\w*\\b/,\n      alias: 'class-name'\n    },\n    // Look-ahead prevents bad highlighting of the :: operator\n    'attr-name': /\\b\\w+\\??:(?!:)/,\n    argument: {\n      // Look-behind prevents bad highlighting of the && operator\n      pattern: /(^|[^&])&\\d+/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'variable'\n    },\n    function: /\\b[_a-zA-Z]\\w*[?!]?(?:(?=\\s*(?:\\.\\s*)?\\()|(?=\\/\\d))/,\n    number: /\\b(?:0[box][a-f\\d_]+|\\d[\\d_]*)(?:\\.[\\d_]+)?(?:e[+-]?[\\d_]+)?\\b/i,\n    keyword:\n      /\\b(?:after|alias|and|case|catch|cond|def(?:callback|delegate|exception|impl|macro|module|n|np|p|protocol|struct)?|do|else|end|fn|for|if|import|not|or|quote|raise|require|rescue|try|unless|unquote|use|when)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    operator: [\n      /\\bin\\b|&&?|\\|[|>]?|\\\\\\\\|::|\\.\\.\\.?|\\+\\+?|-[->]?|<[-=>]|>=|!==?|\\B!|=(?:==?|[>~])?|[*\\/^]/,\n      {\n        // We don't want to match <<\n        pattern: /([^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /([^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,%\\[\\]{}()]/\n  }\n  Prism.languages.elixir.string.forEach(function (o) {\n    o.inside = {\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          rest: Prism.languages.elixir\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = elm\nelm.displayName = 'elm'\nelm.aliases = []\nfunction elm(Prism) {\n  Prism.languages.elm = {\n    comment: /--.*|\\{-[\\s\\S]*?-\\}/,\n    char: {\n      pattern:\n        /'(?:[^\\\\'\\r\\n]|\\\\(?:[abfnrtv\\\\']|\\d+|x[0-9a-fA-F]+|u\\{[0-9a-fA-F]+\\}))'/,\n      greedy: true\n    },\n    string: [\n      {\n        // Multiline strings are wrapped in triple \". Quotes may appear unescaped.\n        pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n        greedy: true\n      },\n      {\n        pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"/,\n        greedy: true\n      }\n    ],\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z]\\w*(?:\\.[A-Z]\\w*)*(?:\\s+as\\s+(?:[A-Z]\\w*)(?:\\.[A-Z]\\w*)*)?(?:\\s+exposing\\s+)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|exposing|import)\\b/\n      }\n    },\n    keyword:\n      /\\b(?:alias|as|case|else|exposing|if|in|infixl|infixr|let|module|of|then|type)\\b/,\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|always|asin|atan|atan2|ceiling|clamp|compare|cos|curry|degrees|e|flip|floor|fromPolar|identity|isInfinite|isNaN|logBase|max|min|negate|never|not|pi|radians|rem|round|sin|sqrt|tan|toFloat|toPolar|toString|truncate|turns|uncurry|xor)\\b/,\n    // decimal integers and floating point numbers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0x[0-9a-f]+)\\b/i,\n    // Most of this is needed because of the meaning of a single '.'.\n    // If it stands alone freely, it is the function composition.\n    // It may also be a separator between a module name and an identifier => no\n    // operator. If it comes together with other special characters it is an\n    // operator too.\n    // Valid operator characters in 0.18: +-/*=.$<>:&|^?%#@~!\n    // Ref: https://groups.google.com/forum/#!msg/elm-dev/0AHSnDdkSkQ/E0SVU70JEQAJ\n    operator: /\\s\\.\\s|[+\\-/*=.$<>:&|^?%#@~!]{2,}|[+\\-/*=$<>:&|^?%#@~!]/,\n    // In Elm, nearly everything is a variable, do not highlight these.\n    hvariable: /\\b(?:[A-Z]\\w*\\.)*[a-z]\\w*\\b/,\n    constant: /\\b(?:[A-Z]\\w*\\.)*[A-Z]\\w*\\b/,\n    punctuation: /[{}[\\]|(),.:]/\n  }\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = erb\nerb.displayName = 'erb'\nerb.aliases = []\nfunction erb(Prism) {\n  Prism.register(refractorRuby)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.erb = {\n      delimiter: {\n        pattern: /^(\\s*)<%=?|%>(?=\\s*$)/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      ruby: {\n        pattern: /\\s*\\S[\\s\\S]*/,\n        alias: 'language-ruby',\n        inside: Prism.languages.ruby\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var erbPattern =\n        /<%=?(?:[^\\r\\n]|[\\r\\n](?!=begin)|[\\r\\n]=begin\\s(?:[^\\r\\n]|[\\r\\n](?!=end))*[\\r\\n]=end)+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'erb',\n        erbPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'erb')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = erlang\nerlang.displayName = 'erlang'\nerlang.aliases = []\nfunction erlang(Prism) {\n  Prism.languages.erlang = {\n    comment: /%.+/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    'quoted-function': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'(?=\\()/,\n      alias: 'function'\n    },\n    'quoted-atom': {\n      pattern: /'(?:\\\\.|[^\\\\'\\r\\n])+'/,\n      alias: 'atom'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\b(?:after|case|catch|end|fun|if|of|receive|try|when)\\b/,\n    number: [\n      /\\$\\\\?./,\n      /\\b\\d+#[a-z0-9]+/i,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    ],\n    function: /\\b[a-z][\\w@]*(?=\\()/,\n    variable: {\n      // Look-behind is used to prevent wrong highlighting of atoms containing \"@\"\n      pattern: /(^|[^@])(?:\\b|\\?)[A-Z_][\\w@]*/,\n      lookbehind: true\n    },\n    operator: [\n      /[=\\/<>:]=|=[:\\/]=|\\+\\+?|--?|[=*\\/!]|\\b(?:and|andalso|band|bnot|bor|bsl|bsr|bxor|div|not|or|orelse|rem|xor)\\b/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    atom: /\\b[a-z][\\w@]*/,\n    punctuation: /[()[\\]{}:;,.#|]|<<|>>/\n  }\n}\n","'use strict'\nvar refractorLua = require('./lua.js')\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = etlua\netlua.displayName = 'etlua'\netlua.aliases = []\nfunction etlua(Prism) {\n  Prism.register(refractorLua)\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.etlua = {\n      delimiter: {\n        pattern: /^<%[-=]?|-?%>$/,\n        alias: 'punctuation'\n      },\n      'language-lua': {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.lua\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var pattern = /<%[\\s\\S]+?%>/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'etlua',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'etlua')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = excelFormula\nexcelFormula.displayName = 'excelFormula'\nexcelFormula.aliases = []\nfunction excelFormula(Prism) {\n  Prism.languages['excel-formula'] = {\n    comment: {\n      pattern: /(\\bN\\(\\s*)\"(?:[^\"]|\"\")*\"(?=\\s*\\))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    reference: {\n      // https://www.ablebits.com/office-addins-blog/2015/12/08/excel-reference-another-sheet-workbook/\n      // Sales!B2\n      // 'Winter sales'!B2\n      // [Sales.xlsx]Jan!B2:B5\n      // D:\\Reports\\[Sales.xlsx]Jan!B2:B5\n      // '[Sales.xlsx]Jan sales'!B2:B5\n      // 'D:\\Reports\\[Sales.xlsx]Jan sales'!B2:B5\n      pattern:\n        /(?:'[^']*'|(?:[^\\s()[\\]{}<>*?\"';,$&]*\\[[^^\\s()[\\]{}<>*?\"']+\\])?\\w+)!/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        operator: /!$/,\n        punctuation: /'/,\n        sheet: {\n          pattern: /[^[\\]]+$/,\n          alias: 'function'\n        },\n        file: {\n          pattern: /\\[[^[\\]]+\\]$/,\n          inside: {\n            punctuation: /[[\\]]/\n          }\n        },\n        path: /[\\s\\S]+/\n      }\n    },\n    'function-name': {\n      pattern: /\\b[A-Z]\\w*(?=\\()/i,\n      alias: 'keyword'\n    },\n    range: {\n      pattern:\n        /\\$?\\b(?:[A-Z]+\\$?\\d+:\\$?[A-Z]+\\$?\\d+|[A-Z]+:\\$?[A-Z]+|\\d+:\\$?\\d+)\\b/i,\n      alias: 'property',\n      inside: {\n        operator: /:/,\n        cell: /\\$?[A-Z]+\\$?\\d+/i,\n        column: /\\$?[A-Z]+/i,\n        row: /\\$?\\d+/\n      }\n    },\n    cell: {\n      // Excel is case insensitive, so the string \"foo1\" could be either a variable or a cell.\n      // To combat this, we match cells case insensitive, if the contain at least one \"$\", and case sensitive otherwise.\n      pattern: /\\b[A-Z]+\\d+\\b|\\$[A-Za-z]+\\$?\\d+\\b|\\b[A-Za-z]+\\$\\d+\\b/,\n      alias: 'property'\n    },\n    number: /(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    operator: /[-+*/^%=&,]|<[=>]?|>=?/,\n    punctuation: /[[\\]();{}|]/\n  }\n  Prism.languages['xlsx'] = Prism.languages['xls'] =\n    Prism.languages['excel-formula']\n}\n","'use strict'\n\nmodule.exports = factor\nfactor.displayName = 'factor'\nfactor.aliases = []\nfunction factor(Prism) {\n  ;(function (Prism) {\n    var comment_inside = {\n      function:\n        /\\b(?:BUGS?|FIX(?:MES?)?|NOTES?|TODOS?|XX+|HACKS?|WARN(?:ING)?|\\?{2,}|!{2,})\\b/\n    }\n    var string_inside = {\n      number: /\\\\[^\\s']|%\\w/\n    }\n    var factor = {\n      comment: [\n        {\n          // ! single-line exclamation point comments with whitespace after/around the !\n          pattern: /(^|\\s)(?:! .*|!$)/,\n          lookbehind: true,\n          inside: comment_inside\n        },\n        /* from basis/multiline: */\n        {\n          // /* comment */, /* comment*/\n          pattern: /(^|\\s)\\/\\*\\s[\\s\\S]*?\\*\\/(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        },\n        {\n          // ![[ comment ]] , ![===[ comment]===]\n          pattern: /(^|\\s)!\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: comment_inside\n        }\n      ],\n      number: [\n        {\n          // basic base 10 integers 9, -9\n          pattern: /(^|\\s)[+-]?\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // base prefix integers 0b010 0o70 0xad 0d10 0XAD -0xa9\n          pattern: /(^|\\s)[+-]?0(?:b[01]+|o[0-7]+|d\\d+|x[\\dA-F]+)(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // fractional ratios 1/5 -1/5 and the literal float approximations 1/5. -1/5.\n          pattern: /(^|\\s)[+-]?\\d+\\/\\d+\\.?(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // positive mixed numbers 23+1/5 +23+1/5\n          pattern: /(^|\\s)\\+?\\d+\\+\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // negative mixed numbers -23-1/5\n          pattern: /(^|\\s)-\\d+-\\d+\\/\\d+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          // basic decimal floats -0.01 0. .0 .1 -.1 -1. -12.13 +12.13\n          // and scientific notation with base 10 exponents 3e4 3e-4 .3e-4\n          pattern:\n            /(^|\\s)[+-]?(?:\\d*\\.\\d+|\\d+\\.\\d*|\\d+)(?:e[+-]?\\d+)?(?=\\s|$)/i,\n          lookbehind: true\n        },\n        {\n          // NAN literal syntax NAN: 80000deadbeef, NAN: a\n          pattern: /(^|\\s)NAN:\\s+[\\da-fA-F]+(?=\\s|$)/,\n          lookbehind: true\n        },\n        {\n          /*\nbase prefix floats 0x1.0p3 (8.0) 0b1.010p2 (5.0) 0x1.p1 0b1.11111111p11111...\n\"The normalized hex form ±0x1.MMMMMMMMMMMMM[pP]±EEEE allows any floating-point number to be specified precisely.\nThe values of MMMMMMMMMMMMM and EEEE map directly to the mantissa and exponent fields of the binary IEEE 754 representation.\"\n<https://docs.factorcode.org/content/article-syntax-floats.html>\n*/\n          pattern:\n            /(^|\\s)[+-]?0(?:b1\\.[01]*|o1\\.[0-7]*|d1\\.\\d*|x1\\.[\\dA-F]*)p\\d+(?=\\s|$)/i,\n          lookbehind: true\n        }\n      ],\n      // R/ regexp?\\/\\\\/\n      regexp: {\n        pattern:\n          /(^|\\s)R\\/\\s(?:\\\\\\S|[^\\\\/])*\\/(?:[idmsr]*|[idmsr]+-[idmsr]+)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'number',\n        inside: {\n          variable: /\\\\\\S/,\n          keyword: /[+?*\\[\\]^$(){}.|]/,\n          operator: {\n            pattern: /(\\/)[idmsr]+(?:-[idmsr]+)?/,\n            lookbehind: true\n          }\n        }\n      },\n      boolean: {\n        pattern: /(^|\\s)[tf](?=\\s|$)/,\n        lookbehind: true\n      },\n      // SBUF\" asd\", URL\" ://...\", P\" /etc/\"\n      'custom-string': {\n        pattern: /(^|\\s)[A-Z0-9\\-]+\"\\s(?:\\\\\\S|[^\"\\\\])*\"/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          number: /\\\\\\S|%\\w|\\//\n        }\n      },\n      'multiline-string': [\n        {\n          // STRING: name \\n content \\n ; -> CONSTANT: name \"content\" (symbol)\n          pattern: /(^|\\s)STRING:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*;(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            number: string_inside.number,\n            // trailing semicolon on its own line\n            'semicolon-or-setlocal': {\n              pattern: /([\\r\\n][ \\t]*);(?=\\s|$)/,\n              lookbehind: true,\n              alias: 'function'\n            }\n          }\n        },\n        {\n          // HEREDOC: marker \\n content \\n marker ; -> \"content\" (immediate)\n          pattern: /(^|\\s)HEREDOC:\\s+\\S+(?:\\n|\\r\\n).*(?:\\n|\\r\\n)\\s*\\S+(?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        },\n        {\n          // [[ string ]], [==[ string]==]\n          pattern: /(^|\\s)\\[(={0,6})\\[\\s[\\s\\S]*?\\]\\2\\](?=\\s|$)/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: string_inside\n        }\n      ],\n      'special-using': {\n        pattern: /(^|\\s)USING:(?:\\s\\S+)*(?=\\s+;(?:\\s|$))/,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          // this is essentially a regex for vocab names, which i don't want to specify\n          // but the USING: gets picked up as a vocab name\n          string: {\n            pattern: /(\\s)[^:\\s]+/,\n            lookbehind: true\n          }\n        }\n      },\n      /* this description of stack effect literal syntax is not complete and not as specific as theoretically possible\ntrying to do better is more work and regex-computation-time than it's worth though.\n- we'd like to have the \"delimiter\" parts of the stack effect [ (, --, and ) ] be a different (less-important or comment-like) colour to the stack effect contents\n- we'd like if nested stack effects were treated as such rather than just appearing flat (with `inside`)\n- we'd like if the following variable name conventions were recognised specifically:\nspecial row variables = ..a b..\ntype and stack effect annotations end with a colon = ( quot: ( a: ( -- ) -- b ) -- x ), ( x: number -- )\nword throws unconditional error = *\nany other word-like variable name = a ? q' etc\nhttps://docs.factorcode.org/content/article-effects.html\nthese are pretty complicated to highlight properly without a real parser, and therefore out of scope\nthe old pattern, which may be later useful, was: (^|\\s)(?:call|execute|eval)?\\((?:\\s+[^\"\\r\\n\\t ]\\S*)*?\\s+--(?:\\s+[^\"\\n\\t ]\\S*)*?\\s+\\)(?=\\s|$)\n*/\n      // current solution is not great\n      'stack-effect-delimiter': [\n        {\n          // opening parenthesis\n          pattern: /(^|\\s)(?:call|eval|execute)?\\((?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // middle --\n          pattern: /(\\s)--(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing parenthesis\n          pattern: /(\\s)\\)(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      combinators: {\n        pattern: null,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'kernel-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'sequences-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'math-builtin': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      'constructor-word': {\n        // <array> but not <=>\n        pattern: /(^|\\s)<(?!=+>|-+>)\\S+>(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'other-builtin-syntax': {\n        pattern: null,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      /*\nfull list of supported word naming conventions: (the convention appears outside of the [brackets])\nset-[x]\nchange-[x]\nwith-[x]\nnew-[x]\n>[string]\n[base]>\n[string]>[number]\n+[symbol]+\n[boolean-word]?\n?[of]\n[slot-reader]>>\n>>[slot-setter]\n[slot-writer]<<\n([implementation-detail])\n[mutater]!\n[variant]*\n[prettyprint].\n$[help-markup]\n<constructors>, SYNTAX:, etc are supported by their own patterns.\n`with` and `new` from `kernel` are their own builtins.\nsee <https://docs.factorcode.org/content/article-conventions.html>\n*/\n      'conventionally-named-word': {\n        pattern:\n          /(^|\\s)(?!\")(?:(?:change|new|set|with)-\\S+|\\$\\S+|>[^>\\s]+|[^:>\\s]+>|[^>\\s]+>[^>\\s]+|\\+[^+\\s]+\\+|[^?\\s]+\\?|\\?[^?\\s]+|[^>\\s]+>>|>>[^>\\s]+|[^<\\s]+<<|\\([^()\\s]+\\)|[^!\\s]+!|[^*\\s]\\S*\\*|[^.\\s]\\S*\\.)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'colon-syntax': {\n        pattern: /(^|\\s)(?:[A-Z0-9\\-]+#?)?:{1,2}\\s+(?:;\\S+|(?!;)\\S+)(?=\\s|$)/,\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'semicolon-or-setlocal': {\n        pattern: /(\\s)(?:;|:>)(?=\\s|$)/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      // do not highlight leading } or trailing X{ at the begin/end of the file as it's invalid syntax\n      'curly-brace-literal-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)[a-z]*\\{(?=\\s)/i,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\}(?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      // do not highlight leading ] or trailing [ at the begin/end of the file as it's invalid syntax\n      'quotation-delimiter': [\n        {\n          // opening\n          pattern: /(^|\\s)\\[(?=\\s)/,\n          lookbehind: true,\n          alias: 'operator'\n        },\n        {\n          // closing\n          pattern: /(\\s)\\](?=\\s|$)/,\n          lookbehind: true,\n          alias: 'operator'\n        }\n      ],\n      'normal-word': {\n        pattern: /(^|\\s)[^\"\\s]\\S*(?=\\s|$)/,\n        lookbehind: true\n      },\n      /*\nbasic first-class string \"a\"\nwith escaped double-quote \"a\\\"\"\nescaped backslash \"\\\\\"\nand general escapes since Factor has so many \"\\N\"\nsyntax that works in the reference implementation that isn't fully\nsupported because it's an implementation detail:\n\"string 1\"\"string 2\" -> 2 strings (works anyway)\n\"string\"5 -> string, 5\n\"string\"[ ] -> string, quotation\n{ \"a\"} -> array<string>\nthe rest of those examples all properly recognise the string, but not\nthe other object (number, quotation, etc)\nthis is fine for a regex-only implementation.\n*/\n      string: {\n        pattern: /\"(?:\\\\\\S|[^\"\\\\])*\"/,\n        greedy: true,\n        inside: string_inside\n      }\n    }\n    var escape = function (str) {\n      return (str + '').replace(/([.?*+\\^$\\[\\]\\\\(){}|\\-])/g, '\\\\$1')\n    }\n    var arrToWordsRegExp = function (arr) {\n      return new RegExp('(^|\\\\s)(?:' + arr.map(escape).join('|') + ')(?=\\\\s|$)')\n    }\n    var builtins = {\n      'kernel-builtin': [\n        'or',\n        '2nipd',\n        '4drop',\n        'tuck',\n        'wrapper',\n        'nip',\n        'wrapper?',\n        'callstack>array',\n        'die',\n        'dupd',\n        'callstack',\n        'callstack?',\n        '3dup',\n        'hashcode',\n        'pick',\n        '4nip',\n        'build',\n        '>boolean',\n        'nipd',\n        'clone',\n        '5nip',\n        'eq?',\n        '?',\n        '=',\n        'swapd',\n        '2over',\n        'clear',\n        '2dup',\n        'get-retainstack',\n        'not',\n        'tuple?',\n        'dup',\n        '3nipd',\n        'call',\n        '-rotd',\n        'object',\n        'drop',\n        'assert=',\n        'assert?',\n        '-rot',\n        'execute',\n        'boa',\n        'get-callstack',\n        'curried?',\n        '3drop',\n        'pickd',\n        'overd',\n        'over',\n        'roll',\n        '3nip',\n        'swap',\n        'and',\n        '2nip',\n        'rotd',\n        'throw',\n        '(clone)',\n        'hashcode*',\n        'spin',\n        'reach',\n        '4dup',\n        'equal?',\n        'get-datastack',\n        'assert',\n        '2drop',\n        '<wrapper>',\n        'boolean?',\n        'identity-hashcode',\n        'identity-tuple?',\n        'null',\n        'composed?',\n        'new',\n        '5drop',\n        'rot',\n        '-roll',\n        'xor',\n        'identity-tuple',\n        'boolean'\n      ],\n      'other-builtin-syntax': [\n        // syntax\n        '=======',\n        'recursive',\n        'flushable',\n        '>>',\n        '<<<<<<',\n        'M\\\\',\n        'B',\n        'PRIVATE>',\n        '\\\\',\n        '======',\n        'final',\n        'inline',\n        'delimiter',\n        'deprecated',\n        '<PRIVATE',\n        '>>>>>>',\n        '<<<<<<<',\n        'parse-complex',\n        'malformed-complex',\n        'read-only',\n        '>>>>>>>',\n        'call-next-method',\n        '<<',\n        'foldable', // literals\n        '$',\n        '$[',\n        '${'\n      ],\n      'sequences-builtin': [\n        'member-eq?',\n        'mismatch',\n        'append',\n        'assert-sequence=',\n        'longer',\n        'repetition',\n        'clone-like',\n        '3sequence',\n        'assert-sequence?',\n        'last-index-from',\n        'reversed',\n        'index-from',\n        'cut*',\n        'pad-tail',\n        'join-as',\n        'remove-eq!',\n        'concat-as',\n        'but-last',\n        'snip',\n        'nths',\n        'nth',\n        'sequence',\n        'longest',\n        'slice?',\n        '<slice>',\n        'remove-nth',\n        'tail-slice',\n        'empty?',\n        'tail*',\n        'member?',\n        'virtual-sequence?',\n        'set-length',\n        'drop-prefix',\n        'iota',\n        'unclip',\n        'bounds-error?',\n        'unclip-last-slice',\n        'non-negative-integer-expected',\n        'non-negative-integer-expected?',\n        'midpoint@',\n        'longer?',\n        '?set-nth',\n        '?first',\n        'rest-slice',\n        'prepend-as',\n        'prepend',\n        'fourth',\n        'sift',\n        'subseq-start',\n        'new-sequence',\n        '?last',\n        'like',\n        'first4',\n        '1sequence',\n        'reverse',\n        'slice',\n        'virtual@',\n        'repetition?',\n        'set-last',\n        'index',\n        '4sequence',\n        'max-length',\n        'set-second',\n        'immutable-sequence',\n        'first2',\n        'first3',\n        'supremum',\n        'unclip-slice',\n        'suffix!',\n        'insert-nth',\n        'tail',\n        '3append',\n        'short',\n        'suffix',\n        'concat',\n        'flip',\n        'immutable?',\n        'reverse!',\n        '2sequence',\n        'sum',\n        'delete-all',\n        'indices',\n        'snip-slice',\n        '<iota>',\n        'check-slice',\n        'sequence?',\n        'head',\n        'append-as',\n        'halves',\n        'sequence=',\n        'collapse-slice',\n        '?second',\n        'slice-error?',\n        'product',\n        'bounds-check?',\n        'bounds-check',\n        'immutable',\n        'virtual-exemplar',\n        'harvest',\n        'remove',\n        'pad-head',\n        'last',\n        'set-fourth',\n        'cartesian-product',\n        'remove-eq',\n        'shorten',\n        'shorter',\n        'reversed?',\n        'shorter?',\n        'shortest',\n        'head-slice',\n        'pop*',\n        'tail-slice*',\n        'but-last-slice',\n        'iota?',\n        'append!',\n        'cut-slice',\n        'new-resizable',\n        'head-slice*',\n        'sequence-hashcode',\n        'pop',\n        'set-nth',\n        '?nth',\n        'second',\n        'join',\n        'immutable-sequence?',\n        '<reversed>',\n        '3append-as',\n        'virtual-sequence',\n        'subseq?',\n        'remove-nth!',\n        'length',\n        'last-index',\n        'lengthen',\n        'assert-sequence',\n        'copy',\n        'move',\n        'third',\n        'first',\n        'tail?',\n        'set-first',\n        'prefix',\n        'bounds-error',\n        '<repetition>',\n        'exchange',\n        'surround',\n        'cut',\n        'min-length',\n        'set-third',\n        'push-all',\n        'head?',\n        'subseq-start-from',\n        'delete-slice',\n        'rest',\n        'sum-lengths',\n        'head*',\n        'infimum',\n        'remove!',\n        'glue',\n        'slice-error',\n        'subseq',\n        'push',\n        'replace-slice',\n        'subseq-as',\n        'unclip-last'\n      ],\n      'math-builtin': [\n        'number=',\n        'next-power-of-2',\n        '?1+',\n        'fp-special?',\n        'imaginary-part',\n        'float>bits',\n        'number?',\n        'fp-infinity?',\n        'bignum?',\n        'fp-snan?',\n        'denominator',\n        'gcd',\n        '*',\n        '+',\n        'fp-bitwise=',\n        '-',\n        'u>=',\n        '/',\n        '>=',\n        'bitand',\n        'power-of-2?',\n        'log2-expects-positive',\n        'neg?',\n        '<',\n        'log2',\n        '>',\n        'integer?',\n        'number',\n        'bits>double',\n        '2/',\n        'zero?',\n        'bits>float',\n        'float?',\n        'shift',\n        'ratio?',\n        'rect>',\n        'even?',\n        'ratio',\n        'fp-sign',\n        'bitnot',\n        '>fixnum',\n        'complex?',\n        '/i',\n        'integer>fixnum',\n        '/f',\n        'sgn',\n        '>bignum',\n        'next-float',\n        'u<',\n        'u>',\n        'mod',\n        'recip',\n        'rational',\n        '>float',\n        '2^',\n        'integer',\n        'fixnum?',\n        'neg',\n        'fixnum',\n        'sq',\n        'bignum',\n        '>rect',\n        'bit?',\n        'fp-qnan?',\n        'simple-gcd',\n        'complex',\n        '<fp-nan>',\n        'real',\n        '>fraction',\n        'double>bits',\n        'bitor',\n        'rem',\n        'fp-nan-payload',\n        'real-part',\n        'log2-expects-positive?',\n        'prev-float',\n        'align',\n        'unordered?',\n        'float',\n        'fp-nan?',\n        'abs',\n        'bitxor',\n        'integer>fixnum-strict',\n        'u<=',\n        'odd?',\n        '<=',\n        '/mod',\n        '>integer',\n        'real?',\n        'rational?',\n        'numerator'\n      ] // that's all for now\n    }\n    Object.keys(builtins).forEach(function (k) {\n      factor[k].pattern = arrToWordsRegExp(builtins[k])\n    })\n    var combinators = [\n      // kernel\n      '2bi',\n      'while',\n      '2tri',\n      'bi*',\n      '4dip',\n      'both?',\n      'same?',\n      'tri@',\n      'curry',\n      'prepose',\n      '3bi',\n      '?if',\n      'tri*',\n      '2keep',\n      '3keep',\n      'curried',\n      '2keepd',\n      'when',\n      '2bi*',\n      '2tri*',\n      '4keep',\n      'bi@',\n      'keepdd',\n      'do',\n      'unless*',\n      'tri-curry',\n      'if*',\n      'loop',\n      'bi-curry*',\n      'when*',\n      '2bi@',\n      '2tri@',\n      'with',\n      '2with',\n      'either?',\n      'bi',\n      'until',\n      '3dip',\n      '3curry',\n      'tri-curry*',\n      'tri-curry@',\n      'bi-curry',\n      'keepd',\n      'compose',\n      '2dip',\n      'if',\n      '3tri',\n      'unless',\n      'tuple',\n      'keep',\n      '2curry',\n      'tri',\n      'most',\n      'while*',\n      'dip',\n      'composed',\n      'bi-curry@', // sequences\n      'find-last-from',\n      'trim-head-slice',\n      'map-as',\n      'each-from',\n      'none?',\n      'trim-tail',\n      'partition',\n      'if-empty',\n      'accumulate*',\n      'reject!',\n      'find-from',\n      'accumulate-as',\n      'collector-for-as',\n      'reject',\n      'map',\n      'map-sum',\n      'accumulate!',\n      '2each-from',\n      'follow',\n      'supremum-by',\n      'map!',\n      'unless-empty',\n      'collector',\n      'padding',\n      'reduce-index',\n      'replicate-as',\n      'infimum-by',\n      'trim-tail-slice',\n      'count',\n      'find-index',\n      'filter',\n      'accumulate*!',\n      'reject-as',\n      'map-integers',\n      'map-find',\n      'reduce',\n      'selector',\n      'interleave',\n      '2map',\n      'filter-as',\n      'binary-reduce',\n      'map-index-as',\n      'find',\n      'produce',\n      'filter!',\n      'replicate',\n      'cartesian-map',\n      'cartesian-each',\n      'find-index-from',\n      'map-find-last',\n      '3map-as',\n      '3map',\n      'find-last',\n      'selector-as',\n      '2map-as',\n      '2map-reduce',\n      'accumulate',\n      'each',\n      'each-index',\n      'accumulate*-as',\n      'when-empty',\n      'all?',\n      'collector-as',\n      'push-either',\n      'new-like',\n      'collector-for',\n      '2selector',\n      'push-if',\n      '2all?',\n      'map-reduce',\n      '3each',\n      'any?',\n      'trim-slice',\n      '2reduce',\n      'change-nth',\n      'produce-as',\n      '2each',\n      'trim',\n      'trim-head',\n      'cartesian-find',\n      'map-index', // math\n      'if-zero',\n      'each-integer',\n      'unless-zero',\n      '(find-integer)',\n      'when-zero',\n      'find-last-integer',\n      '(all-integers?)',\n      'times',\n      '(each-integer)',\n      'find-integer',\n      'all-integers?', // math.combinators\n      'unless-negative',\n      'if-positive',\n      'when-positive',\n      'when-negative',\n      'unless-positive',\n      'if-negative', // combinators\n      'case',\n      '2cleave',\n      'cond>quot',\n      'case>quot',\n      '3cleave',\n      'wrong-values',\n      'to-fixed-point',\n      'alist>quot',\n      'cond',\n      'cleave',\n      'call-effect',\n      'recursive-hashcode',\n      'spread',\n      'deep-spread>quot', // combinators.short-circuit\n      '2||',\n      '0||',\n      'n||',\n      '0&&',\n      '2&&',\n      '3||',\n      '1||',\n      '1&&',\n      'n&&',\n      '3&&', // combinators.smart\n      'smart-unless*',\n      'keep-inputs',\n      'reduce-outputs',\n      'smart-when*',\n      'cleave>array',\n      'smart-with',\n      'smart-apply',\n      'smart-if',\n      'inputs/outputs',\n      'output>sequence-n',\n      'map-outputs',\n      'map-reduce-outputs',\n      'dropping',\n      'output>array',\n      'smart-map-reduce',\n      'smart-2map-reduce',\n      'output>array-n',\n      'nullary',\n      'input<sequence',\n      'append-outputs',\n      'drop-inputs',\n      'inputs',\n      'smart-2reduce',\n      'drop-outputs',\n      'smart-reduce',\n      'preserving',\n      'smart-when',\n      'outputs',\n      'append-outputs-as',\n      'smart-unless',\n      'smart-if*',\n      'sum-outputs',\n      'input<sequence-unsafe',\n      'output>sequence' // tafn\n    ]\n    factor.combinators.pattern = arrToWordsRegExp(combinators)\n    Prism.languages.factor = factor\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = $false\n$false.displayName = '$false'\n$false.aliases = []\nfunction $false(Prism) {\n  ;(function (Prism) {\n    /**\n     * Based on the manual by Wouter van Oortmerssen.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2801#issue-829717504}\n     */\n    Prism.languages['false'] = {\n      comment: {\n        pattern: /\\{[^}]*\\}/\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      'character-code': {\n        pattern: /'(?:[^\\r]|\\r\\n?)/,\n        alias: 'number'\n      },\n      'assembler-code': {\n        pattern: /\\d+`/,\n        alias: 'important'\n      },\n      number: /\\d+/,\n      operator: /[-!#$%&'*+,./:;=>?@\\\\^_`|~ßø]/,\n      punctuation: /\\[|\\]/,\n      variable: /[a-z]/,\n      'non-standard': {\n        pattern: /[()<BDO®]/,\n        alias: 'bold'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = firestoreSecurityRules\nfirestoreSecurityRules.displayName = 'firestoreSecurityRules'\nfirestoreSecurityRules.aliases = []\nfunction firestoreSecurityRules(Prism) {\n  Prism.languages['firestore-security-rules'] = Prism.languages.extend(\n    'clike',\n    {\n      comment: /\\/\\/.*/,\n      keyword:\n        /\\b(?:allow|function|if|match|null|return|rules_version|service)\\b/,\n      operator: /&&|\\|\\||[<>!=]=?|[-+*/%]|\\b(?:in|is)\\b/\n    }\n  )\n  delete Prism.languages['firestore-security-rules']['class-name']\n  Prism.languages.insertBefore('firestore-security-rules', 'keyword', {\n    path: {\n      pattern:\n        /(^|[\\s(),])(?:\\/(?:[\\w\\xA0-\\uFFFF]+|\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)))+/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /\\{[\\w\\xA0-\\uFFFF]+(?:=\\*\\*)?\\}|\\$\\([\\w\\xA0-\\uFFFF.]+\\)/,\n          inside: {\n            operator: /=/,\n            keyword: /\\*\\*/,\n            punctuation: /[.$(){}]/\n          }\n        },\n        punctuation: /\\//\n      }\n    },\n    method: {\n      // to make the pattern shorter, the actual method names are omitted\n      pattern: /(\\ballow\\s+)[a-z]+(?:\\s*,\\s*[a-z]+)*(?=\\s*[:;])/,\n      lookbehind: true,\n      alias: 'builtin',\n      inside: {\n        punctuation: /,/\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = flow\nflow.displayName = 'flow'\nflow.aliases = []\nfunction flow(Prism) {\n  ;(function (Prism) {\n    Prism.languages.flow = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('flow', 'keyword', {\n      type: [\n        {\n          pattern:\n            /\\b(?:[Bb]oolean|Function|[Nn]umber|[Ss]tring|any|mixed|null|void)\\b/,\n          alias: 'tag'\n        }\n      ]\n    })\n    Prism.languages.flow['function-variable'].pattern =\n      /(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=\\s*(?:function\\b|(?:\\([^()]*\\)(?:\\s*:\\s*\\w+)?|(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/i\n    delete Prism.languages.flow['parameter']\n    Prism.languages.insertBefore('flow', 'operator', {\n      'flow-punctuation': {\n        pattern: /\\{\\||\\|\\}/,\n        alias: 'punctuation'\n      }\n    })\n    if (!Array.isArray(Prism.languages.flow.keyword)) {\n      Prism.languages.flow.keyword = [Prism.languages.flow.keyword]\n    }\n    Prism.languages.flow.keyword.unshift(\n      {\n        pattern: /(^|[^$]\\b)(?:Class|declare|opaque|type)\\b(?!\\$)/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^$]\\B)\\$(?:Diff|Enum|Exact|Keys|ObjMap|PropertyType|Record|Shape|Subtype|Supertype|await)\\b(?!\\$)/,\n        lookbehind: true\n      }\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = fortran\nfortran.displayName = 'fortran'\nfortran.aliases = []\nfunction fortran(Prism) {\n  Prism.languages.fortran = {\n    'quoted-number': {\n      pattern: /[BOZ](['\"])[A-F0-9]+\\1/i,\n      alias: 'number'\n    },\n    string: {\n      pattern:\n        /(?:\\b\\w+_)?(['\"])(?:\\1\\1|&(?:\\r\\n?|\\n)(?:[ \\t]*!.*(?:\\r\\n?|\\n)|(?![ \\t]*!))|(?!\\1).)*(?:\\1|&)/,\n      inside: {\n        comment: {\n          pattern: /(&(?:\\r\\n?|\\n)\\s*)!.*/,\n          lookbehind: true\n        }\n      }\n    },\n    comment: {\n      pattern: /!.*/,\n      greedy: true\n    },\n    boolean: /\\.(?:FALSE|TRUE)\\.(?:_\\w+)?/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[ED][+-]?\\d+)?(?:_\\w+)?/i,\n    keyword: [\n      // Types\n      /\\b(?:CHARACTER|COMPLEX|DOUBLE ?PRECISION|INTEGER|LOGICAL|REAL)\\b/i, // END statements\n      /\\b(?:END ?)?(?:BLOCK ?DATA|DO|FILE|FORALL|FUNCTION|IF|INTERFACE|MODULE(?! PROCEDURE)|PROGRAM|SELECT|SUBROUTINE|TYPE|WHERE)\\b/i, // Statements\n      /\\b(?:ALLOCATABLE|ALLOCATE|BACKSPACE|CALL|CASE|CLOSE|COMMON|CONTAINS|CONTINUE|CYCLE|DATA|DEALLOCATE|DIMENSION|DO|END|EQUIVALENCE|EXIT|EXTERNAL|FORMAT|GO ?TO|IMPLICIT(?: NONE)?|INQUIRE|INTENT|INTRINSIC|MODULE PROCEDURE|NAMELIST|NULLIFY|OPEN|OPTIONAL|PARAMETER|POINTER|PRINT|PRIVATE|PUBLIC|READ|RETURN|REWIND|SAVE|SELECT|STOP|TARGET|WHILE|WRITE)\\b/i, // Others\n      /\\b(?:ASSIGNMENT|DEFAULT|ELEMENTAL|ELSE|ELSEIF|ELSEWHERE|ENTRY|IN|INCLUDE|INOUT|KIND|NULL|ONLY|OPERATOR|OUT|PURE|RECURSIVE|RESULT|SEQUENCE|STAT|THEN|USE)\\b/i\n    ],\n    operator: [\n      /\\*\\*|\\/\\/|=>|[=\\/]=|[<>]=?|::|[+\\-*=%]|\\.[A-Z]+\\./i,\n      {\n        // Use lookbehind to prevent confusion with (/ /)\n        pattern: /(^|(?!\\().)\\/(?!\\))/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\/|\\/\\)|[(),;:&]/\n  }\n}\n","'use strict'\n\nmodule.exports = fsharp\nfsharp.displayName = 'fsharp'\nfsharp.aliases = []\nfunction fsharp(Prism) {\n  Prism.languages.fsharp = Prism.languages.extend('clike', {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\(\\*(?!\\))[\\s\\S]*?\\*\\)/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(?:\"\"\"[\\s\\S]*?\"\"\"|@\"(?:\"\"|[^\"])*\"|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")B?/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:exception|inherit|interface|new|of|type)\\s+|\\w\\s*:\\s*|\\s:\\??>\\s*)[.\\w]+\\b(?:\\s*(?:->|\\*)\\s*[.\\w]+\\b)*(?!\\s*[:.])/,\n      lookbehind: true,\n      inside: {\n        operator: /->|\\*/,\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:let|return|use|yield)(?:!\\B|\\b)|\\b(?:abstract|and|as|asr|assert|atomic|base|begin|break|checked|class|component|const|constraint|constructor|continue|default|delegate|do|done|downcast|downto|eager|elif|else|end|event|exception|extern|external|false|finally|fixed|for|fun|function|functor|global|if|in|include|inherit|inline|interface|internal|land|lazy|lor|lsl|lsr|lxor|match|member|method|mixin|mod|module|mutable|namespace|new|not|null|object|of|open|or|override|parallel|private|process|protected|public|pure|rec|sealed|select|sig|static|struct|tailcall|then|to|trait|true|try|type|upcast|val|virtual|void|volatile|when|while|with)\\b/,\n    number: [\n      /\\b0x[\\da-fA-F]+(?:LF|lf|un)?\\b/,\n      /\\b0b[01]+(?:uy|y)?\\b/,\n      /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[fm]|e[+-]?\\d+)?\\b/i,\n      /\\b\\d+(?:[IlLsy]|UL|u[lsy]?)?\\b/\n    ],\n    operator:\n      /([<>~&^])\\1\\1|([*.:<>&])\\2|<-|->|[!=:]=|<?\\|{1,3}>?|\\??(?:<=|>=|<>|[-+*/%=<>])\\??|[!?^&]|~[+~-]|:>|:\\?>?/\n  })\n  Prism.languages.insertBefore('fsharp', 'keyword', {\n    preprocessor: {\n      pattern: /(^[\\t ]*)#.*/m,\n      lookbehind: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /(^#)\\b(?:else|endif|if|light|line|nowarn)\\b/,\n          lookbehind: true,\n          alias: 'keyword'\n        }\n      }\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'punctuation', {\n    'computation-expression': {\n      pattern: /\\b[_a-z]\\w*(?=\\s*\\{)/i,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.insertBefore('fsharp', 'string', {\n    annotation: {\n      pattern: /\\[<.+?>\\]/,\n      greedy: true,\n      inside: {\n        punctuation: /^\\[<|>\\]$/,\n        'class-name': {\n          pattern: /^\\w+$|(^|;\\s*)[A-Z]\\w*(?=\\()/,\n          lookbehind: true\n        },\n        'annotation-content': {\n          pattern: /[\\s\\S]+/,\n          inside: Prism.languages.fsharp\n        }\n      }\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:.|\\d{3}|x[a-fA-F\\d]{2}|u[a-fA-F\\d]{4}|U[a-fA-F\\d]{8}))'B?/,\n      greedy: true\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = ftl\nftl.displayName = 'ftl'\nftl.aliases = []\nfunction ftl(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    // https://freemarker.apache.org/docs/dgui_template_exp.html\n    // FTL expression with 4 levels of nesting supported\n    var FTL_EXPR =\n      /[^<()\"']|\\((?:<expr>)*\\)|<(?!#--)|<#--(?:[^-]|-(?!->))*-->|\"(?:[^\\\\\"]|\\\\.)*\"|'(?:[^\\\\']|\\\\.)*'/\n        .source\n    for (var i = 0; i < 2; i++) {\n      FTL_EXPR = FTL_EXPR.replace(/<expr>/g, function () {\n        return FTL_EXPR\n      })\n    }\n    FTL_EXPR = FTL_EXPR.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var ftl = {\n      comment: /<#--[\\s\\S]*?-->/,\n      string: [\n        {\n          // raw string\n          pattern: /\\br(\"|')(?:(?!\\1)[^\\\\]|\\\\.)*\\1/,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /(\"|')(?:(?!\\1|\\$\\{)[^\\\\]|\\\\.|\\$\\{(?:(?!\\})(?:<expr>))*\\})*\\1/.source.replace(\n              /<expr>/g,\n              function () {\n                return FTL_EXPR\n              }\n            )\n          ),\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: RegExp(\n                /((?:^|[^\\\\])(?:\\\\\\\\)*)\\$\\{(?:(?!\\})(?:<expr>))*\\}/.source.replace(\n                  /<expr>/g,\n                  function () {\n                    return FTL_EXPR\n                  }\n                )\n              ),\n              lookbehind: true,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^\\$\\{|\\}$/,\n                  alias: 'punctuation'\n                },\n                rest: null\n              }\n            }\n          }\n        }\n      ],\n      keyword: /\\b(?:as)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      'builtin-function': {\n        pattern: /((?:^|[^?])\\?\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: /\\b\\d+(?:\\.\\d+)?\\b/,\n      operator:\n        /\\.\\.[<*!]?|->|--|\\+\\+|&&|\\|\\||\\?{1,2}|[-+*/%!=<>]=?|\\b(?:gt|gte|lt|lte)\\b/,\n      punctuation: /[,;.:()[\\]{}]/\n    }\n    ftl.string[1].inside.interpolation.inside.rest = ftl\n    Prism.languages.ftl = {\n      'ftl-comment': {\n        // the pattern is shortened to be more efficient\n        pattern: /^<#--[\\s\\S]*/,\n        alias: 'comment'\n      },\n      'ftl-directive': {\n        pattern: /^<[\\s\\S]+>$/,\n        inside: {\n          directive: {\n            pattern: /(^<\\/?)[#@][a-z]\\w*/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          punctuation: /^<\\/?|\\/?>$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      },\n      'ftl-interpolation': {\n        pattern: /^\\$\\{[\\s\\S]*\\}$/,\n        inside: {\n          punctuation: /^\\$\\{|\\}$/,\n          content: {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            alias: 'ftl',\n            inside: ftl\n          }\n        }\n      }\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      // eslint-disable-next-line regexp/no-useless-lazy\n      var pattern = RegExp(\n        /<#--[\\s\\S]*?-->|<\\/?[#@][a-zA-Z](?:<expr>)*?>|\\$\\{(?:<expr>)*?\\}/.source.replace(\n          /<expr>/g,\n          function () {\n            return FTL_EXPR\n          }\n        ),\n        'gi'\n      )\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'ftl',\n        pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'ftl')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = gap\ngap.displayName = 'gap'\ngap.aliases = []\nfunction gap(Prism) {\n  // https://www.gap-system.org/Manuals/doc/ref/chap4.html\n  // https://www.gap-system.org/Manuals/doc/ref/chap27.html\n  Prism.languages.gap = {\n    shell: {\n      pattern: /^gap>[\\s\\S]*?(?=^gap>|$(?![\\s\\S]))/m,\n      greedy: true,\n      inside: {\n        gap: {\n          pattern: /^(gap>).+(?:(?:\\r(?:\\n|(?!\\n))|\\n)>.*)*/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        punctuation: /^gap>/\n      }\n    },\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\'\"])(?:'(?:[^\\r\\n\\\\']|\\\\.){1,10}'|\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"(?!\")|\"\"\"[\\s\\S]*?\"\"\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        continuation: {\n          pattern: /([\\r\\n])>/,\n          lookbehind: true,\n          alias: 'punctuation'\n        }\n      }\n    },\n    keyword:\n      /\\b(?:Assert|Info|IsBound|QUIT|TryNextMethod|Unbind|and|atomic|break|continue|do|elif|else|end|fi|for|function|if|in|local|mod|not|od|or|quit|readonly|readwrite|rec|repeat|return|then|until|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    continuation: {\n      pattern: /([\\r\\n])>/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    operator: /->|[-+*/^~=!]|<>|[<>]=?|:=|\\.\\./,\n    punctuation: /[()[\\]{},;.:]/\n  }\n  Prism.languages.gap.shell.inside.gap.inside = Prism.languages.gap\n}\n","'use strict'\n\nmodule.exports = gcode\ngcode.displayName = 'gcode'\ngcode.aliases = []\nfunction gcode(Prism) {\n  Prism.languages.gcode = {\n    comment: /;.*|\\B\\(.*?\\)\\B/,\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    keyword: /\\b[GM]\\d+(?:\\.\\d+)?\\b/,\n    property: /\\b[A-Z]/,\n    checksum: {\n      pattern: /(\\*)\\d+/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    // T0:0:0\n    punctuation: /[:*]/\n  }\n}\n","'use strict'\n\nmodule.exports = gdscript\ngdscript.displayName = 'gdscript'\ngdscript.aliases = []\nfunction gdscript(Prism) {\n  Prism.languages.gdscript = {\n    comment: /#.*/,\n    string: {\n      pattern:\n        /@?(?:(\"|')(?:(?!\\1)[^\\n\\\\]|\\\\[\\s\\S])*\\1(?!\"|')|\"\"\"(?:[^\\\\]|\\\\[\\s\\S])*?\"\"\")/,\n      greedy: true\n    },\n    'class-name': {\n      // class_name Foo, extends Bar, class InnerClass\n      // export(int) var baz, export(int, 0) var i\n      // as Node\n      // const FOO: int = 9, var bar: bool = true\n      // func add(reference: Item, amount: int) -> Item:\n      pattern:\n        /(^(?:class|class_name|extends)[ \\t]+|^export\\([ \\t]*|\\bas[ \\t]+|(?:\\b(?:const|var)[ \\t]|[,(])[ \\t]*\\w+[ \\t]*:[ \\t]*|->[ \\t]*)[a-zA-Z_]\\w*/m,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:and|as|assert|break|breakpoint|class|class_name|const|continue|elif|else|enum|export|extends|for|func|if|in|is|master|mastersync|match|not|null|onready|or|pass|preload|puppet|puppetsync|remote|remotesync|return|self|setget|signal|static|tool|var|while|yield)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*\\()/i,\n    variable: /\\$\\w+/,\n    number: [\n      /\\b0b[01_]+\\b|\\b0x[\\da-fA-F_]+\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.[\\d_]+)(?:e[+-]?[\\d_]+)?\\b/,\n      /\\b(?:INF|NAN|PI|TAU)\\b/\n    ],\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /->|:=|&&|\\|\\||<<|>>|[-+*/%&|!<>=]=?|[~^]/,\n    punctuation: /[.:,;()[\\]{}]/\n  }\n}\n","'use strict'\n\nmodule.exports = gedcom\ngedcom.displayName = 'gedcom'\ngedcom.aliases = []\nfunction gedcom(Prism) {\n  Prism.languages.gedcom = {\n    'line-value': {\n      // Preceded by level, optional pointer, and tag\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?\\w+ ).+/m,\n      lookbehind: true,\n      inside: {\n        pointer: {\n          pattern: /^@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@$/,\n          alias: 'variable'\n        }\n      }\n    },\n    tag: {\n      // Preceded by level and optional pointer\n      pattern:\n        /(^[\\t ]*\\d+ +(?:@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@ +)?)\\w+/m,\n      lookbehind: true,\n      alias: 'string'\n    },\n    level: {\n      pattern: /(^[\\t ]*)\\d+/m,\n      lookbehind: true,\n      alias: 'number'\n    },\n    pointer: {\n      pattern: /@\\w[\\w!\"$%&'()*+,\\-./:;<=>?[\\\\\\]^`{|}~\\x80-\\xfe #]*@/,\n      alias: 'variable'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = gherkin\ngherkin.displayName = 'gherkin'\ngherkin.aliases = []\nfunction gherkin(Prism) {\n  ;(function (Prism) {\n    var tableRow = /(?:\\r?\\n|\\r)[ \\t]*\\|.+\\|(?:(?!\\|).)*/.source\n    Prism.languages.gherkin = {\n      pystring: {\n        pattern: /(\"\"\"|''')[\\s\\S]+?\\1/,\n        alias: 'string'\n      },\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[ \\t]*)@\\S*/m,\n        lookbehind: true\n      },\n      feature: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)[ \\t]*)(?:Ability|Ahoy matey!|Arwedd|Aspekt|Besigheid Behoefte|Business Need|Caracteristica|Característica|Egenskab|Egenskap|Eiginleiki|Feature|Fīča|Fitur|Fonctionnalité|Fonksyonalite|Funcionalidade|Funcionalitat|Functionalitate|Funcţionalitate|Funcționalitate|Functionaliteit|Fungsi|Funkcia|Funkcija|Funkcionalitāte|Funkcionalnost|Funkcja|Funksie|Funktionalität|Funktionalitéit|Funzionalità|Hwaet|Hwæt|Jellemző|Karakteristik|Lastnost|Mak|Mogucnost|laH|Mogućnost|Moznosti|Možnosti|OH HAI|Omadus|Ominaisuus|Osobina|Özellik|Potrzeba biznesowa|perbogh|poQbogh malja'|Požadavek|Požiadavka|Pretty much|Qap|Qu'meH 'ut|Savybė|Tính năng|Trajto|Vermoë|Vlastnosť|Właściwość|Značilnost|Δυνατότητα|Λειτουργία|Могућност|Мөмкинлек|Особина|Свойство|Үзенчәлеклелек|Функционал|Функционалност|Функция|Функціонал|תכונה|خاصية|خصوصیت|صلاحیت|کاروبار کی ضرورت|وِیژگی|रूप लेख|ਖਾਸੀਅਤ|ਨਕਸ਼ ਨੁਹਾਰ|ਮੁਹਾਂਦਰਾ|గుణము|ಹೆಚ್ಚಳ|ความต้องการทางธุรกิจ|ความสามารถ|โครงหลัก|기능|フィーチャ|功能|機能):(?:[^:\\r\\n]+(?:\\r?\\n|\\r|$))*/,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]+/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      scenario: {\n        pattern:\n          /(^[ \\t]*)(?:Abstract Scenario|Abstrakt Scenario|Achtergrond|Aer|Ær|Agtergrond|All y'all|Antecedentes|Antecedents|Atburðarás|Atburðarásir|Awww, look mate|B4|Background|Baggrund|Bakgrund|Bakgrunn|Bakgrunnur|Beispiele|Beispiller|Bối cảnh|Cefndir|Cenario|Cenário|Cenario de Fundo|Cenário de Fundo|Cenarios|Cenários|Contesto|Context|Contexte|Contexto|Conto|Contoh|Contone|Dæmi|Dasar|Dead men tell no tales|Delineacao do Cenario|Delineação do Cenário|Dis is what went down|Dữ liệu|Dyagram Senaryo|Dyagram senaryo|Egzanp|Ejemplos|Eksempler|Ekzemploj|Enghreifftiau|Esbozo do escenario|Escenari|Escenario|Esempi|Esquema de l'escenari|Esquema del escenario|Esquema do Cenario|Esquema do Cenário|EXAMPLZ|Examples|Exempel|Exemple|Exemples|Exemplos|First off|Fono|Forgatókönyv|Forgatókönyv vázlat|Fundo|Geçmiş|Grundlage|Hannergrond|ghantoH|Háttér|Heave to|Istorik|Juhtumid|Keadaan|Khung kịch bản|Khung tình huống|Kịch bản|Koncept|Konsep skenario|Kontèks|Kontekst|Kontekstas|Konteksts|Kontext|Konturo de la scenaro|Latar Belakang|lut chovnatlh|lut|lutmey|Lýsing Atburðarásar|Lýsing Dæma|MISHUN SRSLY|MISHUN|Menggariskan Senario|mo'|Náčrt Scenára|Náčrt Scénáře|Náčrt Scenáru|Oris scenarija|Örnekler|Osnova|Osnova Scenára|Osnova scénáře|Osnutek|Ozadje|Paraugs|Pavyzdžiai|Példák|Piemēri|Plan du scénario|Plan du Scénario|Plan Senaryo|Plan senaryo|Plang vum Szenario|Pozadí|Pozadie|Pozadina|Príklady|Příklady|Primer|Primeri|Primjeri|Przykłady|Raamstsenaarium|Reckon it's like|Rerefons|Scenár|Scénář|Scenarie|Scenarij|Scenarijai|Scenarijaus šablonas|Scenariji|Scenārijs|Scenārijs pēc parauga|Scenarijus|Scenario|Scénario|Scenario Amlinellol|Scenario Outline|Scenario Template|Scenariomal|Scenariomall|Scenarios|Scenariu|Scenariusz|Scenaro|Schema dello scenario|Se ðe|Se the|Se þe|Senario|Senaryo Deskripsyon|Senaryo deskripsyon|Senaryo|Senaryo taslağı|Shiver me timbers|Situācija|Situai|Situasie Uiteensetting|Situasie|Skenario konsep|Skenario|Skica|Structura scenariu|Structură scenariu|Struktura scenarija|Stsenaarium|Swa hwaer swa|Swa|Swa hwær swa|Szablon scenariusza|Szenario|Szenariogrundriss|Tapaukset|Tapaus|Tapausaihio|Taust|Tausta|Template Keadaan|Template Senario|Template Situai|The thing of it is|Tình huống|Variantai|Voorbeelde|Voorbeelden|Wharrimean is|Yo-ho-ho|You'll wanna|Założenia|Παραδείγματα|Περιγραφή Σεναρίου|Σενάρια|Σενάριο|Υπόβαθρο|Кереш|Контекст|Концепт|Мисаллар|Мисоллар|Основа|Передумова|Позадина|Предистория|Предыстория|Приклади|Пример|Примери|Примеры|Рамка на сценарий|Скица|Структура сценарија|Структура сценария|Структура сценарію|Сценарий|Сценарий структураси|Сценарийның төзелеше|Сценарији|Сценарио|Сценарій|Тарих|Үрнәкләр|דוגמאות|רקע|תבנית תרחיש|תרחיש|الخلفية|الگوی سناریو|امثلة|پس منظر|زمینه|سناریو|سيناريو|سيناريو مخطط|مثالیں|منظر نامے کا خاکہ|منظرنامہ|نمونه ها|उदाहरण|परिदृश्य|परिदृश्य रूपरेखा|पृष्ठभूमि|ਉਦਾਹਰਨਾਂ|ਪਟਕਥਾ|ਪਟਕਥਾ ਢਾਂਚਾ|ਪਟਕਥਾ ਰੂਪ ਰੇਖਾ|ਪਿਛੋਕੜ|ఉదాహరణలు|కథనం|నేపథ్యం|సన్నివేశం|ಉದಾಹರಣೆಗಳು|ಕಥಾಸಾರಾಂಶ|ವಿವರಣೆ|ಹಿನ್ನೆಲೆ|โครงสร้างของเหตุการณ์|ชุดของตัวอย่าง|ชุดของเหตุการณ์|แนวคิด|สรุปเหตุการณ์|เหตุการณ์|배경|시나리오|시나리오 개요|예|サンプル|シナリオ|シナリオアウトライン|シナリオテンプレ|シナリオテンプレート|テンプレ|例|例子|剧本|剧本大纲|劇本|劇本大綱|场景|场景大纲|場景|場景大綱|背景):[^:\\r\\n]*/m,\n        lookbehind: true,\n        inside: {\n          important: {\n            pattern: /(:)[^\\r\\n]*/,\n            lookbehind: true\n          },\n          keyword: /[^:\\r\\n]+:/\n        }\n      },\n      'table-body': {\n        // Look-behind is used to skip the table head, which has the same format as any table row\n        pattern: RegExp('(' + tableRow + ')(?:' + tableRow + ')+'),\n        lookbehind: true,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          },\n          td: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'string'\n          },\n          punctuation: /\\|/\n        }\n      },\n      'table-head': {\n        pattern: RegExp(tableRow),\n        inside: {\n          th: {\n            pattern: /\\s*[^\\s|][^|]*/,\n            alias: 'variable'\n          },\n          punctuation: /\\|/\n        }\n      },\n      atrule: {\n        pattern:\n          /(^[ \\t]+)(?:'a|'ach|'ej|7|a|A také|A taktiež|A tiež|A zároveň|Aber|Ac|Adott|Akkor|Ak|Aleshores|Ale|Ali|Allora|Alors|Als|Ama|Amennyiben|Amikor|Ampak|an|AN|Ananging|And y'all|And|Angenommen|Anrhegedig a|An|Apabila|Atès|Atesa|Atunci|Avast!|Aye|A|awer|Bagi|Banjur|Bet|Biết|Blimey!|Buh|But at the end of the day I reckon|But y'all|But|BUT|Cal|Când|Cand|Cando|Ce|Cuando|Če|Ða ðe|Ða|Dadas|Dada|Dados|Dado|DaH ghu' bejlu'|dann|Dann|Dano|Dan|Dar|Dat fiind|Data|Date fiind|Date|Dati fiind|Dati|Daţi fiind|Dați fiind|DEN|Dato|De|Den youse gotta|Dengan|Diberi|Diyelim ki|Donada|Donat|Donitaĵo|Do|Dun|Duota|Ðurh|Eeldades|Ef|Eğer ki|Entao|Então|Entón|E|En|Entonces|Epi|És|Etant donnée|Etant donné|Et|Étant données|Étant donnée|Étant donné|Etant données|Etant donnés|Étant donnés|Fakat|Gangway!|Gdy|Gegeben seien|Gegeben sei|Gegeven|Gegewe|ghu' noblu'|Gitt|Given y'all|Given|Givet|Givun|Ha|Cho|I CAN HAZ|In|Ir|It's just unbelievable|I|Ja|Jeśli|Jeżeli|Kad|Kada|Kadar|Kai|Kaj|Když|Keď|Kemudian|Ketika|Khi|Kiedy|Ko|Kuid|Kui|Kun|Lan|latlh|Le sa a|Let go and haul|Le|Lè sa a|Lè|Logo|Lorsqu'<|Lorsque|mä|Maar|Mais|Mając|Ma|Majd|Maka|Manawa|Mas|Men|Menawa|Mutta|Nalika|Nalikaning|Nanging|Når|När|Nato|Nhưng|Niin|Njuk|O zaman|Och|Og|Oletetaan|Ond|Onda|Oraz|Pak|Pero|Però|Podano|Pokiaľ|Pokud|Potem|Potom|Privzeto|Pryd|Quan|Quand|Quando|qaSDI'|Så|Sed|Se|Siis|Sipoze ke|Sipoze Ke|Sipoze|Si|Şi|Și|Soit|Stel|Tada|Tad|Takrat|Tak|Tapi|Ter|Tetapi|Tha the|Tha|Then y'all|Then|Thì|Thurh|Toda|Too right|Un|Und|ugeholl|Và|vaj|Vendar|Ve|wann|Wanneer|WEN|Wenn|When y'all|When|Wtedy|Wun|Y'know|Yeah nah|Yna|Youse know like when|Youse know when youse got|Y|Za predpokladu|Za předpokladu|Zadan|Zadani|Zadano|Zadate|Zadato|Zakładając|Zaradi|Zatati|Þa þe|Þa|Þá|Þegar|Þurh|Αλλά|Δεδομένου|Και|Όταν|Τότε|А також|Агар|Але|Али|Аммо|А|Әгәр|Әйтик|Әмма|Бирок|Ва|Вә|Дадено|Дано|Допустим|Если|Задате|Задати|Задато|И|І|К тому же|Када|Кад|Когато|Когда|Коли|Ләкин|Лекин|Нәтиҗәдә|Нехай|Но|Онда|Припустимо, що|Припустимо|Пусть|Также|Та|Тогда|Тоді|То|Унда|Һәм|Якщо|אבל|אזי|אז|בהינתן|וגם|כאשר|آنگاه|اذاً|اگر|اما|اور|با فرض|بالفرض|بفرض|پھر|تب|ثم|جب|عندما|فرض کیا|لكن|لیکن|متى|هنگامی|و|अगर|और|कदा|किन्तु|चूंकि|जब|तथा|तदा|तब|परन्तु|पर|यदि|ਅਤੇ|ਜਦੋਂ|ਜਿਵੇਂ ਕਿ|ਜੇਕਰ|ਤਦ|ਪਰ|అప్పుడు|ఈ పరిస్థితిలో|కాని|చెప్పబడినది|మరియు|ಆದರೆ|ನಂತರ|ನೀಡಿದ|ಮತ್ತು|ಸ್ಥಿತಿಯನ್ನು|กำหนดให้|ดังนั้น|แต่|เมื่อ|และ|그러면<|그리고<|단<|만약<|만일<|먼저<|조건<|하지만<|かつ<|しかし<|ただし<|ならば<|もし<|並且<|但し<|但是<|假如<|假定<|假設<|假设<|前提<|同时<|同時<|并且<|当<|當<|而且<|那么<|那麼<)(?=[ \\t])/m,\n        lookbehind: true\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n        inside: {\n          outline: {\n            pattern: /<[^>]+>/,\n            alias: 'variable'\n          }\n        }\n      },\n      outline: {\n        pattern: /<[^>]+>/,\n        alias: 'variable'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = git\ngit.displayName = 'git'\ngit.aliases = []\nfunction git(Prism) {\n  Prism.languages.git = {\n    /*\n     * A simple one line comment like in a git status command\n     * For instance:\n     * $ git status\n     * # On branch infinite-scroll\n     * # Your branch and 'origin/sharedBranches/frontendTeam/infinite-scroll' have diverged,\n     * # and have 1 and 2 different commits each, respectively.\n     * nothing to commit (working directory clean)\n     */\n    comment: /^#.*/m,\n    /*\n     * Regexp to match the changed lines in a git diff output. Check the example below.\n     */\n    deleted: /^[-–].*/m,\n    inserted: /^\\+.*/m,\n    /*\n     * a string (double and simple quote)\n     */\n    string: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    /*\n     * a git command. It starts with a random prompt finishing by a $, then \"git\" then some other parameters\n     * For instance:\n     * $ git add file.txt\n     */\n    command: {\n      pattern: /^.*\\$ git .*$/m,\n      inside: {\n        /*\n         * A git command can contain a parameter starting by a single or a double dash followed by a string\n         * For instance:\n         * $ git diff --cached\n         * $ git log -p\n         */\n        parameter: /\\s--?\\w+/\n      }\n    },\n    /*\n     * Coordinates displayed in a git diff command\n     * For instance:\n     * $ git diff\n     * diff --git file.txt file.txt\n     * index 6214953..1d54a52 100644\n     * --- file.txt\n     * +++ file.txt\n     * @@ -1 +1,2 @@\n     * -Here's my tetx file\n     * +Here's my text file\n     * +And this is the second line\n     */\n    coord: /^@@.*@@$/m,\n    /*\n     * Match a \"commit [SHA1]\" line in a git log output.\n     * For instance:\n     * $ git log\n     * commit a11a14ef7e26f2ca62d4b35eac455ce636d0dc09\n     * Author: lgiraudel\n     * Date:   Mon Feb 17 11:18:34 2014 +0100\n     *\n     *     Add of a new line\n     */\n    'commit-sha1': /^commit \\w{40}$/m\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = glsl\nglsl.displayName = 'glsl'\nglsl.aliases = []\nfunction glsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.glsl = Prism.languages.extend('c', {\n    keyword:\n      /\\b(?:active|asm|atomic_uint|attribute|[ibdu]?vec[234]|bool|break|buffer|case|cast|centroid|class|coherent|common|const|continue|d?mat[234](?:x[234])?|default|discard|do|double|else|enum|extern|external|false|filter|fixed|flat|float|for|fvec[234]|goto|half|highp|hvec[234]|[iu]?sampler2DMS(?:Array)?|[iu]?sampler2DRect|[iu]?samplerBuffer|[iu]?samplerCube|[iu]?samplerCubeArray|[iu]?sampler[123]D|[iu]?sampler[12]DArray|[iu]?image2DMS(?:Array)?|[iu]?image2DRect|[iu]?imageBuffer|[iu]?imageCube|[iu]?imageCubeArray|[iu]?image[123]D|[iu]?image[12]DArray|if|in|inline|inout|input|int|interface|invariant|layout|long|lowp|mediump|namespace|noinline|noperspective|out|output|partition|patch|precise|precision|public|readonly|resource|restrict|return|sample|sampler[12]DArrayShadow|sampler[12]DShadow|sampler2DRectShadow|sampler3DRect|samplerCubeArrayShadow|samplerCubeShadow|shared|short|sizeof|smooth|static|struct|subroutine|superp|switch|template|this|true|typedef|uint|uniform|union|unsigned|using|varying|void|volatile|while|writeonly)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = gml\ngml.displayName = 'gml'\ngml.aliases = []\nfunction gml(Prism) {\n  Prism.languages.gamemakerlanguage = Prism.languages.gml =\n    Prism.languages.extend('clike', {\n      keyword:\n        /\\b(?:break|case|continue|default|do|else|enum|exit|for|globalvar|if|repeat|return|switch|until|var|while)\\b/,\n      number:\n        /(?:\\b0x[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[ulf]{0,4}/i,\n      operator:\n        /--|\\+\\+|[-+%/=]=?|!=|\\*\\*?=?|<[<=>]?|>[=>]?|&&?|\\^\\^?|\\|\\|?|~|\\b(?:and|at|not|or|with|xor)\\b/,\n      constant:\n        /\\b(?:GM_build_date|GM_version|action_(?:continue|restart|reverse|stop)|all|gamespeed_(?:fps|microseconds)|global|local|noone|other|pi|pointer_(?:invalid|null)|self|timezone_(?:local|utc)|undefined|ev_(?:create|destroy|step|alarm|keyboard|mouse|collision|other|draw|draw_(?:begin|end|post|pre)|keypress|keyrelease|trigger|(?:left|middle|no|right)_button|(?:left|middle|right)_press|(?:left|middle|right)_release|mouse_(?:enter|leave|wheel_down|wheel_up)|global_(?:left|middle|right)_button|global_(?:left|middle|right)_press|global_(?:left|middle|right)_release|joystick(?:1|2)_(?:button1|button2|button3|button4|button5|button6|button7|button8|down|left|right|up)|outside|boundary|game_start|game_end|room_start|room_end|no_more_lives|animation_end|end_of_path|no_more_health|user\\d|gui|gui_begin|gui_end|step_(?:begin|end|normal))|vk_(?:alt|anykey|backspace|control|delete|down|end|enter|escape|home|insert|left|nokey|pagedown|pageup|pause|printscreen|return|right|shift|space|tab|up|f\\d|numpad\\d|add|decimal|divide|lalt|lcontrol|lshift|multiply|ralt|rcontrol|rshift|subtract)|achievement_(?:filter_(?:all_players|favorites_only|friends_only)|friends_info|info|leaderboard_info|our_info|pic_loaded|show_(?:achievement|bank|friend_picker|leaderboard|profile|purchase_prompt|ui)|type_challenge|type_score_challenge)|asset_(?:font|object|path|room|script|shader|sound|sprite|tiles|timeline|unknown)|audio_(?:3d|falloff_(?:exponent_distance|exponent_distance_clamped|inverse_distance|inverse_distance_clamped|linear_distance|linear_distance_clamped|none)|mono|new_system|old_system|stereo)|bm_(?:add|complex|dest_alpha|dest_color|dest_colour|inv_dest_alpha|inv_dest_color|inv_dest_colour|inv_src_alpha|inv_src_color|inv_src_colour|max|normal|one|src_alpha|src_alpha_sat|src_color|src_colour|subtract|zero)|browser_(?:chrome|firefox|ie|ie_mobile|not_a_browser|opera|safari|safari_mobile|tizen|unknown|windows_store)|buffer_(?:bool|f16|f32|f64|fast|fixed|generalerror|grow|invalidtype|network|outofbounds|outofspace|s16|s32|s8|seek_end|seek_relative|seek_start|string|text|u16|u32|u64|u8|vbuffer|wrap)|c_(?:aqua|black|blue|dkgray|fuchsia|gray|green|lime|ltgray|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow)|cmpfunc_(?:always|equal|greater|greaterequal|less|lessequal|never|notequal)|cr_(?:appstart|arrow|beam|cross|default|drag|handpoint|hourglass|none|size_all|size_nesw|size_ns|size_nwse|size_we|uparrow)|cull_(?:clockwise|counterclockwise|noculling)|device_(?:emulator|tablet)|device_ios_(?:ipad|ipad_retina|iphone|iphone5|iphone6|iphone6plus|iphone_retina|unknown)|display_(?:landscape|landscape_flipped|portrait|portrait_flipped)|dll_(?:cdecl|cdel|stdcall)|ds_type_(?:grid|list|map|priority|queue|stack)|ef_(?:cloud|ellipse|explosion|firework|flare|rain|ring|smoke|smokeup|snow|spark|star)|fa_(?:archive|bottom|center|directory|hidden|left|middle|readonly|right|sysfile|top|volumeid)|fb_login_(?:default|fallback_to_webview|forcing_safari|forcing_webview|no_fallback_to_webview|use_system_account)|iap_(?:available|canceled|ev_consume|ev_product|ev_purchase|ev_restore|ev_storeload|failed|purchased|refunded|status_available|status_loading|status_processing|status_restoring|status_unavailable|status_uninitialised|storeload_failed|storeload_ok|unavailable)|leaderboard_type_(?:number|time_mins_secs)|lighttype_(?:dir|point)|matrix_(?:projection|view|world)|mb_(?:any|left|middle|none|right)|network_(?:config_(?:connect_timeout|disable_reliable_udp|enable_reliable_udp|use_non_blocking_socket)|socket_(?:bluetooth|tcp|udp)|type_(?:connect|data|disconnect|non_blocking_connect))|of_challenge_(?:lose|tie|win)|os_(?:android|ios|linux|macosx|ps3|ps4|psvita|unknown|uwp|win32|win8native|windows|winphone|xboxone)|phy_debug_render_(?:aabb|collision_pairs|coms|core_shapes|joints|obb|shapes)|phy_joint_(?:anchor_1_x|anchor_1_y|anchor_2_x|anchor_2_y|angle|angle_limits|damping_ratio|frequency|length_1|length_2|lower_angle_limit|max_force|max_length|max_motor_force|max_motor_torque|max_torque|motor_force|motor_speed|motor_torque|reaction_force_x|reaction_force_y|reaction_torque|speed|translation|upper_angle_limit)|phy_particle_data_flag_(?:category|color|colour|position|typeflags|velocity)|phy_particle_flag_(?:colormixing|colourmixing|elastic|powder|spring|tensile|viscous|wall|water|zombie)|phy_particle_group_flag_(?:rigid|solid)|pr_(?:linelist|linestrip|pointlist|trianglefan|trianglelist|trianglestrip)|ps_(?:distr|shape)_(?:diamond|ellipse|gaussian|invgaussian|line|linear|rectangle)|pt_shape_(?:circle|cloud|disk|explosion|flare|line|pixel|ring|smoke|snow|spark|sphere|square|star)|ty_(?:real|string)|gp_(?:face\\d|axislh|axislv|axisrh|axisrv|padd|padl|padr|padu|select|shoulderl|shoulderlb|shoulderr|shoulderrb|start|stickl|stickr)|lb_disp_(?:none|numeric|time_ms|time_sec)|lb_sort_(?:ascending|descending|none)|ov_(?:achievements|community|friends|gamegroup|players|settings)|ugc_(?:filetype_(?:community|microtrans)|list_(?:Favorited|Followed|Published|Subscribed|UsedOrPlayed|VotedDown|VotedOn|VotedUp|WillVoteLater)|match_(?:AllGuides|Artwork|Collections|ControllerBindings|IntegratedGuides|Items|Items_Mtx|Items_ReadyToUse|Screenshots|UsableInGame|Videos|WebGuides)|query_(?:AcceptedForGameRankedByAcceptanceDate|CreatedByFriendsRankedByPublicationDate|FavoritedByFriendsRankedByPublicationDate|NotYetRated)|query_RankedBy(?:NumTimesReported|PublicationDate|TextSearch|TotalVotesAsc|Trend|Vote|VotesUp)|result_success|sortorder_CreationOrder(?:Asc|Desc)|sortorder_(?:ForModeration|LastUpdatedDesc|SubscriptionDateDesc|TitleAsc|VoteScoreDesc)|visibility_(?:friends_only|private|public))|vertex_usage_(?:binormal|blendindices|blendweight|color|colour|depth|fog|normal|position|psize|sample|tangent|texcoord|textcoord)|vertex_type_(?:float\\d|color|colour|ubyte4)|input_type|layerelementtype_(?:background|instance|oldtilemap|particlesystem|sprite|tile|tilemap|undefined)|se_(?:chorus|compressor|echo|equalizer|flanger|gargle|none|reverb)|text_type|tile_(?:flip|index_mask|mirror|rotate)|(?:obj|rm|scr|spr)\\w+)\\b/,\n      variable:\n        /\\b(?:alarm|application_surface|async_load|background_(?:alpha|blend|color|colour|foreground|height|hspeed|htiled|index|showcolor|showcolour|visible|vspeed|vtiled|width|x|xscale|y|yscale)|bbox_(?:bottom|left|right|top)|browser_(?:height|width)|caption_(?:health|lives|score)|current_(?:day|hour|minute|month|second|time|weekday|year)|cursor_sprite|debug_mode|delta_time|direction|display_aa|error_(?:last|occurred)|event_(?:action|number|object|type)|fps|fps_real|friction|game_(?:display|project|save)_(?:id|name)|gamemaker_(?:pro|registered|version)|gravity|gravity_direction|(?:h|v)speed|health|iap_data|id|image_(?:alpha|angle|blend|depth|index|number|speed|xscale|yscale)|instance_(?:count|id)|keyboard_(?:key|lastchar|lastkey|string)|layer|lives|mask_index|mouse_(?:button|lastbutton|x|y)|object_index|os_(?:browser|device|type|version)|path_(?:endaction|index|orientation|position|positionprevious|scale|speed)|persistent|phy_(?:rotation|(?:col_normal|collision|com|linear_velocity|position|speed)_(?:x|y)|angular_(?:damping|velocity)|position_(?:x|y)previous|speed|linear_damping|bullet|fixed_rotation|active|mass|inertia|dynamic|kinematic|sleeping|collision_points)|pointer_(?:invalid|null)|room|room_(?:caption|first|height|last|persistent|speed|width)|score|secure_mode|show_(?:health|lives|score)|solid|speed|sprite_(?:height|index|width|xoffset|yoffset)|temp_directory|timeline_(?:index|loop|position|running|speed)|transition_(?:color|kind|steps)|undefined|view_(?:angle|current|enabled|(?:h|v)(?:border|speed)|(?:h|w|x|y)port|(?:h|w|x|y)view|object|surface_id|visible)|visible|webgl_enabled|working_directory|(?:x|y)(?:previous|start)|x|y|argument(?:_relitive|_count|\\d)|argument|global|local|other|self)\\b/\n    })\n}\n","'use strict'\n\nmodule.exports = gn\ngn.displayName = 'gn'\ngn.aliases = ['gni']\nfunction gn(Prism) {\n  // https://gn.googlesource.com/gn/+/refs/heads/main/docs/reference.md#grammar\n  Prism.languages.gn = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'string-literal': {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\"\\\\]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[\\s\\S]*?\\}|[a-zA-Z_]\\w*|0x[a-fA-F0-9]{2})/,\n          lookbehind: true,\n          inside: {\n            number: /^\\$0x[\\s\\S]{2}$/,\n            variable: /^\\$\\w+$/,\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: null // see below\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    keyword: /\\b(?:else|if)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'builtin-function': {\n      // a few functions get special highlighting to improve readability\n      pattern:\n        /\\b(?:assert|defined|foreach|import|pool|print|template|tool|toolchain)(?=\\s*\\()/i,\n      alias: 'keyword'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant:\n      /\\b(?:current_cpu|current_os|current_toolchain|default_toolchain|host_cpu|host_os|root_build_dir|root_gen_dir|root_out_dir|target_cpu|target_gen_dir|target_os|target_out_dir)\\b/,\n    number: /-?\\b\\d+\\b/,\n    operator: /[-+!=<>]=?|&&|\\|\\|/,\n    punctuation: /[(){}[\\],.]/\n  }\n  Prism.languages.gn['string-literal'].inside['interpolation'].inside[\n    'expression'\n  ].inside = Prism.languages.gn\n  Prism.languages.gni = Prism.languages.gn\n}\n","'use strict'\n\nmodule.exports = goModule\ngoModule.displayName = 'goModule'\ngoModule.aliases = []\nfunction goModule(Prism) {\n  // https://go.dev/ref/mod#go-mod-file-module\n  Prism.languages['go-mod'] = Prism.languages['go-module'] = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    version: {\n      pattern: /(^|[\\s()[\\],])v\\d+\\.\\d+\\.\\d+(?:[+-][-+.\\w]*)?(?![^\\s()[\\],])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    'go-version': {\n      pattern: /((?:^|\\s)go\\s+)\\d+(?:\\.\\d+){1,2}/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    keyword: {\n      pattern: /^([ \\t]*)(?:exclude|go|module|replace|require|retract)\\b/m,\n      lookbehind: true\n    },\n    operator: /=>/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = go\ngo.displayName = 'go'\ngo.aliases = []\nfunction go(Prism) {\n  Prism.languages.go = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:break|case|chan|const|continue|default|defer|else|fallthrough|for|func|go(?:to)?|if|import|interface|map|package|range|return|select|struct|switch|type|var)\\b/,\n    boolean: /\\b(?:_|false|iota|nil|true)\\b/,\n    number: [\n      // binary and octal integers\n      /\\b0(?:b[01_]+|o[0-7_]+)i?\\b/i, // hexadecimal integers and floats\n      /\\b0x(?:[a-f\\d_]+(?:\\.[a-f\\d_]*)?|\\.[a-f\\d_]+)(?:p[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i, // decimal integers and floats\n      /(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?[\\d_]+)?i?(?!\\w)/i\n    ],\n    operator:\n      /[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\./,\n    builtin:\n      /\\b(?:append|bool|byte|cap|close|complex|complex(?:64|128)|copy|delete|error|float(?:32|64)|u?int(?:8|16|32|64)?|imag|len|make|new|panic|print(?:ln)?|real|recover|rune|string|uintptr)\\b/\n  })\n  Prism.languages.insertBefore('go', 'string', {\n    char: {\n      pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){0,10}'/,\n      greedy: true\n    }\n  })\n  delete Prism.languages.go['class-name']\n}\n","'use strict'\n\nmodule.exports = graphql\ngraphql.displayName = 'graphql'\ngraphql.aliases = []\nfunction graphql(Prism) {\n  Prism.languages.graphql = {\n    comment: /#.*/,\n    description: {\n      pattern:\n        /(?:\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")(?=\\s*[a-z_])/i,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        'language-markdown': {\n          pattern: /(^\"(?:\"\")?)(?!\\1)[\\s\\S]+(?=\\1$)/,\n          lookbehind: true,\n          inside: Prism.languages.markdown\n        }\n      }\n    },\n    string: {\n      pattern: /\"\"\"(?:[^\"]|(?!\"\"\")\")*\"\"\"|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    number: /(?:\\B-|\\b)\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    boolean: /\\b(?:false|true)\\b/,\n    variable: /\\$[a-z_]\\w*/i,\n    directive: {\n      pattern: /@[a-z_]\\w*/i,\n      alias: 'function'\n    },\n    'attr-name': {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:\\((?:[^()\"]|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")*\\))?:)/i,\n      greedy: true\n    },\n    'atom-input': {\n      pattern: /\\b[A-Z]\\w*Input\\b/,\n      alias: 'class-name'\n    },\n    scalar: /\\b(?:Boolean|Float|ID|Int|String)\\b/,\n    constant: /\\b[A-Z][A-Z_\\d]*\\b/,\n    'class-name': {\n      pattern:\n        /(\\b(?:enum|implements|interface|on|scalar|type|union)\\s+|&\\s*|:\\s*|\\[)[A-Z_]\\w*/,\n      lookbehind: true\n    },\n    fragment: {\n      pattern: /(\\bfragment\\s+|\\.{3}\\s*(?!on\\b))[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-mutation': {\n      pattern: /(\\bmutation\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'definition-query': {\n      pattern: /(\\bquery\\s+)[a-zA-Z_]\\w*/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword:\n      /\\b(?:directive|enum|extend|fragment|implements|input|interface|mutation|on|query|repeatable|scalar|schema|subscription|type|union)\\b/,\n    operator: /[!=|&]|\\.{3}/,\n    'property-query': /\\w+(?=\\s*\\()/,\n    object: /\\w+(?=\\s*\\{)/,\n    punctuation: /[!(){}\\[\\]:=,]/,\n    property: /\\w+/\n  }\n  Prism.hooks.add('after-tokenize', function afterTokenizeGraphql(env) {\n    if (env.language !== 'graphql') {\n      return\n    }\n    /**\n     * get the graphql token stream that we want to customize\n     *\n     * @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n     * @type {Token[]}\n     */\n    var validTokens = env.tokens.filter(function (token) {\n      return (\n        typeof token !== 'string' &&\n        token.type !== 'comment' &&\n        token.type !== 'scalar'\n      )\n    })\n    var currentIndex = 0\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {number} offset\n     * @returns {Token | undefined}\n     */\n    function getToken(offset) {\n      return validTokens[currentIndex + offset]\n    }\n    /**\n     * Returns whether the token relative to the current index has the given type.\n     *\n     * @param {readonly string[]} types\n     * @param {number} [offset=0]\n     * @returns {boolean}\n     */\n    function isTokenType(types, offset) {\n      offset = offset || 0\n      for (var i = 0; i < types.length; i++) {\n        var token = getToken(i + offset)\n        if (!token || token.type !== types[i]) {\n          return false\n        }\n      }\n      return true\n    }\n    /**\n     * Returns the index of the closing bracket to an opening bracket.\n     *\n     * It is assumed that `token[currentIndex - 1]` is an opening bracket.\n     *\n     * If no closing bracket could be found, `-1` will be returned.\n     *\n     * @param {RegExp} open\n     * @param {RegExp} close\n     * @returns {number}\n     */\n    function findClosingBracket(open, close) {\n      var stackHeight = 1\n      for (var i = currentIndex; i < validTokens.length; i++) {\n        var token = validTokens[i]\n        var content = token.content\n        if (token.type === 'punctuation' && typeof content === 'string') {\n          if (open.test(content)) {\n            stackHeight++\n          } else if (close.test(content)) {\n            stackHeight--\n            if (stackHeight === 0) {\n              return i\n            }\n          }\n        }\n      }\n      return -1\n    }\n    /**\n     * Adds an alias to the given token.\n     *\n     * @param {Token} token\n     * @param {string} alias\n     * @returns {void}\n     */\n    function addAlias(token, alias) {\n      var aliases = token.alias\n      if (!aliases) {\n        token.alias = aliases = []\n      } else if (!Array.isArray(aliases)) {\n        token.alias = aliases = [aliases]\n      }\n      aliases.push(alias)\n    }\n    for (; currentIndex < validTokens.length; ) {\n      var startToken = validTokens[currentIndex++] // add special aliases for mutation tokens\n      if (startToken.type === 'keyword' && startToken.content === 'mutation') {\n        // any array of the names of all input variables (if any)\n        var inputVariables = []\n        if (\n          isTokenType(['definition-mutation', 'punctuation']) &&\n          getToken(1).content === '('\n        ) {\n          // definition\n          currentIndex += 2 // skip 'definition-mutation' and 'punctuation'\n          var definitionEnd = findClosingBracket(/^\\($/, /^\\)$/)\n          if (definitionEnd === -1) {\n            continue\n          } // find all input variables\n          for (; currentIndex < definitionEnd; currentIndex++) {\n            var t = getToken(0)\n            if (t.type === 'variable') {\n              addAlias(t, 'variable-input')\n              inputVariables.push(t.content)\n            }\n          }\n          currentIndex = definitionEnd + 1\n        }\n        if (\n          isTokenType(['punctuation', 'property-query']) &&\n          getToken(0).content === '{'\n        ) {\n          currentIndex++ // skip opening bracket\n          addAlias(getToken(0), 'property-mutation')\n          if (inputVariables.length > 0) {\n            var mutationEnd = findClosingBracket(/^\\{$/, /^\\}$/)\n            if (mutationEnd === -1) {\n              continue\n            } // give references to input variables a special alias\n            for (var i = currentIndex; i < mutationEnd; i++) {\n              var varToken = validTokens[i]\n              if (\n                varToken.type === 'variable' &&\n                inputVariables.indexOf(varToken.content) >= 0\n              ) {\n                addAlias(varToken, 'variable-input')\n              }\n            }\n          }\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = groovy\ngroovy.displayName = 'groovy'\ngroovy.aliases = []\nfunction groovy(Prism) {\n  Prism.languages.groovy = Prism.languages.extend('clike', {\n    string: [\n      {\n        // https://groovy-lang.org/syntax.html#_dollar_slashy_string\n        pattern:\n          /(\"\"\"|''')(?:[^\\\\]|\\\\[\\s\\S])*?\\1|\\$\\/(?:[^/$]|\\$(?:[/$]|(?![/$]))|\\/(?!\\$))*\\/\\$/,\n        greedy: true\n      },\n      {\n        // TODO: Slash strings (e.g. /foo/) can contain line breaks but this will cause a lot of trouble with\n        // simple division (see JS regex), so find a fix maybe?\n        pattern: /([\"'/])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|boolean|break|byte|case|catch|char|class|const|continue|def|default|do|double|else|enum|extends|final|finally|float|for|goto|if|implements|import|in|instanceof|int|interface|long|native|new|package|private|protected|public|return|short|static|strictfp|super|switch|synchronized|this|throw|throws|trait|transient|try|void|volatile|while)\\b/,\n    number:\n      /\\b(?:0b[01_]+|0x[\\da-f_]+(?:\\.[\\da-f_p\\-]+)?|[\\d_]+(?:\\.[\\d_]+)?(?:e[+-]?\\d+)?)[glidf]?\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:~|==?~?|\\?[.:]?|\\*(?:[.=]|\\*=?)?|\\.[@&]|\\.\\.<|\\.\\.(?!\\.)|-[-=>]?|\\+[+=]?|!=?|<(?:<=?|=>?)?|>(?:>>?=?|=)?|&[&=]?|\\|[|=]?|\\/=?|\\^=?|%=?)/,\n      lookbehind: true\n    },\n    punctuation: /\\.+|[{}[\\];(),:$]/\n  })\n  Prism.languages.insertBefore('groovy', 'string', {\n    shebang: {\n      pattern: /#!.+/,\n      alias: 'comment'\n    }\n  })\n  Prism.languages.insertBefore('groovy', 'punctuation', {\n    'spock-block': /\\b(?:and|cleanup|expect|given|setup|then|when|where):/\n  })\n  Prism.languages.insertBefore('groovy', 'function', {\n    annotation: {\n      pattern: /(^|[^.])@\\w+/,\n      lookbehind: true,\n      alias: 'punctuation'\n    }\n  }) // Handle string interpolation\n  Prism.hooks.add('wrap', function (env) {\n    if (env.language === 'groovy' && env.type === 'string') {\n      var delimiter = env.content.value[0]\n      if (delimiter != \"'\") {\n        var pattern = /([^\\\\])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        if (delimiter === '$') {\n          pattern = /([^\\$])(?:\\$(?:\\{.*?\\}|[\\w.]+))/\n        } // To prevent double HTML-encoding we have to decode env.content first\n        env.content.value = env.content.value\n          .replace(/&lt;/g, '<')\n          .replace(/&amp;/g, '&')\n        env.content = Prism.highlight(env.content.value, {\n          expression: {\n            pattern: pattern,\n            lookbehind: true,\n            inside: Prism.languages.groovy\n          }\n        })\n        env.classes.push(delimiter === '/' ? 'regex' : 'gstring')\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorRuby = require('./ruby.js')\nmodule.exports = haml\nhaml.displayName = 'haml'\nhaml.aliases = []\nfunction haml(Prism) {\n  Prism.register(refractorRuby)\n  /* TODO\nHandle multiline code after tag\n%foo= some |\nmultiline |\ncode |\n*/\n  ;(function (Prism) {\n    Prism.languages.haml = {\n      // Multiline stuff should appear before the rest\n      'multiline-comment': {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*))(?:\\/|-#).*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      'multiline-code': [\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*,[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*,[\\t ]*)*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        {\n          pattern:\n            /((?:^|\\r?\\n|\\r)([\\t ]*)(?:[~-]|[&!]?=)).*\\|[\\t ]*(?:(?:\\r?\\n|\\r)\\2[\\t ].*\\|[\\t ]*)*/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        }\n      ],\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /((?:^|\\r?\\n|\\r)([\\t ]*)):[\\w-]+(?:(?:\\r?\\n|\\r)(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'symbol'\n          }\n        }\n      },\n      markup: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)<.+/,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)!!!(?: .+)?/,\n        lookbehind: true\n      },\n      tag: {\n        // Allows for one nested group of braces\n        pattern:\n          /((?:^|\\r?\\n|\\r)[\\t ]*)[%.#][\\w\\-#.]*[\\w\\-](?:\\([^)]+\\)|\\{(?:\\{[^}]+\\}|[^{}])+\\}|\\[[^\\]]+\\])*[\\/<>]*/,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              // Lookbehind tries to prevent interpolations from breaking it all\n              // Allows for one nested group of braces\n              pattern: /(^|[^#])\\{(?:\\{[^}]+\\}|[^{}])+\\}/,\n              lookbehind: true,\n              inside: Prism.languages.ruby\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*)(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|[^)\\s]+)/,\n                  lookbehind: true\n                },\n                'attr-name': /[\\w:-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[=(),]/\n              }\n            },\n            {\n              pattern: /\\[[^\\]]+\\]/,\n              inside: Prism.languages.ruby\n            }\n          ],\n          punctuation: /[<>]/\n        }\n      },\n      code: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*(?:[~-]|[&!]?=)).+/,\n        lookbehind: true,\n        inside: Prism.languages.ruby\n      },\n      // Interpolations in plain text\n      interpolation: {\n        pattern: /#\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^#\\{|\\}$/,\n            alias: 'punctuation'\n          },\n          ruby: {\n            pattern: /[\\s\\S]+/,\n            inside: Prism.languages.ruby\n          }\n        }\n      },\n      punctuation: {\n        pattern: /((?:^|\\r?\\n|\\r)[\\t ]*)[~=\\-&!]+/,\n        lookbehind: true\n      }\n    }\n    var filter_pattern =\n      '((?:^|\\\\r?\\\\n|\\\\r)([\\\\t ]*)):{{filter_name}}(?:(?:\\\\r?\\\\n|\\\\r)(?:\\\\2[\\\\t ].+|\\\\s*?(?=\\\\r?\\\\n|\\\\r)))+' // Non exhaustive list of available filters and associated languages\n    var filters = [\n      'css',\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'erb',\n      'javascript',\n      'less',\n      'markdown',\n      'ruby',\n      'scss',\n      'textile'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('{{filter_name}}', function () {\n              return filter.filter\n            })\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'symbol'\n            },\n            text: {\n              pattern: /[\\s\\S]+/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('haml', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = handlebars\nhandlebars.displayName = 'handlebars'\nhandlebars.aliases = ['hbs']\nfunction handlebars(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.handlebars = {\n      comment: /\\{\\{![\\s\\S]*?\\}\\}/,\n      delimiter: {\n        pattern: /^\\{\\{\\{?|\\}\\}\\}?$/,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][+-]?\\d+)?/,\n      boolean: /\\b(?:false|true)\\b/,\n      block: {\n        pattern: /^(\\s*(?:~\\s*)?)[#\\/]\\S+?(?=\\s*(?:~\\s*)?$|\\s)/,\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      brackets: {\n        pattern: /\\[[^\\]]+\\]/,\n        inside: {\n          punctuation: /\\[|\\]/,\n          variable: /[\\s\\S]+/\n        }\n      },\n      punctuation: /[!\"#%&':()*+,.\\/;<=>@\\[\\\\\\]^`{|}~]/,\n      variable: /[^!\"#%&'()*+,\\/;<=>@\\[\\\\\\]^`{|}~\\s]+/\n    }\n    Prism.hooks.add('before-tokenize', function (env) {\n      var handlebarsPattern = /\\{\\{\\{[\\s\\S]+?\\}\\}\\}|\\{\\{[\\s\\S]+?\\}\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'handlebars',\n        handlebarsPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(\n        env,\n        'handlebars'\n      )\n    })\n    Prism.languages.hbs = Prism.languages.handlebars\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = haskell\nhaskell.displayName = 'haskell'\nhaskell.aliases = ['hs']\nfunction haskell(Prism) {\n  Prism.languages.haskell = {\n    comment: {\n      pattern:\n        /(^|[^-!#$%*+=?&@|~.:<>^\\\\\\/])(?:--(?:(?=.)[^-!#$%*+=?&@|~.:<>^\\\\\\/].*|$)|\\{-[\\s\\S]*?-\\})/m,\n      lookbehind: true\n    },\n    char: {\n      pattern:\n        /'(?:[^\\\\']|\\\\(?:[abfnrtv\\\\\"'&]|\\^[A-Z@[\\]^_]|ACK|BEL|BS|CAN|CR|DC1|DC2|DC3|DC4|DEL|DLE|EM|ENQ|EOT|ESC|ETB|ETX|FF|FS|GS|HT|LF|NAK|NUL|RS|SI|SO|SOH|SP|STX|SUB|SYN|US|VT|\\d+|o[0-7]+|x[0-9a-fA-F]+))'/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\(?:\\S|\\s+\\\\))*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:case|class|data|deriving|do|else|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+(?:qualified\\s+)?(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import|qualified)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin variables only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:abs|acos|acosh|all|and|any|appendFile|approxRational|asTypeOf|asin|asinh|atan|atan2|atanh|basicIORun|break|catch|ceiling|chr|compare|concat|concatMap|const|cos|cosh|curry|cycle|decodeFloat|denominator|digitToInt|div|divMod|drop|dropWhile|either|elem|encodeFloat|enumFrom|enumFromThen|enumFromThenTo|enumFromTo|error|even|exp|exponent|fail|filter|flip|floatDigits|floatRadix|floatRange|floor|fmap|foldl|foldl1|foldr|foldr1|fromDouble|fromEnum|fromInt|fromInteger|fromIntegral|fromRational|fst|gcd|getChar|getContents|getLine|group|head|id|inRange|index|init|intToDigit|interact|ioError|isAlpha|isAlphaNum|isAscii|isControl|isDenormalized|isDigit|isHexDigit|isIEEE|isInfinite|isLower|isNaN|isNegativeZero|isOctDigit|isPrint|isSpace|isUpper|iterate|last|lcm|length|lex|lexDigits|lexLitChar|lines|log|logBase|lookup|map|mapM|mapM_|max|maxBound|maximum|maybe|min|minBound|minimum|mod|negate|not|notElem|null|numerator|odd|or|ord|otherwise|pack|pi|pred|primExitWith|print|product|properFraction|putChar|putStr|putStrLn|quot|quotRem|range|rangeSize|read|readDec|readFile|readFloat|readHex|readIO|readInt|readList|readLitChar|readLn|readOct|readParen|readSigned|reads|readsPrec|realToFrac|recip|rem|repeat|replicate|return|reverse|round|scaleFloat|scanl|scanl1|scanr|scanr1|seq|sequence|sequence_|show|showChar|showInt|showList|showLitChar|showParen|showSigned|showString|shows|showsPrec|significand|signum|sin|sinh|snd|sort|span|splitAt|sqrt|subtract|succ|sum|tail|take|takeWhile|tan|tanh|threadToIOResult|toEnum|toInt|toInteger|toLower|toRational|toUpper|truncate|uncurry|undefined|unlines|until|unwords|unzip|unzip3|userError|words|writeFile|zip|zip3|zipWith|zipWith3)\\b/,\n    // decimal integers and floating point numbers | octal integers | hexadecimal integers\n    number: /\\b(?:\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?|0o[0-7]+|0x[0-9a-f]+)\\b/i,\n    operator: [\n      {\n        // infix operator\n        pattern: /`(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*`/,\n        greedy: true\n      },\n      {\n        // function composition\n        pattern: /(\\s)\\.(?=\\s)/,\n        lookbehind: true\n      }, // Most of this is needed because of the meaning of a single '.'.\n      // If it stands alone freely, it is the function composition.\n      // It may also be a separator between a module name and an identifier => no\n      // operator. If it comes together with other special characters it is an\n      // operator too.\n      //\n      // This regex means: /[-!#$%*+=?&@|~.:<>^\\\\\\/]+/ without /\\./.\n      /[-!#$%*+=?&@|~:<>^\\\\\\/][-!#$%*+=?&@|~.:<>^\\\\\\/]*|\\.[-!#$%*+=?&@|~.:<>^\\\\\\/]+/\n    ],\n    // In Haskell, nearly everything is a variable, do not highlight these.\n    hvariable: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[_a-z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    constant: {\n      pattern: /\\b(?:[A-Z][\\w']*\\.)*[A-Z][\\w']*/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.hs = Prism.languages.haskell\n}\n","'use strict'\n\nmodule.exports = haxe\nhaxe.displayName = 'haxe'\nhaxe.aliases = []\nfunction haxe(Prism) {\n  Prism.languages.haxe = Prism.languages.extend('clike', {\n    string: {\n      // Strings can be multi-line\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    'class-name': [\n      {\n        pattern:\n          /(\\b(?:abstract|class|enum|extends|implements|interface|new|typedef)\\s+)[A-Z_]\\w*/,\n        lookbehind: true\n      }, // based on naming convention\n      /\\b[A-Z]\\w*/\n    ],\n    // The final look-ahead prevents highlighting of keywords if expressions such as \"haxe.macro.Expr\"\n    keyword:\n      /\\bthis\\b|\\b(?:abstract|as|break|case|cast|catch|class|continue|default|do|dynamic|else|enum|extends|extern|final|for|from|function|if|implements|import|in|inline|interface|macro|new|null|operator|overload|override|package|private|public|return|static|super|switch|throw|to|try|typedef|untyped|using|var|while)(?!\\.)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*(?:<[^<>]*>\\s*)?\\()/i,\n      greedy: true\n    },\n    operator: /\\.{3}|\\+\\+|--|&&|\\|\\||->|=>|(?:<<?|>{1,3}|[-+*/%!=&|^])=?|[?:~]/\n  })\n  Prism.languages.insertBefore('haxe', 'string', {\n    'string-interpolation': {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^\\\\])\\$(?:\\w+|\\{[^{}]+\\})/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{?|\\}$/,\n              alias: 'punctuation'\n            },\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.haxe\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'class-name', {\n    regex: {\n      pattern: /~\\/(?:[^\\/\\\\\\r\\n]|\\\\.)+\\/[a-z]*/,\n      greedy: true,\n      inside: {\n        'regex-flags': /\\b[a-z]+$/,\n        'regex-source': {\n          pattern: /^(~\\/)[\\s\\S]+(?=\\/$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^~\\/|\\/$/\n      }\n    }\n  })\n  Prism.languages.insertBefore('haxe', 'keyword', {\n    preprocessor: {\n      pattern: /#(?:else|elseif|end|if)\\b.*/,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /@:?[\\w.]+/,\n      alias: 'symbol'\n    },\n    reification: {\n      pattern: /\\$(?:\\w+|(?=\\{))/,\n      alias: 'important'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = hcl\nhcl.displayName = 'hcl'\nhcl.aliases = []\nfunction hcl(Prism) {\n  Prism.languages.hcl = {\n    comment: /(?:\\/\\/|#).*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    heredoc: {\n      pattern: /<<-?(\\w+\\b)[\\s\\S]*?^[ \\t]*\\1/m,\n      greedy: true,\n      alias: 'string'\n    },\n    keyword: [\n      {\n        pattern:\n          /(?:data|resource)\\s+(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")(?=\\s+\"[\\w-]+\"\\s+\\{)/i,\n        inside: {\n          type: {\n            pattern: /(resource|data|\\s+)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      {\n        pattern:\n          /(?:backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+(?=\\{)/i,\n        inside: {\n          type: {\n            pattern:\n              /(backend|module|output|provider|provisioner|variable)\\s+(?:[\\w-]+|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")\\s+/i,\n            lookbehind: true,\n            alias: 'variable'\n          }\n        }\n      },\n      /[\\w-]+(?=\\s+\\{)/\n    ],\n    property: [/[-\\w\\.]+(?=\\s*=(?!=))/, /\"(?:\\\\[\\s\\S]|[^\\\\\"])+\"(?=\\s*[:=])/],\n    string: {\n      pattern:\n        /\"(?:[^\\\\$\"]|\\\\[\\s\\S]|\\$(?:(?=\")|\\$+(?!\\$)|[^\"${])|\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\})*\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /(^|[^$])\\$\\{(?:[^{}\"]|\"(?:[^\\\\\"]|\\\\[\\s\\S])*\")*\\}/,\n          lookbehind: true,\n          inside: {\n            type: {\n              pattern:\n                /(\\b(?:count|data|local|module|path|self|terraform|var)\\b\\.)[\\w\\*]+/i,\n              lookbehind: true,\n              alias: 'variable'\n            },\n            keyword: /\\b(?:count|data|local|module|path|self|terraform|var)\\b/i,\n            function: /\\w+(?=\\()/,\n            string: {\n              pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n              greedy: true\n            },\n            number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n            punctuation: /[!\\$#%&'()*+,.\\/;<=>@\\[\\\\\\]^`{|}~?:]/\n          }\n        }\n      }\n    },\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    punctuation: /[=\\[\\]{}]/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = hlsl\nhlsl.displayName = 'hlsl'\nhlsl.aliases = []\nfunction hlsl(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.hlsl = Prism.languages.extend('c', {\n    // Regarding keywords and class names:\n    // The list of all keywords was split into 'keyword' and 'class-name' tokens based on whether they are capitalized.\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-keywords\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-reserved-words\n    'class-name': [\n      Prism.languages.c['class-name'],\n      /\\b(?:AppendStructuredBuffer|BlendState|Buffer|ByteAddressBuffer|CompileShader|ComputeShader|ConsumeStructuredBuffer|DepthStencilState|DepthStencilView|DomainShader|GeometryShader|Hullshader|InputPatch|LineStream|OutputPatch|PixelShader|PointStream|RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture(?:1D|1DArray|2D|2DArray|3D)|RasterizerState|RenderTargetView|SamplerComparisonState|SamplerState|StructuredBuffer|Texture(?:1D|1DArray|2D|2DArray|2DMS|2DMSArray|3D|Cube|CubeArray)|TriangleStream|VertexShader)\\b/\n    ],\n    keyword: [\n      // HLSL keyword\n      /\\b(?:asm|asm_fragment|auto|break|case|catch|cbuffer|centroid|char|class|column_major|compile|compile_fragment|const|const_cast|continue|default|delete|discard|do|dynamic_cast|else|enum|explicit|export|extern|for|friend|fxgroup|goto|groupshared|if|in|inline|inout|interface|line|lineadj|linear|long|matrix|mutable|namespace|new|nointerpolation|noperspective|operator|out|packoffset|pass|pixelfragment|point|precise|private|protected|public|register|reinterpret_cast|return|row_major|sample|sampler|shared|short|signed|sizeof|snorm|stateblock|stateblock_state|static|static_cast|string|struct|switch|tbuffer|technique|technique10|technique11|template|texture|this|throw|triangle|triangleadj|try|typedef|typename|uniform|union|unorm|unsigned|using|vector|vertexfragment|virtual|void|volatile|while)\\b/, // scalar, vector, and matrix types\n      /\\b(?:bool|double|dword|float|half|int|min(?:10float|12int|16(?:float|int|uint))|uint)(?:[1-4](?:x[1-4])?)?\\b/\n    ],\n    // https://docs.microsoft.com/en-us/windows/win32/direct3dhlsl/dx-graphics-hlsl-appendix-grammar#floating-point-numbers\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?|\\b0x[\\da-fA-F]+)[fFhHlLuU]?\\b/,\n    boolean: /\\b(?:false|true)\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = hoon\nhoon.displayName = 'hoon'\nhoon.aliases = []\nfunction hoon(Prism) {\n  Prism.languages.hoon = {\n    comment: {\n      pattern: /::.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    constant: /%(?:\\.[ny]|[\\w-]+)/,\n    'class-name': /@(?:[a-z0-9-]*[a-z0-9])?|\\*/i,\n    function: /(?:\\+[-+] {2})?(?:[a-z](?:[a-z0-9-]*[a-z0-9])?)/,\n    keyword:\n      /\\.[\\^\\+\\*=\\?]|![><:\\.=\\?!]|=[>|:,\\.\\-\\^<+;/~\\*\\?]|\\?[>|:\\.\\-\\^<\\+&~=@!]|\\|[\\$_%:\\.\\-\\^~\\*=@\\?]|\\+[|\\$\\+\\*]|:[_\\-\\^\\+~\\*]|%[_:\\.\\-\\^\\+~\\*=]|\\^[|:\\.\\-\\+&~\\*=\\?]|\\$[|_%:<>\\-\\^&~@=\\?]|;[:<\\+;\\/~\\*=]|~[>|\\$_%<\\+\\/&=\\?!]|--|==/\n  }\n}\n","'use strict'\n\nmodule.exports = hpkp\nhpkp.displayName = 'hpkp'\nhpkp.aliases = []\nfunction hpkp(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hpkp-cheat-sheet/\n   */\n  Prism.languages.hpkp = {\n    directive: {\n      pattern:\n        /\\b(?:includeSubDomains|max-age|pin-sha256|preload|report-to|report-uri|strict)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = hsts\nhsts.displayName = 'hsts'\nhsts.aliases = []\nfunction hsts(Prism) {\n  /**\n   * Original by Scott Helme.\n   *\n   * Reference: https://scotthelme.co.uk/hsts-cheat-sheet/\n   */\n  Prism.languages.hsts = {\n    directive: {\n      pattern: /\\b(?:includeSubDomains|max-age|preload)(?=[\\s;=]|$)/i,\n      alias: 'property'\n    },\n    operator: /=/,\n    punctuation: /;/\n  }\n}\n","'use strict'\n\nmodule.exports = http\nhttp.displayName = 'http'\nhttp.aliases = []\nfunction http(Prism) {\n  ;(function (Prism) {\n    /**\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function headerValueOf(name) {\n      return RegExp('(^(?:' + name + '):[ \\t]*(?![ \\t]))[^]+', 'i')\n    }\n    Prism.languages.http = {\n      'request-line': {\n        pattern:\n          /^(?:CONNECT|DELETE|GET|HEAD|OPTIONS|PATCH|POST|PRI|PUT|SEARCH|TRACE)\\s(?:https?:\\/\\/|\\/)\\S*\\sHTTP\\/[\\d.]+/m,\n        inside: {\n          // HTTP Method\n          method: {\n            pattern: /^[A-Z]+\\b/,\n            alias: 'property'\n          },\n          // Request Target e.g. http://example.com, /path/to/file\n          'request-target': {\n            pattern: /^(\\s)(?:https?:\\/\\/|\\/)\\S*(?=\\s)/,\n            lookbehind: true,\n            alias: 'url',\n            inside: Prism.languages.uri\n          },\n          // HTTP Version\n          'http-version': {\n            pattern: /^(\\s)HTTP\\/[\\d.]+/,\n            lookbehind: true,\n            alias: 'property'\n          }\n        }\n      },\n      'response-status': {\n        pattern: /^HTTP\\/[\\d.]+ \\d+ .+/m,\n        inside: {\n          // HTTP Version\n          'http-version': {\n            pattern: /^HTTP\\/[\\d.]+/,\n            alias: 'property'\n          },\n          // Status Code\n          'status-code': {\n            pattern: /^(\\s)\\d+(?=\\s)/,\n            lookbehind: true,\n            alias: 'number'\n          },\n          // Reason Phrase\n          'reason-phrase': {\n            pattern: /^(\\s).+/,\n            lookbehind: true,\n            alias: 'string'\n          }\n        }\n      },\n      header: {\n        pattern: /^[\\w-]+:.+(?:(?:\\r\\n?|\\n)[ \\t].+)*/m,\n        inside: {\n          'header-value': [\n            {\n              pattern: headerValueOf(/Content-Security-Policy/.source),\n              lookbehind: true,\n              alias: ['csp', 'languages-csp'],\n              inside: Prism.languages.csp\n            },\n            {\n              pattern: headerValueOf(/Public-Key-Pins(?:-Report-Only)?/.source),\n              lookbehind: true,\n              alias: ['hpkp', 'languages-hpkp'],\n              inside: Prism.languages.hpkp\n            },\n            {\n              pattern: headerValueOf(/Strict-Transport-Security/.source),\n              lookbehind: true,\n              alias: ['hsts', 'languages-hsts'],\n              inside: Prism.languages.hsts\n            },\n            {\n              pattern: headerValueOf(/[^:]+/.source),\n              lookbehind: true\n            }\n          ],\n          'header-name': {\n            pattern: /^[^:]+/,\n            alias: 'keyword'\n          },\n          punctuation: /^:/\n        }\n      }\n    } // Create a mapping of Content-Type headers to language definitions\n    var langs = Prism.languages\n    var httpLanguages = {\n      'application/javascript': langs.javascript,\n      'application/json': langs.json || langs.javascript,\n      'application/xml': langs.xml,\n      'text/xml': langs.xml,\n      'text/html': langs.html,\n      'text/css': langs.css,\n      'text/plain': langs.plain\n    } // Declare which types can also be suffixes\n    var suffixTypes = {\n      'application/json': true,\n      'application/xml': true\n    }\n    /**\n     * Returns a pattern for the given content type which matches it and any type which has it as a suffix.\n     *\n     * @param {string} contentType\n     * @returns {string}\n     */\n    function getSuffixPattern(contentType) {\n      var suffix = contentType.replace(/^[a-z]+\\//, '')\n      var suffixPattern = '\\\\w+/(?:[\\\\w.-]+\\\\+)+' + suffix + '(?![+\\\\w.-])'\n      return '(?:' + contentType + '|' + suffixPattern + ')'\n    } // Insert each content type parser that has its associated language\n    // currently loaded.\n    var options\n    for (var contentType in httpLanguages) {\n      if (httpLanguages[contentType]) {\n        options = options || {}\n        var pattern = suffixTypes[contentType]\n          ? getSuffixPattern(contentType)\n          : contentType\n        options[contentType.replace(/\\//g, '-')] = {\n          pattern: RegExp(\n            '(' +\n              /content-type:\\s*/.source +\n              pattern +\n              /(?:(?:\\r\\n?|\\n)[\\w-].*)*(?:\\r(?:\\n|(?!\\n))|\\n)/.source +\n              ')' + // This is a little interesting:\n              // The HTTP format spec required 1 empty line before the body to make everything unambiguous.\n              // However, when writing code by hand (e.g. to display on a website) people can forget about this,\n              // so we want to be liberal here. We will allow the empty line to be omitted if the first line of\n              // the body does not start with a [\\w-] character (as headers do).\n              /[^ \\t\\w-][\\s\\S]*/.source,\n            'i'\n          ),\n          lookbehind: true,\n          inside: httpLanguages[contentType]\n        }\n      }\n    }\n    if (options) {\n      Prism.languages.insertBefore('http', 'header', options)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ichigojam\nichigojam.displayName = 'ichigojam'\nichigojam.aliases = []\nfunction ichigojam(Prism) {\n  // according to the offical reference (EN)\n  // https://ichigojam.net/IchigoJam-en.html\n  Prism.languages.ichigojam = {\n    comment: /(?:\\B'|REM)(?:[^\\n\\r]*)/i,\n    string: {\n      pattern: /\"(?:\"\"|[!#$%&'()*,\\/:;<=>?^\\w +\\-.])*\"/,\n      greedy: true\n    },\n    number: /\\B#[0-9A-F]+|\\B`[01]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i,\n    keyword:\n      /\\b(?:BEEP|BPS|CASE|CLEAR|CLK|CLO|CLP|CLS|CLT|CLV|CONT|COPY|ELSE|END|FILE|FILES|FOR|GOSUB|GOTO|GSB|IF|INPUT|KBD|LED|LET|LIST|LOAD|LOCATE|LRUN|NEW|NEXT|OUT|PLAY|POKE|PRINT|PWM|REM|RENUM|RESET|RETURN|RIGHT|RTN|RUN|SAVE|SCROLL|SLEEP|SRND|STEP|STOP|SUB|TEMPO|THEN|TO|UART|VIDEO|WAIT)(?:\\$|\\b)/i,\n    function:\n      /\\b(?:ABS|ANA|ASC|BIN|BTN|DEC|END|FREE|HELP|HEX|I2CR|I2CW|IN|INKEY|LEN|LINE|PEEK|RND|SCR|SOUND|STR|TICK|USR|VER|VPEEK|ZER)(?:\\$|\\b)/i,\n    label: /(?:\\B@\\S+)/,\n    operator: /<[=>]?|>=?|\\|\\||&&|[+\\-*\\/=|&^~!]|\\b(?:AND|NOT|OR)\\b/i,\n    punctuation: /[\\[,;:()\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = icon\nicon.displayName = 'icon'\nicon.aliases = []\nfunction icon(Prism) {\n  Prism.languages.icon = {\n    comment: /#.*/,\n    string: {\n      pattern: /([\"'])(?:(?!\\1)[^\\\\\\r\\n_]|\\\\.|_(?!\\1)(?:\\r\\n|[\\s\\S]))*\\1/,\n      greedy: true\n    },\n    number: /\\b(?:\\d+r[a-z\\d]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b|\\.\\d+\\b/i,\n    'builtin-keyword': {\n      pattern:\n        /&(?:allocated|ascii|clock|collections|cset|current|date|dateline|digits|dump|e|error(?:number|text|value)?|errout|fail|features|file|host|input|lcase|letters|level|line|main|null|output|phi|pi|pos|progname|random|regions|source|storage|subject|time|trace|ucase|version)\\b/,\n      alias: 'variable'\n    },\n    directive: {\n      pattern: /\\$\\w+/,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\b(?:break|by|case|create|default|do|else|end|every|fail|global|if|initial|invocable|link|local|next|not|of|procedure|record|repeat|return|static|suspend|then|to|until|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*[({]|\\s*!\\s*\\[)/,\n    operator:\n      /[+-]:(?!=)|(?:[\\/?@^%&]|\\+\\+?|--?|==?=?|~==?=?|\\*\\*?|\\|\\|\\|?|<(?:->?|<?=?)|>>?=?)(?::=)?|:(?:=:?)?|[!.\\\\|~]/,\n    punctuation: /[\\[\\](){},;]/\n  }\n}\n","'use strict'\n\nmodule.exports = icuMessageFormat\nicuMessageFormat.displayName = 'icuMessageFormat'\nicuMessageFormat.aliases = []\nfunction icuMessageFormat(Prism) {\n  // https://unicode-org.github.io/icu/userguide/format_parse/messages/\n  // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/MessageFormat.html\n  ;(function (Prism) {\n    /**\n     * @param {string} source\n     * @param {number} level\n     * @returns {string}\n     */\n    function nested(source, level) {\n      if (level <= 0) {\n        return /[]/.source\n      } else {\n        return source.replace(/<SELF>/g, function () {\n          return nested(source, level - 1)\n        })\n      }\n    }\n    var stringPattern = /'[{}:=,](?:[^']|'')*'(?!')/\n    var escape = {\n      pattern: /''/,\n      greedy: true,\n      alias: 'operator'\n    }\n    var string = {\n      pattern: stringPattern,\n      greedy: true,\n      inside: {\n        escape: escape\n      }\n    }\n    var argumentSource = nested(\n      /\\{(?:[^{}']|'(?![{},'])|''|<STR>|<SELF>)*\\}/.source.replace(\n        /<STR>/g,\n        function () {\n          return stringPattern.source\n        }\n      ),\n      8\n    )\n    var nestedMessage = {\n      pattern: RegExp(argumentSource),\n      inside: {\n        message: {\n          pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: null // see below\n        },\n        'message-delimiter': {\n          pattern: /./,\n          alias: 'punctuation'\n        }\n      }\n    }\n    Prism.languages['icu-message-format'] = {\n      argument: {\n        pattern: RegExp(argumentSource),\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /^(\\{)[\\s\\S]+(?=\\}$)/,\n            lookbehind: true,\n            inside: {\n              'argument-name': {\n                pattern: /^(\\s*)[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'choice-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4c/classicu_1_1ChoiceFormat.html#details\n                pattern: /^(\\s*,\\s*choice\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  punctuation: /\\|/,\n                  range: {\n                    pattern: /^(\\s*)[+-]?(?:\\d+(?:\\.\\d*)?|\\u221e)\\s*[<#\\u2264]/,\n                    lookbehind: true,\n                    inside: {\n                      operator: /[<#\\u2264]/,\n                      number: /\\S+/\n                    }\n                  },\n                  rest: null // see below\n                }\n              },\n              'plural-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/PluralFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern:\n                  /^(\\s*,\\s*(?:plural|selectordinal)\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  offset: /^offset:\\s*\\d+/,\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /=\\d+|[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^(?:few|many|one|other|two|zero)$/\n                    }\n                  }\n                }\n              },\n              'select-style': {\n                // https://unicode-org.github.io/icu-docs/apidoc/released/icu4j/com/ibm/icu/text/SelectFormat.html#:~:text=Patterns%20and%20Their%20Interpretation\n                pattern: /^(\\s*,\\s*select\\s*,\\s*)\\S(?:[\\s\\S]*\\S)?/,\n                lookbehind: true,\n                inside: {\n                  'nested-message': nestedMessage,\n                  selector: {\n                    pattern: /[^{}:=,\\s]+/,\n                    inside: {\n                      keyword: /^other$/\n                    }\n                  }\n                }\n              },\n              keyword: /\\b(?:choice|plural|select|selectordinal)\\b/,\n              'arg-type': {\n                pattern: /\\b(?:date|duration|number|ordinal|spellout|time)\\b/,\n                alias: 'keyword'\n              },\n              'arg-skeleton': {\n                pattern: /(,\\s*)::[^{}:=,\\s]+/,\n                lookbehind: true\n              },\n              'arg-style': {\n                pattern:\n                  /(,\\s*)(?:currency|full|integer|long|medium|percent|short)(?=\\s*$)/,\n                lookbehind: true\n              },\n              'arg-style-text': {\n                pattern: RegExp(\n                  /(^\\s*,\\s*(?=\\S))/.source +\n                    nested(/(?:[^{}']|'[^']*'|\\{(?:<SELF>)?\\})+/.source, 8) +\n                    '$'\n                ),\n                lookbehind: true,\n                alias: 'string'\n              },\n              punctuation: /,/\n            }\n          },\n          'argument-delimiter': {\n            pattern: /./,\n            alias: 'operator'\n          }\n        }\n      },\n      escape: escape,\n      string: string\n    }\n    nestedMessage.inside.message.inside = Prism.languages['icu-message-format']\n    Prism.languages['icu-message-format'].argument.inside.content.inside[\n      'choice-style'\n    ].inside.rest = Prism.languages['icu-message-format']\n  })(Prism)\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = idris\nidris.displayName = 'idris'\nidris.aliases = ['idr']\nfunction idris(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.idris = Prism.languages.extend('haskell', {\n    comment: {\n      pattern: /(?:(?:--|\\|\\|\\|).*$|\\{-[\\s\\S]*?-\\})/m\n    },\n    keyword:\n      /\\b(?:Type|case|class|codata|constructor|corecord|data|do|dsl|else|export|if|implementation|implicit|import|impossible|in|infix|infixl|infixr|instance|interface|let|module|mutual|namespace|of|parameters|partial|postulate|private|proof|public|quoteGoal|record|rewrite|syntax|then|total|using|where|with)\\b/,\n    builtin: undefined\n  })\n  Prism.languages.insertBefore('idris', 'keyword', {\n    'import-statement': {\n      pattern: /(^\\s*import\\s+)(?:[A-Z][\\w']*)(?:\\.[A-Z][\\w']*)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    }\n  })\n  Prism.languages.idr = Prism.languages.idris\n}\n","'use strict'\n\nmodule.exports = iecst\niecst.displayName = 'iecst'\niecst.aliases = []\nfunction iecst(Prism) {\n  Prism.languages.iecst = {\n    comment: [\n      {\n        pattern:\n          /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\(\\*[\\s\\S]*?(?:\\*\\)|$)|\\{[\\s\\S]*?(?:\\}|$))/,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: [\n      /\\b(?:END_)?(?:PROGRAM|CONFIGURATION|INTERFACE|FUNCTION_BLOCK|FUNCTION|ACTION|TRANSITION|TYPE|STRUCT|(?:INITIAL_)?STEP|NAMESPACE|LIBRARY|CHANNEL|FOLDER|RESOURCE|VAR_(?:ACCESS|CONFIG|EXTERNAL|GLOBAL|INPUT|IN_OUT|OUTPUT|TEMP)|VAR|METHOD|PROPERTY)\\b/i,\n      /\\b(?:AT|BY|(?:END_)?(?:CASE|FOR|IF|REPEAT|WHILE)|CONSTANT|CONTINUE|DO|ELSE|ELSIF|EXIT|EXTENDS|FROM|GET|GOTO|IMPLEMENTS|JMP|NON_RETAIN|OF|PRIVATE|PROTECTED|PUBLIC|RETAIN|RETURN|SET|TASK|THEN|TO|UNTIL|USING|WITH|__CATCH|__ENDTRY|__FINALLY|__TRY)\\b/\n    ],\n    'class-name':\n      /\\b(?:ANY|ARRAY|BOOL|BYTE|U?(?:D|L|S)?INT|(?:D|L)?WORD|DATE(?:_AND_TIME)?|DT|L?REAL|POINTER|STRING|TIME(?:_OF_DAY)?|TOD)\\b/,\n    address: {\n      pattern: /%[IQM][XBWDL][\\d.]*|%[IQ][\\d.]*/,\n      alias: 'symbol'\n    },\n    number:\n      /\\b(?:16#[\\da-f]+|2#[01_]+|0x[\\da-f]+)\\b|\\b(?:D|DT|T|TOD)#[\\d_shmd:]*|\\b[A-Z]*#[\\d.,_]*|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/,\n    operator:\n      /S?R?:?=>?|&&?|\\*\\*?|<[=>]?|>=?|[-:^/+#]|\\b(?:AND|EQ|EXPT|GE|GT|LE|LT|MOD|NE|NOT|OR|XOR)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    punctuation: /[()[\\].,;]/\n  }\n}\n","'use strict'\n\nmodule.exports = ignore\nignore.displayName = 'ignore'\nignore.aliases = ['gitignore', 'hgignore', 'npmignore']\nfunction ignore(Prism) {\n  ;(function (Prism) {\n    Prism.languages.ignore = {\n      // https://git-scm.com/docs/gitignore\n      comment: /^#.*/m,\n      entry: {\n        pattern: /\\S(?:.*(?:(?:\\\\ )|\\S))?/,\n        alias: 'string',\n        inside: {\n          operator: /^!|\\*\\*?|\\?/,\n          regex: {\n            pattern: /(^|[^\\\\])\\[[^\\[\\]]*\\]/,\n            lookbehind: true\n          },\n          punctuation: /\\//\n        }\n      }\n    }\n    Prism.languages.gitignore = Prism.languages.ignore\n    Prism.languages.hgignore = Prism.languages.ignore\n    Prism.languages.npmignore = Prism.languages.ignore\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = inform7\ninform7.displayName = 'inform7'\ninform7.aliases = []\nfunction inform7(Prism) {\n  Prism.languages.inform7 = {\n    string: {\n      pattern: /\"[^\"]*\"/,\n      inside: {\n        substitution: {\n          pattern: /\\[[^\\[\\]]+\\]/,\n          inside: {\n            delimiter: {\n              pattern: /\\[|\\]/,\n              alias: 'punctuation'\n            } // See rest below\n          }\n        }\n      }\n    },\n    comment: {\n      pattern: /\\[[^\\[\\]]+\\]/,\n      greedy: true\n    },\n    title: {\n      pattern: /^[ \\t]*(?:book|chapter|part(?! of)|section|table|volume)\\b.+/im,\n      alias: 'important'\n    },\n    number: {\n      pattern:\n        /(^|[^-])(?:\\b\\d+(?:\\.\\d+)?(?:\\^\\d+)?(?:(?!\\d)\\w+)?|\\b(?:eight|eleven|five|four|nine|one|seven|six|ten|three|twelve|two))\\b(?!-)/i,\n      lookbehind: true\n    },\n    verb: {\n      pattern:\n        /(^|[^-])\\b(?:answering|applying to|are|asking|attacking|be(?:ing)?|burning|buying|called|carries|carry(?! out)|carrying|climbing|closing|conceal(?:ing|s)?|consulting|contain(?:ing|s)?|cutting|drinking|dropping|eating|enclos(?:es?|ing)|entering|examining|exiting|getting|giving|going|ha(?:s|ve|ving)|hold(?:ing|s)?|impl(?:ies|y)|incorporat(?:es?|ing)|inserting|is|jumping|kissing|listening|locking|looking|mean(?:ing|s)?|opening|provid(?:es?|ing)|pulling|pushing|putting|relat(?:es?|ing)|removing|searching|see(?:ing|s)?|setting|showing|singing|sleeping|smelling|squeezing|support(?:ing|s)?|swearing|switching|taking|tasting|telling|thinking|throwing|touching|turning|tying|unlock(?:ing|s)?|var(?:ies|y|ying)|waiting|waking|waving|wear(?:ing|s)?)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    keyword: {\n      pattern:\n        /(^|[^-])\\b(?:after|before|carry out|check|continue the action|definition(?= *:)|do nothing|else|end (?:if|the story|unless)|every turn|if|include|instead(?: of)?|let|move|no|now|otherwise|repeat|report|resume the story|rule for|running through|say(?:ing)?|stop the action|test|try(?:ing)?|understand|unless|use|when|while|yes)\\b(?!-)/i,\n      lookbehind: true\n    },\n    property: {\n      pattern:\n        /(^|[^-])\\b(?:adjacent(?! to)|carried|closed|concealed|contained|dark|described|edible|empty|enclosed|enterable|even|female|fixed in place|full|handled|held|improper-named|incorporated|inedible|invisible|lighted|lit|lock(?:able|ed)|male|marked for listing|mentioned|negative|neuter|non-(?:empty|full|recurring)|odd|opaque|open(?:able)?|plural-named|portable|positive|privately-named|proper-named|provided|publically-named|pushable between rooms|recurring|related|rubbing|scenery|seen|singular-named|supported|swinging|switch(?:able|ed(?: off| on)?)|touch(?:able|ed)|transparent|unconcealed|undescribed|unlit|unlocked|unmarked for listing|unmentioned|unopenable|untouchable|unvisited|variable|visible|visited|wearable|worn)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    position: {\n      pattern:\n        /(^|[^-])\\b(?:above|adjacent to|back side of|below|between|down|east|everywhere|front side|here|in|inside(?: from)?|north(?:east|west)?|nowhere|on(?: top of)?|other side|outside(?: from)?|parts? of|regionally in|south(?:east|west)?|through|up|west|within)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    type: {\n      pattern:\n        /(^|[^-])\\b(?:actions?|activit(?:ies|y)|actors?|animals?|backdrops?|containers?|devices?|directions?|doors?|holders?|kinds?|lists?|m[ae]n|nobody|nothing|nouns?|numbers?|objects?|people|persons?|player(?:'s holdall)?|regions?|relations?|rooms?|rule(?:book)?s?|scenes?|someone|something|supporters?|tables?|texts?|things?|time|vehicles?|wom[ae]n)\\b(?!-)/i,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    punctuation: /[.,:;(){}]/\n  }\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest =\n    Prism.languages.inform7 // We don't want the remaining text in the substitution to be highlighted as the string.\n  Prism.languages.inform7['string'].inside['substitution'].inside.rest.text = {\n    pattern: /\\S(?:\\s*\\S)*/,\n    alias: 'comment'\n  }\n}\n","'use strict'\n\nmodule.exports = ini\nini.displayName = 'ini'\nini.aliases = []\nfunction ini(Prism) {\n  Prism.languages.ini = {\n    /**\n     * The component mimics the behavior of the Win32 API parser.\n     *\n     * @see {@link https://github.com/PrismJS/prism/issues/2775#issuecomment-787477723}\n     */\n    comment: {\n      pattern: /(^[ \\f\\t\\v]*)[#;][^\\n\\r]*/m,\n      lookbehind: true\n    },\n    section: {\n      pattern: /(^[ \\f\\t\\v]*)\\[[^\\n\\r\\]]*\\]?/m,\n      lookbehind: true,\n      inside: {\n        'section-name': {\n          pattern: /(^\\[[ \\f\\t\\v]*)[^ \\f\\t\\v\\]]+(?:[ \\f\\t\\v]+[^ \\f\\t\\v\\]]+)*/,\n          lookbehind: true,\n          alias: 'selector'\n        },\n        punctuation: /\\[|\\]/\n      }\n    },\n    key: {\n      pattern:\n        /(^[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v=]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v=]+)*(?=[ \\f\\t\\v]*=)/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    value: {\n      pattern: /(=[ \\f\\t\\v]*)[^ \\f\\n\\r\\t\\v]+(?:[ \\f\\t\\v]+[^ \\f\\n\\r\\t\\v]+)*/,\n      lookbehind: true,\n      alias: 'attr-value',\n      inside: {\n        'inner-value': {\n          pattern: /^(\"|').+(?=\\1$)/,\n          lookbehind: true\n        }\n      }\n    },\n    punctuation: /=/\n  }\n}\n","'use strict'\n\nmodule.exports = io\nio.displayName = 'io'\nio.aliases = []\nfunction io(Prism) {\n  Prism.languages.io = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$)|\\/\\/.*|#.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'triple-quoted-string': {\n      pattern: /\"\"\"(?:\\\\[\\s\\S]|(?!\"\"\")[^\\\\])*\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:activate|activeCoroCount|asString|block|break|call|catch|clone|collectGarbage|compileString|continue|do|doFile|doMessage|doString|else|elseif|exit|for|foreach|forward|getEnvironmentVariable|getSlot|hasSlot|if|ifFalse|ifNil|ifNilEval|ifTrue|isActive|isNil|isResumable|list|message|method|parent|pass|pause|perform|performWithArgList|print|println|proto|raise|raiseResumable|removeSlot|resend|resume|schedulerSleepSeconds|self|sender|setSchedulerSleepSeconds|setSlot|shallowCopy|slotNames|super|system|then|thisBlock|thisContext|try|type|uniqueId|updateSlot|wait|while|write|yield)\\b/,\n    builtin:\n      /\\b(?:Array|AudioDevice|AudioMixer|BigNum|Block|Box|Buffer|CFunction|CGI|Color|Curses|DBM|DNSResolver|DOConnection|DOProxy|DOServer|Date|Directory|Duration|DynLib|Error|Exception|FFT|File|Fnmatch|Font|Future|GL|GLE|GLScissor|GLU|GLUCylinder|GLUQuadric|GLUSphere|GLUT|Host|Image|Importer|LinkList|List|Lobby|Locals|MD5|MP3Decoder|MP3Encoder|Map|Message|Movie|Notification|Number|Object|OpenGL|Point|Protos|Random|Regex|SGML|SGMLElement|SGMLParser|SQLite|Sequence|Server|ShowMessage|SleepyCat|SleepyCatCursor|Socket|SocketManager|Sound|Soup|Store|String|Tree|UDPSender|UPDReceiver|URL|User|Warning|WeakLink)\\b/,\n    boolean: /\\b(?:false|nil|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e-?\\d+)?/i,\n    operator:\n      /[=!*/%+\\-^&|]=|>>?=?|<<?=?|:?:?=|\\+\\+?|--?|\\*\\*?|\\/\\/?|%|\\|\\|?|&&?|\\b(?:and|not|or|return)\\b|@@?|\\?\\??|\\.\\./,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = j\nj.displayName = 'j'\nj.aliases = []\nfunction j(Prism) {\n  Prism.languages.j = {\n    comment: {\n      pattern: /\\bNB\\..*/,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:(?:CR|LF|adverb|conjunction|def|define|dyad|monad|noun|verb)\\b|(?:assert|break|case|catch[dt]?|continue|do|else|elseif|end|fcase|for|for_\\w+|goto_\\w+|if|label_\\w+|return|select|throw|try|while|whilst)\\.)/,\n    verb: {\n      // Negative look-ahead prevents bad highlighting\n      // of ^: ;. =. =: !. !:\n      pattern:\n        /(?!\\^:|;\\.|[=!][.:])(?:\\{(?:\\.|::?)?|p(?:\\.\\.?|:)|[=!\\]]|[<>+*\\-%$|,#][.:]?|[?^]\\.?|[;\\[]:?|[~}\"i][.:]|[ACeEIjLor]\\.|(?:[_\\/\\\\qsux]|_?\\d):)/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b_?(?:(?!\\d:)\\d+(?:\\.\\d+)?(?:(?:ad|ar|[ejpx])_?\\d+(?:\\.\\d+)?)*(?:b_?[\\da-z]+(?:\\.[\\da-z]+)?)?|_\\b(?!\\.))/,\n    adverb: {\n      pattern: /[~}]|[\\/\\\\]\\.?|[bfM]\\.|t[.:]/,\n      alias: 'builtin'\n    },\n    operator: /[=a][.:]|_\\./,\n    conjunction: {\n      pattern: /&(?:\\.:?|:)?|[.:@][.:]?|[!D][.:]|[;dHT]\\.|`:?|[\\^LS]:|\"/,\n      alias: 'variable'\n    },\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = java\njava.displayName = 'java'\njava.aliases = []\nfunction java(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/ // full package (optional) + parent classes (optional)\n    var classNamePrefix = /(^|[^\\w.])(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/\n      .source // based on the java naming conventions\n    var className = {\n      pattern: RegExp(classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n      lookbehind: true,\n      inside: {\n        namespace: {\n          pattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /\\./\n      }\n    }\n    Prism.languages.java = Prism.languages.extend('clike', {\n      string: {\n        pattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        lookbehind: true,\n        greedy: true\n      },\n      'class-name': [\n        className,\n        {\n          // variables and parameters\n          // this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n          pattern: RegExp(\n            classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()])/.source\n          ),\n          lookbehind: true,\n          inside: className.inside\n        }\n      ],\n      keyword: keywords,\n      function: [\n        Prism.languages.clike.function,\n        {\n          pattern: /(::\\s*)[a-z_]\\w*/,\n          lookbehind: true\n        }\n      ],\n      number:\n        /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n      operator: {\n        pattern:\n          /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'string', {\n      'triple-quoted-string': {\n        // http://openjdk.java.net/jeps/355#Description\n        pattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n        greedy: true,\n        alias: 'string'\n      },\n      char: {\n        pattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('java', 'class-name', {\n      annotation: {\n        pattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      generics: {\n        pattern:\n          /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n        inside: {\n          'class-name': className,\n          keyword: keywords,\n          punctuation: /[<>(),.:]/,\n          operator: /[?&|]/\n        }\n      },\n      namespace: {\n        pattern: RegExp(\n          /(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/.source.replace(\n            /<keyword>/g,\n            function () {\n              return keywords.source\n            }\n          )\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = javadoc\njavadoc.displayName = 'javadoc'\njavadoc.aliases = []\nfunction javadoc(Prism) {\n  Prism.register(refractorJava)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var codeLinePattern = /(^(?:[\\t ]*(?:\\*\\s*)*))[^*\\s].*$/m\n    var memberReference = /#\\s*\\w+(?:\\s*\\([^()]*\\))?/.source\n    var reference =\n      /(?:\\b[a-zA-Z]\\w+\\s*\\.\\s*)*\\b[A-Z]\\w*(?:\\s*<mem>)?|<mem>/.source.replace(\n        /<mem>/g,\n        function () {\n          return memberReference\n        }\n      )\n    Prism.languages.javadoc = Prism.languages.extend('javadoclike', {})\n    Prism.languages.insertBefore('javadoc', 'keyword', {\n      reference: {\n        pattern: RegExp(\n          /(@(?:exception|link|linkplain|see|throws|value)\\s+(?:\\*\\s*)?)/\n            .source +\n            '(?:' +\n            reference +\n            ')'\n        ),\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /(#\\s*)\\w+(?=\\s*\\()/,\n            lookbehind: true\n          },\n          field: {\n            pattern: /(#\\s*)\\w+/,\n            lookbehind: true\n          },\n          namespace: {\n            pattern: /\\b(?:[a-z]\\w*\\s*\\.\\s*)+/,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          'class-name': /\\b[A-Z]\\w*/,\n          keyword: Prism.languages.java.keyword,\n          punctuation: /[#()[\\],.]/\n        }\n      },\n      'class-name': {\n        // @param <T> the first generic type parameter\n        pattern: /(@param\\s+)<[A-Z]\\w*>/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.<>]/\n        }\n      },\n      'code-section': [\n        {\n          pattern:\n            /(\\{@code\\s+(?!\\s))(?:[^\\s{}]|\\s+(?![\\s}])|\\{(?:[^{}]|\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})*\\})*\\})+(?=\\s*\\})/,\n          lookbehind: true,\n          inside: {\n            code: {\n              // there can't be any HTML inside of {@code} tags\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: Prism.languages.java,\n              alias: 'language-java'\n            }\n          }\n        },\n        {\n          pattern:\n            /(<(code|pre|tt)>(?!<code>)\\s*)\\S(?:\\S|\\s+\\S)*?(?=\\s*<\\/\\2>)/,\n          lookbehind: true,\n          inside: {\n            line: {\n              pattern: codeLinePattern,\n              lookbehind: true,\n              inside: {\n                // highlight HTML tags and entities\n                tag: Prism.languages.markup.tag,\n                entity: Prism.languages.markup.entity,\n                code: {\n                  // everything else is Java code\n                  pattern: /.+/,\n                  inside: Prism.languages.java,\n                  alias: 'language-java'\n                }\n              }\n            }\n          }\n        }\n      ],\n      tag: Prism.languages.markup.tag,\n      entity: Prism.languages.markup.entity\n    })\n    Prism.languages.javadoclike.addSupport('java', Prism.languages.javadoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javadoclike\njavadoclike.displayName = 'javadoclike'\njavadoclike.aliases = []\nfunction javadoclike(Prism) {\n  ;(function (Prism) {\n    var javaDocLike = (Prism.languages.javadoclike = {\n      parameter: {\n        pattern:\n          /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*@(?:arg|arguments|param)\\s+)\\w+/m,\n        lookbehind: true\n      },\n      keyword: {\n        // keywords are the first word in a line preceded be an `@` or surrounded by curly braces.\n        // @word, {@word}\n        pattern: /(^[\\t ]*(?:\\/{3}|\\*|\\/\\*\\*)\\s*|\\{)@[a-z][a-zA-Z-]+\\b/m,\n        lookbehind: true\n      },\n      punctuation: /[{}]/\n    })\n    /**\n     * Adds doc comment support to the given language and calls a given callback on each doc comment pattern.\n     *\n     * @param {string} lang the language add doc comment support to.\n     * @param {(pattern: {inside: {rest: undefined}}) => void} callback the function called with each doc comment pattern as argument.\n     */\n    function docCommentSupport(lang, callback) {\n      var tokenName = 'doc-comment'\n      var grammar = Prism.languages[lang]\n      if (!grammar) {\n        return\n      }\n      var token = grammar[tokenName]\n      if (!token) {\n        // add doc comment: /** */\n        var definition = {}\n        definition[tokenName] = {\n          pattern: /(^|[^\\\\])\\/\\*\\*[^/][\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true,\n          alias: 'comment'\n        }\n        grammar = Prism.languages.insertBefore(lang, 'comment', definition)\n        token = grammar[tokenName]\n      }\n      if (token instanceof RegExp) {\n        // convert regex to object\n        token = grammar[tokenName] = {\n          pattern: token\n        }\n      }\n      if (Array.isArray(token)) {\n        for (var i = 0, l = token.length; i < l; i++) {\n          if (token[i] instanceof RegExp) {\n            token[i] = {\n              pattern: token[i]\n            }\n          }\n          callback(token[i])\n        }\n      } else {\n        callback(token)\n      }\n    }\n    /**\n     * Adds doc-comment support to the given languages for the given documentation language.\n     *\n     * @param {string[]|string} languages\n     * @param {Object} docLanguage\n     */\n    function addSupport(languages, docLanguage) {\n      if (typeof languages === 'string') {\n        languages = [languages]\n      }\n      languages.forEach(function (lang) {\n        docCommentSupport(lang, function (pattern) {\n          if (!pattern.inside) {\n            pattern.inside = {}\n          }\n          pattern.inside.rest = docLanguage\n        })\n      })\n    }\n    Object.defineProperty(javaDocLike, 'addSupport', {\n      value: addSupport\n    })\n    javaDocLike.addSupport(['java', 'javascript', 'php'], javaDocLike)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = javascript\njavascript.displayName = 'javascript'\njavascript.aliases = ['js']\nfunction javascript(Prism) {\n  Prism.languages.javascript = Prism.languages.extend('clike', {\n    'class-name': [\n      Prism.languages.clike['class-name'],\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /((?:^|\\})\\s*)catch\\b/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n        lookbehind: true\n      }\n    ],\n    // Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n    function:\n      /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n    number: {\n      pattern: RegExp(\n        /(^|[^\\w$])/.source +\n          '(?:' + // constant\n          (/NaN|Infinity/.source +\n            '|' + // binary integer\n            /0[bB][01]+(?:_[01]+)*n?/.source +\n            '|' + // octal integer\n            /0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n            '|' + // hexadecimal integer\n            /0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n            '|' + // decimal bigint\n            /\\d+(?:_\\d+)*n/.source +\n            '|' + // decimal number (integer or float) but no bigint\n            /(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/\n              .source) +\n          ')' +\n          /(?![\\w$])/.source\n      ),\n      lookbehind: true\n    },\n    operator:\n      /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n  })\n  Prism.languages.javascript['class-name'][0].pattern =\n    /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/\n  Prism.languages.insertBefore('javascript', 'keyword', {\n    regex: {\n      // eslint-disable-next-line regexp/no-dupe-characters-character-class\n      pattern:\n        /((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\/|\\/$/,\n        'regex-flags': /^[a-z]+$/\n      }\n    },\n    // This must be declared before keyword because we use \"function\" inside the look-forward\n    'function-variable': {\n      pattern:\n        /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n      alias: 'function'\n    },\n    parameter: [\n      {\n        pattern:\n          /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      {\n        pattern:\n          /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    ],\n    constant: /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n  })\n  Prism.languages.insertBefore('javascript', 'string', {\n    hashbang: {\n      pattern: /^#!.*/,\n      greedy: true,\n      alias: 'comment'\n    },\n    'template-string': {\n      pattern:\n        /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n      greedy: true,\n      inside: {\n        'template-punctuation': {\n          pattern: /^`|`$/,\n          alias: 'string'\n        },\n        interpolation: {\n          pattern:\n            /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^\\$\\{|\\}$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.javascript\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'string-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    }\n  })\n  Prism.languages.insertBefore('javascript', 'operator', {\n    'literal-property': {\n      pattern:\n        /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n      lookbehind: true,\n      alias: 'property'\n    }\n  })\n  if (Prism.languages.markup) {\n    Prism.languages.markup.tag.addInlined('script', 'javascript') // add attribute support for all DOM events.\n    // https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n    Prism.languages.markup.tag.addAttribute(\n      /on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/\n        .source,\n      'javascript'\n    )\n  }\n  Prism.languages.js = Prism.languages.javascript\n}\n","'use strict'\n\nmodule.exports = javastacktrace\njavastacktrace.displayName = 'javastacktrace'\njavastacktrace.aliases = []\nfunction javastacktrace(Prism) {\n  // Specification:\n  // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/Throwable.html#printStackTrace()\n  Prism.languages.javastacktrace = {\n    // java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: java.sql.SQLException: Violation of unique constraint MY_ENTITY_UK_1: duplicate value(s) for column(s) MY_COLUMN in statement [...]\n    // Caused by: com.example.myproject.MyProjectServletException\n    // Caused by: MidLevelException: LowLevelException\n    // Suppressed: Resource$CloseFailException: Resource ID = 0\n    summary: {\n      pattern:\n        /^([\\t ]*)(?:(?:Caused by:|Suppressed:|Exception in thread \"[^\"]*\")[\\t ]+)?[\\w$.]+(?::.*)?$/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern:\n            /^([\\t ]*)(?:(?:Caused by|Suppressed)(?=:)|Exception in thread)/m,\n          lookbehind: true\n        },\n        // the current thread if the summary starts with 'Exception in thread'\n        string: {\n          pattern: /^(\\s*)\"[^\"]*\"/,\n          lookbehind: true\n        },\n        exceptions: {\n          pattern: /^(:?\\s*)[\\w$.]+(?=:|$)/,\n          lookbehind: true,\n          inside: {\n            'class-name': /[\\w$]+$/,\n            namespace: /\\b[a-z]\\w*\\b/,\n            punctuation: /\\./\n          }\n        },\n        message: {\n          pattern: /(:\\s*)\\S.*/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        punctuation: /:/\n      }\n    },\n    // at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166)\n    // at org.hsqldb.jdbc.Util.throwError(Unknown Source) here could be some notes\n    // at java.base/java.lang.Class.forName0(Native Method)\n    // at Util.<init>(Unknown Source)\n    // at com.foo.loader/foo@9.0/com.foo.Main.run(Main.java:101)\n    // at com.foo.loader//com.foo.bar.App.run(App.java:12)\n    // at acme@2.1/org.acme.Lib.test(Lib.java:80)\n    // at MyClass.mash(MyClass.java:9)\n    //\n    // More information:\n    // https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/lang/StackTraceElement.html#toString()\n    //\n    // A valid Java module name is defined as:\n    //   \"A module name consists of one or more Java identifiers (§3.8) separated by \".\" tokens.\"\n    // https://docs.oracle.com/javase/specs/jls/se9/html/jls-6.html#jls-ModuleName\n    //\n    // A Java module version is defined by this class:\n    // https://docs.oracle.com/javase/9/docs/api/java/lang/module/ModuleDescriptor.Version.html\n    // This is the implementation of the `parse` method in JDK13:\n    // https://github.com/matcdac/jdk/blob/2305df71d1b7710266ae0956d73927a225132c0f/src/java.base/share/classes/java/lang/module/ModuleDescriptor.java#L1108\n    // However, to keep this simple, a version will be matched by the pattern /@[\\w$.+-]*/.\n    'stack-frame': {\n      pattern: /^([\\t ]*)at (?:[\\w$./]|@[\\w$.+-]*\\/)+(?:<init>)?\\([^()]*\\)/m,\n      lookbehind: true,\n      inside: {\n        keyword: {\n          pattern: /^(\\s*)at(?= )/,\n          lookbehind: true\n        },\n        source: [\n          // (Main.java:15)\n          // (Main.scala:15)\n          {\n            pattern: /(\\()\\w+\\.\\w+:\\d+(?=\\))/,\n            lookbehind: true,\n            inside: {\n              file: /^\\w+\\.\\w+/,\n              punctuation: /:/,\n              'line-number': {\n                pattern: /\\b\\d+\\b/,\n                alias: 'number'\n              }\n            }\n          }, // (Unknown Source)\n          // (Native Method)\n          // (...something...)\n          {\n            pattern: /(\\()[^()]*(?=\\))/,\n            lookbehind: true,\n            inside: {\n              keyword: /^(?:Native Method|Unknown Source)$/\n            }\n          }\n        ],\n        'class-name': /[\\w$]+(?=\\.(?:<init>|[\\w$]+)\\()/,\n        function: /(?:<init>|[\\w$]+)(?=\\()/,\n        'class-loader': {\n          pattern: /(\\s)[a-z]\\w*(?:\\.[a-z]\\w*)*(?=\\/[\\w@$.]*\\/)/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        module: {\n          pattern: /([\\s/])[a-z]\\w*(?:\\.[a-z]\\w*)*(?:@[\\w$.+-]*)?(?=\\/)/,\n          lookbehind: true,\n          inside: {\n            version: {\n              pattern: /(@)[\\s\\S]+/,\n              lookbehind: true,\n              alias: 'number'\n            },\n            punctuation: /[@.]/\n          }\n        },\n        namespace: {\n          pattern: /(?:\\b[a-z]\\w*\\.)+/,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()/.]/\n      }\n    },\n    // ... 32 more\n    // ... 32 common frames omitted\n    more: {\n      pattern: /^([\\t ]*)\\.{3} \\d+ [a-z]+(?: [a-z]+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\.{3}/,\n        number: /\\d+/,\n        keyword: /\\b[a-z]+(?: [a-z]+)*\\b/\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jexl\njexl.displayName = 'jexl'\njexl.aliases = []\nfunction jexl(Prism) {\n  Prism.languages.jexl = {\n    string: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n    transform: {\n      pattern:\n        /(\\|\\s*)[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*/,\n      alias: 'function',\n      lookbehind: true\n    },\n    function:\n      /[a-zA-Zа-яА-Я_\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$][\\wа-яА-Я\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF$]*\\s*(?=\\()/,\n    number: /\\b\\d+(?:\\.\\d+)?\\b|\\B\\.\\d+\\b/,\n    operator: /[<>!]=?|-|\\+|&&|==|\\|\\|?|\\/\\/?|[?:*^%]/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: /\\bin\\b/,\n    punctuation: /[{}[\\](),.]/\n  }\n}\n","'use strict'\n\nmodule.exports = jolie\njolie.displayName = 'jolie'\njolie.aliases = []\nfunction jolie(Prism) {\n  Prism.languages.jolie = Prism.languages.extend('clike', {\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /((?:\\b(?:as|courier|embed|in|inputPort|outputPort|service)\\b|@)[ \\t]*)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:as|cH|comp|concurrent|constants|courier|cset|csets|default|define|else|embed|embedded|execution|exit|extender|for|foreach|forward|from|global|if|import|in|include|init|inputPort|install|instanceof|interface|is_defined|linkIn|linkOut|main|new|nullProcess|outputPort|over|private|provide|public|scope|sequential|service|single|spawn|synchronized|this|throw|throws|type|undef|until|while|with)\\b/,\n    function: /\\b[a-z_]\\w*(?=[ \\t]*[@(])/i,\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?l?/i,\n    operator: /-[-=>]?|\\+[+=]?|<[<=]?|[>=*!]=?|&&|\\|\\||[?\\/%^@|]/,\n    punctuation: /[()[\\]{},;.:]/,\n    builtin:\n      /\\b(?:Byte|any|bool|char|double|enum|float|int|length|long|ranges|regex|string|undefined|void)\\b/\n  })\n  Prism.languages.insertBefore('jolie', 'keyword', {\n    aggregates: {\n      pattern:\n        /(\\bAggregates\\s*:\\s*)(?:\\w+(?:\\s+with\\s+\\w+)?\\s*,\\s*)*\\w+(?:\\s+with\\s+\\w+)?/,\n      lookbehind: true,\n      inside: {\n        keyword: /\\bwith\\b/,\n        'class-name': /\\w+/,\n        punctuation: /,/\n      }\n    },\n    redirects: {\n      pattern:\n        /(\\bRedirects\\s*:\\s*)(?:\\w+\\s*=>\\s*\\w+\\s*,\\s*)*(?:\\w+\\s*=>\\s*\\w+)/,\n      lookbehind: true,\n      inside: {\n        punctuation: /,/,\n        'class-name': /\\w+/,\n        operator: /=>/\n      }\n    },\n    property: {\n      pattern:\n        /\\b(?:Aggregates|[Ii]nterfaces|Java|Javascript|Jolie|[Ll]ocation|OneWay|[Pp]rotocol|Redirects|RequestResponse)\\b(?=[ \\t]*:)/\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = jq\njq.displayName = 'jq'\njq.aliases = []\nfunction jq(Prism) {\n  ;(function (Prism) {\n    var interpolation = /\\\\\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var string = RegExp(\n      /(^|[^\\\\])\"(?:[^\"\\r\\n\\\\]|\\\\[^\\r\\n(]|__)*\"/.source.replace(\n        /__/g,\n        function () {\n          return interpolation\n        }\n      )\n    )\n    var stringInterpolation = {\n      interpolation: {\n        pattern: RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + interpolation),\n        lookbehind: true,\n        inside: {\n          content: {\n            pattern: /^(\\\\\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          punctuation: /^\\\\\\(|\\)$/\n        }\n      }\n    }\n    var jq = (Prism.languages.jq = {\n      comment: /#.*/,\n      property: {\n        pattern: RegExp(string.source + /(?=\\s*:(?!:))/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      string: {\n        pattern: string,\n        lookbehind: true,\n        greedy: true,\n        inside: stringInterpolation\n      },\n      function: {\n        pattern: /(\\bdef\\s+)[a-z_]\\w+/i,\n        lookbehind: true\n      },\n      variable: /\\B\\$\\w+/,\n      'property-literal': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        alias: 'property'\n      },\n      keyword:\n        /\\b(?:as|break|catch|def|elif|else|end|foreach|if|import|include|label|module|modulemeta|null|reduce|then|try|while)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      number: /(?:\\b\\d+\\.|\\B\\.)?\\b\\d+(?:[eE][+-]?\\d+)?\\b/,\n      operator: [\n        {\n          pattern: /\\|=?/,\n          alias: 'pipe'\n        },\n        /\\.\\.|[!=<>]?=|\\?\\/\\/|\\/\\/=?|[-+*/%]=?|[<>?]|\\b(?:and|not|or)\\b/\n      ],\n      'c-style-function': {\n        pattern: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n        alias: 'function'\n      },\n      punctuation: /::|[()\\[\\]{},:;]|\\.(?=\\s*[\\[\\w$])/,\n      dot: {\n        pattern: /\\./,\n        alias: 'important'\n      }\n    })\n    stringInterpolation.interpolation.inside.content.inside = jq\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsExtras\njsExtras.displayName = 'jsExtras'\njsExtras.aliases = []\nfunction jsExtras(Prism) {\n  ;(function (Prism) {\n    Prism.languages.insertBefore('javascript', 'function-variable', {\n      'method-variable': {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' +\n            Prism.languages.javascript['function-variable'].pattern.source\n        ),\n        lookbehind: true,\n        alias: ['function-variable', 'method', 'function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'function', {\n      method: {\n        pattern: RegExp(\n          '(\\\\.\\\\s*)' + Prism.languages.javascript['function'].source\n        ),\n        lookbehind: true,\n        alias: ['function', 'property-access']\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'constant', {\n      'known-class-name': [\n        {\n          // standard built-ins\n          // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects\n          pattern:\n            /\\b(?:(?:Float(?:32|64)|(?:Int|Uint)(?:8|16|32)|Uint8Clamped)?Array|ArrayBuffer|BigInt|Boolean|DataView|Date|Error|Function|Intl|JSON|(?:Weak)?(?:Map|Set)|Math|Number|Object|Promise|Proxy|Reflect|RegExp|String|Symbol|WebAssembly)\\b/,\n          alias: 'class-name'\n        },\n        {\n          // errors\n          pattern: /\\b(?:[A-Z]\\w*)Error\\b/,\n          alias: 'class-name'\n        }\n      ]\n    })\n    /**\n     * Replaces the `<ID>` placeholder in the given pattern with a pattern for general JS identifiers.\n     *\n     * @param {string} source\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function withId(source, flags) {\n      return RegExp(\n        source.replace(/<ID>/g, function () {\n          return /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/.source\n        }),\n        flags\n      )\n    }\n    Prism.languages.insertBefore('javascript', 'keyword', {\n      imports: {\n        // https://tc39.es/ecma262/#sec-imports\n        pattern: withId(\n          /(\\bimport\\b\\s*)(?:<ID>(?:\\s*,\\s*(?:\\*\\s*as\\s+<ID>|\\{[^{}]*\\}))?|\\*\\s*as\\s+<ID>|\\{[^{}]*\\})(?=\\s*\\bfrom\\b)/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      exports: {\n        // https://tc39.es/ecma262/#sec-exports\n        pattern: withId(\n          /(\\bexport\\b\\s*)(?:\\*(?:\\s*as\\s+<ID>)?(?=\\s*\\bfrom\\b)|\\{[^{}]*\\})/\n            .source\n        ),\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      }\n    })\n    Prism.languages.javascript['keyword'].unshift(\n      {\n        pattern: /\\b(?:as|default|export|from|import)\\b/,\n        alias: 'module'\n      },\n      {\n        pattern:\n          /\\b(?:await|break|catch|continue|do|else|finally|for|if|return|switch|throw|try|while|yield)\\b/,\n        alias: 'control-flow'\n      },\n      {\n        pattern: /\\bnull\\b/,\n        alias: ['null', 'nil']\n      },\n      {\n        pattern: /\\bundefined\\b/,\n        alias: 'nil'\n      }\n    )\n    Prism.languages.insertBefore('javascript', 'operator', {\n      spread: {\n        pattern: /\\.{3}/,\n        alias: 'operator'\n      },\n      arrow: {\n        pattern: /=>/,\n        alias: 'operator'\n      }\n    })\n    Prism.languages.insertBefore('javascript', 'punctuation', {\n      'property-access': {\n        pattern: withId(/(\\.\\s*)#?<ID>/.source),\n        lookbehind: true\n      },\n      'maybe-class-name': {\n        pattern: /(^|[^$\\w\\xA0-\\uFFFF])[A-Z][$\\w\\xA0-\\uFFFF]+/,\n        lookbehind: true\n      },\n      dom: {\n        // this contains only a few commonly used DOM variables\n        pattern:\n          /\\b(?:document|(?:local|session)Storage|location|navigator|performance|window)\\b/,\n        alias: 'variable'\n      },\n      console: {\n        pattern: /\\bconsole(?=\\s*\\.)/,\n        alias: 'class-name'\n      }\n    }) // add 'maybe-class-name' to tokens which might be a class name\n    var maybeClassNameTokens = [\n      'function',\n      'function-variable',\n      'method',\n      'method-variable',\n      'property-access'\n    ]\n    for (var i = 0; i < maybeClassNameTokens.length; i++) {\n      var token = maybeClassNameTokens[i]\n      var value = Prism.languages.javascript[token] // convert regex to object\n      if (Prism.util.type(value) === 'RegExp') {\n        value = Prism.languages.javascript[token] = {\n          pattern: value\n        }\n      } // keep in mind that we don't support arrays\n      var inside = value.inside || {}\n      value.inside = inside\n      inside['maybe-class-name'] = /^[A-Z][\\s\\S]*/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = jsTemplates\njsTemplates.displayName = 'jsTemplates'\njsTemplates.aliases = []\nfunction jsTemplates(Prism) {\n  ;(function (Prism) {\n    var templateString = Prism.languages.javascript['template-string'] // see the pattern in prism-javascript.js\n    var templateLiteralPattern = templateString.pattern.source\n    var interpolationObject = templateString.inside['interpolation']\n    var interpolationPunctuationObject =\n      interpolationObject.inside['interpolation-punctuation']\n    var interpolationPattern = interpolationObject.pattern.source\n    /**\n     * Creates a new pattern to match a template string with a special tag.\n     *\n     * This will return `undefined` if there is no grammar with the given language id.\n     *\n     * @param {string} language The language id of the embedded language. E.g. `markdown`.\n     * @param {string} tag The regex pattern to match the tag.\n     * @returns {object | undefined}\n     * @example\n     * createTemplate('css', /\\bcss/.source);\n     */\n    function createTemplate(language, tag) {\n      if (!Prism.languages[language]) {\n        return undefined\n      }\n      return {\n        pattern: RegExp('((?:' + tag + ')\\\\s*)' + templateLiteralPattern),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'template-punctuation': {\n            pattern: /^`|`$/,\n            alias: 'string'\n          },\n          'embedded-code': {\n            pattern: /[\\s\\S]+/,\n            alias: language\n          }\n        }\n      }\n    }\n    Prism.languages.javascript['template-string'] = [\n      // styled-jsx:\n      //   css`a { color: #25F; }`\n      // styled-components:\n      //   styled.h1`color: red;`\n      createTemplate(\n        'css',\n        /\\b(?:styled(?:\\([^)]*\\))?(?:\\s*\\.\\s*\\w+(?:\\([^)]*\\))*)*|css(?:\\s*\\.\\s*(?:global|resolve))?|createGlobalStyle|keyframes)/\n          .source\n      ), // html`<p></p>`\n      // div.innerHTML = `<p></p>`\n      createTemplate('html', /\\bhtml|\\.\\s*(?:inner|outer)HTML\\s*\\+?=/.source), // svg`<path fill=\"#fff\" d=\"M55.37 ...\"/>`\n      createTemplate('svg', /\\bsvg/.source), // md`# h1`, markdown`## h2`\n      createTemplate('markdown', /\\b(?:markdown|md)/.source), // gql`...`, graphql`...`, graphql.experimental`...`\n      createTemplate(\n        'graphql',\n        /\\b(?:gql|graphql(?:\\s*\\.\\s*experimental)?)/.source\n      ), // sql`...`\n      createTemplate('sql', /\\bsql/.source), // vanilla template string\n      templateString\n    ].filter(Boolean)\n    /**\n     * Returns a specific placeholder literal for the given language.\n     *\n     * @param {number} counter\n     * @param {string} language\n     * @returns {string}\n     */\n    function getPlaceholder(counter, language) {\n      return '___' + language.toUpperCase() + '_' + counter + '___'\n    }\n    /**\n     * Returns the tokens of `Prism.tokenize` but also runs the `before-tokenize` and `after-tokenize` hooks.\n     *\n     * @param {string} code\n     * @param {any} grammar\n     * @param {string} language\n     * @returns {(string|Token)[]}\n     */\n    function tokenizeWithHooks(code, grammar, language) {\n      var env = {\n        code: code,\n        grammar: grammar,\n        language: language\n      }\n      Prism.hooks.run('before-tokenize', env)\n      env.tokens = Prism.tokenize(env.code, env.grammar)\n      Prism.hooks.run('after-tokenize', env)\n      return env.tokens\n    }\n    /**\n     * Returns the token of the given JavaScript interpolation expression.\n     *\n     * @param {string} expression The code of the expression. E.g. `\"${42}\"`\n     * @returns {Token}\n     */\n    function tokenizeInterpolationExpression(expression) {\n      var tempGrammar = {}\n      tempGrammar['interpolation-punctuation'] = interpolationPunctuationObject\n      /** @type {Array} */\n      var tokens = Prism.tokenize(expression, tempGrammar)\n      if (tokens.length === 3) {\n        /**\n         * The token array will look like this\n         * [\n         *     [\"interpolation-punctuation\", \"${\"]\n         *     \"...\" // JavaScript expression of the interpolation\n         *     [\"interpolation-punctuation\", \"}\"]\n         * ]\n         */\n        var args = [1, 1]\n        args.push.apply(\n          args,\n          tokenizeWithHooks(tokens[1], Prism.languages.javascript, 'javascript')\n        )\n        tokens.splice.apply(tokens, args)\n      }\n      return new Prism.Token(\n        'interpolation',\n        tokens,\n        interpolationObject.alias,\n        expression\n      )\n    }\n    /**\n     * Tokenizes the given code with support for JavaScript interpolation expressions mixed in.\n     *\n     * This function has 3 phases:\n     *\n     * 1. Replace all JavaScript interpolation expression with a placeholder.\n     *    The placeholder will have the syntax of a identify of the target language.\n     * 2. Tokenize the code with placeholders.\n     * 3. Tokenize the interpolation expressions and re-insert them into the tokenize code.\n     *    The insertion only works if a placeholder hasn't been \"ripped apart\" meaning that the placeholder has been\n     *    tokenized as two tokens by the grammar of the embedded language.\n     *\n     * @param {string} code\n     * @param {object} grammar\n     * @param {string} language\n     * @returns {Token}\n     */\n    function tokenizeEmbedded(code, grammar, language) {\n      // 1. First filter out all interpolations\n      // because they might be escaped, we need a lookbehind, so we use Prism\n      /** @type {(Token|string)[]} */\n      var _tokens = Prism.tokenize(code, {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          lookbehind: true\n        }\n      }) // replace all interpolations with a placeholder which is not in the code already\n      var placeholderCounter = 0\n      /** @type {Object<string, string>} */\n      var placeholderMap = {}\n      var embeddedCode = _tokens\n        .map(function (token) {\n          if (typeof token === 'string') {\n            return token\n          } else {\n            var interpolationExpression = token.content\n            var placeholder\n            while (\n              code.indexOf(\n                (placeholder = getPlaceholder(placeholderCounter++, language))\n              ) !== -1\n            ) {\n              /* noop */\n            }\n            placeholderMap[placeholder] = interpolationExpression\n            return placeholder\n          }\n        })\n        .join('') // 2. Tokenize the embedded code\n      var embeddedTokens = tokenizeWithHooks(embeddedCode, grammar, language) // 3. Re-insert the interpolation\n      var placeholders = Object.keys(placeholderMap)\n      placeholderCounter = 0\n      /**\n       *\n       * @param {(Token|string)[]} tokens\n       * @returns {void}\n       */\n      function walkTokens(tokens) {\n        for (var i = 0; i < tokens.length; i++) {\n          if (placeholderCounter >= placeholders.length) {\n            return\n          }\n          var token = tokens[i]\n          if (typeof token === 'string' || typeof token.content === 'string') {\n            var placeholder = placeholders[placeholderCounter]\n            var s =\n              typeof token === 'string'\n                ? token\n                : /** @type {string} */\n                  token.content\n            var index = s.indexOf(placeholder)\n            if (index !== -1) {\n              ++placeholderCounter\n              var before = s.substring(0, index)\n              var middle = tokenizeInterpolationExpression(\n                placeholderMap[placeholder]\n              )\n              var after = s.substring(index + placeholder.length)\n              var replacement = []\n              if (before) {\n                replacement.push(before)\n              }\n              replacement.push(middle)\n              if (after) {\n                var afterTokens = [after]\n                walkTokens(afterTokens)\n                replacement.push.apply(replacement, afterTokens)\n              }\n              if (typeof token === 'string') {\n                tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                i += replacement.length - 1\n              } else {\n                token.content = replacement\n              }\n            }\n          } else {\n            var content = token.content\n            if (Array.isArray(content)) {\n              walkTokens(content)\n            } else {\n              walkTokens([content])\n            }\n          }\n        }\n      }\n      walkTokens(embeddedTokens)\n      return new Prism.Token(\n        language,\n        embeddedTokens,\n        'language-' + language,\n        code\n      )\n    }\n    /**\n     * The languages for which JS templating will handle tagged template literals.\n     *\n     * JS templating isn't active for only JavaScript but also related languages like TypeScript, JSX, and TSX.\n     */\n    var supportedLanguages = {\n      javascript: true,\n      js: true,\n      typescript: true,\n      ts: true,\n      jsx: true,\n      tsx: true\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (!(env.language in supportedLanguages)) {\n        return\n      }\n      /**\n       * Finds and tokenizes all template strings with an embedded languages.\n       *\n       * @param {(Token | string)[]} tokens\n       * @returns {void}\n       */\n      function findTemplateStrings(tokens) {\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (typeof token === 'string') {\n            continue\n          }\n          var content = token.content\n          if (!Array.isArray(content)) {\n            if (typeof content !== 'string') {\n              findTemplateStrings([content])\n            }\n            continue\n          }\n          if (token.type === 'template-string') {\n            /**\n             * A JavaScript template-string token will look like this:\n             *\n             * [\"template-string\", [\n             *     [\"template-punctuation\", \"`\"],\n             *     (\n             *         An array of \"string\" and \"interpolation\" tokens. This is the simple string case.\n             *         or\n             *         [\"embedded-code\", \"...\"] This is the token containing the embedded code.\n             *                                  It also has an alias which is the language of the embedded code.\n             *     ),\n             *     [\"template-punctuation\", \"`\"]\n             * ]]\n             */\n            var embedded = content[1]\n            if (\n              content.length === 3 &&\n              typeof embedded !== 'string' &&\n              embedded.type === 'embedded-code'\n            ) {\n              // get string content\n              var code = stringContent(embedded)\n              var alias = embedded.alias\n              var language = Array.isArray(alias) ? alias[0] : alias\n              var grammar = Prism.languages[language]\n              if (!grammar) {\n                // the embedded language isn't registered.\n                continue\n              }\n              content[1] = tokenizeEmbedded(code, grammar, language)\n            }\n          } else {\n            findTemplateStrings(content)\n          }\n        }\n      }\n      findTemplateStrings(env.tokens)\n    })\n    /**\n     * Returns the string content of a token or token stream.\n     *\n     * @param {string | Token | (string | Token)[]} value\n     * @returns {string}\n     */\n    function stringContent(value) {\n      if (typeof value === 'string') {\n        return value\n      } else if (Array.isArray(value)) {\n        return value.map(stringContent).join('')\n      } else {\n        return stringContent(value.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorJavadoclike = require('./javadoclike.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = jsdoc\njsdoc.displayName = 'jsdoc'\njsdoc.aliases = []\nfunction jsdoc(Prism) {\n  Prism.register(refractorJavadoclike)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var javascript = Prism.languages.javascript\n    var type = /\\{(?:[^{}]|\\{(?:[^{}]|\\{[^{}]*\\})*\\})+\\}/.source\n    var parameterPrefix =\n      '(@(?:arg|argument|param|property)\\\\s+(?:' + type + '\\\\s+)?)'\n    Prism.languages.jsdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        // @param {string} foo - foo bar\n        pattern: RegExp(\n          parameterPrefix + /(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('jsdoc', 'keyword', {\n      'optional-parameter': {\n        // @param {string} [baz.foo=\"bar\"] foo bar\n        pattern: RegExp(\n          parameterPrefix +\n            /\\[(?:(?!\\s)[$\\w\\xA0-\\uFFFF.])+(?:=[^[\\]]+)?\\](?=\\s|$)/.source\n        ),\n        lookbehind: true,\n        inside: {\n          parameter: {\n            pattern: /(^\\[)[$\\w\\xA0-\\uFFFF\\.]+/,\n            lookbehind: true,\n            inside: {\n              punctuation: /\\./\n            }\n          },\n          code: {\n            pattern: /(=)[\\s\\S]*(?=\\]$)/,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          },\n          punctuation: /[=[\\]]/\n        }\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(@(?:augments|class|extends|interface|memberof!?|template|this|typedef)\\s+(?:<TYPE>\\s+)?)[A-Z]\\w*(?:\\.[A-Z]\\w*)*/.source.replace(\n              /<TYPE>/g,\n              function () {\n                return type\n              }\n            )\n          ),\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        {\n          pattern: RegExp('(@[a-z]+\\\\s+)' + type),\n          lookbehind: true,\n          inside: {\n            string: javascript.string,\n            number: javascript.number,\n            boolean: javascript.boolean,\n            keyword: Prism.languages.typescript.keyword,\n            operator: /=>|\\.\\.\\.|[&|?:*]/,\n            punctuation: /[.,;=<>{}()[\\]]/\n          }\n        }\n      ],\n      example: {\n        pattern:\n          /(@example\\s+(?!\\s))(?:[^@\\s]|\\s+(?!\\s))+?(?=\\s*(?:\\*\\s*)?(?:@\\w|\\*\\/))/,\n        lookbehind: true,\n        inside: {\n          code: {\n            pattern: /^([\\t ]*(?:\\*\\s*)?)\\S.*$/m,\n            lookbehind: true,\n            inside: javascript,\n            alias: 'language-javascript'\n          }\n        }\n      }\n    })\n    Prism.languages.javadoclike.addSupport('javascript', Prism.languages.jsdoc)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = json\njson.displayName = 'json'\njson.aliases = ['webmanifest']\nfunction json(Prism) {\n  // https://www.json.org/json-en.html\n  Prism.languages.json = {\n    property: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?=\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"(?!\\s*:)/,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n      greedy: true\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    punctuation: /[{}[\\],]/,\n    operator: /:/,\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.languages.webmanifest = Prism.languages.json\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = json5\njson5.displayName = 'json5'\njson5.aliases = []\nfunction json5(Prism) {\n  Prism.register(refractorJson)\n  ;(function (Prism) {\n    var string = /(\"|')(?:\\\\(?:\\r\\n?|\\n|.)|(?!\\1)[^\\\\\\r\\n])*\\1/\n    Prism.languages.json5 = Prism.languages.extend('json', {\n      property: [\n        {\n          pattern: RegExp(string.source + '(?=\\\\s*:)'),\n          greedy: true\n        },\n        {\n          pattern:\n            /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/,\n          alias: 'unquoted'\n        }\n      ],\n      string: {\n        pattern: string,\n        greedy: true\n      },\n      number:\n        /[+-]?\\b(?:NaN|Infinity|0x[a-fA-F\\d]+)\\b|[+-]?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+\\b)?/\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJson = require('./json.js')\nmodule.exports = jsonp\njsonp.displayName = 'jsonp'\njsonp.aliases = []\nfunction jsonp(Prism) {\n  Prism.register(refractorJson)\n  Prism.languages.jsonp = Prism.languages.extend('json', {\n    punctuation: /[{}[\\]();,.]/\n  })\n  Prism.languages.insertBefore('jsonp', 'punctuation', {\n    function: /(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*\\()/\n  })\n}\n","'use strict'\n\nmodule.exports = jsstacktrace\njsstacktrace.displayName = 'jsstacktrace'\njsstacktrace.aliases = []\nfunction jsstacktrace(Prism) {\n  Prism.languages.jsstacktrace = {\n    'error-message': {\n      pattern: /^\\S.*/m,\n      alias: 'string'\n    },\n    'stack-frame': {\n      pattern: /(^[ \\t]+)at[ \\t].*/m,\n      lookbehind: true,\n      inside: {\n        'not-my-code': {\n          pattern:\n            /^at[ \\t]+(?!\\s)(?:node\\.js|<unknown>|.*(?:node_modules|\\(<anonymous>\\)|\\(<unknown>|<anonymous>$|\\(internal\\/|\\(node\\.js)).*/m,\n          alias: 'comment'\n        },\n        filename: {\n          pattern: /(\\bat\\s+(?!\\s)|\\()(?:[a-zA-Z]:)?[^():]+(?=:)/,\n          lookbehind: true,\n          alias: 'url'\n        },\n        function: {\n          pattern:\n            /(\\bat\\s+(?:new\\s+)?)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF<][.$\\w\\xA0-\\uFFFF<>]*/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\./\n          }\n        },\n        punctuation: /[()]/,\n        keyword: /\\b(?:at|new)\\b/,\n        alias: {\n          pattern: /\\[(?:as\\s+)?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF][$\\w\\xA0-\\uFFFF]*\\]/,\n          alias: 'variable'\n        },\n        'line-number': {\n          pattern: /:\\d+(?::\\d+)?\\b/,\n          alias: 'number',\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = jsx\njsx.displayName = 'jsx'\njsx.aliases = []\nfunction jsx(Prism) {\n  ;(function (Prism) {\n    var javascript = Prism.util.clone(Prism.languages.javascript)\n    var space = /(?:\\s|\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))\\*\\/)/.source\n    var braces = /(?:\\{(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])*\\})/.source\n    var spread = /(?:\\{<S>*\\.{3}(?:[^{}]|<BRACES>)*\\})/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function re(source, flags) {\n      source = source\n        .replace(/<S>/g, function () {\n          return space\n        })\n        .replace(/<BRACES>/g, function () {\n          return braces\n        })\n        .replace(/<SPREAD>/g, function () {\n          return spread\n        })\n      return RegExp(source, flags)\n    }\n    spread = re(spread).source\n    Prism.languages.jsx = Prism.languages.extend('markup', javascript)\n    Prism.languages.jsx.tag.pattern = re(\n      /<\\/?(?:[\\w.:-]+(?:<S>+(?:[\\w.:$-]+(?:=(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s{'\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*\\/?)?>/\n        .source\n    )\n    Prism.languages.jsx.tag.inside['tag'].pattern = /^<\\/?[^\\s>\\/]*/\n    Prism.languages.jsx.tag.inside['attr-value'].pattern =\n      /=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/\n    Prism.languages.jsx.tag.inside['tag'].inside['class-name'] =\n      /^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/\n    Prism.languages.jsx.tag.inside['comment'] = javascript['comment']\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-name',\n      {\n        spread: {\n          pattern: re(/<SPREAD>/.source),\n          inside: Prism.languages.jsx\n        }\n      },\n      Prism.languages.jsx.tag\n    )\n    Prism.languages.insertBefore(\n      'inside',\n      'special-attr',\n      {\n        script: {\n          // Allow for two levels of nesting\n          pattern: re(/=<BRACES>/.source),\n          alias: 'language-javascript',\n          inside: {\n            'script-punctuation': {\n              pattern: /^=(?=\\{)/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.jsx\n          }\n        }\n      },\n      Prism.languages.jsx.tag\n    ) // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (!token) {\n        return ''\n      }\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{'\n          ) {\n            // Here we might have entered a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left a JSX context inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside a JSX context.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            tokens[i] = new Prism.Token(\n              'plain-text',\n              plainText,\n              null,\n              plainText\n            )\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'jsx' && env.language !== 'tsx') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = julia\njulia.displayName = 'julia'\njulia.aliases = []\nfunction julia(Prism) {\n  Prism.languages.julia = {\n    comment: {\n      // support one level of nested comments\n      // https://github.com/JuliaLang/julia/pull/6128\n      pattern:\n        /(^|[^\\\\])(?:#=(?:[^#=]|=(?!#)|#(?!=)|#=(?:[^#=]|=(?!#)|#(?!=))*=#)*=#|#.*)/,\n      lookbehind: true\n    },\n    regex: {\n      // https://docs.julialang.org/en/v1/manual/strings/#Regular-Expressions-1\n      pattern: /r\"(?:\\\\.|[^\"\\\\\\r\\n])*\"[imsx]{0,4}/,\n      greedy: true\n    },\n    string: {\n      // https://docs.julialang.org/en/v1/manual/strings/#String-Basics-1\n      // https://docs.julialang.org/en/v1/manual/strings/#non-standard-string-literals-1\n      // https://docs.julialang.org/en/v1/manual/running-external-programs/#Running-External-Programs-1\n      pattern:\n        /\"\"\"[\\s\\S]+?\"\"\"|(?:\\b\\w+)?\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|`(?:[^\\\\`\\r\\n]|\\\\.)*`/,\n      greedy: true\n    },\n    char: {\n      // https://docs.julialang.org/en/v1/manual/strings/#man-characters-1\n      pattern: /(^|[^\\w'])'(?:\\\\[^\\r\\n][^'\\r\\n]*|[^\\\\\\r\\n])'/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|baremodule|begin|bitstype|break|catch|ccall|const|continue|do|else|elseif|end|export|finally|for|function|global|if|immutable|import|importall|in|let|local|macro|module|print|println|quote|return|struct|try|type|typealias|using|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[box])?(?:[\\da-f]+(?:_[\\da-f]+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[efp][+-]?\\d+(?:_\\d+)*)?j?/i,\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/\n    // https://docs.julialang.org/en/v1/manual/mathematical-operations/#Operator-Precedence-and-Associativity-1\n    operator:\n      /&&|\\|\\||[-+*^%÷⊻&$\\\\]=?|\\/[\\/=]?|!=?=?|\\|[=>]?|<(?:<=?|[=:|])?|>(?:=|>>?=?)?|==?=?|[~≠≤≥'√∛]/,\n    punctuation: /::?|[{}[\\]();,.?]/,\n    // https://docs.julialang.org/en/v1/base/numbers/#Base.im\n    constant: /\\b(?:(?:Inf|NaN)(?:16|32|64)?|im|pi)\\b|[πℯ]/\n  }\n}\n","'use strict'\n\nmodule.exports = keepalived\nkeepalived.displayName = 'keepalived'\nkeepalived.aliases = []\nfunction keepalived(Prism) {\n  Prism.languages.keepalived = {\n    comment: {\n      pattern: /[#!].*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /(^|[^\\\\])(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/,\n      lookbehind: true,\n      greedy: true\n    },\n    // support IPv4, IPv6, subnet mask\n    ip: {\n      pattern: RegExp(\n        /\\b(?:(?:(?:[\\da-f]{1,4}:){7}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}:[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){5}:(?:[\\da-f]{1,4}:)?[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){4}:(?:[\\da-f]{1,4}:){0,2}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){3}:(?:[\\da-f]{1,4}:){0,3}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){2}:(?:[\\da-f]{1,4}:){0,4}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){6}<ipv4>|(?:[\\da-f]{1,4}:){0,5}:<ipv4>|::(?:[\\da-f]{1,4}:){0,5}<ipv4>|[\\da-f]{1,4}::(?:[\\da-f]{1,4}:){0,5}[\\da-f]{1,4}|::(?:[\\da-f]{1,4}:){0,6}[\\da-f]{1,4}|(?:[\\da-f]{1,4}:){1,7}:)(?:\\/\\d{1,3})?|<ipv4>(?:\\/\\d{1,2})?)\\b/.source.replace(\n          /<ipv4>/g,\n          function () {\n            return /(?:(?:(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]\\d|\\d))/\n              .source\n          }\n        ),\n        'i'\n      ),\n      alias: 'number'\n    },\n    // support *nix / Windows, directory / file\n    path: {\n      pattern:\n        /(\\s)\\/(?:[^\\/\\s]+\\/)*[^\\/\\s]*|\\b[a-zA-Z]:\\\\(?:[^\\\\\\s]+\\\\)*[^\\\\\\s]*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    variable: /\\$\\{?\\w+\\}?/,\n    email: {\n      pattern: /[\\w-]+@[\\w-]+(?:\\.[\\w-]{2,3}){1,2}/,\n      alias: 'string'\n    },\n    'conditional-configuration': {\n      pattern: /@\\^?[\\w-]+/,\n      alias: 'variable'\n    },\n    operator: /=/,\n    property:\n      /\\b(?:BFD_CHECK|DNS_CHECK|FILE_CHECK|HTTP_GET|MISC_CHECK|NAME|PING_CHECK|SCRIPTS|SMTP_CHECK|SSL|SSL_GET|TCP_CHECK|UDP_CHECK|accept|advert_int|alpha|auth_pass|auth_type|authentication|bfd_cpu_affinity|bfd_instance|bfd_no_swap|bfd_priority|bfd_process_name|bfd_rlimit_rttime|bfd_rt_priority|bind_if|bind_port|bindto|ca|certificate|check_unicast_src|checker|checker_cpu_affinity|checker_log_all_failures|checker_no_swap|checker_priority|checker_rlimit_rttime|checker_rt_priority|child_wait_time|connect_ip|connect_port|connect_timeout|dbus_service_name|debug|default_interface|delay|delay_before_retry|delay_loop|digest|dont_track_primary|dynamic|dynamic_interfaces|enable_(?:dbus|script_security|sni|snmp_checker|snmp_rfc|snmp_rfcv2|snmp_rfcv3|snmp_vrrp|traps)|end|fall|fast_recovery|file|flag-[123]|fork_delay|full_command|fwmark|garp_group|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|global_defs|global_tracking|gna_interval|group|ha_suspend|hashed|helo_name|higher_prio_send_advert|hoplimit|http_protocol|hysteresis|idle_tx|include|inhibit_on_failure|init_fail|init_file|instance|interface|interfaces|interval|ip_family|ipvs_process_name|keepalived.conf|kernel_rx_buf_size|key|linkbeat_interfaces|linkbeat_use_polling|log_all_failures|log_unknown_vrids|lower_prio_no_advert|lthreshold|lvs_flush|lvs_flush_onstop|lvs_method|lvs_netlink_cmd_rcv_bufs|lvs_netlink_cmd_rcv_bufs_force|lvs_netlink_monitor_rcv_bufs|lvs_netlink_monitor_rcv_bufs_force|lvs_notify_fifo|lvs_notify_fifo_script|lvs_sched|lvs_sync_daemon|max_auto_priority|max_hops|mcast_src_ip|mh-fallback|mh-port|min_auto_priority_delay|min_rx|min_tx|misc_dynamic|misc_path|misc_timeout|multiplier|name|namespace_with_ipsets|native_ipv6|neighbor_ip|net_namespace|net_namespace_ipvs|nftables|nftables_counters|nftables_ifindex|nftables_priority|no_accept|no_checker_emails|no_email_faults|nopreempt|notification_email|notification_email_from|notify|notify_backup|notify_deleted|notify_down|notify_fault|notify_fifo|notify_fifo_script|notify_master|notify_master_rx_lower_pri|notify_priority_changes|notify_stop|notify_up|old_unicast_checksum|omega|ops|param_match|passive|password|path|persistence_engine|persistence_granularity|persistence_timeout|preempt|preempt_delay|priority|process|process_monitor_rcv_bufs|process_monitor_rcv_bufs_force|process_name|process_names|promote_secondaries|protocol|proxy_arp|proxy_arp_pvlan|quorum|quorum_down|quorum_max|quorum_up|random_seed|real_server|regex|regex_max_offset|regex_min_offset|regex_no_match|regex_options|regex_stack|reload_repeat|reload_time_file|require_reply|retry|rise|router_id|rs_init_notifies|script|script_user|sh-fallback|sh-port|shutdown_script|shutdown_script_timeout|skip_check_adv_addr|smtp_alert|smtp_alert_checker|smtp_alert_vrrp|smtp_connect_timeout|smtp_helo_name|smtp_server|snmp_socket|sorry_server|sorry_server_inhibit|sorry_server_lvs_method|source_ip|start|startup_script|startup_script_timeout|state|static_ipaddress|static_routes|static_rules|status_code|step|strict_mode|sync_group_tracking_weight|terminate_delay|timeout|track_bfd|track_file|track_group|track_interface|track_process|track_script|track_src_ip|ttl|type|umask|unicast_peer|unicast_src_ip|unicast_ttl|url|use_ipvlan|use_pid_dir|use_vmac|user|uthreshold|val[123]|version|virtual_ipaddress|virtual_ipaddress_excluded|virtual_router_id|virtual_routes|virtual_rules|virtual_server|virtual_server_group|virtualhost|vmac_xmit_base|vrrp|vrrp_(?:check_unicast_src|cpu_affinity|garp_interval|garp_lower_prio_delay|garp_lower_prio_repeat|garp_master_delay|garp_master_refresh|garp_master_refresh_repeat|garp_master_repeat|gna_interval|higher_prio_send_advert|instance|ipsets|iptables|lower_prio_no_advert|mcast_group4|mcast_group6|min_garp|netlink_cmd_rcv_bufs|netlink_cmd_rcv_bufs_force|netlink_monitor_rcv_bufs|netlink_monitor_rcv_bufs_force|no_swap|notify_fifo|notify_fifo_script|notify_priority_changes|priority|process_name|rlimit_rttime|rt_priority|rx_bufs_multiplier|rx_bufs_policy|script|skip_check_adv_addr|startup_delay|strict|sync_group|track_process|version)|warmup|weight)\\b/,\n    constant:\n      /\\b(?:A|AAAA|AH|BACKUP|CNAME|DR|MASTER|MX|NAT|NS|PASS|SCTP|SOA|TCP|TUN|TXT|UDP|dh|fo|lblc|lblcr|lc|mh|nq|ovf|rr|sed|sh|wlc|wrr)\\b/,\n    number: {\n      pattern: /(^|[^\\w.-])-?\\d+(?:\\.\\d+)?/,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n    punctuation: /[\\{\\}]/\n  }\n}\n","'use strict'\n\nmodule.exports = keyman\nkeyman.displayName = 'keyman'\nkeyman.aliases = []\nfunction keyman(Prism) {\n  Prism.languages.keyman = {\n    comment: {\n      pattern: /\\bc .*/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    'virtual-key': {\n      pattern:\n        /\\[\\s*(?:(?:ALT|CAPS|CTRL|LALT|LCTRL|NCAPS|RALT|RCTRL|SHIFT)\\s+)*(?:[TKU]_[\\w?]+|[A-E]\\d\\d?|\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*\\]/i,\n      greedy: true,\n      alias: 'function' // alias for styles\n    },\n    // https://help.keyman.com/developer/language/guide/headers\n    'header-keyword': {\n      pattern: /&\\w+/,\n      alias: 'bold' // alias for styles\n    },\n    'header-statement': {\n      pattern:\n        /\\b(?:bitmap|bitmaps|caps always off|caps on only|copyright|hotkey|language|layout|message|name|shift frees caps|version)\\b/i,\n      alias: 'bold' // alias for styles\n    },\n    'rule-keyword': {\n      pattern:\n        /\\b(?:any|baselayout|beep|call|context|deadkey|dk|if|index|layer|notany|nul|outs|platform|reset|return|save|set|store|use)\\b/i,\n      alias: 'keyword'\n    },\n    'structural-keyword': {\n      pattern: /\\b(?:ansi|begin|group|match|nomatch|unicode|using keys)\\b/i,\n      alias: 'keyword'\n    },\n    'compile-target': {\n      pattern: /\\$(?:keyman|keymanonly|keymanweb|kmfl|weaver):/i,\n      alias: 'property'\n    },\n    // U+####, x###, d### characters and numbers\n    number: /\\b(?:U\\+[\\dA-F]+|d\\d+|x[\\da-f]+|\\d+)\\b/i,\n    operator: /[+>\\\\$]|\\.\\./,\n    punctuation: /[()=,]/\n  }\n}\n","'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = ['kt', 'kts']\nfunction kotlin(Prism) {\n  ;(function (Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern:\n          /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        {\n          pattern: /(?:`[^\\r\\n`]+`|\\b\\w+)(?=\\s*\\()/,\n          greedy: true\n        },\n        {\n          pattern: /(\\.)(?:`[^\\r\\n`]+`|\\w+)(?=\\s*\\{)/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      number:\n        /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator:\n        /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    var interpolationInside = {\n      'interpolation-punctuation': {\n        pattern: /^\\$\\{?|\\}$/,\n        alias: 'punctuation'\n      },\n      expression: {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages.kotlin\n      }\n    }\n    Prism.languages.insertBefore('kotlin', 'string', {\n      // https://kotlinlang.org/spec/expressions.html#string-interpolation-expressions\n      'string-literal': [\n        {\n          pattern: /\"\"\"(?:[^$]|\\$(?:(?!\\{)|\\{[^{}]*\\}))*?\"\"\"/,\n          alias: 'multiline',\n          inside: {\n            interpolation: {\n              pattern: /\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /\"(?:[^\"\\\\\\r\\n$]|\\\\.|\\$(?:(?!\\{)|\\{[^{}]*\\}))*\"/,\n          alias: 'singleline',\n          inside: {\n            interpolation: {\n              pattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:[a-z_]\\w*|\\{[^{}]*\\})/i,\n              lookbehind: true,\n              inside: interpolationInside\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      char: {\n        // https://kotlinlang.org/spec/expressions.html#character-literals\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\(?:.|u[a-fA-F0-9]{0,4}))'/,\n        greedy: true\n      }\n    })\n    delete Prism.languages.kotlin['string']\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\b\\w+@|@\\w+\\b/,\n        alias: 'symbol'\n      }\n    })\n    Prism.languages.kt = Prism.languages.kotlin\n    Prism.languages.kts = Prism.languages.kotlin\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kumir\nkumir.displayName = 'kumir'\nkumir.aliases = ['kum']\nfunction kumir(Prism) {\n  /* eslint-disable regexp/no-dupe-characters-character-class */\n  ;(function (Prism) {\n    /**\n     * Regular expression for characters that are not allowed in identifiers.\n     *\n     * @type {string}\n     */\n    var nonId = /\\s\\x00-\\x1f\\x22-\\x2f\\x3a-\\x3f\\x5b-\\x5e\\x60\\x7b-\\x7e/.source\n    /**\n     * Surround a regular expression for IDs with patterns for non-ID sequences.\n     *\n     * @param {string} pattern A regular expression for identifiers.\n     * @param {string} [flags] The regular expression flags.\n     * @returns {RegExp} A wrapped regular expression for identifiers.\n     */\n    function wrapId(pattern, flags) {\n      return RegExp(pattern.replace(/<nonId>/g, nonId), flags)\n    }\n    Prism.languages.kumir = {\n      comment: {\n        pattern: /\\|.*/\n      },\n      prolog: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\\n\\r\"]*\"|'[^\\n\\r']*'/,\n        greedy: true\n      },\n      boolean: {\n        pattern: wrapId(/(^|[<nonId>])(?:да|нет)(?=[<nonId>]|$)/.source),\n        lookbehind: true\n      },\n      'operator-word': {\n        pattern: wrapId(/(^|[<nonId>])(?:и|или|не)(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      'system-variable': {\n        pattern: wrapId(/(^|[<nonId>])знач(?=[<nonId>]|$)/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      type: [\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:вещ|лит|лог|сим|цел)(?:\\x20*таб)?(?=[<nonId>]|$)/\n              .source\n          ),\n          lookbehind: true,\n          alias: 'builtin'\n        },\n        {\n          pattern: wrapId(\n            /(^|[<nonId>])(?:компл|сканкод|файл|цвет)(?=[<nonId>]|$)/.source\n          ),\n          lookbehind: true,\n          alias: 'important'\n        }\n      ],\n      /**\n       * Should be performed after searching for type names because of \"таб\".\n       * \"таб\" is a reserved word, but never used without a preceding type name.\n       * \"НАЗНАЧИТЬ\", \"Фввод\", and \"Фвывод\" are not reserved words.\n       */\n      keyword: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:алг|арг(?:\\x20*рез)?|ввод|ВКЛЮЧИТЬ|вс[её]|выбор|вывод|выход|дано|для|до|дс|если|иначе|исп|использовать|кон(?:(?:\\x20+|_)исп)?|кц(?:(?:\\x20+|_)при)?|надо|нач|нс|нц|от|пауза|пока|при|раза?|рез|стоп|таб|то|утв|шаг)(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for reserved words. */\n      name: {\n        // eslint-disable-next-line regexp/no-super-linear-backtracking\n        pattern: wrapId(\n          /(^|[<nonId>])[^\\d<nonId>][^<nonId>]*(?:\\x20+[^<nonId>]+)*(?=[<nonId>]|$)/\n            .source\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for names. */\n      number: {\n        pattern: wrapId(\n          /(^|[<nonId>])(?:\\B\\$[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?=[<nonId>]|$)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      /** Should be performed after searching for words. */\n      punctuation: /:=|[(),:;\\[\\]]/,\n      /**\n       * Should be performed after searching for\n       * - numeric constants (because of \"+\" and \"-\");\n       * - punctuation marks (because of \":=\" and \"=\").\n       */\n      'operator-char': {\n        pattern: /\\*\\*?|<[=>]?|>=?|[-+/=]/,\n        alias: 'operator'\n      }\n    }\n    Prism.languages.kum = Prism.languages.kumir\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = kusto\nkusto.displayName = 'kusto'\nkusto.aliases = []\nfunction kusto(Prism) {\n  Prism.languages.kusto = {\n    comment: {\n      pattern: /\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern:\n        /```[\\s\\S]*?```|[hH]?(?:\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\.)*'|@(?:\"[^\\r\\n\"]*\"|'[^\\r\\n']*'))/,\n      greedy: true\n    },\n    verb: {\n      pattern: /(\\|\\s*)[a-z][\\w-]*/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    command: {\n      pattern: /\\.[a-z][a-z\\d-]*\\b/,\n      alias: 'keyword'\n    },\n    'class-name':\n      /\\b(?:bool|datetime|decimal|dynamic|guid|int|long|real|string|timespan)\\b/,\n    keyword:\n      /\\b(?:access|alias|and|anti|as|asc|auto|between|by|(?:contains|(?:ends|starts)with|has(?:perfix|suffix)?)(?:_cs)?|database|declare|desc|external|from|fullouter|has_all|in|ingestion|inline|inner|innerunique|into|(?:left|right)(?:anti(?:semi)?|inner|outer|semi)?|let|like|local|not|of|on|or|pattern|print|query_parameters|range|restrict|schema|set|step|table|tables|to|view|where|with|matches\\s+regex|nulls\\s+(?:first|last))(?![\\w-])/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/,\n    datetime: [\n      {\n        // RFC 822 + RFC 850\n        pattern:\n          /\\b(?:(?:Fri|Friday|Mon|Monday|Sat|Saturday|Sun|Sunday|Thu|Thursday|Tue|Tuesday|Wed|Wednesday)\\s*,\\s*)?\\d{1,2}(?:\\s+|-)(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)(?:\\s+|-)\\d{2}\\s+\\d{2}:\\d{2}(?::\\d{2})?(?:\\s*(?:\\b(?:[A-Z]|(?:[ECMT][DS]|GM|U)T)|[+-]\\d{4}))?\\b/,\n        alias: 'number'\n      },\n      {\n        // ISO 8601\n        pattern:\n          /[+-]?\\b(?:\\d{4}-\\d{2}-\\d{2}(?:[ T]\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)?|\\d{2}:\\d{2}(?::\\d{2}(?:\\.\\d+)?)?)Z?/,\n        alias: 'number'\n      }\n    ],\n    number:\n      /\\b(?:0x[0-9A-Fa-f]+|\\d+(?:\\.\\d+)?(?:[Ee][+-]?\\d+)?)(?:(?:min|sec|[mnµ]s|[dhms]|microsecond|tick)\\b)?|[+-]?\\binf\\b/,\n    operator: /=>|[!=]~|[!=<>]=?|[-+*/%|]|\\.\\./,\n    punctuation: /[()\\[\\]{},;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = latex\nlatex.displayName = 'latex'\nlatex.aliases = ['tex', 'context']\nfunction latex(Prism) {\n  ;(function (Prism) {\n    var funcPattern = /\\\\(?:[^a-z()[\\]]|[a-z*]+)/i\n    var insideEqu = {\n      'equation-command': {\n        pattern: funcPattern,\n        alias: 'regex'\n      }\n    }\n    Prism.languages.latex = {\n      comment: /%.*/,\n      // the verbatim environment prints whitespace to the document\n      cdata: {\n        pattern:\n          /(\\\\begin\\{((?:lstlisting|verbatim)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n        lookbehind: true\n      },\n      /*\n       * equations can be between $$ $$ or $ $ or \\( \\) or \\[ \\]\n       * (all are multiline)\n       */\n      equation: [\n        {\n          pattern:\n            /\\$\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$\\$|\\$(?:\\\\[\\s\\S]|[^\\\\$])+\\$|\\\\\\([\\s\\S]*?\\\\\\)|\\\\\\[[\\s\\S]*?\\\\\\]/,\n          inside: insideEqu,\n          alias: 'string'\n        },\n        {\n          pattern:\n            /(\\\\begin\\{((?:align|eqnarray|equation|gather|math|multline)\\*?)\\})[\\s\\S]*?(?=\\\\end\\{\\2\\})/,\n          lookbehind: true,\n          inside: insideEqu,\n          alias: 'string'\n        }\n      ],\n      /*\n       * arguments which are keywords or references are highlighted\n       * as keywords\n       */\n      keyword: {\n        pattern:\n          /(\\\\(?:begin|cite|documentclass|end|label|ref|usepackage)(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /(\\\\url\\{)[^}]+(?=\\})/,\n        lookbehind: true\n      },\n      /*\n       * section or chapter headlines are highlighted as bold so that\n       * they stand out more\n       */\n      headline: {\n        pattern:\n          /(\\\\(?:chapter|frametitle|paragraph|part|section|subparagraph|subsection|subsubparagraph|subsubsection|subsubsubparagraph)\\*?(?:\\[[^\\]]+\\])?\\{)[^}]+(?=\\})/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      function: {\n        pattern: funcPattern,\n        alias: 'selector'\n      },\n      punctuation: /[[\\]{}&]/\n    }\n    Prism.languages.tex = Prism.languages.latex\n    Prism.languages.context = Prism.languages.latex\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nvar refractorPhp = require('./php.js')\nmodule.exports = latte\nlatte.displayName = 'latte'\nlatte.aliases = []\nfunction latte(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.register(refractorPhp)\n  ;(function (Prism) {\n    Prism.languages.latte = {\n      comment: /^\\{\\*[\\s\\S]*/,\n      'latte-tag': {\n        // https://latte.nette.org/en/tags\n        pattern: /(^\\{(?:\\/(?=[a-z]))?)(?:[=_]|[a-z]\\w*\\b(?!\\())/i,\n        lookbehind: true,\n        alias: 'important'\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        alias: 'punctuation'\n      },\n      php: {\n        pattern: /\\S(?:[\\s\\S]*\\S)?/,\n        alias: 'language-php',\n        inside: Prism.languages.php\n      }\n    }\n    var markupLatte = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore(\n      'inside',\n      'attr-value',\n      {\n        'n-attr': {\n          pattern: /n:[\\w-]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+))?/,\n          inside: {\n            'attr-name': {\n              pattern: /^[^\\s=]+/,\n              alias: 'important'\n            },\n            'attr-value': {\n              pattern: /=[\\s\\S]+/,\n              inside: {\n                punctuation: [\n                  /^=/,\n                  {\n                    pattern: /^(\\s*)[\"']|[\"']$/,\n                    lookbehind: true\n                  }\n                ],\n                php: {\n                  pattern: /\\S(?:[\\s\\S]*\\S)?/,\n                  inside: Prism.languages.php\n                }\n              }\n            }\n          }\n        }\n      },\n      markupLatte.tag\n    )\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (env.language !== 'latte') {\n        return\n      }\n      var lattePattern =\n        /\\{\\*[\\s\\S]*?\\*\\}|\\{[^'\"\\s{}*](?:[^\"'/{}]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\}/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'latte',\n        lattePattern\n      )\n      env.grammar = markupLatte\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'latte')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = less\nless.displayName = 'less'\nless.aliases = []\nfunction less(Prism) {\n  /* FIXME :\n:extend() is not handled specifically : its highlighting is buggy.\nMixin usage must be inside a ruleset to be highlighted.\nAt-rules (e.g. import) containing interpolations are buggy.\nDetached rulesets are highlighted as at-rules.\nA comment before a mixin usage prevents the latter to be properly highlighted.\n*/\n  Prism.languages.less = Prism.languages.extend('css', {\n    comment: [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^|[^\\\\])\\/\\/.*/,\n        lookbehind: true\n      }\n    ],\n    atrule: {\n      pattern:\n        /@[\\w-](?:\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        punctuation: /[:()]/\n      }\n    },\n    // selectors and mixins are considered the same\n    selector: {\n      pattern:\n        /(?:@\\{[\\w-]+\\}|[^{};\\s@])(?:@\\{[\\w-]+\\}|\\((?:[^(){}]|\\([^(){}]*\\))*\\)|[^(){};@\\s]|\\s+(?!\\s))*?(?=\\s*\\{)/,\n      inside: {\n        // mixin parameters\n        variable: /@+[\\w-]+/\n      }\n    },\n    property: /(?:@\\{[\\w-]+\\}|[\\w-])+(?:\\+_?)?(?=\\s*:)/,\n    operator: /[+\\-*\\/]/\n  })\n  Prism.languages.insertBefore('less', 'property', {\n    variable: [\n      // Variable declaration (the colon must be consumed!)\n      {\n        pattern: /@[\\w-]+\\s*:/,\n        inside: {\n          punctuation: /:/\n        }\n      }, // Variable usage\n      /@@?[\\w-]+/\n    ],\n    'mixin-usage': {\n      pattern: /([{;]\\s*)[.#](?!\\d)[\\w-].*?(?=[(;])/,\n      lookbehind: true,\n      alias: 'function'\n    }\n  })\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = lilypond\nlilypond.displayName = 'lilypond'\nlilypond.aliases = []\nfunction lilypond(Prism) {\n  Prism.register(refractorScheme)\n  ;(function (Prism) {\n    var schemeExpression =\n      /\\((?:[^();\"#\\\\]|\\\\[\\s\\S]|;.*(?!.)|\"(?:[^\"\\\\]|\\\\.)*\"|#(?:\\{(?:(?!#\\})[\\s\\S])*#\\}|[^{])|<expr>)*\\)/\n        .source // allow for up to pow(2, recursivenessLog2) many levels of recursive brace expressions\n    // For some reason, this can't be 4\n    var recursivenessLog2 = 5\n    for (var i = 0; i < recursivenessLog2; i++) {\n      schemeExpression = schemeExpression.replace(/<expr>/g, function () {\n        return schemeExpression\n      })\n    }\n    schemeExpression = schemeExpression.replace(/<expr>/g, /[^\\s\\S]/.source)\n    var lilypond = (Prism.languages.lilypond = {\n      comment: /%(?:(?!\\{).*|\\{[\\s\\S]*?%\\})/,\n      'embedded-scheme': {\n        pattern: RegExp(\n          /(^|[=\\s])#(?:\"(?:[^\"\\\\]|\\\\.)*\"|[^\\s()\"]*(?:[^\\s()]|<expr>))/.source.replace(\n            /<expr>/g,\n            function () {\n              return schemeExpression\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          scheme: {\n            pattern: /^(#)[\\s\\S]+$/,\n            lookbehind: true,\n            alias: 'language-scheme',\n            inside: {\n              'embedded-lilypond': {\n                pattern: /#\\{[\\s\\S]*?#\\}/,\n                greedy: true,\n                inside: {\n                  punctuation: /^#\\{|#\\}$/,\n                  lilypond: {\n                    pattern: /[\\s\\S]+/,\n                    alias: 'language-lilypond',\n                    inside: null // see below\n                  }\n                }\n              },\n              rest: Prism.languages.scheme\n            }\n          },\n          punctuation: /#/\n        }\n      },\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': {\n        pattern: /(\\\\new\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      keyword: {\n        pattern: /\\\\[a-z][-\\w]*/i,\n        inside: {\n          punctuation: /^\\\\/\n        }\n      },\n      operator: /[=|]|<<|>>/,\n      punctuation: {\n        pattern:\n          /(^|[a-z\\d])(?:'+|,+|[_^]?-[_^]?(?:[-+^!>._]|(?=\\d))|[_^]\\.?|[.!])|[{}()[\\]<>^~]|\\\\[()[\\]<>\\\\!]|--|__/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\/\\d+)?\\b/\n    })\n    lilypond['embedded-scheme'].inside['scheme'].inside[\n      'embedded-lilypond'\n    ].inside['lilypond'].inside = lilypond\n    Prism.languages.ly = lilypond\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = liquid\nliquid.displayName = 'liquid'\nliquid.aliases = []\nfunction liquid(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.liquid = {\n    comment: {\n      pattern: /(^\\{%\\s*comment\\s*%\\})[\\s\\S]+(?=\\{%\\s*endcomment\\s*%\\}$)/,\n      lookbehind: true\n    },\n    delimiter: {\n      pattern: /^\\{(?:\\{\\{|[%\\{])-?|-?(?:\\}\\}|[%\\}])\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /\"[^\"]*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|assign|break|(?:end)?(?:capture|case|comment|for|form|if|paginate|raw|style|tablerow|unless)|continue|cycle|decrement|echo|else|elsif|in|include|increment|limit|liquid|offset|range|render|reversed|section|when|with)\\b/,\n    object:\n      /\\b(?:address|all_country_option_tags|article|block|blog|cart|checkout|collection|color|country|country_option_tags|currency|current_page|current_tags|customer|customer_address|date|discount_allocation|discount_application|external_video|filter|filter_value|font|forloop|fulfillment|generic_file|gift_card|group|handle|image|line_item|link|linklist|localization|location|measurement|media|metafield|model|model_source|order|page|page_description|page_image|page_title|part|policy|product|product_option|recommendations|request|robots|routes|rule|script|search|selling_plan|selling_plan_allocation|selling_plan_group|shipping_method|shop|shop_locale|sitemap|store_availability|tax_line|template|theme|transaction|unit_price_measurement|user_agent|variant|video|video_source)\\b/,\n    function: [\n      {\n        pattern: /(\\|\\s*)\\w+/,\n        lookbehind: true,\n        alias: 'filter'\n      },\n      {\n        // array functions\n        pattern: /(\\.\\s*)(?:first|last|size)/,\n        lookbehind: true\n      }\n    ],\n    boolean: /\\b(?:false|nil|true)\\b/,\n    range: {\n      pattern: /\\.\\./,\n      alias: 'operator'\n    },\n    // https://github.com/Shopify/liquid/blob/698f5e0d967423e013f6169d9111bd969bd78337/lib/liquid/lexer.rb#L21\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /[!=]=|<>|[<>]=?|[|?:=-]|\\b(?:and|contains(?=\\s)|or)\\b/,\n    punctuation: /[.,\\[\\]()]/,\n    empty: {\n      pattern: /\\bempty\\b/,\n      alias: 'keyword'\n    }\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    var liquidPattern =\n      /\\{%\\s*comment\\s*%\\}[\\s\\S]*?\\{%\\s*endcomment\\s*%\\}|\\{(?:%[\\s\\S]*?%|\\{\\{[\\s\\S]*?\\}\\}|\\{[\\s\\S]*?\\})\\}/g\n    var insideRaw = false\n    Prism.languages['markup-templating'].buildPlaceholders(\n      env,\n      'liquid',\n      liquidPattern,\n      function (match) {\n        var tagMatch = /^\\{%-?\\s*(\\w+)/.exec(match)\n        if (tagMatch) {\n          var tag = tagMatch[1]\n          if (tag === 'raw' && !insideRaw) {\n            insideRaw = true\n            return true\n          } else if (tag === 'endraw') {\n            insideRaw = false\n            return true\n          }\n        }\n        return !insideRaw\n      }\n    )\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'liquid')\n  })\n}\n","'use strict'\n\nmodule.exports = lisp\nlisp.displayName = 'lisp'\nlisp.aliases = []\nfunction lisp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Functions to construct regular expressions\n     * e.g. (interactive ... or (interactive)\n     *\n     * @param {string} name\n     * @returns {RegExp}\n     */\n    function simple_form(name) {\n      return RegExp(/(\\()/.source + '(?:' + name + ')' + /(?=[\\s\\)])/.source)\n    }\n    /**\n     * booleans and numbers\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function primitive(pattern) {\n      return RegExp(\n        /([\\s([])/.source + '(?:' + pattern + ')' + /(?=[\\s)])/.source\n      )\n    } // Patterns in regular expressions\n    // Symbol name. See https://www.gnu.org/software/emacs/manual/html_node/elisp/Symbol-Type.html\n    // & and : are excluded as they are usually used for special purposes\n    var symbol = /(?!\\d)[-+*/~!@$%^=<>{}\\w]+/.source // symbol starting with & used in function arguments\n    var marker = '&' + symbol // Open parenthesis for look-behind\n    var par = '(\\\\()'\n    var endpar = '(?=\\\\))' // End the pattern with look-ahead space\n    var space = '(?=\\\\s)'\n    var nestedPar =\n      /(?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\))*\\))*\\))*/\n        .source\n    var language = {\n      // Three or four semicolons are considered a heading.\n      // See https://www.gnu.org/software/emacs/manual/html_node/elisp/Comment-Tips.html\n      heading: {\n        pattern: /;;;.*/,\n        alias: ['comment', 'title']\n      },\n      comment: /;.*/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true,\n        inside: {\n          argument: /[-A-Z]+(?=[.,\\s])/,\n          symbol: RegExp('`' + symbol + \"'\")\n        }\n      },\n      'quoted-symbol': {\n        pattern: RegExp(\"#?'\" + symbol),\n        alias: ['variable', 'symbol']\n      },\n      'lisp-property': {\n        pattern: RegExp(':' + symbol),\n        alias: 'property'\n      },\n      splice: {\n        pattern: RegExp(',@?' + symbol),\n        alias: ['symbol', 'variable']\n      },\n      keyword: [\n        {\n          pattern: RegExp(\n            par +\n              '(?:and|(?:cl-)?letf|cl-loop|cond|cons|error|if|(?:lexical-)?let\\\\*?|message|not|null|or|provide|require|setq|unless|use-package|when|while)' +\n              space\n          ),\n          lookbehind: true\n        },\n        {\n          pattern: RegExp(\n            par +\n              '(?:append|by|collect|concat|do|finally|for|in|return)' +\n              space\n          ),\n          lookbehind: true\n        }\n      ],\n      declare: {\n        pattern: simple_form(/declare/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      interactive: {\n        pattern: simple_form(/interactive/.source),\n        lookbehind: true,\n        alias: 'keyword'\n      },\n      boolean: {\n        pattern: primitive(/nil|t/.source),\n        lookbehind: true\n      },\n      number: {\n        pattern: primitive(/[-+]?\\d+(?:\\.\\d*)?/.source),\n        lookbehind: true\n      },\n      defvar: {\n        pattern: RegExp(par + 'def(?:const|custom|group|var)\\\\s+' + symbol),\n        lookbehind: true,\n        inside: {\n          keyword: /^def[a-z]+/,\n          variable: RegExp(symbol)\n        }\n      },\n      defun: {\n        pattern: RegExp(\n          par +\n            /(?:cl-)?(?:defmacro|defun\\*?)\\s+/.source +\n            symbol +\n            /\\s+\\(/.source +\n            nestedPar +\n            /\\)/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^(?:cl-)?def\\S+/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          function: {\n            pattern: RegExp('(^\\\\s)' + symbol),\n            lookbehind: true\n          },\n          punctuation: /[()]/\n        }\n      },\n      lambda: {\n        pattern: RegExp(\n          par +\n            'lambda\\\\s+\\\\(\\\\s*(?:&?' +\n            symbol +\n            '(?:\\\\s+&?' +\n            symbol +\n            ')*\\\\s*)?\\\\)'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          keyword: /^lambda/,\n          // See below, this property needs to be defined later so that it can\n          // reference the language object.\n          arguments: null,\n          punctuation: /[()]/\n        }\n      },\n      car: {\n        pattern: RegExp(par + symbol),\n        lookbehind: true\n      },\n      punctuation: [\n        // open paren, brackets, and close paren\n        /(?:['`,]?\\(|[)\\[\\]])/, // cons\n        {\n          pattern: /(\\s)\\.(?=\\s)/,\n          lookbehind: true\n        }\n      ]\n    }\n    var arg = {\n      'lisp-marker': RegExp(marker),\n      varform: {\n        pattern: RegExp(\n          /\\(/.source + symbol + /\\s+(?=\\S)/.source + nestedPar + /\\)/.source\n        ),\n        inside: language\n      },\n      argument: {\n        pattern: RegExp(/(^|[\\s(])/.source + symbol),\n        lookbehind: true,\n        alias: 'variable'\n      },\n      rest: language\n    }\n    var forms = '\\\\S+(?:\\\\s+\\\\S+)*'\n    var arglist = {\n      pattern: RegExp(par + nestedPar + endpar),\n      lookbehind: true,\n      inside: {\n        'rest-vars': {\n          pattern: RegExp('&(?:body|rest)\\\\s+' + forms),\n          inside: arg\n        },\n        'other-marker-vars': {\n          pattern: RegExp('&(?:aux|optional)\\\\s+' + forms),\n          inside: arg\n        },\n        keys: {\n          pattern: RegExp('&key\\\\s+' + forms + '(?:\\\\s+&allow-other-keys)?'),\n          inside: arg\n        },\n        argument: {\n          pattern: RegExp(symbol),\n          alias: 'variable'\n        },\n        punctuation: /[()]/\n      }\n    }\n    language['lambda'].inside.arguments = arglist\n    language['defun'].inside.arguments = Prism.util.clone(arglist)\n    language['defun'].inside.arguments.inside.sublist = arglist\n    Prism.languages.lisp = language\n    Prism.languages.elisp = language\n    Prism.languages.emacs = language\n    Prism.languages['emacs-lisp'] = language\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = livescript\nlivescript.displayName = 'livescript'\nlivescript.aliases = []\nfunction livescript(Prism) {\n  Prism.languages.livescript = {\n    comment: [\n      {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true\n      }\n    ],\n    'interpolated-string': {\n      /* Look-behind and look-ahead prevents wrong behavior of the greedy pattern\n       * forcing it to match \"\"\"-quoted string when it would otherwise match \"-quoted first. */\n      pattern: /(^|[^\"])(\"\"\"|\")(?:\\\\[\\s\\S]|(?!\\2)[^\\\\])*\\2(?!\")/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        variable: {\n          pattern: /(^|[^\\\\])#[a-z_](?:-?[a-z]|[\\d_])*/m,\n          lookbehind: true\n        },\n        interpolation: {\n          pattern: /(^|[^\\\\])#\\{[^}]+\\}/m,\n          lookbehind: true,\n          inside: {\n            'interpolation-punctuation': {\n              pattern: /^#\\{|\\}$/,\n              alias: 'variable'\n            } // See rest below\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    string: [\n      {\n        pattern: /('''|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n        greedy: true\n      },\n      {\n        pattern: /<\\[[\\s\\S]*?\\]>/,\n        greedy: true\n      },\n      /\\\\[^\\s,;\\])}]+/\n    ],\n    regex: [\n      {\n        pattern: /\\/\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|(?!\\/\\/)[^\\\\\\[])+\\/\\/[gimyu]{0,5}/,\n        greedy: true,\n        inside: {\n          comment: {\n            pattern: /(^|[^\\\\])#.*/,\n            lookbehind: true\n          }\n        }\n      },\n      {\n        pattern: /\\/(?:\\[[^\\r\\n\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/[gimyu]{0,5}/,\n        greedy: true\n      }\n    ],\n    keyword: {\n      pattern:\n        /(^|(?!-).)\\b(?:break|case|catch|class|const|continue|default|do|else|extends|fallthrough|finally|for(?: ever)?|function|if|implements|it|let|loop|new|null|otherwise|own|return|super|switch|that|then|this|throw|try|unless|until|var|void|when|while|yield)(?!-)\\b/m,\n      lookbehind: true\n    },\n    'keyword-operator': {\n      pattern:\n        /(^|[^-])\\b(?:(?:delete|require|typeof)!|(?:and|by|delete|export|from|import(?: all)?|in|instanceof|is(?: not|nt)?|not|of|or|til|to|typeof|with|xor)(?!-)\\b)/m,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    boolean: {\n      pattern: /(^|[^-])\\b(?:false|no|off|on|true|yes)(?!-)\\b/m,\n      lookbehind: true\n    },\n    argument: {\n      // Don't match .&. nor &&\n      pattern: /(^|(?!\\.&\\.)[^&])&(?!&)\\d*/m,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    number: /\\b(?:\\d+~[\\da-z]+|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[a-z]\\w*)?)/i,\n    identifier: /[a-z_](?:-?[a-z]|[\\d_])*/i,\n    operator: [\n      // Spaced .\n      {\n        pattern: /( )\\.(?= )/,\n        lookbehind: true\n      }, // Full list, in order:\n      // .= .~ .. ...\n      // .&. .^. .<<. .>>. .>>>.\n      // := :: ::=\n      // &&\n      // || |>\n      // < << <<< <<<<\n      // <- <-- <-! <--!\n      // <~ <~~ <~! <~~!\n      // <| <= <?\n      // > >> >= >?\n      // - -- -> -->\n      // + ++\n      // @ @@\n      // % %%\n      // * **\n      // ! != !~=\n      // !~> !~~>\n      // !-> !-->\n      // ~ ~> ~~> ~=\n      // = ==\n      // ^ ^^\n      // / ?\n      /\\.(?:[=~]|\\.\\.?)|\\.(?:[&|^]|<<|>>>?)\\.|:(?:=|:=?)|&&|\\|[|>]|<(?:<<?<?|--?!?|~~?!?|[|=?])?|>[>=?]?|-(?:->?|>)?|\\+\\+?|@@?|%%?|\\*\\*?|!(?:~?=|--?>|~?~>)?|~(?:~?>|=)?|==?|\\^\\^?|[\\/?]/\n    ],\n    punctuation: /[(){}\\[\\]|.,:;`]/\n  }\n  Prism.languages.livescript['interpolated-string'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.livescript\n}\n","'use strict'\n\nmodule.exports = llvm\nllvm.displayName = 'llvm'\nllvm.aliases = []\nfunction llvm(Prism) {\n  ;(function (Prism) {\n    Prism.languages.llvm = {\n      comment: /;.*/,\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      boolean: /\\b(?:false|true)\\b/,\n      variable: /[%@!#](?:(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+|\\d+)/i,\n      label: /(?!\\d)(?:[-$.\\w]|\\\\[a-f\\d]{2})+:/i,\n      type: {\n        pattern:\n          /\\b(?:double|float|fp128|half|i[1-9]\\d*|label|metadata|ppc_fp128|token|void|x86_fp80|x86_mmx)\\b/,\n        alias: 'class-name'\n      },\n      keyword: /\\b[a-z_][a-z_0-9]*\\b/,\n      number:\n        /[+-]?\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-Fa-f]+\\b|\\b0xK[\\dA-Fa-f]{20}\\b|\\b0x[ML][\\dA-Fa-f]{32}\\b|\\b0xH[\\dA-Fa-f]{4}\\b/,\n      punctuation: /[{}[\\];(),.!*=<>]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = log\nlog.displayName = 'log'\nlog.aliases = []\nfunction log(Prism) {\n  // This is a language definition for generic log files.\n  // Since there is no one log format, this language definition has to support all formats to some degree.\n  //\n  // Based on https://github.com/MTDL9/vim-log-highlighting\n  Prism.languages.log = {\n    string: {\n      // Single-quoted strings must not be confused with plain text. E.g. Can't isn't Susan's Chris' toy\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?![st] | \\w)(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    exception: {\n      pattern:\n        /(^|[^\\w.])[a-z][\\w.]*(?:Error|Exception):.*(?:(?:\\r\\n?|\\n)[ \\t]*(?:at[ \\t].+|\\.{3}.*|Caused by:.*))+(?:(?:\\r\\n?|\\n)[ \\t]*\\.\\.\\. .*)?/,\n      lookbehind: true,\n      greedy: true,\n      alias: ['javastacktrace', 'language-javastacktrace'],\n      inside: Prism.languages['javastacktrace'] || {\n        keyword: /\\bat\\b/,\n        function: /[a-z_][\\w$]*(?=\\()/,\n        punctuation: /[.:()]/\n      }\n    },\n    level: [\n      {\n        pattern:\n          /\\b(?:ALERT|CRIT|CRITICAL|EMERG|EMERGENCY|ERR|ERROR|FAILURE|FATAL|SEVERE)\\b/,\n        alias: ['error', 'important']\n      },\n      {\n        pattern: /\\b(?:WARN|WARNING|WRN)\\b/,\n        alias: ['warning', 'important']\n      },\n      {\n        pattern: /\\b(?:DISPLAY|INF|INFO|NOTICE|STATUS)\\b/,\n        alias: ['info', 'keyword']\n      },\n      {\n        pattern: /\\b(?:DBG|DEBUG|FINE)\\b/,\n        alias: ['debug', 'keyword']\n      },\n      {\n        pattern: /\\b(?:FINER|FINEST|TRACE|TRC|VERBOSE|VRB)\\b/,\n        alias: ['trace', 'comment']\n      }\n    ],\n    property: {\n      pattern:\n        /((?:^|[\\]|])[ \\t]*)[a-z_](?:[\\w-]|\\b\\/\\b)*(?:[. ]\\(?\\w(?:[\\w-]|\\b\\/\\b)*\\)?)*:(?=\\s)/im,\n      lookbehind: true\n    },\n    separator: {\n      pattern: /(^|[^-+])-{3,}|={3,}|\\*{3,}|- - /m,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    url: /\\b(?:file|ftp|https?):\\/\\/[^\\s|,;'\"]*[^\\s|,;'\">.]/,\n    email: {\n      pattern: /(^|\\s)[-\\w+.]+@[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)+(?=\\s)/,\n      lookbehind: true,\n      alias: 'url'\n    },\n    'ip-address': {\n      pattern: /\\b(?:\\d{1,3}(?:\\.\\d{1,3}){3})\\b/,\n      alias: 'constant'\n    },\n    'mac-address': {\n      pattern: /\\b[a-f0-9]{2}(?::[a-f0-9]{2}){5}\\b/i,\n      alias: 'constant'\n    },\n    domain: {\n      pattern:\n        /(^|\\s)[a-z][a-z0-9-]*(?:\\.[a-z][a-z0-9-]*)*\\.[a-z][a-z0-9-]+(?=\\s)/,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    uuid: {\n      pattern:\n        /\\b[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}\\b/i,\n      alias: 'constant'\n    },\n    hash: {\n      pattern: /\\b(?:[a-f0-9]{32}){1,2}\\b/i,\n      alias: 'constant'\n    },\n    'file-path': {\n      pattern:\n        /\\b[a-z]:[\\\\/][^\\s|,;:(){}\\[\\]\"']+|(^|[\\s:\\[\\](>|])\\.{0,2}\\/\\w[^\\s|,;:(){}\\[\\]\"']*/i,\n      lookbehind: true,\n      greedy: true,\n      alias: 'string'\n    },\n    date: {\n      pattern: RegExp(\n        /\\b\\d{4}[-/]\\d{2}[-/]\\d{2}(?:T(?=\\d{1,2}:)|(?=\\s\\d{1,2}:))/.source +\n          '|' +\n          /\\b\\d{1,4}[-/ ](?:\\d{1,2}|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)[-/ ]\\d{2,4}T?\\b/\n            .source +\n          '|' +\n          /\\b(?:(?:Fri|Mon|Sat|Sun|Thu|Tue|Wed)(?:\\s{1,2}(?:Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep))?|Apr|Aug|Dec|Feb|Jan|Jul|Jun|Mar|May|Nov|Oct|Sep)\\s{1,2}\\d{1,2}\\b/\n            .source,\n        'i'\n      ),\n      alias: 'number'\n    },\n    time: {\n      pattern:\n        /\\b\\d{1,2}:\\d{1,2}:\\d{1,2}(?:[.,:]\\d+)?(?:\\s?[+-]\\d{2}:?\\d{2}|Z)?\\b/,\n      alias: 'number'\n    },\n    boolean: /\\b(?:false|null|true)\\b/i,\n    number: {\n      pattern:\n        /(^|[^.\\w])(?:0x[a-f0-9]+|0o[0-7]+|0b[01]+|v?\\d[\\da-f]*(?:\\.\\d+)*(?:e[+-]?\\d+)?[a-z]{0,3}\\b)\\b(?!\\.\\w)/i,\n      lookbehind: true\n    },\n    operator: /[;:?<=>~/@!$%&+\\-|^(){}*#]/,\n    punctuation: /[\\[\\].,]/\n  }\n}\n","'use strict'\n\nmodule.exports = lolcode\nlolcode.displayName = 'lolcode'\nlolcode.aliases = []\nfunction lolcode(Prism) {\n  Prism.languages.lolcode = {\n    comment: [/\\bOBTW\\s[\\s\\S]*?\\sTLDR\\b/, /\\bBTW.+/],\n    string: {\n      pattern: /\"(?::.|[^\":])*\"/,\n      inside: {\n        variable: /:\\{[^}]+\\}/,\n        symbol: [/:\\([a-f\\d]+\\)/i, /:\\[[^\\]]+\\]/, /:[)>o\":]/]\n      },\n      greedy: true\n    },\n    number: /(?:\\B-)?(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)/,\n    symbol: {\n      pattern: /(^|\\s)(?:A )?(?:BUKKIT|NOOB|NUMBAR|NUMBR|TROOF|YARN)(?=\\s|,|$)/,\n      lookbehind: true,\n      inside: {\n        keyword: /A(?=\\s)/\n      }\n    },\n    label: {\n      pattern: /((?:^|\\s)(?:IM IN YR|IM OUTTA YR) )[a-zA-Z]\\w*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    function: {\n      pattern: /((?:^|\\s)(?:HOW IZ I|I IZ|IZ) )[a-zA-Z]\\w*/,\n      lookbehind: true\n    },\n    keyword: [\n      {\n        pattern:\n          /(^|\\s)(?:AN|FOUND YR|GIMMEH|GTFO|HAI|HAS A|HOW IZ I|I HAS A|I IZ|IF U SAY SO|IM IN YR|IM OUTTA YR|IS NOW(?: A)?|ITZ(?: A)?|IZ|KTHX|KTHXBYE|LIEK(?: A)?|MAEK|MEBBE|MKAY|NERFIN|NO WAI|O HAI IM|O RLY\\?|OIC|OMG|OMGWTF|R|SMOOSH|SRS|TIL|UPPIN|VISIBLE|WILE|WTF\\?|YA RLY|YR)(?=\\s|,|$)/,\n        lookbehind: true\n      },\n      /'Z(?=\\s|,|$)/\n    ],\n    boolean: {\n      pattern: /(^|\\s)(?:FAIL|WIN)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    variable: {\n      pattern: /(^|\\s)IT(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    operator: {\n      pattern:\n        /(^|\\s)(?:NOT|BOTH SAEM|DIFFRINT|(?:ALL|ANY|BIGGR|BOTH|DIFF|EITHER|MOD|PRODUKT|QUOSHUNT|SMALLR|SUM|WON) OF)(?=\\s|,|$)/,\n      lookbehind: true\n    },\n    punctuation: /\\.{3}|…|,|!/\n  }\n}\n","'use strict'\n\nmodule.exports = lua\nlua.displayName = 'lua'\nlua.aliases = []\nfunction lua(Prism) {\n  Prism.languages.lua = {\n    comment: /^#!.+|--(?:\\[(=*)\\[[\\s\\S]*?\\]\\1\\]|.*)/m,\n    // \\z may be used to skip the following space\n    string: {\n      pattern:\n        /([\"'])(?:(?!\\1)[^\\\\\\r\\n]|\\\\z(?:\\r\\n|\\s)|\\\\(?:\\r\\n|[^z]))*\\1|\\[(=*)\\[[\\s\\S]*?\\]\\2\\]/,\n      greedy: true\n    },\n    number:\n      /\\b0x[a-f\\d]+(?:\\.[a-f\\d]*)?(?:p[+-]?\\d+)?\\b|\\b\\d+(?:\\.\\B|(?:\\.\\d*)?(?:e[+-]?\\d+)?\\b)|\\B\\.\\d+(?:e[+-]?\\d+)?\\b/i,\n    keyword:\n      /\\b(?:and|break|do|else|elseif|end|false|for|function|goto|if|in|local|nil|not|or|repeat|return|then|true|until|while)\\b/,\n    function: /(?!\\d)\\w+(?=\\s*(?:[({]))/,\n    operator: [\n      /[-+*%^&|#]|\\/\\/?|<[<=]?|>[>=]?|[=~]=?/,\n      {\n        // Match \"..\" but don't break \"...\"\n        pattern: /(^|[^.])\\.\\.(?!\\.)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /[\\[\\](){},;]|\\.+|:+/\n  }\n}\n","'use strict'\n\nmodule.exports = magma\nmagma.displayName = 'magma'\nmagma.aliases = []\nfunction magma(Prism) {\n  Prism.languages.magma = {\n    output: {\n      pattern:\n        /^(>.*(?:\\r(?:\\n|(?!\\n))|\\n))(?!>)(?:.+|(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)(?:(?:\\r(?:\\n|(?!\\n))|\\n)(?!>).*)*/m,\n      lookbehind: true,\n      greedy: true\n    },\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\\"])\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"/,\n      lookbehind: true,\n      greedy: true\n    },\n    // http://magma.maths.usyd.edu.au/magma/handbook/text/82\n    keyword:\n      /\\b(?:_|adj|and|assert|assert2|assert3|assigned|break|by|case|cat|catch|clear|cmpeq|cmpne|continue|declare|default|delete|diff|div|do|elif|else|end|eq|error|eval|exists|exit|for|forall|forward|fprintf|freeze|function|ge|gt|if|iload|import|in|intrinsic|is|join|le|load|local|lt|meet|mod|ne|not|notadj|notin|notsubset|or|print|printf|procedure|quit|random|read|readi|repeat|require|requirege|requirerange|restore|return|save|sdiff|select|subset|then|time|to|try|until|vprint|vprintf|vtime|when|where|while|xor)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    generator: {\n      pattern: /\\b[a-z_]\\w*(?=\\s*<)/i,\n      alias: 'class-name'\n    },\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    number: {\n      pattern:\n        /(^|[^\\w.]|\\.\\.)(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eE][+-]?\\d+)?(?:_[a-z]?)?(?=$|[^\\w.]|\\.\\.)/,\n      lookbehind: true\n    },\n    operator: /->|[-+*/^~!|#=]|:=|\\.\\./,\n    punctuation: /[()[\\]{}<>,;.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'builtin-target': {\n      pattern: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n      alias: 'builtin'\n    },\n    target: {\n      pattern: /^(?:[^:=\\s]|[ \\t]+(?![\\s:]))+(?=\\s*:(?!=))/m,\n      alias: 'symbol',\n      inside: {\n        variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:(?!\\$)[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    // Directives\n    keyword:\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,\n    function: {\n      pattern:\n        /(\\()(?:abspath|addsuffix|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:list|s)?)(?=[ \\t])/,\n      lookbehind: true\n    },\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = markdown\nmarkdown.displayName = 'markdown'\nmarkdown.aliases = ['md']\nfunction markdown(Prism) {\n  ;(function (Prism) {\n    // Allow only one line break\n    var inner = /(?:\\\\.|[^\\\\\\n\\r]|(?:\\n|\\r\\n?)(?![\\r\\n]))/.source\n    /**\n     * This function is intended for the creation of the bold or italic pattern.\n     *\n     * This also adds a lookbehind group to the given pattern to ensure that the pattern is not backslash-escaped.\n     *\n     * _Note:_ Keep in mind that this adds a capturing group.\n     *\n     * @param {string} pattern\n     * @returns {RegExp}\n     */\n    function createInline(pattern) {\n      pattern = pattern.replace(/<inner>/g, function () {\n        return inner\n      })\n      return RegExp(/((?:^|[^\\\\])(?:\\\\{2})*)/.source + '(?:' + pattern + ')')\n    }\n    var tableCell = /(?:\\\\.|``(?:[^`\\r\\n]|`(?!`))+``|`[^`\\r\\n]+`|[^\\\\|\\r\\n`])+/\n      .source\n    var tableRow =\n      /\\|?__(?:\\|__)+\\|?(?:(?:\\n|\\r\\n?)|(?![\\s\\S]))/.source.replace(\n        /__/g,\n        function () {\n          return tableCell\n        }\n      )\n    var tableLine =\n      /\\|?[ \\t]*:?-{3,}:?[ \\t]*(?:\\|[ \\t]*:?-{3,}:?[ \\t]*)+\\|?(?:\\n|\\r\\n?)/\n        .source\n    Prism.languages.markdown = Prism.languages.extend('markup', {})\n    Prism.languages.insertBefore('markdown', 'prolog', {\n      'front-matter-block': {\n        pattern: /(^(?:\\s*[\\r\\n])?)---(?!.)[\\s\\S]*?[\\r\\n]---(?!.)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^---|---$/,\n          'front-matter': {\n            pattern: /\\S+(?:\\s+\\S+)*/,\n            alias: ['yaml', 'language-yaml'],\n            inside: Prism.languages.yaml\n          }\n        }\n      },\n      blockquote: {\n        // > ...\n        pattern: /^>(?:[\\t ]*>)*/m,\n        alias: 'punctuation'\n      },\n      table: {\n        pattern: RegExp(\n          '^' + tableRow + tableLine + '(?:' + tableRow + ')*',\n          'm'\n        ),\n        inside: {\n          'table-data-rows': {\n            pattern: RegExp(\n              '^(' + tableRow + tableLine + ')(?:' + tableRow + ')*$'\n            ),\n            lookbehind: true,\n            inside: {\n              'table-data': {\n                pattern: RegExp(tableCell),\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          },\n          'table-line': {\n            pattern: RegExp('^(' + tableRow + ')' + tableLine + '$'),\n            lookbehind: true,\n            inside: {\n              punctuation: /\\||:?-{3,}:?/\n            }\n          },\n          'table-header-row': {\n            pattern: RegExp('^' + tableRow + '$'),\n            inside: {\n              'table-header': {\n                pattern: RegExp(tableCell),\n                alias: 'important',\n                inside: Prism.languages.markdown\n              },\n              punctuation: /\\|/\n            }\n          }\n        }\n      },\n      code: [\n        {\n          // Prefixed by 4 spaces or 1 tab and preceded by an empty line\n          pattern:\n            /((?:^|\\n)[ \\t]*\\n|(?:^|\\r\\n?)[ \\t]*\\r\\n?)(?: {4}|\\t).+(?:(?:\\n|\\r\\n?)(?: {4}|\\t).+)*/,\n          lookbehind: true,\n          alias: 'keyword'\n        },\n        {\n          // ```optional language\n          // code block\n          // ```\n          pattern: /^```[\\s\\S]*?^```$/m,\n          greedy: true,\n          inside: {\n            'code-block': {\n              pattern: /^(```.*(?:\\n|\\r\\n?))[\\s\\S]+?(?=(?:\\n|\\r\\n?)^```$)/m,\n              lookbehind: true\n            },\n            'code-language': {\n              pattern: /^(```).+/,\n              lookbehind: true\n            },\n            punctuation: /```/\n          }\n        }\n      ],\n      title: [\n        {\n          // title 1\n          // =======\n          // title 2\n          // -------\n          pattern: /\\S.*(?:\\n|\\r\\n?)(?:==+|--+)(?=[ \\t]*$)/m,\n          alias: 'important',\n          inside: {\n            punctuation: /==+$|--+$/\n          }\n        },\n        {\n          // # title 1\n          // ###### title 6\n          pattern: /(^\\s*)#.+/m,\n          lookbehind: true,\n          alias: 'important',\n          inside: {\n            punctuation: /^#+|#+$/\n          }\n        }\n      ],\n      hr: {\n        // ***\n        // ---\n        // * * *\n        // -----------\n        pattern: /(^\\s*)([*-])(?:[\\t ]*\\2){2,}(?=\\s*$)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      list: {\n        // * item\n        // + item\n        // - item\n        // 1. item\n        pattern: /(^\\s*)(?:[*+-]|\\d+\\.)(?=[\\t ].)/m,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      'url-reference': {\n        // [id]: http://example.com \"Optional title\"\n        // [id]: http://example.com 'Optional title'\n        // [id]: http://example.com (Optional title)\n        // [id]: <http://example.com> \"Optional title\"\n        pattern:\n          /!?\\[[^\\]]+\\]:[\\t ]+(?:\\S+|<(?:\\\\.|[^>\\\\])+>)(?:[\\t ]+(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\)))?/,\n        inside: {\n          variable: {\n            pattern: /^(!?\\[)[^\\]]+/,\n            lookbehind: true\n          },\n          string:\n            /(?:\"(?:\\\\.|[^\"\\\\])*\"|'(?:\\\\.|[^'\\\\])*'|\\((?:\\\\.|[^)\\\\])*\\))$/,\n          punctuation: /^[\\[\\]!:]|[<>]/\n        },\n        alias: 'url'\n      },\n      bold: {\n        // **strong**\n        // __strong__\n        // allow one nested instance of italic text using the same delimiter\n        pattern: createInline(\n          /\\b__(?:(?!_)<inner>|_(?:(?!_)<inner>)+_)+__\\b|\\*\\*(?:(?!\\*)<inner>|\\*(?:(?!\\*)<inner>)+\\*)+\\*\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^..)[\\s\\S]+(?=..$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /\\*\\*|__/\n        }\n      },\n      italic: {\n        // *em*\n        // _em_\n        // allow one nested instance of bold text using the same delimiter\n        pattern: createInline(\n          /\\b_(?:(?!_)<inner>|__(?:(?!_)<inner>)+__)+_\\b|\\*(?:(?!\\*)<inner>|\\*\\*(?:(?!\\*)<inner>)+\\*\\*)+\\*/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^.)[\\s\\S]+(?=.$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /[*_]/\n        }\n      },\n      strike: {\n        // ~~strike through~~\n        // ~strike~\n        // eslint-disable-next-line regexp/strict\n        pattern: createInline(/(~~?)(?:(?!~)<inner>)+\\2/.source),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          content: {\n            pattern: /(^~~?)[\\s\\S]+(?=\\1$)/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          punctuation: /~~?/\n        }\n      },\n      'code-snippet': {\n        // `code`\n        // ``code``\n        pattern:\n          /(^|[^\\\\`])(?:``[^`\\r\\n]+(?:`[^`\\r\\n]+)*``(?!`)|`[^`\\r\\n]+`(?!`))/,\n        lookbehind: true,\n        greedy: true,\n        alias: ['code', 'keyword']\n      },\n      url: {\n        // [example](http://example.com \"Optional title\")\n        // [example][id]\n        // [example] [id]\n        pattern: createInline(\n          /!?\\[(?:(?!\\])<inner>)+\\](?:\\([^\\s)]+(?:[\\t ]+\"(?:\\\\.|[^\"\\\\])*\")?\\)|[ \\t]?\\[(?:(?!\\])<inner>)+\\])/\n            .source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          operator: /^!/,\n          content: {\n            pattern: /(^\\[)[^\\]]+(?=\\])/,\n            lookbehind: true,\n            inside: {} // see below\n          },\n          variable: {\n            pattern: /(^\\][ \\t]?\\[)[^\\]]+(?=\\]$)/,\n            lookbehind: true\n          },\n          url: {\n            pattern: /(^\\]\\()[^\\s)]+/,\n            lookbehind: true\n          },\n          string: {\n            pattern: /(^[ \\t]+)\"(?:\\\\.|[^\"\\\\])*\"(?=\\)$)/,\n            lookbehind: true\n          }\n        }\n      }\n    })\n    ;['url', 'bold', 'italic', 'strike'].forEach(function (token) {\n      ;['url', 'bold', 'italic', 'strike', 'code-snippet'].forEach(function (\n        inside\n      ) {\n        if (token !== inside) {\n          Prism.languages.markdown[token].inside.content.inside[inside] =\n            Prism.languages.markdown[inside]\n        }\n      })\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'markdown' && env.language !== 'md') {\n        return\n      }\n      function walkTokens(tokens) {\n        if (!tokens || typeof tokens === 'string') {\n          return\n        }\n        for (var i = 0, l = tokens.length; i < l; i++) {\n          var token = tokens[i]\n          if (token.type !== 'code') {\n            walkTokens(token.content)\n            continue\n          }\n          /*\n           * Add the correct `language-xxxx` class to this code block. Keep in mind that the `code-language` token\n           * is optional. But the grammar is defined so that there is only one case we have to handle:\n           *\n           * token.content = [\n           *     <span class=\"punctuation\">```</span>,\n           *     <span class=\"code-language\">xxxx</span>,\n           *     '\\n', // exactly one new lines (\\r or \\n or \\r\\n)\n           *     <span class=\"code-block\">...</span>,\n           *     '\\n', // exactly one new lines again\n           *     <span class=\"punctuation\">```</span>\n           * ];\n           */\n          var codeLang = token.content[1]\n          var codeBlock = token.content[3]\n          if (\n            codeLang &&\n            codeBlock &&\n            codeLang.type === 'code-language' &&\n            codeBlock.type === 'code-block' &&\n            typeof codeLang.content === 'string'\n          ) {\n            // this might be a language that Prism does not support\n            // do some replacements to support C++, C#, and F#\n            var lang = codeLang.content\n              .replace(/\\b#/g, 'sharp')\n              .replace(/\\b\\+\\+/g, 'pp') // only use the first word\n            lang = (/[a-z][\\w-]*/i.exec(lang) || [''])[0].toLowerCase()\n            var alias = 'language-' + lang // add alias\n            if (!codeBlock.alias) {\n              codeBlock.alias = [alias]\n            } else if (typeof codeBlock.alias === 'string') {\n              codeBlock.alias = [codeBlock.alias, alias]\n            } else {\n              codeBlock.alias.push(alias)\n            }\n          }\n        }\n      }\n      walkTokens(env.tokens)\n    })\n    Prism.hooks.add('wrap', function (env) {\n      if (env.type !== 'code-block') {\n        return\n      }\n      var codeLang = ''\n      for (var i = 0, l = env.classes.length; i < l; i++) {\n        var cls = env.classes[i]\n        var match = /language-(.+)/.exec(cls)\n        if (match) {\n          codeLang = match[1]\n          break\n        }\n      }\n      var grammar = Prism.languages[codeLang]\n      if (!grammar) {\n        if (codeLang && codeLang !== 'none' && Prism.plugins.autoloader) {\n          var id =\n            'md-' +\n            new Date().valueOf() +\n            '-' +\n            Math.floor(Math.random() * 1e16)\n          env.attributes['id'] = id\n          Prism.plugins.autoloader.loadLanguages(codeLang, function () {\n            var ele = document.getElementById(id)\n            if (ele) {\n              ele.innerHTML = Prism.highlight(\n                ele.textContent,\n                Prism.languages[codeLang],\n                codeLang\n              )\n            }\n          })\n        }\n      } else {\n        env.content = Prism.highlight(\n          textContent(env.content.value),\n          grammar,\n          codeLang\n        )\n      }\n    })\n    var tagPattern = RegExp(Prism.languages.markup.tag.pattern.source, 'gi')\n    /**\n     * A list of known entity names.\n     *\n     * This will always be incomplete to save space. The current list is the one used by lowdash's unescape function.\n     *\n     * @see {@link https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/unescape.js#L2}\n     */\n    var KNOWN_ENTITY_NAMES = {\n      amp: '&',\n      lt: '<',\n      gt: '>',\n      quot: '\"'\n    } // IE 11 doesn't support `String.fromCodePoint`\n    var fromCodePoint = String.fromCodePoint || String.fromCharCode\n    /**\n     * Returns the text content of a given HTML source code string.\n     *\n     * @param {string} html\n     * @returns {string}\n     */\n    function textContent(html) {\n      // remove all tags\n      var text = html.replace(tagPattern, '') // decode known entities\n      text = text.replace(/&(\\w{1,8}|#x?[\\da-f]{1,8});/gi, function (m, code) {\n        code = code.toLowerCase()\n        if (code[0] === '#') {\n          var value\n          if (code[1] === 'x') {\n            value = parseInt(code.slice(2), 16)\n          } else {\n            value = Number(code.slice(1))\n          }\n          return fromCodePoint(value)\n        } else {\n          var known = KNOWN_ENTITY_NAMES[code]\n          if (known) {\n            return known\n          } // unable to decode\n          return m\n        }\n      })\n      return text\n    }\n    Prism.languages.md = Prism.languages.markdown\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markupTemplating\nmarkupTemplating.displayName = 'markupTemplating'\nmarkupTemplating.aliases = []\nfunction markupTemplating(Prism) {\n  ;(function (Prism) {\n    /**\n     * Returns the placeholder for the given language id and index.\n     *\n     * @param {string} language\n     * @param {string|number} index\n     * @returns {string}\n     */\n    function getPlaceholder(language, index) {\n      return '___' + language.toUpperCase() + index + '___'\n    }\n    Object.defineProperties((Prism.languages['markup-templating'] = {}), {\n      buildPlaceholders: {\n        /**\n         * Tokenize all inline templating expressions matching `placeholderPattern`.\n         *\n         * If `replaceFilter` is provided, only matches of `placeholderPattern` for which `replaceFilter` returns\n         * `true` will be replaced.\n         *\n         * @param {object} env The environment of the `before-tokenize` hook.\n         * @param {string} language The language id.\n         * @param {RegExp} placeholderPattern The matches of this pattern will be replaced by placeholders.\n         * @param {(match: string) => boolean} [replaceFilter]\n         */\n        value: function (env, language, placeholderPattern, replaceFilter) {\n          if (env.language !== language) {\n            return\n          }\n          var tokenStack = (env.tokenStack = [])\n          env.code = env.code.replace(placeholderPattern, function (match) {\n            if (typeof replaceFilter === 'function' && !replaceFilter(match)) {\n              return match\n            }\n            var i = tokenStack.length\n            var placeholder // Check for existing strings\n            while (\n              env.code.indexOf((placeholder = getPlaceholder(language, i))) !==\n              -1\n            ) {\n              ++i\n            } // Create a sparse array\n            tokenStack[i] = match\n            return placeholder\n          }) // Switch the grammar to markup\n          env.grammar = Prism.languages.markup\n        }\n      },\n      tokenizePlaceholders: {\n        /**\n         * Replace placeholders with proper tokens after tokenizing.\n         *\n         * @param {object} env The environment of the `after-tokenize` hook.\n         * @param {string} language The language id.\n         */\n        value: function (env, language) {\n          if (env.language !== language || !env.tokenStack) {\n            return\n          } // Switch the grammar back\n          env.grammar = Prism.languages[language]\n          var j = 0\n          var keys = Object.keys(env.tokenStack)\n          function walkTokens(tokens) {\n            for (var i = 0; i < tokens.length; i++) {\n              // all placeholders are replaced already\n              if (j >= keys.length) {\n                break\n              }\n              var token = tokens[i]\n              if (\n                typeof token === 'string' ||\n                (token.content && typeof token.content === 'string')\n              ) {\n                var k = keys[j]\n                var t = env.tokenStack[k]\n                var s = typeof token === 'string' ? token : token.content\n                var placeholder = getPlaceholder(language, k)\n                var index = s.indexOf(placeholder)\n                if (index > -1) {\n                  ++j\n                  var before = s.substring(0, index)\n                  var middle = new Prism.Token(\n                    language,\n                    Prism.tokenize(t, env.grammar),\n                    'language-' + language,\n                    t\n                  )\n                  var after = s.substring(index + placeholder.length)\n                  var replacement = []\n                  if (before) {\n                    replacement.push.apply(replacement, walkTokens([before]))\n                  }\n                  replacement.push(middle)\n                  if (after) {\n                    replacement.push.apply(replacement, walkTokens([after]))\n                  }\n                  if (typeof token === 'string') {\n                    tokens.splice.apply(tokens, [i, 1].concat(replacement))\n                  } else {\n                    token.content = replacement\n                  }\n                }\n              } else if (\n                token.content\n                /* && typeof token.content !== 'string' */\n              ) {\n                walkTokens(token.content)\n              }\n            }\n            return tokens\n          }\n          walkTokens(env.tokens)\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['html', 'mathml', 'svg', 'xml', 'ssml', 'atom', 'rss']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: {\n      pattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n      greedy: true\n    },\n    prolog: {\n      pattern: /<\\?[\\s\\S]+?\\?>/,\n      greedy: true\n    },\n    doctype: {\n      // https://www.w3.org/TR/xml/#NT-doctypedecl\n      pattern:\n        /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n      greedy: true,\n      inside: {\n        'internal-subset': {\n          pattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        string: {\n          pattern: /\"[^\"]*\"|'[^']*'/,\n          greedy: true\n        },\n        punctuation: /^<!|>$|[[\\]]/,\n        'doctype-tag': /^DOCTYPE/i,\n        name: /[^\\s<>'\"]+/\n      }\n    },\n    cdata: {\n      pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n      greedy: true\n    },\n    tag: {\n      pattern:\n        /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'special-attr': [],\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n          inside: {\n            punctuation: [\n              {\n                pattern: /^=/,\n                alias: 'attr-equals'\n              },\n              /\"|'/\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: [\n      {\n        pattern: /&[\\da-z]{1,8};/i,\n        alias: 'named-entity'\n      },\n      /&#x?[\\da-f]{1,8};/i\n    ]\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity']\n  Prism.languages.markup['doctype'].inside['internal-subset'].inside =\n    Prism.languages.markup // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function (env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            function () {\n              return tagName\n            }\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n    /**\n     * Adds an pattern to highlight languages embedded in HTML attributes.\n     *\n     * An example of an inlined language is CSS with `style` attributes.\n     *\n     * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addAttribute('style', 'css');\n     */\n    value: function (attrName, lang) {\n      Prism.languages.markup.tag.inside['special-attr'].push({\n        pattern: RegExp(\n          /(^|[\"'\\s])/.source +\n            '(?:' +\n            attrName +\n            ')' +\n            /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n          'i'\n        ),\n        lookbehind: true,\n        inside: {\n          'attr-name': /^[^\\s=]+/,\n          'attr-value': {\n            pattern: /=[\\s\\S]+/,\n            inside: {\n              value: {\n                pattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n                lookbehind: true,\n                alias: [lang, 'language-' + lang],\n                inside: Prism.languages[lang]\n              },\n              punctuation: [\n                {\n                  pattern: /^=/,\n                  alias: 'attr-equals'\n                },\n                /\"|'/\n              ]\n            }\n          }\n        }\n      })\n    }\n  })\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.ssml = Prism.languages.xml\n  Prism.languages.atom = Prism.languages.xml\n  Prism.languages.rss = Prism.languages.xml\n}\n","'use strict'\n\nmodule.exports = matlab\nmatlab.displayName = 'matlab'\nmatlab.aliases = []\nfunction matlab(Prism) {\n  Prism.languages.matlab = {\n    comment: [/%\\{[\\s\\S]*?\\}%/, /%.+/],\n    string: {\n      pattern: /\\B'(?:''|[^'\\r\\n])*'/,\n      greedy: true\n    },\n    // FIXME We could handle imaginary numbers as a whole\n    number: /(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[eE][+-]?\\d+)?(?:[ij])?|\\b[ij]\\b/,\n    keyword:\n      /\\b(?:NaN|break|case|catch|continue|else|elseif|end|for|function|if|inf|otherwise|parfor|pause|pi|return|switch|try|while)\\b/,\n    function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n    operator: /\\.?[*^\\/\\\\']|[+\\-:@]|[<>=~]=?|&&?|\\|\\|?/,\n    punctuation: /\\.{3}|[.,;\\[\\](){}!]/\n  }\n}\n","'use strict'\n\nmodule.exports = maxscript\nmaxscript.displayName = 'maxscript'\nmaxscript.aliases = []\nfunction maxscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:about|and|animate|as|at|attributes|by|case|catch|collect|continue|coordsys|do|else|exit|fn|for|from|function|global|if|in|local|macroscript|mapped|max|not|of|off|on|or|parameters|persistent|plugin|rcmenu|return|rollout|set|struct|then|throw|to|tool|try|undo|utility|when|where|while|with)\\b/i\n    Prism.languages.maxscript = {\n      comment: {\n        pattern: /\\/\\*[\\s\\S]*?(?:\\*\\/|$)|--.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /(^|[^\"\\\\@])(?:\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|@\"[^\"]*\")/,\n        lookbehind: true,\n        greedy: true\n      },\n      path: {\n        pattern: /\\$(?:[\\w/\\\\.*?]|'[^']*')*/,\n        greedy: true,\n        alias: 'string'\n      },\n      'function-call': {\n        pattern: RegExp(\n          '((?:' + // start of line\n            (/^/.source +\n              '|' + // operators and other language constructs\n              /[;=<>+\\-*/^({\\[]/.source +\n              '|' + // keywords as part of statements\n              /\\b(?:and|by|case|catch|collect|do|else|if|in|not|or|return|then|to|try|where|while|with)\\b/\n                .source) +\n            ')[ \\t]*)' +\n            '(?!' +\n            keywords.source +\n            ')' +\n            /[a-z_]\\w*\\b/.source +\n            '(?=[ \\t]*(?:' + // variable\n            ('(?!' +\n              keywords.source +\n              ')' +\n              /[a-z_]/.source +\n              '|' + // number\n              /\\d|-\\.?\\d/.source +\n              '|' + // other expressions or literals\n              /[({'\"$@#?]/.source) +\n            '))',\n          'im'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'function'\n      },\n      'function-definition': {\n        pattern: /(\\b(?:fn|function)\\s+)\\w+\\b/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      argument: {\n        pattern: /\\b[a-z_]\\w*(?=:)/i,\n        alias: 'attr-name'\n      },\n      keyword: keywords,\n      boolean: /\\b(?:false|true)\\b/,\n      time: {\n        pattern:\n          /(^|[^\\w.])(?:(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?[msft])+|\\d+:\\d+(?:\\.\\d*)?)(?![\\w.:])/,\n        lookbehind: true,\n        alias: 'number'\n      },\n      number: [\n        {\n          pattern:\n            /(^|[^\\w.])(?:(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[eEdD][+-]\\d+|[LP])?|0x[a-fA-F0-9]+)(?![\\w.:])/,\n          lookbehind: true\n        },\n        /\\b(?:e|pi)\\b/\n      ],\n      constant: /\\b(?:dontcollect|ok|silentValue|undefined|unsupplied)\\b/,\n      color: {\n        pattern: /\\b(?:black|blue|brown|gray|green|orange|red|white|yellow)\\b/i,\n        alias: 'constant'\n      },\n      operator: /[-+*/<>=!]=?|[&^?]|#(?!\\()/,\n      punctuation: /[()\\[\\]{}.:,;]|#(?=\\()|\\\\$/m\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = mel\nmel.displayName = 'mel'\nmel.aliases = []\nfunction mel(Prism) {\n  Prism.languages.mel = {\n    comment: /\\/\\/.*/,\n    code: {\n      pattern: /`(?:\\\\.|[^\\\\`\\r\\n])*`/,\n      greedy: true,\n      alias: 'italic',\n      inside: {\n        delimiter: {\n          pattern: /^`|`$/,\n          alias: 'punctuation'\n        } // See rest below\n      }\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n      greedy: true\n    },\n    variable: /\\$\\w+/,\n    number: /\\b0x[\\da-fA-F]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+/,\n    flag: {\n      pattern: /-[^\\d\\W]\\w*/,\n      alias: 'operator'\n    },\n    keyword:\n      /\\b(?:break|case|continue|default|do|else|float|for|global|if|in|int|matrix|proc|return|string|switch|vector|while)\\b/,\n    function:\n      /\\b\\w+(?=\\()|\\b(?:CBG|HfAddAttractorToAS|HfAssignAS|HfBuildEqualMap|HfBuildFurFiles|HfBuildFurImages|HfCancelAFR|HfConnectASToHF|HfCreateAttractor|HfDeleteAS|HfEditAS|HfPerformCreateAS|HfRemoveAttractorFromAS|HfSelectAttached|HfSelectAttractors|HfUnAssignAS|Mayatomr|about|abs|addAttr|addAttributeEditorNodeHelp|addDynamic|addNewShelfTab|addPP|addPanelCategory|addPrefixToName|advanceToNextDrivenKey|affectedNet|affects|aimConstraint|air|alias|aliasAttr|align|alignCtx|alignCurve|alignSurface|allViewFit|ambientLight|angle|angleBetween|animCone|animCurveEditor|animDisplay|animView|annotate|appendStringArray|applicationName|applyAttrPreset|applyTake|arcLenDimContext|arcLengthDimension|arclen|arrayMapper|art3dPaintCtx|artAttrCtx|artAttrPaintVertexCtx|artAttrSkinPaintCtx|artAttrTool|artBuildPaintMenu|artFluidAttrCtx|artPuttyCtx|artSelectCtx|artSetPaintCtx|artUserPaintCtx|assignCommand|assignInputDevice|assignViewportFactories|attachCurve|attachDeviceAttr|attachSurface|attrColorSliderGrp|attrCompatibility|attrControlGrp|attrEnumOptionMenu|attrEnumOptionMenuGrp|attrFieldGrp|attrFieldSliderGrp|attrNavigationControlGrp|attrPresetEditWin|attributeExists|attributeInfo|attributeMenu|attributeQuery|autoKeyframe|autoPlace|bakeClip|bakeFluidShading|bakePartialHistory|bakeResults|bakeSimulation|basename|basenameEx|batchRender|bessel|bevel|bevelPlus|binMembership|bindSkin|blend2|blendShape|blendShapeEditor|blendShapePanel|blendTwoAttr|blindDataType|boneLattice|boundary|boxDollyCtx|boxZoomCtx|bufferCurve|buildBookmarkMenu|buildKeyframeMenu|button|buttonManip|cacheFile|cacheFileCombine|cacheFileMerge|cacheFileTrack|camera|cameraView|canCreateManip|canvas|capitalizeString|catch|catchQuiet|ceil|changeSubdivComponentDisplayLevel|changeSubdivRegion|channelBox|character|characterMap|characterOutlineEditor|characterize|chdir|checkBox|checkBoxGrp|checkDefaultRenderGlobals|choice|circle|circularFillet|clamp|clear|clearCache|clip|clipEditor|clipEditorCurrentTimeCtx|clipSchedule|clipSchedulerOutliner|clipTrimBefore|closeCurve|closeSurface|cluster|cmdFileOutput|cmdScrollFieldExecuter|cmdScrollFieldReporter|cmdShell|coarsenSubdivSelectionList|collision|color|colorAtPoint|colorEditor|colorIndex|colorIndexSliderGrp|colorSliderButtonGrp|colorSliderGrp|columnLayout|commandEcho|commandLine|commandPort|compactHairSystem|componentEditor|compositingInterop|computePolysetVolume|condition|cone|confirmDialog|connectAttr|connectControl|connectDynamic|connectJoint|connectionInfo|constrain|constrainValue|constructionHistory|container|containsMultibyte|contextInfo|control|convertFromOldLayers|convertIffToPsd|convertLightmap|convertSolidTx|convertTessellation|convertUnit|copyArray|copyFlexor|copyKey|copySkinWeights|cos|cpButton|cpCache|cpClothSet|cpCollision|cpConstraint|cpConvClothToMesh|cpForces|cpGetSolverAttr|cpPanel|cpProperty|cpRigidCollisionFilter|cpSeam|cpSetEdit|cpSetSolverAttr|cpSolver|cpSolverTypes|cpTool|cpUpdateClothUVs|createDisplayLayer|createDrawCtx|createEditor|createLayeredPsdFile|createMotionField|createNewShelf|createNode|createRenderLayer|createSubdivRegion|cross|crossProduct|ctxAbort|ctxCompletion|ctxEditMode|ctxTraverse|currentCtx|currentTime|currentTimeCtx|currentUnit|curve|curveAddPtCtx|curveCVCtx|curveEPCtx|curveEditorCtx|curveIntersect|curveMoveEPCtx|curveOnSurface|curveSketchCtx|cutKey|cycleCheck|cylinder|dagPose|date|defaultLightListCheckBox|defaultNavigation|defineDataServer|defineVirtualDevice|deformer|deg_to_rad|delete|deleteAttr|deleteShadingGroupsAndMaterials|deleteShelfTab|deleteUI|deleteUnusedBrushes|delrandstr|detachCurve|detachDeviceAttr|detachSurface|deviceEditor|devicePanel|dgInfo|dgdirty|dgeval|dgtimer|dimWhen|directKeyCtx|directionalLight|dirmap|dirname|disable|disconnectAttr|disconnectJoint|diskCache|displacementToPoly|displayAffected|displayColor|displayCull|displayLevelOfDetail|displayPref|displayRGBColor|displaySmoothness|displayStats|displayString|displaySurface|distanceDimContext|distanceDimension|doBlur|dolly|dollyCtx|dopeSheetEditor|dot|dotProduct|doubleProfileBirailSurface|drag|dragAttrContext|draggerContext|dropoffLocator|duplicate|duplicateCurve|duplicateSurface|dynCache|dynControl|dynExport|dynExpression|dynGlobals|dynPaintEditor|dynParticleCtx|dynPref|dynRelEdPanel|dynRelEditor|dynamicLoad|editAttrLimits|editDisplayLayerGlobals|editDisplayLayerMembers|editRenderLayerAdjustment|editRenderLayerGlobals|editRenderLayerMembers|editor|editorTemplate|effector|emit|emitter|enableDevice|encodeString|endString|endsWith|env|equivalent|equivalentTol|erf|error|eval|evalDeferred|evalEcho|event|exactWorldBoundingBox|exclusiveLightCheckBox|exec|executeForEachObject|exists|exp|expression|expressionEditorListen|extendCurve|extendSurface|extrude|fcheck|fclose|feof|fflush|fgetline|fgetword|file|fileBrowserDialog|fileDialog|fileExtension|fileInfo|filetest|filletCurve|filter|filterCurve|filterExpand|filterStudioImport|findAllIntersections|findAnimCurves|findKeyframe|findMenuItem|findRelatedSkinCluster|finder|firstParentOf|fitBspline|flexor|floatEq|floatField|floatFieldGrp|floatScrollBar|floatSlider|floatSlider2|floatSliderButtonGrp|floatSliderGrp|floor|flow|fluidCacheInfo|fluidEmitter|fluidVoxelInfo|flushUndo|fmod|fontDialog|fopen|formLayout|format|fprint|frameLayout|fread|freeFormFillet|frewind|fromNativePath|fwrite|gamma|gauss|geometryConstraint|getApplicationVersionAsFloat|getAttr|getClassification|getDefaultBrush|getFileList|getFluidAttr|getInputDeviceRange|getMayaPanelTypes|getModifiers|getPanel|getParticleAttr|getPluginResource|getenv|getpid|glRender|glRenderEditor|globalStitch|gmatch|goal|gotoBindPose|grabColor|gradientControl|gradientControlNoAttr|graphDollyCtx|graphSelectContext|graphTrackCtx|gravity|grid|gridLayout|group|groupObjectsByName|hardenPointCurve|hardware|hardwareRenderPanel|headsUpDisplay|headsUpMessage|help|helpLine|hermite|hide|hilite|hitTest|hotBox|hotkey|hotkeyCheck|hsv_to_rgb|hudButton|hudSlider|hudSliderButton|hwReflectionMap|hwRender|hwRenderLoad|hyperGraph|hyperPanel|hyperShade|hypot|iconTextButton|iconTextCheckBox|iconTextRadioButton|iconTextRadioCollection|iconTextScrollList|iconTextStaticLabel|ikHandle|ikHandleCtx|ikHandleDisplayScale|ikSolver|ikSplineHandleCtx|ikSystem|ikSystemInfo|ikfkDisplayMethod|illustratorCurves|image|imfPlugins|inheritTransform|insertJoint|insertJointCtx|insertKeyCtx|insertKnotCurve|insertKnotSurface|instance|instanceable|instancer|intField|intFieldGrp|intScrollBar|intSlider|intSliderGrp|interToUI|internalVar|intersect|iprEngine|isAnimCurve|isConnected|isDirty|isParentOf|isSameObject|isTrue|isValidObjectName|isValidString|isValidUiName|isolateSelect|itemFilter|itemFilterAttr|itemFilterRender|itemFilterType|joint|jointCluster|jointCtx|jointDisplayScale|jointLattice|keyTangent|keyframe|keyframeOutliner|keyframeRegionCurrentTimeCtx|keyframeRegionDirectKeyCtx|keyframeRegionDollyCtx|keyframeRegionInsertKeyCtx|keyframeRegionMoveKeyCtx|keyframeRegionScaleKeyCtx|keyframeRegionSelectKeyCtx|keyframeRegionSetKeyCtx|keyframeRegionTrackCtx|keyframeStats|lassoContext|lattice|latticeDeformKeyCtx|launch|launchImageEditor|layerButton|layeredShaderPort|layeredTexturePort|layout|layoutDialog|lightList|lightListEditor|lightListPanel|lightlink|lineIntersection|linearPrecision|linstep|listAnimatable|listAttr|listCameras|listConnections|listDeviceAttachments|listHistory|listInputDeviceAxes|listInputDeviceButtons|listInputDevices|listMenuAnnotation|listNodeTypes|listPanelCategories|listRelatives|listSets|listTransforms|listUnselected|listerEditor|loadFluid|loadNewShelf|loadPlugin|loadPluginLanguageResources|loadPrefObjects|localizedPanelLabel|lockNode|loft|log|longNameOf|lookThru|ls|lsThroughFilter|lsType|lsUI|mag|makeIdentity|makeLive|makePaintable|makeRoll|makeSingleSurface|makeTubeOn|makebot|manipMoveContext|manipMoveLimitsCtx|manipOptions|manipRotateContext|manipRotateLimitsCtx|manipScaleContext|manipScaleLimitsCtx|marker|match|max|memory|menu|menuBarLayout|menuEditor|menuItem|menuItemToShelf|menuSet|menuSetPref|messageLine|min|minimizeApp|mirrorJoint|modelCurrentTimeCtx|modelEditor|modelPanel|mouse|movIn|movOut|move|moveIKtoFK|moveKeyCtx|moveVertexAlongDirection|multiProfileBirailSurface|mute|nParticle|nameCommand|nameField|namespace|namespaceInfo|newPanelItems|newton|nodeCast|nodeIconButton|nodeOutliner|nodePreset|nodeType|noise|nonLinear|normalConstraint|normalize|nurbsBoolean|nurbsCopyUVSet|nurbsCube|nurbsEditUV|nurbsPlane|nurbsSelect|nurbsSquare|nurbsToPoly|nurbsToPolygonsPref|nurbsToSubdiv|nurbsToSubdivPref|nurbsUVSet|nurbsViewDirectionVector|objExists|objectCenter|objectLayer|objectType|objectTypeUI|obsoleteProc|oceanNurbsPreviewPlane|offsetCurve|offsetCurveOnSurface|offsetSurface|openGLExtension|openMayaPref|optionMenu|optionMenuGrp|optionVar|orbit|orbitCtx|orientConstraint|outlinerEditor|outlinerPanel|overrideModifier|paintEffectsDisplay|pairBlend|palettePort|paneLayout|panel|panelConfiguration|panelHistory|paramDimContext|paramDimension|paramLocator|parent|parentConstraint|particle|particleExists|particleInstancer|particleRenderInfo|partition|pasteKey|pathAnimation|pause|pclose|percent|performanceOptions|pfxstrokes|pickWalk|picture|pixelMove|planarSrf|plane|play|playbackOptions|playblast|plugAttr|plugNode|pluginInfo|pluginResourceUtil|pointConstraint|pointCurveConstraint|pointLight|pointMatrixMult|pointOnCurve|pointOnSurface|pointPosition|poleVectorConstraint|polyAppend|polyAppendFacetCtx|polyAppendVertex|polyAutoProjection|polyAverageNormal|polyAverageVertex|polyBevel|polyBlendColor|polyBlindData|polyBoolOp|polyBridgeEdge|polyCacheMonitor|polyCheck|polyChipOff|polyClipboard|polyCloseBorder|polyCollapseEdge|polyCollapseFacet|polyColorBlindData|polyColorDel|polyColorPerVertex|polyColorSet|polyCompare|polyCone|polyCopyUV|polyCrease|polyCreaseCtx|polyCreateFacet|polyCreateFacetCtx|polyCube|polyCut|polyCutCtx|polyCylinder|polyCylindricalProjection|polyDelEdge|polyDelFacet|polyDelVertex|polyDuplicateAndConnect|polyDuplicateEdge|polyEditUV|polyEditUVShell|polyEvaluate|polyExtrudeEdge|polyExtrudeFacet|polyExtrudeVertex|polyFlipEdge|polyFlipUV|polyForceUV|polyGeoSampler|polyHelix|polyInfo|polyInstallAction|polyLayoutUV|polyListComponentConversion|polyMapCut|polyMapDel|polyMapSew|polyMapSewMove|polyMergeEdge|polyMergeEdgeCtx|polyMergeFacet|polyMergeFacetCtx|polyMergeUV|polyMergeVertex|polyMirrorFace|polyMoveEdge|polyMoveFacet|polyMoveFacetUV|polyMoveUV|polyMoveVertex|polyNormal|polyNormalPerVertex|polyNormalizeUV|polyOptUvs|polyOptions|polyOutput|polyPipe|polyPlanarProjection|polyPlane|polyPlatonicSolid|polyPoke|polyPrimitive|polyPrism|polyProjection|polyPyramid|polyQuad|polyQueryBlindData|polyReduce|polySelect|polySelectConstraint|polySelectConstraintMonitor|polySelectCtx|polySelectEditCtx|polySeparate|polySetToFaceNormal|polySewEdge|polyShortestPathCtx|polySmooth|polySoftEdge|polySphere|polySphericalProjection|polySplit|polySplitCtx|polySplitEdge|polySplitRing|polySplitVertex|polyStraightenUVBorder|polySubdivideEdge|polySubdivideFacet|polyToSubdiv|polyTorus|polyTransfer|polyTriangulate|polyUVSet|polyUnite|polyWedgeFace|popen|popupMenu|pose|pow|preloadRefEd|print|progressBar|progressWindow|projFileViewer|projectCurve|projectTangent|projectionContext|projectionManip|promptDialog|propModCtx|propMove|psdChannelOutliner|psdEditTextureFile|psdExport|psdTextureFile|putenv|pwd|python|querySubdiv|quit|rad_to_deg|radial|radioButton|radioButtonGrp|radioCollection|radioMenuItemCollection|rampColorPort|rand|randomizeFollicles|randstate|rangeControl|readTake|rebuildCurve|rebuildSurface|recordAttr|recordDevice|redo|reference|referenceEdit|referenceQuery|refineSubdivSelectionList|refresh|refreshAE|registerPluginResource|rehash|reloadImage|removeJoint|removeMultiInstance|removePanelCategory|rename|renameAttr|renameSelectionList|renameUI|render|renderGlobalsNode|renderInfo|renderLayerButton|renderLayerParent|renderLayerPostProcess|renderLayerUnparent|renderManip|renderPartition|renderQualityNode|renderSettings|renderThumbnailUpdate|renderWindowEditor|renderWindowSelectContext|renderer|reorder|reorderDeformers|requires|reroot|resampleFluid|resetAE|resetPfxToPolyCamera|resetTool|resolutionNode|retarget|reverseCurve|reverseSurface|revolve|rgb_to_hsv|rigidBody|rigidSolver|roll|rollCtx|rootOf|rot|rotate|rotationInterpolation|roundConstantRadius|rowColumnLayout|rowLayout|runTimeCommand|runup|sampleImage|saveAllShelves|saveAttrPreset|saveFluid|saveImage|saveInitialState|saveMenu|savePrefObjects|savePrefs|saveShelf|saveToolSettings|scale|scaleBrushBrightness|scaleComponents|scaleConstraint|scaleKey|scaleKeyCtx|sceneEditor|sceneUIReplacement|scmh|scriptCtx|scriptEditorInfo|scriptJob|scriptNode|scriptTable|scriptToShelf|scriptedPanel|scriptedPanelType|scrollField|scrollLayout|sculpt|searchPathArray|seed|selLoadSettings|select|selectContext|selectCurveCV|selectKey|selectKeyCtx|selectKeyframeRegionCtx|selectMode|selectPref|selectPriority|selectType|selectedNodes|selectionConnection|separator|setAttr|setAttrEnumResource|setAttrMapping|setAttrNiceNameResource|setConstraintRestPosition|setDefaultShadingGroup|setDrivenKeyframe|setDynamic|setEditCtx|setEditor|setFluidAttr|setFocus|setInfinity|setInputDeviceMapping|setKeyCtx|setKeyPath|setKeyframe|setKeyframeBlendshapeTargetWts|setMenuMode|setNodeNiceNameResource|setNodeTypeFlag|setParent|setParticleAttr|setPfxToPolyCamera|setPluginResource|setProject|setStampDensity|setStartupMessage|setState|setToolTo|setUITemplate|setXformManip|sets|shadingConnection|shadingGeometryRelCtx|shadingLightRelCtx|shadingNetworkCompare|shadingNode|shapeCompare|shelfButton|shelfLayout|shelfTabLayout|shellField|shortNameOf|showHelp|showHidden|showManipCtx|showSelectionInTitle|showShadingGroupAttrEditor|showWindow|sign|simplify|sin|singleProfileBirailSurface|size|sizeBytes|skinCluster|skinPercent|smoothCurve|smoothTangentSurface|smoothstep|snap2to2|snapKey|snapMode|snapTogetherCtx|snapshot|soft|softMod|softModCtx|sort|sound|soundControl|source|spaceLocator|sphere|sphrand|spotLight|spotLightPreviewPort|spreadSheetEditor|spring|sqrt|squareSurface|srtContext|stackTrace|startString|startsWith|stitchAndExplodeShell|stitchSurface|stitchSurfacePoints|strcmp|stringArrayCatenate|stringArrayContains|stringArrayCount|stringArrayInsertAtIndex|stringArrayIntersector|stringArrayRemove|stringArrayRemoveAtIndex|stringArrayRemoveDuplicates|stringArrayRemoveExact|stringArrayToString|stringToStringArray|strip|stripPrefixFromName|stroke|subdAutoProjection|subdCleanTopology|subdCollapse|subdDuplicateAndConnect|subdEditUV|subdListComponentConversion|subdMapCut|subdMapSewMove|subdMatchTopology|subdMirror|subdToBlind|subdToPoly|subdTransferUVsToCache|subdiv|subdivCrease|subdivDisplaySmoothness|substitute|substituteAllString|substituteGeometry|substring|surface|surfaceSampler|surfaceShaderList|swatchDisplayPort|switchTable|symbolButton|symbolCheckBox|sysFile|system|tabLayout|tan|tangentConstraint|texLatticeDeformContext|texManipContext|texMoveContext|texMoveUVShellContext|texRotateContext|texScaleContext|texSelectContext|texSelectShortestPathCtx|texSmudgeUVContext|texWinToolCtx|text|textCurves|textField|textFieldButtonGrp|textFieldGrp|textManip|textScrollList|textToShelf|textureDisplacePlane|textureHairColor|texturePlacementContext|textureWindow|threadCount|threePointArcCtx|timeControl|timePort|timerX|toNativePath|toggle|toggleAxis|toggleWindowVisibility|tokenize|tokenizeList|tolerance|tolower|toolButton|toolCollection|toolDropped|toolHasOptions|toolPropertyWindow|torus|toupper|trace|track|trackCtx|transferAttributes|transformCompare|transformLimits|translator|trim|trunc|truncateFluidCache|truncateHairCache|tumble|tumbleCtx|turbulence|twoPointArcCtx|uiRes|uiTemplate|unassignInputDevice|undo|undoInfo|ungroup|uniform|unit|unloadPlugin|untangleUV|untitledFileName|untrim|upAxis|updateAE|userCtx|uvLink|uvSnapshot|validateShelfName|vectorize|view2dToolCtx|viewCamera|viewClipPlane|viewFit|viewHeadOn|viewLookAt|viewManip|viewPlace|viewSet|visor|volumeAxis|vortex|waitCursor|warning|webBrowser|webBrowserPrefs|whatIs|window|windowPref|wire|wireContext|workspace|wrinkle|wrinkleContext|writeTake|xbmLangPathList|xform)\\b/,\n    operator: [\n      /\\+[+=]?|-[-=]?|&&|\\|\\||[<>]=|[*\\/!=]=?|[%^]/,\n      {\n        // We don't want to match <<\n        pattern: /(^|[^<])<(?!<)/,\n        lookbehind: true\n      },\n      {\n        // We don't want to match >>\n        pattern: /(^|[^>])>(?!>)/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /<<|>>|[.,:;?\\[\\](){}]/\n  }\n  Prism.languages.mel['code'].inside.rest = Prism.languages.mel\n}\n","'use strict'\n\nmodule.exports = mermaid\nmermaid.displayName = 'mermaid'\nmermaid.aliases = []\nfunction mermaid(Prism) {\n  Prism.languages.mermaid = {\n    comment: {\n      pattern: /%%.*/,\n      greedy: true\n    },\n    style: {\n      pattern:\n        /^([ \\t]*(?:classDef|linkStyle|style)[ \\t]+[\\w$-]+[ \\t]+)\\w.*[^\\s;]/m,\n      lookbehind: true,\n      inside: {\n        property: /\\b\\w[\\w-]*(?=[ \\t]*:)/,\n        operator: /:/,\n        punctuation: /,/\n      }\n    },\n    'inter-arrow-label': {\n      pattern:\n        /([^<>ox.=-])(?:-[-.]|==)(?![<>ox.=-])[ \\t]*(?:\"[^\"\\r\\n]*\"|[^\\s\".=-](?:[^\\r\\n.=-]*[^\\s.=-])?)[ \\t]*(?:\\.+->?|--+[->]|==+[=>])(?![<>ox.=-])/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        arrow: {\n          pattern: /(?:\\.+->?|--+[->]|==+[=>])$/,\n          alias: 'operator'\n        },\n        label: {\n          pattern: /^([\\s\\S]{2}[ \\t]*)\\S(?:[\\s\\S]*\\S)?/,\n          lookbehind: true,\n          alias: 'property'\n        },\n        'arrow-head': {\n          pattern: /^\\S+/,\n          alias: ['arrow', 'operator']\n        }\n      }\n    },\n    arrow: [\n      // This might look complex but it really isn't.\n      // There are many possible arrows (see tests) and it's impossible to fit all of them into one pattern. The\n      // problem is that we only have one lookbehind per pattern. However, we cannot disallow too many arrow\n      // characters in the one lookbehind because that would create too many false negatives. So we have to split the\n      // arrows into different patterns.\n      {\n        // ER diagram\n        pattern: /(^|[^{}|o.-])[|}][|o](?:--|\\.\\.)[|o][|{](?![{}|o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // flow chart\n        // (?:==+|--+|-\\.*-)\n        pattern:\n          /(^|[^<>ox.=-])(?:[<ox](?:==+|--+|-\\.*-)[>ox]?|(?:==+|--+|-\\.*-)[>ox]|===+|---+|-\\.+-)(?![<>ox.=-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // sequence diagram\n        pattern:\n          /(^|[^<>()x-])(?:--?(?:>>|[x>)])(?![<>()x])|(?:<<|[x<(])--?(?!-))/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      {\n        // class diagram\n        pattern:\n          /(^|[^<>|*o.-])(?:[*o]--|--[*o]|<\\|?(?:--|\\.\\.)|(?:--|\\.\\.)\\|?>|--|\\.\\.)(?![<>|*o.-])/,\n        lookbehind: true,\n        alias: 'operator'\n      }\n    ],\n    label: {\n      pattern: /(^|[^|<])\\|(?:[^\\r\\n\"|]|\"[^\"\\r\\n]*\")+\\|/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    text: {\n      pattern: /(?:[(\\[{]+|\\b>)(?:[^\\r\\n\"()\\[\\]{}]|\"[^\"\\r\\n]*\")+(?:[)\\]}]+|>)/,\n      alias: 'string'\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    annotation: {\n      pattern:\n        /<<(?:abstract|choice|enumeration|fork|interface|join|service)>>|\\[\\[(?:choice|fork|join)\\]\\]/i,\n      alias: 'important'\n    },\n    keyword: [\n      // This language has both case-sensitive and case-insensitive keywords\n      {\n        pattern:\n          /(^[ \\t]*)(?:action|callback|class|classDef|classDiagram|click|direction|erDiagram|flowchart|gantt|gitGraph|graph|journey|link|linkStyle|pie|requirementDiagram|sequenceDiagram|stateDiagram|stateDiagram-v2|style|subgraph)(?![\\w$-])/m,\n        lookbehind: true,\n        greedy: true\n      },\n      {\n        pattern:\n          /(^[ \\t]*)(?:activate|alt|and|as|autonumber|deactivate|else|end(?:[ \\t]+note)?|loop|opt|par|participant|rect|state|note[ \\t]+(?:over|(?:left|right)[ \\t]+of))(?![\\w$-])/im,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    entity: /#[a-z0-9]+;/,\n    operator: {\n      pattern: /(\\w[ \\t]*)&(?=[ \\t]*\\w)|:::|:/,\n      lookbehind: true\n    },\n    punctuation: /[(){};]/\n  }\n}\n","'use strict'\n\nmodule.exports = mizar\nmizar.displayName = 'mizar'\nmizar.aliases = []\nfunction mizar(Prism) {\n  Prism.languages.mizar = {\n    comment: /::.+/,\n    keyword:\n      /@proof\\b|\\b(?:according|aggregate|all|and|antonym|are|as|associativity|assume|asymmetry|attr|be|begin|being|by|canceled|case|cases|clusters?|coherence|commutativity|compatibility|connectedness|consider|consistency|constructors|contradiction|correctness|def|deffunc|define|definitions?|defpred|do|does|end|environ|equals|ex|exactly|existence|for|from|func|given|hence|hereby|holds|idempotence|identity|iff?|implies|involutiveness|irreflexivity|is|it|let|means|mode|non|not|notations?|now|of|or|otherwise|over|per|pred|prefix|projectivity|proof|provided|qua|reconsider|redefine|reduce|reducibility|reflexivity|registrations?|requirements|reserve|sch|schemes?|section|selector|set|sethood|st|struct|such|suppose|symmetry|synonym|take|that|the|then|theorems?|thesis|thus|to|transitivity|uniqueness|vocabular(?:ies|y)|when|where|with|wrt)\\b/,\n    parameter: {\n      pattern: /\\$(?:10|\\d)/,\n      alias: 'variable'\n    },\n    variable: /\\b\\w+(?=:)/,\n    number: /(?:\\b|-)\\d+\\b/,\n    operator: /\\.\\.\\.|->|&|\\.?=/,\n    punctuation: /\\(#|#\\)|[,:;\\[\\](){}]/\n  }\n}\n","'use strict'\n\nmodule.exports = mongodb\nmongodb.displayName = 'mongodb'\nmongodb.aliases = []\nfunction mongodb(Prism) {\n  ;(function (Prism) {\n    var operators = [\n      // query and projection\n      '$eq',\n      '$gt',\n      '$gte',\n      '$in',\n      '$lt',\n      '$lte',\n      '$ne',\n      '$nin',\n      '$and',\n      '$not',\n      '$nor',\n      '$or',\n      '$exists',\n      '$type',\n      '$expr',\n      '$jsonSchema',\n      '$mod',\n      '$regex',\n      '$text',\n      '$where',\n      '$geoIntersects',\n      '$geoWithin',\n      '$near',\n      '$nearSphere',\n      '$all',\n      '$elemMatch',\n      '$size',\n      '$bitsAllClear',\n      '$bitsAllSet',\n      '$bitsAnyClear',\n      '$bitsAnySet',\n      '$comment',\n      '$elemMatch',\n      '$meta',\n      '$slice', // update\n      '$currentDate',\n      '$inc',\n      '$min',\n      '$max',\n      '$mul',\n      '$rename',\n      '$set',\n      '$setOnInsert',\n      '$unset',\n      '$addToSet',\n      '$pop',\n      '$pull',\n      '$push',\n      '$pullAll',\n      '$each',\n      '$position',\n      '$slice',\n      '$sort',\n      '$bit', // aggregation pipeline stages\n      '$addFields',\n      '$bucket',\n      '$bucketAuto',\n      '$collStats',\n      '$count',\n      '$currentOp',\n      '$facet',\n      '$geoNear',\n      '$graphLookup',\n      '$group',\n      '$indexStats',\n      '$limit',\n      '$listLocalSessions',\n      '$listSessions',\n      '$lookup',\n      '$match',\n      '$merge',\n      '$out',\n      '$planCacheStats',\n      '$project',\n      '$redact',\n      '$replaceRoot',\n      '$replaceWith',\n      '$sample',\n      '$set',\n      '$skip',\n      '$sort',\n      '$sortByCount',\n      '$unionWith',\n      '$unset',\n      '$unwind',\n      '$setWindowFields', // aggregation pipeline operators\n      '$abs',\n      '$accumulator',\n      '$acos',\n      '$acosh',\n      '$add',\n      '$addToSet',\n      '$allElementsTrue',\n      '$and',\n      '$anyElementTrue',\n      '$arrayElemAt',\n      '$arrayToObject',\n      '$asin',\n      '$asinh',\n      '$atan',\n      '$atan2',\n      '$atanh',\n      '$avg',\n      '$binarySize',\n      '$bsonSize',\n      '$ceil',\n      '$cmp',\n      '$concat',\n      '$concatArrays',\n      '$cond',\n      '$convert',\n      '$cos',\n      '$dateFromParts',\n      '$dateToParts',\n      '$dateFromString',\n      '$dateToString',\n      '$dayOfMonth',\n      '$dayOfWeek',\n      '$dayOfYear',\n      '$degreesToRadians',\n      '$divide',\n      '$eq',\n      '$exp',\n      '$filter',\n      '$first',\n      '$floor',\n      '$function',\n      '$gt',\n      '$gte',\n      '$hour',\n      '$ifNull',\n      '$in',\n      '$indexOfArray',\n      '$indexOfBytes',\n      '$indexOfCP',\n      '$isArray',\n      '$isNumber',\n      '$isoDayOfWeek',\n      '$isoWeek',\n      '$isoWeekYear',\n      '$last',\n      '$last',\n      '$let',\n      '$literal',\n      '$ln',\n      '$log',\n      '$log10',\n      '$lt',\n      '$lte',\n      '$ltrim',\n      '$map',\n      '$max',\n      '$mergeObjects',\n      '$meta',\n      '$min',\n      '$millisecond',\n      '$minute',\n      '$mod',\n      '$month',\n      '$multiply',\n      '$ne',\n      '$not',\n      '$objectToArray',\n      '$or',\n      '$pow',\n      '$push',\n      '$radiansToDegrees',\n      '$range',\n      '$reduce',\n      '$regexFind',\n      '$regexFindAll',\n      '$regexMatch',\n      '$replaceOne',\n      '$replaceAll',\n      '$reverseArray',\n      '$round',\n      '$rtrim',\n      '$second',\n      '$setDifference',\n      '$setEquals',\n      '$setIntersection',\n      '$setIsSubset',\n      '$setUnion',\n      '$size',\n      '$sin',\n      '$slice',\n      '$split',\n      '$sqrt',\n      '$stdDevPop',\n      '$stdDevSamp',\n      '$strcasecmp',\n      '$strLenBytes',\n      '$strLenCP',\n      '$substr',\n      '$substrBytes',\n      '$substrCP',\n      '$subtract',\n      '$sum',\n      '$switch',\n      '$tan',\n      '$toBool',\n      '$toDate',\n      '$toDecimal',\n      '$toDouble',\n      '$toInt',\n      '$toLong',\n      '$toObjectId',\n      '$toString',\n      '$toLower',\n      '$toUpper',\n      '$trim',\n      '$trunc',\n      '$type',\n      '$week',\n      '$year',\n      '$zip',\n      '$count',\n      '$dateAdd',\n      '$dateDiff',\n      '$dateSubtract',\n      '$dateTrunc',\n      '$getField',\n      '$rand',\n      '$sampleRate',\n      '$setField',\n      '$unsetField', // aggregation pipeline query modifiers\n      '$comment',\n      '$explain',\n      '$hint',\n      '$max',\n      '$maxTimeMS',\n      '$min',\n      '$orderby',\n      '$query',\n      '$returnKey',\n      '$showDiskLoc',\n      '$natural'\n    ]\n    var builtinFunctions = [\n      'ObjectId',\n      'Code',\n      'BinData',\n      'DBRef',\n      'Timestamp',\n      'NumberLong',\n      'NumberDecimal',\n      'MaxKey',\n      'MinKey',\n      'RegExp',\n      'ISODate',\n      'UUID'\n    ]\n    operators = operators.map(function (operator) {\n      return operator.replace('$', '\\\\$')\n    })\n    var operatorsSource = '(?:' + operators.join('|') + ')\\\\b'\n    Prism.languages.mongodb = Prism.languages.extend('javascript', {})\n    Prism.languages.insertBefore('mongodb', 'string', {\n      property: {\n        pattern:\n          /(?:([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)(?=\\s*:)/,\n        greedy: true,\n        inside: {\n          keyword: RegExp('^([\\'\"])?' + operatorsSource + '(?:\\\\1)?$')\n        }\n      }\n    })\n    Prism.languages.mongodb.string.inside = {\n      url: {\n        // url pattern\n        pattern:\n          /https?:\\/\\/[-\\w@:%.+~#=]{1,256}\\.[a-z0-9()]{1,6}\\b[-\\w()@:%+.~#?&/=]*/i,\n        greedy: true\n      },\n      entity: {\n        // ipv4\n        pattern:\n          /\\b(?:(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\.){3}(?:[01]?\\d\\d?|2[0-4]\\d|25[0-5])\\b/,\n        greedy: true\n      }\n    }\n    Prism.languages.insertBefore('mongodb', 'constant', {\n      builtin: {\n        pattern: RegExp('\\\\b(?:' + builtinFunctions.join('|') + ')\\\\b'),\n        alias: 'keyword'\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = monkey\nmonkey.displayName = 'monkey'\nmonkey.aliases = []\nfunction monkey(Prism) {\n  Prism.languages.monkey = {\n    comment: {\n      pattern: /^#Rem\\s[\\s\\S]*?^#End|'.+/im,\n      greedy: true\n    },\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"/,\n      greedy: true\n    },\n    preprocessor: {\n      pattern: /(^[ \\t]*)#.+/m,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    function: /\\b\\w+(?=\\()/,\n    'type-char': {\n      pattern: /\\b[?%#$]/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /((?:\\.\\.)?)(?:(?:\\b|\\B-\\.?|\\B\\.)\\d+(?:(?!\\.\\.)\\.\\d*)?|\\$[\\da-f]+)/i,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:Abstract|Array|Bool|Case|Catch|Class|Const|Continue|Default|Eachin|Else|ElseIf|End|EndIf|Exit|Extends|Extern|False|Field|Final|Float|For|Forever|Function|Global|If|Implements|Import|Inline|Int|Interface|Local|Method|Module|New|Next|Null|Object|Private|Property|Public|Repeat|Return|Select|Self|Step|Strict|String|Super|Then|Throw|To|True|Try|Until|Void|Wend|While)\\b/i,\n    operator:\n      /\\.\\.|<[=>]?|>=?|:?=|(?:[+\\-*\\/&~|]|\\b(?:Mod|Shl|Shr)\\b)=?|\\b(?:And|Not|Or)\\b/i,\n    punctuation: /[.,:;()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = moonscript\nmoonscript.displayName = 'moonscript'\nmoonscript.aliases = ['moon']\nfunction moonscript(Prism) {\n  Prism.languages.moonscript = {\n    comment: /--.*/,\n    string: [\n      {\n        pattern: /'[^']*'|\\[(=*)\\[[\\s\\S]*?\\]\\1\\]/,\n        greedy: true\n      },\n      {\n        pattern: /\"[^\"]*\"/,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /#\\{[^{}]*\\}/,\n            inside: {\n              moonscript: {\n                pattern: /(^#\\{)[\\s\\S]+(?=\\})/,\n                lookbehind: true,\n                inside: null // see beow\n              },\n              'interpolation-punctuation': {\n                pattern: /#\\{|\\}/,\n                alias: 'punctuation'\n              }\n            }\n          }\n        }\n      }\n    ],\n    'class-name': [\n      {\n        pattern: /(\\b(?:class|extends)[ \\t]+)\\w+/,\n        lookbehind: true\n      }, // class-like names start with a capital letter\n      /\\b[A-Z]\\w*/\n    ],\n    keyword:\n      /\\b(?:class|continue|do|else|elseif|export|extends|for|from|if|import|in|local|nil|return|self|super|switch|then|unless|using|when|while|with)\\b/,\n    variable: /@@?\\w*/,\n    property: {\n      pattern: /\\b(?!\\d)\\w+(?=:)|(:)(?!\\d)\\w+/,\n      lookbehind: true\n    },\n    function: {\n      pattern:\n        /\\b(?:_G|_VERSION|assert|collectgarbage|coroutine\\.(?:create|resume|running|status|wrap|yield)|debug\\.(?:debug|getfenv|gethook|getinfo|getlocal|getmetatable|getregistry|getupvalue|setfenv|sethook|setlocal|setmetatable|setupvalue|traceback)|dofile|error|getfenv|getmetatable|io\\.(?:close|flush|input|lines|open|output|popen|read|stderr|stdin|stdout|tmpfile|type|write)|ipairs|load|loadfile|loadstring|math\\.(?:abs|acos|asin|atan|atan2|ceil|cos|cosh|deg|exp|floor|fmod|frexp|ldexp|log|log10|max|min|modf|pi|pow|rad|random|randomseed|sin|sinh|sqrt|tan|tanh)|module|next|os\\.(?:clock|date|difftime|execute|exit|getenv|remove|rename|setlocale|time|tmpname)|package\\.(?:cpath|loaded|loadlib|path|preload|seeall)|pairs|pcall|print|rawequal|rawget|rawset|require|select|setfenv|setmetatable|string\\.(?:byte|char|dump|find|format|gmatch|gsub|len|lower|match|rep|reverse|sub|upper)|table\\.(?:concat|insert|maxn|remove|sort)|tonumber|tostring|type|unpack|xpcall)\\b/,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    number:\n      /(?:\\B\\.\\d+|\\b\\d+\\.\\d+|\\b\\d+(?=[eE]))(?:[eE][-+]?\\d+)?\\b|\\b(?:0x[a-fA-F\\d]+|\\d+)(?:U?LL)?\\b/,\n    operator:\n      /\\.{3}|[-=]>|~=|(?:[-+*/%<>!=]|\\.\\.)=?|[:#^]|\\b(?:and|or)\\b=?|\\b(?:not)\\b/,\n    punctuation: /[.,()[\\]{}\\\\]/\n  }\n  Prism.languages.moonscript.string[1].inside.interpolation.inside.moonscript.inside =\n    Prism.languages.moonscript\n  Prism.languages.moon = Prism.languages.moonscript\n}\n","'use strict'\n\nmodule.exports = n1ql\nn1ql.displayName = 'n1ql'\nn1ql.aliases = []\nfunction n1ql(Prism) {\n  // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/index.html\n  Prism.languages.n1ql = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?(?:$|\\*\\/)|--.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\]|\\1\\1)*\\1/,\n      greedy: true\n    },\n    identifier: {\n      pattern: /`(?:\\\\[\\s\\S]|[^\\\\`]|``)*`/,\n      greedy: true\n    },\n    parameter: /\\$[\\w.]+/,\n    // https://docs.couchbase.com/server/current/n1ql/n1ql-language-reference/reservedwords.html#n1ql-reserved-words\n    keyword:\n      /\\b(?:ADVISE|ALL|ALTER|ANALYZE|AS|ASC|AT|BEGIN|BINARY|BOOLEAN|BREAK|BUCKET|BUILD|BY|CALL|CAST|CLUSTER|COLLATE|COLLECTION|COMMIT|COMMITTED|CONNECT|CONTINUE|CORRELATE|CORRELATED|COVER|CREATE|CURRENT|DATABASE|DATASET|DATASTORE|DECLARE|DECREMENT|DELETE|DERIVED|DESC|DESCRIBE|DISTINCT|DO|DROP|EACH|ELEMENT|EXCEPT|EXCLUDE|EXECUTE|EXPLAIN|FETCH|FILTER|FLATTEN|FLUSH|FOLLOWING|FOR|FORCE|FROM|FTS|FUNCTION|GOLANG|GRANT|GROUP|GROUPS|GSI|HASH|HAVING|IF|IGNORE|ILIKE|INCLUDE|INCREMENT|INDEX|INFER|INLINE|INNER|INSERT|INTERSECT|INTO|IS|ISOLATION|JAVASCRIPT|JOIN|KEY|KEYS|KEYSPACE|KNOWN|LANGUAGE|LAST|LEFT|LET|LETTING|LEVEL|LIMIT|LSM|MAP|MAPPING|MATCHED|MATERIALIZED|MERGE|MINUS|MISSING|NAMESPACE|NEST|NL|NO|NTH_VALUE|NULL|NULLS|NUMBER|OBJECT|OFFSET|ON|OPTION|OPTIONS|ORDER|OTHERS|OUTER|OVER|PARSE|PARTITION|PASSWORD|PATH|POOL|PRECEDING|PREPARE|PRIMARY|PRIVATE|PRIVILEGE|PROBE|PROCEDURE|PUBLIC|RANGE|RAW|REALM|REDUCE|RENAME|RESPECT|RETURN|RETURNING|REVOKE|RIGHT|ROLE|ROLLBACK|ROW|ROWS|SATISFIES|SAVEPOINT|SCHEMA|SCOPE|SELECT|SELF|SEMI|SET|SHOW|SOME|START|STATISTICS|STRING|SYSTEM|TIES|TO|TRAN|TRANSACTION|TRIGGER|TRUNCATE|UNBOUNDED|UNDER|UNION|UNIQUE|UNKNOWN|UNNEST|UNSET|UPDATE|UPSERT|USE|USER|USING|VALIDATE|VALUE|VALUES|VIA|VIEW|WHERE|WHILE|WINDOW|WITH|WORK|XOR)\\b/i,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:FALSE|TRUE)\\b/i,\n    number: /(?:\\b\\d+\\.|\\B\\.)\\d+e[+\\-]?\\d+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/%]|!=|==?|\\|\\||<[>=]?|>=?|\\b(?:AND|ANY|ARRAY|BETWEEN|CASE|ELSE|END|EVERY|EXISTS|FIRST|IN|LIKE|NOT|OR|THEN|VALUED|WHEN|WITHIN)\\b/i,\n    punctuation: /[;[\\](),.{}:]/\n  }\n}\n","'use strict'\n\nmodule.exports = n4js\nn4js.displayName = 'n4js'\nn4js.aliases = ['n4jsd']\nfunction n4js(Prism) {\n  Prism.languages.n4js = Prism.languages.extend('javascript', {\n    // Keywords from N4JS language spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html\n    keyword:\n      /\\b(?:Array|any|boolean|break|case|catch|class|const|constructor|continue|debugger|declare|default|delete|do|else|enum|export|extends|false|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|module|new|null|number|package|private|protected|public|return|set|static|string|super|switch|this|throw|true|try|typeof|var|void|while|with|yield)\\b/\n  })\n  Prism.languages.insertBefore('n4js', 'constant', {\n    // Annotations in N4JS spec: https://numberfour.github.io/n4js/spec/N4JSSpec.html#_annotations\n    annotation: {\n      pattern: /@+\\w+/,\n      alias: 'operator'\n    }\n  })\n  Prism.languages.n4jsd = Prism.languages.n4js\n}\n","'use strict'\n\nmodule.exports = nand2tetrisHdl\nnand2tetrisHdl.displayName = 'nand2tetrisHdl'\nnand2tetrisHdl.aliases = []\nfunction nand2tetrisHdl(Prism) {\n  Prism.languages['nand2tetris-hdl'] = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n    keyword: /\\b(?:BUILTIN|CHIP|CLOCKED|IN|OUT|PARTS)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: /\\b[A-Za-z][A-Za-z0-9]*(?=\\()/,\n    number: /\\b\\d+\\b/,\n    operator: /=|\\.\\./,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n","'use strict'\n\nmodule.exports = naniscript\nnaniscript.displayName = 'naniscript'\nnaniscript.aliases = []\nfunction naniscript(Prism) {\n  ;(function (Prism) {\n    var expressionDef = /\\{[^\\r\\n\\[\\]{}]*\\}/\n    var params = {\n      'quoted-string': {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        alias: 'operator'\n      },\n      'command-param-id': {\n        pattern: /(\\s)\\w+:/,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'command-param-value': [\n        {\n          pattern: expressionDef,\n          alias: 'selector'\n        },\n        {\n          pattern: /([\\t ])\\S+/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'operator'\n        },\n        {\n          pattern: /\\S(?:.*\\S)?/,\n          alias: 'operator'\n        }\n      ]\n    }\n    Prism.languages.naniscript = {\n      // ; ...\n      comment: {\n        pattern: /^([\\t ]*);.*/m,\n        lookbehind: true\n      },\n      // > ...\n      // Define is a control line starting with '>' followed by a word, a space and a text.\n      define: {\n        pattern: /^>.+/m,\n        alias: 'tag',\n        inside: {\n          value: {\n            pattern: /(^>\\w+[\\t ]+)(?!\\s)[^{}\\r\\n]+/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          key: {\n            pattern: /(^>)\\w+/,\n            lookbehind: true\n          }\n        }\n      },\n      // # ...\n      label: {\n        pattern: /^([\\t ]*)#[\\t ]*\\w+[\\t ]*$/m,\n        lookbehind: true,\n        alias: 'regex'\n      },\n      command: {\n        pattern: /^([\\t ]*)@\\w+(?=[\\t ]|$).*/m,\n        lookbehind: true,\n        alias: 'function',\n        inside: {\n          'command-name': /^@\\w+/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'command-params': {\n            pattern: /\\s*\\S[\\s\\S]*/,\n            inside: params\n          }\n        }\n      },\n      // Generic is any line that doesn't start with operators: ;>#@\n      'generic-text': {\n        pattern: /(^[ \\t]*)[^#@>;\\s].*/m,\n        lookbehind: true,\n        alias: 'punctuation',\n        inside: {\n          // \\{ ... \\} ... \\[ ... \\] ... \\\"\n          'escaped-char': /\\\\[{}\\[\\]\"]/,\n          expression: {\n            pattern: expressionDef,\n            greedy: true,\n            alias: 'selector'\n          },\n          'inline-command': {\n            pattern: /\\[[\\t ]*\\w[^\\r\\n\\[\\]]*\\]/,\n            greedy: true,\n            alias: 'function',\n            inside: {\n              'command-params': {\n                pattern: /(^\\[[\\t ]*\\w+\\b)[\\s\\S]+(?=\\]$)/,\n                lookbehind: true,\n                inside: params\n              },\n              'command-param-name': {\n                pattern: /^(\\[[\\t ]*)\\w+/,\n                lookbehind: true,\n                alias: 'name'\n              },\n              'start-stop-char': /[\\[\\]]/\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.nani = Prism.languages['naniscript']\n    /** @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token */\n    /**\n     * This hook is used to validate generic-text tokens for balanced brackets.\n     * Mark token as bad-line when contains not balanced brackets: {},[]\n     */\n    Prism.hooks.add('after-tokenize', function (env) {\n      /** @type {(Token | string)[]} */\n      var tokens = env.tokens\n      tokens.forEach(function (token) {\n        if (typeof token !== 'string' && token.type === 'generic-text') {\n          var content = getTextContent(token)\n          if (!isBracketsBalanced(content)) {\n            token.type = 'bad-line'\n            token.content = content\n          }\n        }\n      })\n    })\n    /**\n     * @param {string} input\n     * @returns {boolean}\n     */\n    function isBracketsBalanced(input) {\n      var brackets = '[]{}'\n      var stack = []\n      for (var i = 0; i < input.length; i++) {\n        var bracket = input[i]\n        var bracketsIndex = brackets.indexOf(bracket)\n        if (bracketsIndex !== -1) {\n          if (bracketsIndex % 2 === 0) {\n            stack.push(bracketsIndex + 1)\n          } else if (stack.pop() !== bracketsIndex) {\n            return false\n          }\n        }\n      }\n      return stack.length === 0\n    }\n    /**\n     * @param {string | Token | (string | Token)[]} token\n     * @returns {string}\n     */\n    function getTextContent(token) {\n      if (typeof token === 'string') {\n        return token\n      } else if (Array.isArray(token)) {\n        return token.map(getTextContent).join('')\n      } else {\n        return getTextContent(token.content)\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nasm\nnasm.displayName = 'nasm'\nnasm.aliases = []\nfunction nasm(Prism) {\n  Prism.languages.nasm = {\n    comment: /;.*$/m,\n    string: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n    label: {\n      pattern: /(^\\s*)[A-Za-z._?$][\\w.?$@~#]*:/m,\n      lookbehind: true,\n      alias: 'function'\n    },\n    keyword: [\n      /\\[?BITS (?:16|32|64)\\]?/,\n      {\n        pattern: /(^\\s*)section\\s*[a-z.]+:?/im,\n        lookbehind: true\n      },\n      /(?:extern|global)[^;\\r\\n]*/i,\n      /(?:CPU|DEFAULT|FLOAT).*$/m\n    ],\n    register: {\n      pattern:\n        /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s)\\b/i,\n      alias: 'variable'\n    },\n    number:\n      /(?:\\b|(?=\\$))(?:0[hx](?:\\.[\\da-f]+|[\\da-f]+(?:\\.[\\da-f]+)?)(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n    operator: /[\\[\\]*+\\-\\/%<>=&|$!]/\n  }\n}\n","'use strict'\n\nmodule.exports = neon\nneon.displayName = 'neon'\nneon.aliases = []\nfunction neon(Prism) {\n  Prism.languages.neon = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    datetime: {\n      pattern:\n        /(^|[[{(=:,\\s])\\d\\d\\d\\d-\\d\\d?-\\d\\d?(?:(?:[Tt]| +)\\d\\d?:\\d\\d:\\d\\d(?:\\.\\d*)? *(?:Z|[-+]\\d\\d?(?::?\\d\\d)?)?)?(?=$|[\\]}),\\s])/,\n      lookbehind: true,\n      alias: 'number'\n    },\n    key: {\n      pattern: /(^|[[{(,\\s])[^,:=[\\]{}()'\"\\s]+(?=\\s*:(?:$|[\\]}),\\s])|\\s*=)/,\n      lookbehind: true,\n      alias: 'atrule'\n    },\n    number: {\n      pattern:\n        /(^|[[{(=:,\\s])[+-]?(?:0x[\\da-fA-F]+|0o[0-7]+|0b[01]+|(?:\\d+(?:\\.\\d*)?|\\.?\\d+)(?:[eE][+-]?\\d+)?)(?=$|[\\]}),:=\\s])/,\n      lookbehind: true\n    },\n    boolean: {\n      pattern: /(^|[[{(=:,\\s])(?:false|no|true|yes)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true\n    },\n    null: {\n      pattern: /(^|[[{(=:,\\s])(?:null)(?=$|[\\]}),:=\\s])/i,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    string: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:('''|\"\"\")\\r?\\n(?:(?:[^\\r\\n]|\\r?\\n(?![\\t ]*\\2))*\\r?\\n)?[\\t ]*\\2|'[^'\\r\\n]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    literal: {\n      pattern:\n        /(^|[[{(=:,\\s])(?:[^#\"',:=[\\]{}()\\s`-]|[:-][^\"',=[\\]{}()\\s])(?:[^,:=\\]})(\\s]|:(?![\\s,\\]})]|$)|[ \\t]+[^#,:=\\]})(\\s])*/,\n      lookbehind: true,\n      alias: 'string'\n    },\n    punctuation: /[,:=[\\]{}()-]/\n  }\n}\n","'use strict'\n\nmodule.exports = nevod\nnevod.displayName = 'nevod'\nnevod.aliases = []\nfunction nevod(Prism) {\n  Prism.languages.nevod = {\n    comment: /\\/\\/.*|(?:\\/\\*[\\s\\S]*?(?:\\*\\/|$))/,\n    string: {\n      pattern: /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))!?\\*?/,\n      greedy: true,\n      inside: {\n        'string-attrs': /!$|!\\*$|\\*$/\n      }\n    },\n    namespace: {\n      pattern: /(@namespace\\s+)[a-zA-Z0-9\\-.]+(?=\\s*\\{)/,\n      lookbehind: true\n    },\n    pattern: {\n      pattern:\n        /(@pattern\\s+)?#?[a-zA-Z0-9\\-.]+(?:\\s*\\(\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]+\\s*(?:,\\s*(?:~\\s*)?[a-zA-Z0-9\\-.]*)*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      inside: {\n        'pattern-name': {\n          pattern: /^#?[a-zA-Z0-9\\-.]+/,\n          alias: 'class-name'\n        },\n        fields: {\n          pattern: /\\(.*\\)/,\n          inside: {\n            'field-name': {\n              pattern: /[a-zA-Z0-9\\-.]+/,\n              alias: 'variable'\n            },\n            punctuation: /[,()]/,\n            operator: {\n              pattern: /~/,\n              alias: 'field-hidden-mark'\n            }\n          }\n        }\n      }\n    },\n    search: {\n      pattern: /(@search\\s+|#)[a-zA-Z0-9\\-.]+(?:\\.\\*)?(?=\\s*;)/,\n      alias: 'function',\n      lookbehind: true\n    },\n    keyword:\n      /@(?:having|inside|namespace|outside|pattern|require|search|where)\\b/,\n    'standard-pattern': {\n      pattern:\n        /\\b(?:Alpha|AlphaNum|Any|Blank|End|LineBreak|Num|NumAlpha|Punct|Space|Start|Symbol|Word|WordBreak)\\b(?:\\([a-zA-Z0-9\\-.,\\s+]*\\))?/,\n      inside: {\n        'standard-pattern-name': {\n          pattern: /^[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        quantifier: {\n          pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n          alias: 'number'\n        },\n        'standard-pattern-attr': {\n          pattern: /[a-zA-Z0-9\\-.]+/,\n          alias: 'builtin'\n        },\n        punctuation: /[,()]/\n      }\n    },\n    quantifier: {\n      pattern: /\\b\\d+(?:\\s*\\+|\\s*-\\s*\\d+)?(?!\\w)/,\n      alias: 'number'\n    },\n    operator: [\n      {\n        pattern: /=/,\n        alias: 'pattern-def'\n      },\n      {\n        pattern: /&/,\n        alias: 'conjunction'\n      },\n      {\n        pattern: /~/,\n        alias: 'exception'\n      },\n      {\n        pattern: /\\?/,\n        alias: 'optionality'\n      },\n      {\n        pattern: /[[\\]]/,\n        alias: 'repetition'\n      },\n      {\n        pattern: /[{}]/,\n        alias: 'variation'\n      },\n      {\n        pattern: /[+_]/,\n        alias: 'sequence'\n      },\n      {\n        pattern: /\\.{2,3}/,\n        alias: 'span'\n      }\n    ],\n    'field-capture': [\n      {\n        pattern:\n          /([a-zA-Z0-9\\-.]+\\s*\\()\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+(?:\\s*,\\s*[a-zA-Z0-9\\-.]+\\s*:\\s*[a-zA-Z0-9\\-.]+)*(?=\\s*\\))/,\n        lookbehind: true,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      },\n      {\n        pattern: /[a-zA-Z0-9\\-.]+\\s*:/,\n        inside: {\n          'field-name': {\n            pattern: /[a-zA-Z0-9\\-.]+/,\n            alias: 'variable'\n          },\n          colon: /:/\n        }\n      }\n    ],\n    punctuation: /[:;,()]/,\n    name: /[a-zA-Z0-9\\-.]+/\n  }\n}\n","'use strict'\n\nmodule.exports = nginx\nnginx.displayName = 'nginx'\nnginx.aliases = []\nfunction nginx(Prism) {\n  ;(function (Prism) {\n    var variable =\n      /\\$(?:\\w[a-z\\d]*(?:_[^\\x00-\\x1F\\s\"'\\\\()$]*)?|\\{[^}\\s\"'\\\\]+\\})/i\n    Prism.languages.nginx = {\n      comment: {\n        pattern: /(^|[\\s{};])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      directive: {\n        pattern:\n          /(^|\\s)\\w(?:[^;{}\"'\\\\\\s]|\\\\.|\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*'|\\s+(?:#.*(?!.)|(?![#\\s])))*?(?=\\s*[;{])/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          string: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\\\\\)*)(?:\"(?:[^\"\\\\]|\\\\.)*\"|'(?:[^'\\\\]|\\\\.)*')/,\n            lookbehind: true,\n            greedy: true,\n            inside: {\n              escape: {\n                pattern: /\\\\[\"'\\\\nrt]/,\n                alias: 'entity'\n              },\n              variable: variable\n            }\n          },\n          comment: {\n            pattern: /(\\s)#.*/,\n            lookbehind: true,\n            greedy: true\n          },\n          keyword: {\n            pattern: /^\\S+/,\n            greedy: true\n          },\n          // other patterns\n          boolean: {\n            pattern: /(\\s)(?:off|on)(?!\\S)/,\n            lookbehind: true\n          },\n          number: {\n            pattern: /(\\s)\\d+[a-z]*(?!\\S)/i,\n            lookbehind: true\n          },\n          variable: variable\n        }\n      },\n      punctuation: /[{};]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = nim\nnim.displayName = 'nim'\nnim.aliases = []\nfunction nim(Prism) {\n  Prism.languages.nim = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      // Double-quoted strings can be prefixed by an identifier (Generalized raw string literals)\n      pattern:\n        /(?:\\b(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+)?(?:\"\"\"[\\s\\S]*?\"\"\"(?!\")|\"(?:\\\\[\\s\\S]|\"\"|[^\"\\\\])*\")/,\n      greedy: true\n    },\n    char: {\n      // Character literals are handled specifically to prevent issues with numeric type suffixes\n      pattern: /'(?:\\\\(?:\\d+|x[\\da-fA-F]{0,2}|.)|[^'])'/,\n      greedy: true\n    },\n    function: {\n      pattern:\n        /(?:(?!\\d)(?:\\w|\\\\x[89a-fA-F][0-9a-fA-F])+|`[^`\\r\\n]+`)\\*?(?:\\[[^\\]]+\\])?(?=\\s*\\()/,\n      greedy: true,\n      inside: {\n        operator: /\\*$/\n      }\n    },\n    // We don't want to highlight operators (and anything really) inside backticks\n    identifier: {\n      pattern: /`[^`\\r\\n]+`/,\n      greedy: true,\n      inside: {\n        punctuation: /`/\n      }\n    },\n    // The negative look ahead prevents wrong highlighting of the .. operator\n    number:\n      /\\b(?:0[xXoObB][\\da-fA-F_]+|\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:[eE][+-]?\\d[\\d_]*)?)(?:'?[iuf]\\d*)?/,\n    keyword:\n      /\\b(?:addr|as|asm|atomic|bind|block|break|case|cast|concept|const|continue|converter|defer|discard|distinct|do|elif|else|end|enum|except|export|finally|for|from|func|generic|if|import|include|interface|iterator|let|macro|method|mixin|nil|object|out|proc|ptr|raise|ref|return|static|template|try|tuple|type|using|var|when|while|with|without|yield)\\b/,\n    operator: {\n      // Look behind and look ahead prevent wrong highlighting of punctuations [. .] {. .} (. .)\n      // but allow the slice operator .. to take precedence over them\n      // One can define his own operators in Nim so all combination of operators might be an operator.\n      pattern:\n        /(^|[({\\[](?=\\.\\.)|(?![({\\[]\\.).)(?:(?:[=+\\-*\\/<>@$~&%|!?^:\\\\]|\\.\\.|\\.(?![)}\\]]))+|\\b(?:and|div|in|is|isnot|mod|not|notin|of|or|shl|shr|xor)\\b)/m,\n      lookbehind: true\n    },\n    punctuation: /[({\\[]\\.|\\.[)}\\]]|[`(){}\\[\\],:]/\n  }\n}\n","'use strict'\n\nmodule.exports = nix\nnix.displayName = 'nix'\nnix.aliases = []\nfunction nix(Prism) {\n  Prism.languages.nix = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"|''(?:(?!'')[\\s\\S]|''(?:'|\\\\|\\$\\{))*''/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // The lookbehind ensures the ${} is not preceded by \\ or ''\n          pattern: /(^|(?:^|(?!'').)[^\\\\])\\$\\{(?:[^{}]|\\{[^}]*\\})*\\}/,\n          lookbehind: true,\n          inside: null // see below\n        }\n      }\n    },\n    url: [\n      /\\b(?:[a-z]{3,7}:\\/\\/)[\\w\\-+%~\\/.:#=?&]+/,\n      {\n        pattern:\n          /([^\\/])(?:[\\w\\-+%~.:#=?&]*(?!\\/\\/)[\\w\\-+%~\\/.:#=?&])?(?!\\/\\/)\\/[\\w\\-+%~\\/.:#=?&]*/,\n        lookbehind: true\n      }\n    ],\n    antiquotation: {\n      pattern: /\\$(?=\\{)/,\n      alias: 'important'\n    },\n    number: /\\b\\d+\\b/,\n    keyword: /\\b(?:assert|builtins|else|if|in|inherit|let|null|or|then|with)\\b/,\n    function:\n      /\\b(?:abort|add|all|any|attrNames|attrValues|baseNameOf|compareVersions|concatLists|currentSystem|deepSeq|derivation|dirOf|div|elem(?:At)?|fetch(?:Tarball|url)|filter(?:Source)?|fromJSON|genList|getAttr|getEnv|hasAttr|hashString|head|import|intersectAttrs|is(?:Attrs|Bool|Function|Int|List|Null|String)|length|lessThan|listToAttrs|map|mul|parseDrvName|pathExists|read(?:Dir|File)|removeAttrs|replaceStrings|seq|sort|stringLength|sub(?:string)?|tail|throw|to(?:File|JSON|Path|String|XML)|trace|typeOf)\\b|\\bfoldl'\\B/,\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /[=!<>]=?|\\+\\+?|\\|\\||&&|\\/\\/|->?|[?@]/,\n    punctuation: /[{}()[\\].,:;]/\n  }\n  Prism.languages.nix.string.inside.interpolation.inside = Prism.languages.nix\n}\n","'use strict'\n\nmodule.exports = nsis\nnsis.displayName = 'nsis'\nnsis.aliases = []\nfunction nsis(Prism) {\n  /**\n   * Original by Jan T. Sott (http://github.com/idleberg)\n   *\n   * Includes all commands and plug-ins shipped with NSIS 3.08\n   */\n  Prism.languages.nsis = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|[#;].*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*)(?:Abort|Add(?:BrandingImage|Size)|AdvSplash|Allow(?:RootDirInstall|SkipFiles)|AutoCloseWindow|BG(?:Font|Gradient|Image)|Banner|BrandingText|BringToFront|CRCCheck|Call(?:InstDLL)?|Caption|ChangeUI|CheckBitmap|ClearErrors|CompletedText|ComponentText|CopyFiles|Create(?:Directory|Font|ShortCut)|Delete(?:INISec|INIStr|RegKey|RegValue)?|Detail(?:Print|sButtonText)|Dialer|Dir(?:Text|Var|Verify)|EnableWindow|Enum(?:RegKey|RegValue)|Exch|Exec(?:Shell(?:Wait)?|Wait)?|ExpandEnvStrings|File(?:BufSize|Close|ErrorText|Open|Read|ReadByte|ReadUTF16LE|ReadWord|Seek|Write|WriteByte|WriteUTF16LE|WriteWord)?|Find(?:Close|First|Next|Window)|FlushINI|Get(?:CurInstType|CurrentAddress|DLLVersion(?:Local)?|DlgItem|ErrorLevel|FileTime(?:Local)?|FullPathName|Function(?:Address|End)?|InstDirError|LabelAddress|TempFileName)|Goto|HideWindow|Icon|If(?:Abort|Errors|FileExists|RebootFlag|Silent)|InitPluginsDir|InstProgressFlags|Inst(?:Type(?:GetText|SetText)?)|Install(?:ButtonText|Colors|Dir(?:RegKey)?)|Int(?:64|Ptr)?CmpU?|Int(?:64)?Fmt|Int(?:Ptr)?Op|IsWindow|Lang(?:DLL|String)|License(?:BkColor|Data|ForceSelection|LangString|Text)|LoadLanguageFile|LockWindow|Log(?:Set|Text)|Manifest(?:DPIAware|SupportedOS)|Math|MessageBox|MiscButtonText|NSISdl|Name|Nop|OutFile|PE(?:DllCharacteristics|SubsysVer)|Page(?:Callbacks)?|Pop|Push|Quit|RMDir|Read(?:EnvStr|INIStr|RegDWORD|RegStr)|Reboot|RegDLL|Rename|RequestExecutionLevel|ReserveFile|Return|SearchPath|Section(?:End|GetFlags|GetInstTypes|GetSize|GetText|Group|In|SetFlags|SetInstTypes|SetSize|SetText)?|SendMessage|Set(?:AutoClose|BrandingImage|Compress|Compressor(?:DictSize)?|CtlColors|CurInstType|DatablockOptimize|DateSave|Details(?:Print|View)|ErrorLevel|Errors|FileAttributes|Font|OutPath|Overwrite|PluginUnload|RebootFlag|RegView|ShellVarContext|Silent)|Show(?:InstDetails|UninstDetails|Window)|Silent(?:Install|UnInstall)|Sleep|SpaceTexts|Splash|StartMenu|Str(?:CmpS?|Cpy|Len)|SubCaption|System|UnRegDLL|Unicode|UninstPage|Uninstall(?:ButtonText|Caption|Icon|SubCaption|Text)|UserInfo|VI(?:AddVersionKey|FileVersion|ProductVersion)|VPatch|Var|WindowIcon|Write(?:INIStr|Reg(?:Bin|DWORD|ExpandStr|MultiStr|None|Str)|Uninstaller)|XPStyle|ns(?:Dialogs|Exec))\\b/m,\n      lookbehind: true\n    },\n    property:\n      /\\b(?:ARCHIVE|FILE_(?:ATTRIBUTE_ARCHIVE|ATTRIBUTE_NORMAL|ATTRIBUTE_OFFLINE|ATTRIBUTE_READONLY|ATTRIBUTE_SYSTEM|ATTRIBUTE_TEMPORARY)|HK(?:(?:CR|CU|LM)(?:32|64)?|DD|PD|U)|HKEY_(?:CLASSES_ROOT|CURRENT_CONFIG|CURRENT_USER|DYN_DATA|LOCAL_MACHINE|PERFORMANCE_DATA|USERS)|ID(?:ABORT|CANCEL|IGNORE|NO|OK|RETRY|YES)|MB_(?:ABORTRETRYIGNORE|DEFBUTTON1|DEFBUTTON2|DEFBUTTON3|DEFBUTTON4|ICONEXCLAMATION|ICONINFORMATION|ICONQUESTION|ICONSTOP|OK|OKCANCEL|RETRYCANCEL|RIGHT|RTLREADING|SETFOREGROUND|TOPMOST|USERICON|YESNO)|NORMAL|OFFLINE|READONLY|SHCTX|SHELL_CONTEXT|SYSTEM|TEMPORARY|admin|all|auto|both|colored|false|force|hide|highest|lastused|leave|listonly|none|normal|notset|off|on|open|print|show|silent|silentlog|smooth|textonly|true|user)\\b/,\n    constant: /\\$\\{[!\\w\\.:\\^-]+\\}|\\$\\([!\\w\\.:\\^-]+\\)/,\n    variable: /\\$\\w[\\w\\.]*/,\n    number: /\\b0x[\\dA-Fa-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee]-?\\d+)?/,\n    operator: /--?|\\+\\+?|<=?|>=?|==?=?|&&?|\\|\\|?|[?*\\/~^%]/,\n    punctuation: /[{}[\\];(),.:]/,\n    important: {\n      pattern:\n        /(^[\\t ]*)!(?:addincludedir|addplugindir|appendfile|cd|define|delfile|echo|else|endif|error|execute|finalize|getdllversion|gettlbversion|if|ifdef|ifmacrodef|ifmacrondef|ifndef|include|insertmacro|macro|macroend|makensis|packhdr|pragma|searchparse|searchreplace|system|tempfile|undef|verbose|warning)\\b/im,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = objectivec\nobjectivec.displayName = 'objectivec'\nobjectivec.aliases = ['objc']\nfunction objectivec(Prism) {\n  Prism.register(refractorC)\n  Prism.languages.objectivec = Prism.languages.extend('c', {\n    string: {\n      pattern: /@?\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:asm|auto|break|case|char|const|continue|default|do|double|else|enum|extern|float|for|goto|if|in|inline|int|long|register|return|self|short|signed|sizeof|static|struct|super|switch|typedef|typeof|union|unsigned|void|volatile|while)\\b|(?:@interface|@end|@implementation|@protocol|@class|@public|@protected|@private|@property|@try|@catch|@finally|@throw|@synthesize|@dynamic|@selector)\\b/,\n    operator: /-[->]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|\\|?|[~^%?*\\/@]/\n  })\n  delete Prism.languages.objectivec['class-name']\n  Prism.languages.objc = Prism.languages.objectivec\n}\n","'use strict'\n\nmodule.exports = ocaml\nocaml.displayName = 'ocaml'\nocaml.aliases = []\nfunction ocaml(Prism) {\n  // https://ocaml.org/manual/lex.html\n  Prism.languages.ocaml = {\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)/,\n      greedy: true\n    },\n    char: {\n      pattern: /'(?:[^\\\\\\r\\n']|\\\\(?:.|[ox]?[0-9a-f]{1,3}))'/i,\n      greedy: true\n    },\n    string: [\n      {\n        pattern: /\"(?:\\\\(?:[\\s\\S]|\\r\\n)|[^\\\\\\r\\n\"])*\"/,\n        greedy: true\n      },\n      {\n        pattern: /\\{([a-z_]*)\\|[\\s\\S]*?\\|\\1\\}/,\n        greedy: true\n      }\n    ],\n    number: [\n      // binary and octal\n      /\\b(?:0b[01][01_]*|0o[0-7][0-7_]*)\\b/i, // hexadecimal\n      /\\b0x[a-f0-9][a-f0-9_]*(?:\\.[a-f0-9_]*)?(?:p[+-]?\\d[\\d_]*)?(?!\\w)/i, // decimal\n      /\\b\\d[\\d_]*(?:\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?(?!\\w)/i\n    ],\n    directive: {\n      pattern: /\\B#\\w+/,\n      alias: 'property'\n    },\n    label: {\n      pattern: /\\B~\\w+/,\n      alias: 'property'\n    },\n    'type-variable': {\n      pattern: /\\B'\\w+/,\n      alias: 'function'\n    },\n    variant: {\n      pattern: /`\\w+/,\n      alias: 'symbol'\n    },\n    // For the list of keywords and operators,\n    // see: http://caml.inria.fr/pub/docs/manual-ocaml/lex.html#sec84\n    keyword:\n      /\\b(?:as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|match|method|module|mutable|new|nonrec|object|of|open|private|rec|sig|struct|then|to|try|type|val|value|virtual|when|where|while|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    'operator-like-punctuation': {\n      pattern: /\\[[<>|]|[>|]\\]|\\{<|>\\}/,\n      alias: 'punctuation'\n    },\n    // Custom operators are allowed\n    operator:\n      /\\.[.~]|:[=>]|[=<>@^|&+\\-*\\/$%!?~][!$%&*+\\-.\\/:<=>?@^|~]*|\\b(?:and|asr|land|lor|lsl|lsr|lxor|mod|or)\\b/,\n    punctuation: /;;|::|[(){}\\[\\].,:;#]|\\b_\\b/\n  }\n}\n","'use strict'\nvar refractorC = require('./c.js')\nmodule.exports = opencl\nopencl.displayName = 'opencl'\nopencl.aliases = []\nfunction opencl(Prism) {\n  Prism.register(refractorC)\n  ;(function (Prism) {\n    /* OpenCL kernel language */\n    Prism.languages.opencl = Prism.languages.extend('c', {\n      // Extracted from the official specs (2.0) and http://streamcomputing.eu/downloads/?opencl.lang (opencl-keywords, opencl-types) and http://sourceforge.net/tracker/?func=detail&aid=2957794&group_id=95717&atid=612384 (Words2, partly Words3)\n      keyword:\n        /\\b(?:(?:__)?(?:constant|global|kernel|local|private|read_only|read_write|write_only)|__attribute__|auto|(?:bool|u?(?:char|int|long|short)|half|quad)(?:2|3|4|8|16)?|break|case|complex|const|continue|(?:double|float)(?:16(?:x(?:1|2|4|8|16))?|1x(?:1|2|4|8|16)|2(?:x(?:1|2|4|8|16))?|3|4(?:x(?:1|2|4|8|16))?|8(?:x(?:1|2|4|8|16))?)?|default|do|else|enum|extern|for|goto|if|imaginary|inline|packed|pipe|register|restrict|return|signed|sizeof|static|struct|switch|typedef|uniform|union|unsigned|void|volatile|while)\\b/,\n      // Extracted from http://streamcomputing.eu/downloads/?opencl.lang (opencl-const)\n      // Math Constants: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/mathConstants.html\n      // Macros and Limits: https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/macroLimits.html\n      number:\n        /(?:\\b0x(?:[\\da-f]+(?:\\.[\\da-f]*)?|\\.[\\da-f]+)(?:p[+-]?\\d+)?|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)[fuhl]{0,4}/i,\n      boolean: /\\b(?:false|true)\\b/,\n      'constant-opencl-kernel': {\n        pattern:\n          /\\b(?:CHAR_(?:BIT|MAX|MIN)|CLK_(?:ADDRESS_(?:CLAMP(?:_TO_EDGE)?|NONE|REPEAT)|FILTER_(?:LINEAR|NEAREST)|(?:GLOBAL|LOCAL)_MEM_FENCE|NORMALIZED_COORDS_(?:FALSE|TRUE))|CL_(?:BGRA|(?:HALF_)?FLOAT|INTENSITY|LUMINANCE|A?R?G?B?[Ax]?|(?:(?:UN)?SIGNED|[US]NORM)_(?:INT(?:8|16|32))|UNORM_(?:INT_101010|SHORT_(?:555|565)))|(?:DBL|FLT|HALF)_(?:DIG|EPSILON|(?:MAX|MIN)(?:(?:_10)?_EXP)?|MANT_DIG)|FLT_RADIX|HUGE_VALF?|(?:INT|LONG|SCHAR|SHRT)_(?:MAX|MIN)|INFINITY|MAXFLOAT|M_(?:[12]_PI|2_SQRTPI|E|LN(?:2|10)|LOG(?:2|10)E?|PI(?:_[24])?|SQRT(?:1_2|2))(?:_F|_H)?|NAN|(?:UCHAR|UINT|ULONG|USHRT)_MAX)\\b/,\n        alias: 'constant'\n      }\n    })\n    Prism.languages.insertBefore('opencl', 'class-name', {\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/scalarDataTypes.html\n      // https://www.khronos.org/registry/OpenCL/sdk/2.1/docs/man/xhtml/otherDataTypes.html\n      'builtin-type': {\n        pattern:\n          /\\b(?:_cl_(?:command_queue|context|device_id|event|kernel|mem|platform_id|program|sampler)|cl_(?:image_format|mem_fence_flags)|clk_event_t|event_t|image(?:1d_(?:array_|buffer_)?t|2d_(?:array_(?:depth_|msaa_depth_|msaa_)?|depth_|msaa_depth_|msaa_)?t|3d_t)|intptr_t|ndrange_t|ptrdiff_t|queue_t|reserve_id_t|sampler_t|size_t|uintptr_t)\\b/,\n        alias: 'keyword'\n      }\n    })\n    var attributes = {\n      // Extracted from http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-types and opencl-host)\n      'type-opencl-host': {\n        pattern:\n          /\\b(?:cl_(?:GLenum|GLint|GLuin|addressing_mode|bitfield|bool|buffer_create_type|build_status|channel_(?:order|type)|(?:u?(?:char|int|long|short)|double|float)(?:2|3|4|8|16)?|command_(?:queue(?:_info|_properties)?|type)|context(?:_info|_properties)?|device_(?:exec_capabilities|fp_config|id|info|local_mem_type|mem_cache_type|type)|(?:event|sampler)(?:_info)?|filter_mode|half|image_info|kernel(?:_info|_work_group_info)?|map_flags|mem(?:_flags|_info|_object_type)?|platform_(?:id|info)|profiling_info|program(?:_build_info|_info)?))\\b/,\n        alias: 'keyword'\n      },\n      'boolean-opencl-host': {\n        pattern: /\\bCL_(?:FALSE|TRUE)\\b/,\n        alias: 'boolean'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-const)\n      'constant-opencl-host': {\n        pattern:\n          /\\bCL_(?:A|ABGR|ADDRESS_(?:CLAMP(?:_TO_EDGE)?|MIRRORED_REPEAT|NONE|REPEAT)|ARGB|BGRA|BLOCKING|BUFFER_CREATE_TYPE_REGION|BUILD_(?:ERROR|IN_PROGRESS|NONE|PROGRAM_FAILURE|SUCCESS)|COMMAND_(?:ACQUIRE_GL_OBJECTS|BARRIER|COPY_(?:BUFFER(?:_RECT|_TO_IMAGE)?|IMAGE(?:_TO_BUFFER)?)|FILL_(?:BUFFER|IMAGE)|MAP(?:_BUFFER|_IMAGE)|MARKER|MIGRATE(?:_SVM)?_MEM_OBJECTS|NATIVE_KERNEL|NDRANGE_KERNEL|READ_(?:BUFFER(?:_RECT)?|IMAGE)|RELEASE_GL_OBJECTS|SVM_(?:FREE|MAP|MEMCPY|MEMFILL|UNMAP)|TASK|UNMAP_MEM_OBJECT|USER|WRITE_(?:BUFFER(?:_RECT)?|IMAGE))|COMPILER_NOT_AVAILABLE|COMPILE_PROGRAM_FAILURE|COMPLETE|CONTEXT_(?:DEVICES|INTEROP_USER_SYNC|NUM_DEVICES|PLATFORM|PROPERTIES|REFERENCE_COUNT)|DEPTH(?:_STENCIL)?|DEVICE_(?:ADDRESS_BITS|AFFINITY_DOMAIN_(?:L[1-4]_CACHE|NEXT_PARTITIONABLE|NUMA)|AVAILABLE|BUILT_IN_KERNELS|COMPILER_AVAILABLE|DOUBLE_FP_CONFIG|ENDIAN_LITTLE|ERROR_CORRECTION_SUPPORT|EXECUTION_CAPABILITIES|EXTENSIONS|GLOBAL_(?:MEM_(?:CACHELINE_SIZE|CACHE_SIZE|CACHE_TYPE|SIZE)|VARIABLE_PREFERRED_TOTAL_SIZE)|HOST_UNIFIED_MEMORY|IL_VERSION|IMAGE(?:2D_MAX_(?:HEIGHT|WIDTH)|3D_MAX_(?:DEPTH|HEIGHT|WIDTH)|_BASE_ADDRESS_ALIGNMENT|_MAX_ARRAY_SIZE|_MAX_BUFFER_SIZE|_PITCH_ALIGNMENT|_SUPPORT)|LINKER_AVAILABLE|LOCAL_MEM_SIZE|LOCAL_MEM_TYPE|MAX_(?:CLOCK_FREQUENCY|COMPUTE_UNITS|CONSTANT_ARGS|CONSTANT_BUFFER_SIZE|GLOBAL_VARIABLE_SIZE|MEM_ALLOC_SIZE|NUM_SUB_GROUPS|ON_DEVICE_(?:EVENTS|QUEUES)|PARAMETER_SIZE|PIPE_ARGS|READ_IMAGE_ARGS|READ_WRITE_IMAGE_ARGS|SAMPLERS|WORK_GROUP_SIZE|WORK_ITEM_DIMENSIONS|WORK_ITEM_SIZES|WRITE_IMAGE_ARGS)|MEM_BASE_ADDR_ALIGN|MIN_DATA_TYPE_ALIGN_SIZE|NAME|NATIVE_VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT)|NOT_(?:AVAILABLE|FOUND)|OPENCL_C_VERSION|PARENT_DEVICE|PARTITION_(?:AFFINITY_DOMAIN|BY_AFFINITY_DOMAIN|BY_COUNTS|BY_COUNTS_LIST_END|EQUALLY|FAILED|MAX_SUB_DEVICES|PROPERTIES|TYPE)|PIPE_MAX_(?:ACTIVE_RESERVATIONS|PACKET_SIZE)|PLATFORM|PREFERRED_(?:GLOBAL_ATOMIC_ALIGNMENT|INTEROP_USER_SYNC|LOCAL_ATOMIC_ALIGNMENT|PLATFORM_ATOMIC_ALIGNMENT|VECTOR_WIDTH_(?:CHAR|DOUBLE|FLOAT|HALF|INT|LONG|SHORT))|PRINTF_BUFFER_SIZE|PROFILE|PROFILING_TIMER_RESOLUTION|QUEUE_(?:ON_(?:DEVICE_(?:MAX_SIZE|PREFERRED_SIZE|PROPERTIES)|HOST_PROPERTIES)|PROPERTIES)|REFERENCE_COUNT|SINGLE_FP_CONFIG|SUB_GROUP_INDEPENDENT_FORWARD_PROGRESS|SVM_(?:ATOMICS|CAPABILITIES|COARSE_GRAIN_BUFFER|FINE_GRAIN_BUFFER|FINE_GRAIN_SYSTEM)|TYPE(?:_ACCELERATOR|_ALL|_CPU|_CUSTOM|_DEFAULT|_GPU)?|VENDOR(?:_ID)?|VERSION)|DRIVER_VERSION|EVENT_(?:COMMAND_(?:EXECUTION_STATUS|QUEUE|TYPE)|CONTEXT|REFERENCE_COUNT)|EXEC_(?:KERNEL|NATIVE_KERNEL|STATUS_ERROR_FOR_EVENTS_IN_WAIT_LIST)|FILTER_(?:LINEAR|NEAREST)|FLOAT|FP_(?:CORRECTLY_ROUNDED_DIVIDE_SQRT|DENORM|FMA|INF_NAN|ROUND_TO_INF|ROUND_TO_NEAREST|ROUND_TO_ZERO|SOFT_FLOAT)|GLOBAL|HALF_FLOAT|IMAGE_(?:ARRAY_SIZE|BUFFER|DEPTH|ELEMENT_SIZE|FORMAT|FORMAT_MISMATCH|FORMAT_NOT_SUPPORTED|HEIGHT|NUM_MIP_LEVELS|NUM_SAMPLES|ROW_PITCH|SLICE_PITCH|WIDTH)|INTENSITY|INVALID_(?:ARG_INDEX|ARG_SIZE|ARG_VALUE|BINARY|BUFFER_SIZE|BUILD_OPTIONS|COMMAND_QUEUE|COMPILER_OPTIONS|CONTEXT|DEVICE|DEVICE_PARTITION_COUNT|DEVICE_QUEUE|DEVICE_TYPE|EVENT|EVENT_WAIT_LIST|GLOBAL_OFFSET|GLOBAL_WORK_SIZE|GL_OBJECT|HOST_PTR|IMAGE_DESCRIPTOR|IMAGE_FORMAT_DESCRIPTOR|IMAGE_SIZE|KERNEL|KERNEL_ARGS|KERNEL_DEFINITION|KERNEL_NAME|LINKER_OPTIONS|MEM_OBJECT|MIP_LEVEL|OPERATION|PIPE_SIZE|PLATFORM|PROGRAM|PROGRAM_EXECUTABLE|PROPERTY|QUEUE_PROPERTIES|SAMPLER|VALUE|WORK_DIMENSION|WORK_GROUP_SIZE|WORK_ITEM_SIZE)|KERNEL_(?:ARG_(?:ACCESS_(?:NONE|QUALIFIER|READ_ONLY|READ_WRITE|WRITE_ONLY)|ADDRESS_(?:CONSTANT|GLOBAL|LOCAL|PRIVATE|QUALIFIER)|INFO_NOT_AVAILABLE|NAME|TYPE_(?:CONST|NAME|NONE|PIPE|QUALIFIER|RESTRICT|VOLATILE))|ATTRIBUTES|COMPILE_NUM_SUB_GROUPS|COMPILE_WORK_GROUP_SIZE|CONTEXT|EXEC_INFO_SVM_FINE_GRAIN_SYSTEM|EXEC_INFO_SVM_PTRS|FUNCTION_NAME|GLOBAL_WORK_SIZE|LOCAL_MEM_SIZE|LOCAL_SIZE_FOR_SUB_GROUP_COUNT|MAX_NUM_SUB_GROUPS|MAX_SUB_GROUP_SIZE_FOR_NDRANGE|NUM_ARGS|PREFERRED_WORK_GROUP_SIZE_MULTIPLE|PRIVATE_MEM_SIZE|PROGRAM|REFERENCE_COUNT|SUB_GROUP_COUNT_FOR_NDRANGE|WORK_GROUP_SIZE)|LINKER_NOT_AVAILABLE|LINK_PROGRAM_FAILURE|LOCAL|LUMINANCE|MAP_(?:FAILURE|READ|WRITE|WRITE_INVALIDATE_REGION)|MEM_(?:ALLOC_HOST_PTR|ASSOCIATED_MEMOBJECT|CONTEXT|COPY_HOST_PTR|COPY_OVERLAP|FLAGS|HOST_NO_ACCESS|HOST_PTR|HOST_READ_ONLY|HOST_WRITE_ONLY|KERNEL_READ_AND_WRITE|MAP_COUNT|OBJECT_(?:ALLOCATION_FAILURE|BUFFER|IMAGE1D|IMAGE1D_ARRAY|IMAGE1D_BUFFER|IMAGE2D|IMAGE2D_ARRAY|IMAGE3D|PIPE)|OFFSET|READ_ONLY|READ_WRITE|REFERENCE_COUNT|SIZE|SVM_ATOMICS|SVM_FINE_GRAIN_BUFFER|TYPE|USES_SVM_POINTER|USE_HOST_PTR|WRITE_ONLY)|MIGRATE_MEM_OBJECT_(?:CONTENT_UNDEFINED|HOST)|MISALIGNED_SUB_BUFFER_OFFSET|NONE|NON_BLOCKING|OUT_OF_(?:HOST_MEMORY|RESOURCES)|PIPE_(?:MAX_PACKETS|PACKET_SIZE)|PLATFORM_(?:EXTENSIONS|HOST_TIMER_RESOLUTION|NAME|PROFILE|VENDOR|VERSION)|PROFILING_(?:COMMAND_(?:COMPLETE|END|QUEUED|START|SUBMIT)|INFO_NOT_AVAILABLE)|PROGRAM_(?:BINARIES|BINARY_SIZES|BINARY_TYPE(?:_COMPILED_OBJECT|_EXECUTABLE|_LIBRARY|_NONE)?|BUILD_(?:GLOBAL_VARIABLE_TOTAL_SIZE|LOG|OPTIONS|STATUS)|CONTEXT|DEVICES|IL|KERNEL_NAMES|NUM_DEVICES|NUM_KERNELS|REFERENCE_COUNT|SOURCE)|QUEUED|QUEUE_(?:CONTEXT|DEVICE|DEVICE_DEFAULT|ON_DEVICE|ON_DEVICE_DEFAULT|OUT_OF_ORDER_EXEC_MODE_ENABLE|PROFILING_ENABLE|PROPERTIES|REFERENCE_COUNT|SIZE)|R|RA|READ_(?:ONLY|WRITE)_CACHE|RG|RGB|RGBA|RGBx|RGx|RUNNING|Rx|SAMPLER_(?:ADDRESSING_MODE|CONTEXT|FILTER_MODE|LOD_MAX|LOD_MIN|MIP_FILTER_MODE|NORMALIZED_COORDS|REFERENCE_COUNT)|(?:UN)?SIGNED_INT(?:8|16|32)|SNORM_INT(?:8|16)|SUBMITTED|SUCCESS|UNORM_INT(?:8|16|24|_101010|_101010_2)|UNORM_SHORT_(?:555|565)|VERSION_(?:1_0|1_1|1_2|2_0|2_1)|sBGRA|sRGB|sRGBA|sRGBx)\\b/,\n        alias: 'constant'\n      },\n      // Extracted from cl.h (2.0) and http://streamcomputing.eu/downloads/?opencl_host.lang (opencl-host)\n      'function-opencl-host': {\n        pattern:\n          /\\bcl(?:BuildProgram|CloneKernel|CompileProgram|Create(?:Buffer|CommandQueue(?:WithProperties)?|Context|ContextFromType|Image|Image2D|Image3D|Kernel|KernelsInProgram|Pipe|ProgramWith(?:Binary|BuiltInKernels|IL|Source)|Sampler|SamplerWithProperties|SubBuffer|SubDevices|UserEvent)|Enqueue(?:(?:Barrier|Marker)(?:WithWaitList)?|Copy(?:Buffer(?:Rect|ToImage)?|Image(?:ToBuffer)?)|(?:Fill|Map)(?:Buffer|Image)|MigrateMemObjects|NDRangeKernel|NativeKernel|(?:Read|Write)(?:Buffer(?:Rect)?|Image)|SVM(?:Free|Map|MemFill|Memcpy|MigrateMem|Unmap)|Task|UnmapMemObject|WaitForEvents)|Finish|Flush|Get(?:CommandQueueInfo|ContextInfo|Device(?:AndHostTimer|IDs|Info)|Event(?:Profiling)?Info|ExtensionFunctionAddress(?:ForPlatform)?|HostTimer|ImageInfo|Kernel(?:ArgInfo|Info|SubGroupInfo|WorkGroupInfo)|MemObjectInfo|PipeInfo|Platform(?:IDs|Info)|Program(?:Build)?Info|SamplerInfo|SupportedImageFormats)|LinkProgram|(?:Release|Retain)(?:CommandQueue|Context|Device|Event|Kernel|MemObject|Program|Sampler)|SVM(?:Alloc|Free)|Set(?:CommandQueueProperty|DefaultDeviceCommandQueue|EventCallback|Kernel|Kernel(?:Arg(?:SVMPointer)?|ExecInfo)|MemObjectDestructorCallback|UserEventStatus)|Unload(?:Platform)?Compiler|WaitForEvents)\\b/,\n        alias: 'function'\n      }\n    }\n    /* OpenCL host API */\n    Prism.languages.insertBefore('c', 'keyword', attributes) // C++ includes everything from the OpenCL C host API plus the classes defined in cl2.h\n    if (Prism.languages.cpp) {\n      // Extracted from doxygen class list http://github.khronos.org/OpenCL-CLHPP/annotated.html\n      attributes['type-opencl-host-cpp'] = {\n        pattern:\n          /\\b(?:Buffer|BufferGL|BufferRenderGL|CommandQueue|Context|Device|DeviceCommandQueue|EnqueueArgs|Event|Image|Image1D|Image1DArray|Image1DBuffer|Image2D|Image2DArray|Image2DGL|Image3D|Image3DGL|ImageFormat|ImageGL|Kernel|KernelFunctor|LocalSpaceArg|Memory|NDRange|Pipe|Platform|Program|SVMAllocator|SVMTraitAtomic|SVMTraitCoarse|SVMTraitFine|SVMTraitReadOnly|SVMTraitReadWrite|SVMTraitWriteOnly|Sampler|UserEvent)\\b/,\n        alias: 'keyword'\n      }\n      Prism.languages.insertBefore('cpp', 'keyword', attributes)\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = openqasm\nopenqasm.displayName = 'openqasm'\nopenqasm.aliases = ['qasm']\nfunction openqasm(Prism) {\n  // https://qiskit.github.io/openqasm/grammar/index.html\n  Prism.languages.openqasm = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"[^\"\\r\\n\\t]*\"|'[^'\\r\\n\\t]*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:CX|OPENQASM|U|barrier|boxas|boxto|break|const|continue|ctrl|def|defcal|defcalgrammar|delay|else|end|for|gate|gphase|if|in|include|inv|kernel|lengthof|let|measure|pow|reset|return|rotary|stretchinf|while)\\b|#pragma\\b/,\n    'class-name':\n      /\\b(?:angle|bit|bool|creg|fixed|float|int|length|qreg|qubit|stretch|uint)\\b/,\n    function: /\\b(?:cos|exp|ln|popcount|rotl|rotr|sin|sqrt|tan)\\b(?=\\s*\\()/,\n    constant: /\\b(?:euler|pi|tau)\\b|π|𝜏|ℇ/,\n    number: {\n      pattern:\n        /(^|[^.\\w$])(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?(?:dt|ns|us|µs|ms|s)?/i,\n      lookbehind: true\n    },\n    operator: /->|>>=?|<<=?|&&|\\|\\||\\+\\+|--|[!=<>&|~^+\\-*/%]=?|@/,\n    punctuation: /[(){}\\[\\];,:.]/\n  }\n  Prism.languages.qasm = Prism.languages.openqasm\n}\n","'use strict'\n\nmodule.exports = oz\noz.displayName = 'oz'\noz.aliases = []\nfunction oz(Prism) {\n  Prism.languages.oz = {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\]|\\\\[\\s\\S])*\"/,\n      greedy: true\n    },\n    atom: {\n      pattern: /'(?:[^'\\\\]|\\\\[\\s\\S])*'/,\n      greedy: true,\n      alias: 'builtin'\n    },\n    keyword:\n      /\\$|\\[\\]|\\b(?:_|at|attr|case|catch|choice|class|cond|declare|define|dis|else(?:case|if)?|end|export|fail|false|feat|finally|from|fun|functor|if|import|in|local|lock|meth|nil|not|of|or|prepare|proc|prop|raise|require|self|skip|then|thread|true|try|unit)\\b/,\n    function: [\n      /\\b[a-z][A-Za-z\\d]*(?=\\()/,\n      {\n        pattern: /(\\{)[A-Z][A-Za-z\\d]*\\b/,\n        lookbehind: true\n      }\n    ],\n    number:\n      /\\b(?:0[bx][\\da-f]+|\\d+(?:\\.\\d*)?(?:e~?\\d+)?)\\b|&(?:[^\\\\]|\\\\(?:\\d{3}|.))/i,\n    variable: /`(?:[^`\\\\]|\\\\.)+`/,\n    'attr-name': /\\b\\w+(?=[ \\t]*:(?![:=]))/,\n    operator:\n      /:(?:=|::?)|<[-:=]?|=(?:=|<?:?)|>=?:?|\\\\=:?|!!?|[|#+\\-*\\/,~^@]|\\b(?:andthen|div|mod|orelse)\\b/,\n    punctuation: /[\\[\\](){}.:;?]/\n  }\n}\n","'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function () {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function (keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\b\\w(?:[\\w ]*\\w)?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern:\n        /((?:\\. *\\. *)?)(?:\\b\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *(?:[+-] *)?\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator:\n      /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?: *>|(?: *<)?(?: *=)?)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n","'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function (Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern:\n          /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:false|true)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator:\n            /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    directive: {\n      pattern: /\\{\\$[\\s\\S]*?\\}/,\n      greedy: true,\n      alias: ['marco', 'property']\n    },\n    comment: {\n      pattern: /\\(\\*[\\s\\S]*?\\*\\)|\\{[\\s\\S]*?\\}|\\/\\/.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'(?!')|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    asm: {\n      pattern: /(\\basm\\b)[\\s\\S]+?(?=\\bend\\s*[;[])/i,\n      lookbehind: true,\n      greedy: true,\n      inside: null // see below\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern:\n          /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern:\n          /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern:\n          /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/,\n      {\n        pattern:\n          /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.pascal.asm.inside = Prism.languages.extend('pascal', {\n    asm: undefined,\n    keyword: undefined,\n    operator: undefined\n  })\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n","'use strict'\n\nmodule.exports = pascaligo\npascaligo.displayName = 'pascaligo'\npascaligo.aliases = []\nfunction pascaligo(Prism) {\n  ;(function (Prism) {\n    // Pascaligo is a layer 2 smart contract language for the tezos blockchain\n    var braces = /\\((?:[^()]|\\((?:[^()]|\\([^()]*\\))*\\))*\\)/.source\n    var type = /(?:\\b\\w+(?:<braces>)?|<braces>)/.source.replace(\n      /<braces>/g,\n      function () {\n        return braces\n      }\n    )\n    var pascaligo = (Prism.languages.pascaligo = {\n      comment: /\\(\\*[\\s\\S]+?\\*\\)|\\/\\/.*/,\n      string: {\n        pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|\\^[a-z]/i,\n        greedy: true\n      },\n      'class-name': [\n        {\n          pattern: RegExp(\n            /(\\btype\\s+\\w+\\s+is\\s+)<type>/.source.replace(\n              /<type>/g,\n              function () {\n                return type\n              }\n            ),\n            'i'\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /<type>(?=\\s+is\\b)/.source.replace(/<type>/g, function () {\n              return type\n            }),\n            'i'\n          ),\n          inside: null // see below\n        },\n        {\n          pattern: RegExp(\n            /(:\\s*)<type>/.source.replace(/<type>/g, function () {\n              return type\n            })\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      keyword: {\n        pattern:\n          /(^|[^&])\\b(?:begin|block|case|const|else|end|fail|for|from|function|if|is|nil|of|remove|return|skip|then|type|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[^&])\\b(?:False|True)\\b/i,\n        lookbehind: true\n      },\n      builtin: {\n        pattern: /(^|[^&])\\b(?:bool|int|list|map|nat|record|string|unit)\\b/i,\n        lookbehind: true\n      },\n      function: /\\b\\w+(?=\\s*\\()/,\n      number: [\n        // Hexadecimal, octal and binary\n        /%[01]+|&[0-7]+|\\$[a-f\\d]+/i, // Decimal\n        /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?(?:mtz|n)?/i\n      ],\n      operator:\n        /->|=\\/=|\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=|]|\\b(?:and|mod|or)\\b/,\n      punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.{}]/\n    })\n    var classNameInside = [\n      'comment',\n      'keyword',\n      'builtin',\n      'operator',\n      'punctuation'\n    ].reduce(function (accum, key) {\n      accum[key] = pascaligo[key]\n      return accum\n    }, {})\n    pascaligo['class-name'].forEach(function (p) {\n      p.inside = classNameInside\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pcaxis\npcaxis.displayName = 'pcaxis'\npcaxis.aliases = ['px']\nfunction pcaxis(Prism) {\n  Prism.languages.pcaxis = {\n    string: /\"[^\"]*\"/,\n    keyword: {\n      pattern:\n        /((?:^|;)\\s*)[-A-Z\\d]+(?:\\s*\\[[-\\w]+\\])?(?:\\s*\\(\"[^\"]*\"(?:,\\s*\"[^\"]*\")*\\))?(?=\\s*=)/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        keyword: /^[-A-Z\\d]+/,\n        language: {\n          pattern: /^(\\s*)\\[[-\\w]+\\]/,\n          lookbehind: true,\n          inside: {\n            punctuation: /^\\[|\\]$/,\n            property: /[-\\w]+/\n          }\n        },\n        'sub-key': {\n          pattern: /^(\\s*)\\S[\\s\\S]*/,\n          lookbehind: true,\n          inside: {\n            parameter: {\n              pattern: /\"[^\"]*\"/,\n              alias: 'property'\n            },\n            punctuation: /^\\(|\\)$|,/\n          }\n        }\n      }\n    },\n    operator: /=/,\n    tlist: {\n      pattern:\n        /TLIST\\s*\\(\\s*\\w+(?:(?:\\s*,\\s*\"[^\"]*\")+|\\s*,\\s*\"[^\"]*\"-\"[^\"]*\")?\\s*\\)/,\n      greedy: true,\n      inside: {\n        function: /^TLIST/,\n        property: {\n          pattern: /^(\\s*\\(\\s*)\\w+/,\n          lookbehind: true\n        },\n        string: /\"[^\"]*\"/,\n        punctuation: /[(),]/,\n        operator: /-/\n      }\n    },\n    punctuation: /[;,]/,\n    number: {\n      pattern: /(^|\\s)\\d+(?:\\.\\d+)?(?!\\S)/,\n      lookbehind: true\n    },\n    boolean: /NO|YES/\n  }\n  Prism.languages.px = Prism.languages.pcaxis\n}\n","'use strict'\n\nmodule.exports = peoplecode\npeoplecode.displayName = 'peoplecode'\npeoplecode.aliases = ['pcode']\nfunction peoplecode(Prism) {\n  Prism.languages.peoplecode = {\n    comment: RegExp(\n      [\n        // C-style multiline comments\n        /\\/\\*[\\s\\S]*?\\*\\//.source, // REM comments\n        /\\bREM[^;]*;/.source, // Nested <* *> comments\n        /<\\*(?:[^<*]|\\*(?!>)|<(?!\\*)|<\\*(?:(?!\\*>)[\\s\\S])*\\*>)*\\*>/.source, // /+ +/ comments\n        /\\/\\+[\\s\\S]*?\\+\\//.source\n      ].join('|')\n    ),\n    string: {\n      pattern: /'(?:''|[^'\\r\\n])*'(?!')|\"(?:\"\"|[^\"\\r\\n])*\"(?!\")/,\n      greedy: true\n    },\n    variable: /%\\w+/,\n    'function-definition': {\n      pattern: /((?:^|[^\\w-])(?:function|method)\\s+)\\w+/i,\n      lookbehind: true,\n      alias: 'function'\n    },\n    'class-name': {\n      pattern:\n        /((?:^|[^-\\w])(?:as|catch|class|component|create|extends|global|implements|instance|local|of|property|returns)\\s+)\\w+(?::\\w+)*/i,\n      lookbehind: true,\n      inside: {\n        punctuation: /:/\n      }\n    },\n    keyword:\n      /\\b(?:abstract|alias|as|catch|class|component|constant|create|declare|else|end-(?:class|evaluate|for|function|get|if|method|set|try|while)|evaluate|extends|for|function|get|global|if|implements|import|instance|library|local|method|null|of|out|peopleCode|private|program|property|protected|readonly|ref|repeat|returns?|set|step|then|throw|to|try|until|value|when(?:-other)?|while)\\b/i,\n    'operator-keyword': {\n      pattern: /\\b(?:and|not|or)\\b/i,\n      alias: 'operator'\n    },\n    function: /[_a-z]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    operator: /<>|[<>]=?|!=|\\*\\*|[-+*/|=@]/,\n    punctuation: /[:.;,()[\\]]/\n  }\n  Prism.languages.pcode = Prism.languages.peoplecode\n}\n","'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  ;(function (Prism) {\n    var brackets =\n      /(?:\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}|\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)/\n        .source\n    Prism.languages.perl = {\n      comment: [\n        {\n          // POD\n          pattern: /(^\\s*)=\\w[\\s\\S]*?=cut.*/m,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\$])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      // TODO Could be nice to handle Heredoc too.\n      string: [\n        {\n          pattern: RegExp(\n            /\\b(?:q|qq|qw|qx)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // q/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // q a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // q(...)\n                // q{...}\n                // q[...]\n                // q<...>\n                brackets\n              ].join('|') +\n              ')'\n          ),\n          greedy: true\n        }, // \"...\", `...`\n        {\n          pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n          greedy: true\n        }, // '...'\n        // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n        {\n          pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n          greedy: true\n        }\n      ],\n      regex: [\n        {\n          pattern: RegExp(\n            /\\b(?:m|qr)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // m/.../\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source, // m a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/.source, // m(...)\n                // m{...}\n                // m[...]\n                // m<...>\n                brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngc]*/.source\n          ),\n          greedy: true\n        }, // The lookbehinds prevent -s from breaking\n        {\n          pattern: RegExp(\n            /(^|[^-])\\b(?:s|tr|y)(?![a-zA-Z0-9])\\s*/.source +\n              '(?:' +\n              [\n                // s/.../.../\n                // eslint-disable-next-line regexp/strict\n                /([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2/\n                  .source, // s a...a...a\n                // eslint-disable-next-line regexp/strict\n                /([a-zA-Z0-9])(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3(?:(?!\\3)[^\\\\]|\\\\[\\s\\S])*\\3/\n                  .source, // s(...)(...)\n                // s{...}{...}\n                // s[...][...]\n                // s<...><...>\n                // s(...)[...]\n                brackets + /\\s*/.source + brackets\n              ].join('|') +\n              ')' +\n              /[msixpodualngcer]*/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }, // /.../\n        // The look-ahead tries to prevent two divisions on\n        // the same line from being highlighted as regex.\n        // This does not support multi-line regex.\n        {\n          pattern:\n            /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|x|xor)\\b))/,\n          greedy: true\n        }\n      ],\n      // FIXME Not sure about the handling of ::, ', and #\n      variable: [\n        // ${^POSTMATCH}\n        /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n        /[&*$@%]\\^[A-Z_]/, // ${...}\n        /[&*$@%]#?(?=\\{)/, // $foo\n        /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+(?![\\w$]))+(?:::)*/, // $1\n        /[&*$@%]\\d+/, // $_, @_, %!\n        // The negative lookahead prevents from breaking the %= operator\n        /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n      ],\n      filehandle: {\n        // <>, <FOO>, _\n        pattern: /<(?![<=])\\S*?>|\\b_\\b/,\n        alias: 'symbol'\n      },\n      'v-string': {\n        // v1.2, 1.2.3\n        pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n        alias: 'string'\n      },\n      function: {\n        pattern: /(\\bsub[ \\t]+)\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n      operator:\n        /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:and|cmp|eq|ge|gt|le|lt|ne|not|or|xor)\\b/,\n      punctuation: /[{}[\\];(),:]/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nmodule.exports = phpExtras\nphpExtras.displayName = 'phpExtras'\nphpExtras.aliases = []\nfunction phpExtras(Prism) {\n  Prism.register(refractorPhp)\n  Prism.languages.insertBefore('php', 'variable', {\n    this: {\n      pattern: /\\$this\\b/,\n      alias: 'keyword'\n    },\n    global:\n      /\\$(?:GLOBALS|HTTP_RAW_POST_DATA|_(?:COOKIE|ENV|FILES|GET|POST|REQUEST|SERVER|SESSION)|argc|argv|http_response_header|php_errormsg)\\b/,\n    scope: {\n      pattern: /\\b[\\w\\\\]+::/,\n      inside: {\n        keyword: /\\b(?:parent|self|static)\\b/,\n        punctuation: /::|\\\\/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = php\nphp.displayName = 'php'\nphp.aliases = []\nfunction php(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /**\n   * Original by Aaron Harun: http://aahacreative.com/2012/07/31/php-syntax-highlighting-prism/\n   * Modified by Miles Johnson: http://milesj.me\n   * Rewritten by Tom Pavelec\n   *\n   * Supports PHP 5.3 - 8.0\n   */\n  ;(function (Prism) {\n    var comment = /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*|#(?!\\[).*/\n    var constant = [\n      {\n        pattern: /\\b(?:false|true)\\b/i,\n        alias: 'boolean'\n      },\n      {\n        pattern: /(::\\s*)\\b[a-z_]\\w*\\b(?!\\s*\\()/i,\n        greedy: true,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\b(?:case|const)\\s+)\\b[a-z_]\\w*(?=\\s*[;=])/i,\n        greedy: true,\n        lookbehind: true\n      },\n      /\\b(?:null)\\b/i,\n      /\\b[A-Z_][A-Z0-9_]*\\b(?!\\s*\\()/\n    ]\n    var number =\n      /\\b0b[01]+(?:_[01]+)*\\b|\\b0o[0-7]+(?:_[0-7]+)*\\b|\\b0x[\\da-f]+(?:_[\\da-f]+)*\\b|(?:\\b\\d+(?:_\\d+)*\\.?(?:\\d+(?:_\\d+)*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i\n    var operator =\n      /<?=>|\\?\\?=?|\\.{3}|\\??->|[!=]=?=?|::|\\*\\*=?|--|\\+\\+|&&|\\|\\||<<|>>|[?~]|[/^|%*&<>.+-]=?/\n    var punctuation = /[{}\\[\\](),:;]/\n    Prism.languages.php = {\n      delimiter: {\n        pattern: /\\?>$|^<\\?(?:php(?=\\s)|=)?/i,\n        alias: 'important'\n      },\n      comment: comment,\n      variable: /\\$+(?:\\w+\\b|(?=\\{))/,\n      package: {\n        pattern:\n          /(namespace\\s+|use\\s+(?:function\\s+)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      'class-name-definition': {\n        pattern: /(\\b(?:class|enum|interface|trait)\\s+)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'function-definition': {\n        pattern: /(\\bfunction\\s+)[a-z_]\\w*(?=\\s*\\()/i,\n        lookbehind: true,\n        alias: 'function'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\(\\s*)\\b(?:array|bool|boolean|float|int|integer|object|string)\\b(?=\\s*\\))/i,\n          alias: 'type-casting',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /([(,?]\\s*)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string)\\b(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b(?:array(?!\\s*\\()|bool|callable|(?:false|null)(?=\\s*\\|)|float|int|iterable|mixed|object|self|static|string|void)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /\\b(?:array(?!\\s*\\()|bool|float|int|iterable|mixed|object|string|void)\\b/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:false|null)\\b|\\b(?:false|null)(?=\\s*\\|)/i,\n          alias: 'type-declaration',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b(?:parent|self|static)(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          // yield from\n          pattern: /(\\byield\\s+)from\\b/i,\n          lookbehind: true\n        }, // `class` is always a keyword unlike other keywords\n        /\\bclass\\b/i,\n        {\n          // https://www.php.net/manual/en/reserved.keywords.php\n          //\n          // keywords cannot be preceded by \"->\"\n          // the complex lookbehind means `(?<!(?:->|::)\\s*)`\n          pattern:\n            /((?:^|[^\\s>:]|(?:^|[^-])>|(?:^|[^:]):)\\s*)\\b(?:abstract|and|array|as|break|callable|case|catch|clone|const|continue|declare|default|die|do|echo|else|elseif|empty|enddeclare|endfor|endforeach|endif|endswitch|endwhile|enum|eval|exit|extends|final|finally|fn|for|foreach|function|global|goto|if|implements|include|include_once|instanceof|insteadof|interface|isset|list|match|namespace|new|or|parent|print|private|protected|public|require|require_once|return|self|static|switch|throw|trait|try|unset|use|var|while|xor|yield|__halt_compiler)\\b/i,\n          lookbehind: true\n        }\n      ],\n      'argument-name': {\n        pattern: /([(,]\\s+)\\b[a-z_]\\w*(?=\\s*:(?!:))/i,\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self|\\s+static))\\s+|\\bcatch\\s*\\()\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\|\\s*)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?!\\\\)\\b(?=\\s*\\|)/i,\n          greedy: true\n        },\n        {\n          pattern: /(\\|\\s*)(?:\\\\?\\b[a-z_]\\w*)+\\b/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+\\b(?=\\s*\\|)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern:\n            /(\\b(?:extends|implements|instanceof|new(?!\\s+self\\b|\\s+static\\b))\\s+|\\bcatch\\s*\\()(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: 'class-name-fully-qualified',\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-declaration',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-declaration'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /\\b[a-z_]\\w*(?=\\s*::)/i,\n          alias: 'static-context',\n          greedy: true\n        },\n        {\n          pattern: /(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*::)/i,\n          alias: ['class-name-fully-qualified', 'static-context'],\n          greedy: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /([(,?]\\s*)[a-z_]\\w*(?=\\s*\\$)/i,\n          alias: 'type-hint',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /([(,?]\\s*)(?:\\\\?\\b[a-z_]\\w*)+(?=\\s*\\$)/i,\n          alias: ['class-name-fully-qualified', 'type-hint'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n          alias: 'return-type',\n          greedy: true,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\)\\s*:\\s*(?:\\?\\s*)?)(?:\\\\?\\b[a-z_]\\w*)+\\b(?!\\\\)/i,\n          alias: ['class-name-fully-qualified', 'return-type'],\n          greedy: true,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\\\/\n          }\n        }\n      ],\n      constant: constant,\n      function: {\n        pattern: /(^|[^\\\\\\w])\\\\?[a-z_](?:[\\w\\\\]*\\w)?(?=\\s*\\()/i,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\\\/\n        }\n      },\n      property: {\n        pattern: /(->\\s*)\\w+/,\n        lookbehind: true\n      },\n      number: number,\n      operator: operator,\n      punctuation: punctuation\n    }\n    var string_interpolation = {\n      pattern:\n        /\\{\\$(?:\\{(?:\\{[^{}]+\\}|[^{}]+)\\}|[^{}])+\\}|(^|[^\\\\{])\\$+(?:\\w+(?:\\[[^\\r\\n\\[\\]]+\\]|->\\w+)?)/,\n      lookbehind: true,\n      inside: Prism.languages.php\n    }\n    var string = [\n      {\n        pattern: /<<<'([^']+)'[\\r\\n](?:.*[\\r\\n])*?\\1;/,\n        alias: 'nowdoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<'[^']+'|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<'?|[';]$/\n            }\n          }\n        }\n      },\n      {\n        pattern:\n          /<<<(?:\"([^\"]+)\"[\\r\\n](?:.*[\\r\\n])*?\\1;|([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\2;)/i,\n        alias: 'heredoc-string',\n        greedy: true,\n        inside: {\n          delimiter: {\n            pattern: /^<<<(?:\"[^\"]+\"|[a-z_]\\w*)|[a-z_]\\w*;$/i,\n            alias: 'symbol',\n            inside: {\n              punctuation: /^<<<\"?|[\";]$/\n            }\n          },\n          interpolation: string_interpolation\n        }\n      },\n      {\n        pattern: /`(?:\\\\[\\s\\S]|[^\\\\`])*`/,\n        alias: 'backtick-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /'(?:\\\\[\\s\\S]|[^\\\\'])*'/,\n        alias: 'single-quoted-string',\n        greedy: true\n      },\n      {\n        pattern: /\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"/,\n        alias: 'double-quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: string_interpolation\n        }\n      }\n    ]\n    Prism.languages.insertBefore('php', 'variable', {\n      string: string,\n      attribute: {\n        pattern:\n          /#\\[(?:[^\"'\\/#]|\\/(?![*/])|\\/\\/.*$|#(?!\\[).*$|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*')+\\](?=\\s*[a-z$#])/im,\n        greedy: true,\n        inside: {\n          'attribute-content': {\n            pattern: /^(#\\[)[\\s\\S]+(?=\\]$)/,\n            lookbehind: true,\n            // inside can appear subset of php\n            inside: {\n              comment: comment,\n              string: string,\n              'attribute-class-name': [\n                {\n                  pattern: /([^:]|^)\\b[a-z_]\\w*(?!\\\\)\\b/i,\n                  alias: 'class-name',\n                  greedy: true,\n                  lookbehind: true\n                },\n                {\n                  pattern: /([^:]|^)(?:\\\\?\\b[a-z_]\\w*)+/i,\n                  alias: ['class-name', 'class-name-fully-qualified'],\n                  greedy: true,\n                  lookbehind: true,\n                  inside: {\n                    punctuation: /\\\\/\n                  }\n                }\n              ],\n              constant: constant,\n              number: number,\n              operator: operator,\n              punctuation: punctuation\n            }\n          },\n          delimiter: {\n            pattern: /^#\\[|\\]$/,\n            alias: 'punctuation'\n          }\n        }\n      }\n    })\n    Prism.hooks.add('before-tokenize', function (env) {\n      if (!/<\\?/.test(env.code)) {\n        return\n      }\n      var phpPattern =\n        /<\\?(?:[^\"'/#]|\\/(?![*/])|(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|(?:\\/\\/|#(?!\\[))(?:[^?\\n\\r]|\\?(?!>))*(?=$|\\?>|[\\r\\n])|#\\[|\\/\\*(?:[^*]|\\*(?!\\/))*(?:\\*\\/|$))*?(?:\\?>|$)/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'php',\n        phpPattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'php')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorPhp = require('./php.js')\nvar refractorJavadoclike = require('./javadoclike.js')\nmodule.exports = phpdoc\nphpdoc.displayName = 'phpdoc'\nphpdoc.aliases = []\nfunction phpdoc(Prism) {\n  Prism.register(refractorPhp)\n  Prism.register(refractorJavadoclike)\n  ;(function (Prism) {\n    var typeExpression = /(?:\\b[a-zA-Z]\\w*|[|\\\\[\\]])+/.source\n    Prism.languages.phpdoc = Prism.languages.extend('javadoclike', {\n      parameter: {\n        pattern: RegExp(\n          '(@(?:global|param|property(?:-read|-write)?|var)\\\\s+(?:' +\n            typeExpression +\n            '\\\\s+)?)\\\\$\\\\w+'\n        ),\n        lookbehind: true\n      }\n    })\n    Prism.languages.insertBefore('phpdoc', 'keyword', {\n      'class-name': [\n        {\n          pattern: RegExp(\n            '(@(?:global|package|param|property(?:-read|-write)?|return|subpackage|throws|var)\\\\s+)' +\n              typeExpression\n          ),\n          lookbehind: true,\n          inside: {\n            keyword:\n              /\\b(?:array|bool|boolean|callback|double|false|float|int|integer|mixed|null|object|resource|self|string|true|void)\\b/,\n            punctuation: /[|\\\\[\\]()]/\n          }\n        }\n      ]\n    })\n    Prism.languages.javadoclike.addSupport('php', Prism.languages.phpdoc)\n  })(Prism)\n}\n","'use strict'\nvar refractorSql = require('./sql.js')\nmodule.exports = plsql\nplsql.displayName = 'plsql'\nplsql.aliases = []\nfunction plsql(Prism) {\n  Prism.register(refractorSql)\n  Prism.languages.plsql = Prism.languages.extend('sql', {\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|--.*/,\n      greedy: true\n    },\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-reserved-words-keywords.html\n    keyword:\n      /\\b(?:A|ACCESSIBLE|ADD|AGENT|AGGREGATE|ALL|ALTER|AND|ANY|ARRAY|AS|ASC|AT|ATTRIBUTE|AUTHID|AVG|BEGIN|BETWEEN|BFILE_BASE|BINARY|BLOB_BASE|BLOCK|BODY|BOTH|BOUND|BULK|BY|BYTE|C|CALL|CALLING|CASCADE|CASE|CHAR|CHARACTER|CHARSET|CHARSETFORM|CHARSETID|CHAR_BASE|CHECK|CLOB_BASE|CLONE|CLOSE|CLUSTER|CLUSTERS|COLAUTH|COLLECT|COLUMNS|COMMENT|COMMIT|COMMITTED|COMPILED|COMPRESS|CONNECT|CONSTANT|CONSTRUCTOR|CONTEXT|CONTINUE|CONVERT|COUNT|CRASH|CREATE|CREDENTIAL|CURRENT|CURSOR|CUSTOMDATUM|DANGLING|DATA|DATE|DATE_BASE|DAY|DECLARE|DEFAULT|DEFINE|DELETE|DESC|DETERMINISTIC|DIRECTORY|DISTINCT|DOUBLE|DROP|DURATION|ELEMENT|ELSE|ELSIF|EMPTY|END|ESCAPE|EXCEPT|EXCEPTION|EXCEPTIONS|EXCLUSIVE|EXECUTE|EXISTS|EXIT|EXTERNAL|FETCH|FINAL|FIRST|FIXED|FLOAT|FOR|FORALL|FORCE|FROM|FUNCTION|GENERAL|GOTO|GRANT|GROUP|HASH|HAVING|HEAP|HIDDEN|HOUR|IDENTIFIED|IF|IMMEDIATE|IMMUTABLE|IN|INCLUDING|INDEX|INDEXES|INDICATOR|INDICES|INFINITE|INSERT|INSTANTIABLE|INT|INTERFACE|INTERSECT|INTERVAL|INTO|INVALIDATE|IS|ISOLATION|JAVA|LANGUAGE|LARGE|LEADING|LENGTH|LEVEL|LIBRARY|LIKE|LIKE2|LIKE4|LIKEC|LIMIT|LIMITED|LOCAL|LOCK|LONG|LOOP|MAP|MAX|MAXLEN|MEMBER|MERGE|MIN|MINUS|MINUTE|MOD|MODE|MODIFY|MONTH|MULTISET|MUTABLE|NAME|NAN|NATIONAL|NATIVE|NCHAR|NEW|NOCOMPRESS|NOCOPY|NOT|NOWAIT|NULL|NUMBER_BASE|OBJECT|OCICOLL|OCIDATE|OCIDATETIME|OCIDURATION|OCIINTERVAL|OCILOBLOCATOR|OCINUMBER|OCIRAW|OCIREF|OCIREFCURSOR|OCIROWID|OCISTRING|OCITYPE|OF|OLD|ON|ONLY|OPAQUE|OPEN|OPERATOR|OPTION|OR|ORACLE|ORADATA|ORDER|ORGANIZATION|ORLANY|ORLVARY|OTHERS|OUT|OVERLAPS|OVERRIDING|PACKAGE|PARALLEL_ENABLE|PARAMETER|PARAMETERS|PARENT|PARTITION|PASCAL|PERSISTABLE|PIPE|PIPELINED|PLUGGABLE|POLYMORPHIC|PRAGMA|PRECISION|PRIOR|PRIVATE|PROCEDURE|PUBLIC|RAISE|RANGE|RAW|READ|RECORD|REF|REFERENCE|RELIES_ON|REM|REMAINDER|RENAME|RESOURCE|RESULT|RESULT_CACHE|RETURN|RETURNING|REVERSE|REVOKE|ROLLBACK|ROW|SAMPLE|SAVE|SAVEPOINT|SB1|SB2|SB4|SECOND|SEGMENT|SELECT|SELF|SEPARATE|SEQUENCE|SERIALIZABLE|SET|SHARE|SHORT|SIZE|SIZE_T|SOME|SPARSE|SQL|SQLCODE|SQLDATA|SQLNAME|SQLSTATE|STANDARD|START|STATIC|STDDEV|STORED|STRING|STRUCT|STYLE|SUBMULTISET|SUBPARTITION|SUBSTITUTABLE|SUBTYPE|SUM|SYNONYM|TABAUTH|TABLE|TDO|THE|THEN|TIME|TIMESTAMP|TIMEZONE_ABBR|TIMEZONE_HOUR|TIMEZONE_MINUTE|TIMEZONE_REGION|TO|TRAILING|TRANSACTION|TRANSACTIONAL|TRUSTED|TYPE|UB1|UB2|UB4|UNDER|UNION|UNIQUE|UNPLUG|UNSIGNED|UNTRUSTED|UPDATE|USE|USING|VALIST|VALUE|VALUES|VARIABLE|VARIANCE|VARRAY|VARYING|VIEW|VIEWS|VOID|WHEN|WHERE|WHILE|WITH|WORK|WRAPPED|WRITE|YEAR|ZONE)\\b/i,\n    // https://docs.oracle.com/en/database/oracle/oracle-database/21/lnpls/plsql-language-fundamentals.html#GUID-96A42F7C-7A71-4B90-8255-CA9C8BD9722E\n    operator: /:=?|=>|[<>^~!]=|\\.\\.|\\|\\||\\*\\*|[-+*/%<>=@]/\n  })\n  Prism.languages.insertBefore('plsql', 'operator', {\n    label: {\n      pattern: /<<\\s*\\w+\\s*>>/,\n      alias: 'symbol'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = powerquery\npowerquery.displayName = 'powerquery'\npowerquery.aliases = []\nfunction powerquery(Prism) {\n  // https://docs.microsoft.com/en-us/powerquery-m/power-query-m-language-specification\n  Prism.languages.powerquery = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'quoted-identifier': {\n      pattern: /#\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    string: {\n      pattern: /(?:#!)?\"(?:[^\"\\r\\n]|\"\")*\"(?!\")/,\n      greedy: true\n    },\n    constant: [\n      /\\bDay\\.(?:Friday|Monday|Saturday|Sunday|Thursday|Tuesday|Wednesday)\\b/,\n      /\\bTraceLevel\\.(?:Critical|Error|Information|Verbose|Warning)\\b/,\n      /\\bOccurrence\\.(?:All|First|Last)\\b/,\n      /\\bOrder\\.(?:Ascending|Descending)\\b/,\n      /\\bRoundingMode\\.(?:AwayFromZero|Down|ToEven|TowardZero|Up)\\b/,\n      /\\bMissingField\\.(?:Error|Ignore|UseNull)\\b/,\n      /\\bQuoteStyle\\.(?:Csv|None)\\b/,\n      /\\bJoinKind\\.(?:FullOuter|Inner|LeftAnti|LeftOuter|RightAnti|RightOuter)\\b/,\n      /\\bGroupKind\\.(?:Global|Local)\\b/,\n      /\\bExtraValues\\.(?:Error|Ignore|List)\\b/,\n      /\\bJoinAlgorithm\\.(?:Dynamic|LeftHash|LeftIndex|PairwiseHash|RightHash|RightIndex|SortMerge)\\b/,\n      /\\bJoinSide\\.(?:Left|Right)\\b/,\n      /\\bPrecision\\.(?:Decimal|Double)\\b/,\n      /\\bRelativePosition\\.From(?:End|Start)\\b/,\n      /\\bTextEncoding\\.(?:Ascii|BigEndianUnicode|Unicode|Utf16|Utf8|Windows)\\b/,\n      /\\b(?:Any|Binary|Date|DateTime|DateTimeZone|Duration|Function|Int16|Int32|Int64|Int8|List|Logical|None|Number|Record|Table|Text|Time)\\.Type\\b/,\n      /\\bnull\\b/\n    ],\n    boolean: /\\b(?:false|true)\\b/,\n    keyword:\n      /\\b(?:and|as|each|else|error|if|in|is|let|meta|not|nullable|optional|or|otherwise|section|shared|then|try|type)\\b|#(?:binary|date|datetime|datetimezone|duration|infinity|nan|sections|shared|table|time)\\b/,\n    function: {\n      pattern: /(^|[^#\\w.])[a-z_][\\w.]*(?=\\s*\\()/i,\n      lookbehind: true\n    },\n    'data-type': {\n      pattern:\n        /\\b(?:any|anynonnull|binary|date|datetime|datetimezone|duration|function|list|logical|none|number|record|table|text|time)\\b/,\n      alias: 'class-name'\n    },\n    number: {\n      pattern:\n        /\\b0x[\\da-f]+\\b|(?:[+-]?(?:\\b\\d+\\.)?\\b\\d+|[+-]\\.\\d+|(^|[^.])\\B\\.\\d+)(?:e[+-]?\\d+)?\\b/i,\n      lookbehind: true\n    },\n    operator: /[-+*\\/&?@^]|<(?:=>?|>)?|>=?|=>?|\\.\\.\\.?/,\n    punctuation: /[,;\\[\\](){}]/\n  }\n  Prism.languages.pq = Prism.languages['powerquery']\n  Prism.languages.mscript = Prism.languages['powerquery']\n}\n","'use strict'\n\nmodule.exports = powershell\npowershell.displayName = 'powershell'\npowershell.aliases = []\nfunction powershell(Prism) {\n  ;(function (Prism) {\n    var powershell = (Prism.languages.powershell = {\n      comment: [\n        {\n          pattern: /(^|[^`])<#[\\s\\S]*?#>/,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^`])#.*/,\n          lookbehind: true\n        }\n      ],\n      string: [\n        {\n          pattern: /\"(?:`[\\s\\S]|[^`\"])*\"/,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern: /'(?:[^']|'')*'/,\n          greedy: true\n        }\n      ],\n      // Matches name spaces as well as casts, attribute decorators. Force starting with letter to avoid matching array indices\n      // Supports two levels of nested brackets (e.g. `[OutputType([System.Collections.Generic.List[int]])]`)\n      namespace: /\\[[a-z](?:\\[(?:\\[[^\\]]*\\]|[^\\[\\]])*\\]|[^\\[\\]])*\\]/i,\n      boolean: /\\$(?:false|true)\\b/i,\n      variable: /\\$\\w+\\b/,\n      // Cmdlets and aliases. Aliases should come last, otherwise \"write\" gets preferred over \"write-host\" for example\n      // Get-Command | ?{ $_.ModuleName -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      // Get-Alias | ?{ $_.ReferencedCommand.Module.Name -match \"Microsoft.PowerShell.(Util|Core|Management)\" }\n      function: [\n        /\\b(?:Add|Approve|Assert|Backup|Block|Checkpoint|Clear|Close|Compare|Complete|Compress|Confirm|Connect|Convert|ConvertFrom|ConvertTo|Copy|Debug|Deny|Disable|Disconnect|Dismount|Edit|Enable|Enter|Exit|Expand|Export|Find|ForEach|Format|Get|Grant|Group|Hide|Import|Initialize|Install|Invoke|Join|Limit|Lock|Measure|Merge|Move|New|Open|Optimize|Out|Ping|Pop|Protect|Publish|Push|Read|Receive|Redo|Register|Remove|Rename|Repair|Request|Reset|Resize|Resolve|Restart|Restore|Resume|Revoke|Save|Search|Select|Send|Set|Show|Skip|Sort|Split|Start|Step|Stop|Submit|Suspend|Switch|Sync|Tee|Test|Trace|Unblock|Undo|Uninstall|Unlock|Unprotect|Unpublish|Unregister|Update|Use|Wait|Watch|Where|Write)-[a-z]+\\b/i,\n        /\\b(?:ac|cat|chdir|clc|cli|clp|clv|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|ebp|echo|epal|epcsv|epsn|erase|fc|fl|ft|fw|gal|gbp|gc|gci|gcs|gdr|gi|gl|gm|gp|gps|group|gsv|gu|gv|gwmi|iex|ii|ipal|ipcsv|ipsn|irm|iwmi|iwr|kill|lp|ls|measure|mi|mount|move|mp|mv|nal|ndr|ni|nv|ogv|popd|ps|pushd|pwd|rbp|rd|rdr|ren|ri|rm|rmdir|rni|rnp|rp|rv|rvpa|rwmi|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls|sort|sp|spps|spsv|start|sv|swmi|tee|trcm|type|write)\\b/i\n      ],\n      // per http://technet.microsoft.com/en-us/library/hh847744.aspx\n      keyword:\n        /\\b(?:Begin|Break|Catch|Class|Continue|Data|Define|Do|DynamicParam|Else|ElseIf|End|Exit|Filter|Finally|For|ForEach|From|Function|If|InlineScript|Parallel|Param|Process|Return|Sequence|Switch|Throw|Trap|Try|Until|Using|Var|While|Workflow)\\b/i,\n      operator: {\n        pattern:\n          /(^|\\W)(?:!|-(?:b?(?:and|x?or)|as|(?:Not)?(?:Contains|In|Like|Match)|eq|ge|gt|is(?:Not)?|Join|le|lt|ne|not|Replace|sh[lr])\\b|-[-=]?|\\+[+=]?|[*\\/%]=?)/i,\n        lookbehind: true\n      },\n      punctuation: /[|{}[\\];(),.]/\n    }) // Variable interpolation inside strings, and nested expressions\n    powershell.string[0].inside = {\n      function: {\n        // Allow for one level of nesting\n        pattern: /(^|[^`])\\$\\((?:\\$\\([^\\r\\n()]*\\)|(?!\\$\\()[^\\r\\n)])*\\)/,\n        lookbehind: true,\n        inside: powershell\n      },\n      boolean: powershell.boolean,\n      variable: powershell.variable\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = processing\nprocessing.displayName = 'processing'\nprocessing.aliases = []\nfunction processing(Prism) {\n  Prism.languages.processing = Prism.languages.extend('clike', {\n    keyword:\n      /\\b(?:break|case|catch|class|continue|default|else|extends|final|for|if|implements|import|new|null|private|public|return|static|super|switch|this|try|void|while)\\b/,\n    // Spaces are allowed between function name and parenthesis\n    function: /\\b\\w+(?=\\s*\\()/,\n    operator: /<[<=]?|>[>=]?|&&?|\\|\\|?|[%?]|[!=+\\-*\\/]=?/\n  })\n  Prism.languages.insertBefore('processing', 'number', {\n    // Special case: XML is a type\n    constant: /\\b(?!XML\\b)[A-Z][A-Z\\d_]+\\b/,\n    type: {\n      pattern: /\\b(?:boolean|byte|char|color|double|float|int|[A-Z]\\w*)\\b/,\n      alias: 'class-name'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = prolog\nprolog.displayName = 'prolog'\nprolog.aliases = []\nfunction prolog(Prism) {\n  Prism.languages.prolog = {\n    // Syntax depends on the implementation\n    comment: {\n      pattern: /\\/\\*[\\s\\S]*?\\*\\/|%.*/,\n      greedy: true\n    },\n    // Depending on the implementation, strings may allow escaped newlines and quote-escape\n    string: {\n      pattern: /([\"'])(?:\\1\\1|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1(?!\\1)/,\n      greedy: true\n    },\n    builtin: /\\b(?:fx|fy|xf[xy]?|yfx?)\\b/,\n    // FIXME: Should we list all null-ary predicates (not followed by a parenthesis) like halt, trace, etc.?\n    function: /\\b[a-z]\\w*(?:(?=\\()|\\/\\d+)/,\n    number: /\\b\\d+(?:\\.\\d*)?/,\n    // Custom operators are allowed\n    operator: /[:\\\\=><\\-?*@\\/;+^|!$.]+|\\b(?:is|mod|not|xor)\\b/,\n    punctuation: /[(){}\\[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = promql\npromql.displayName = 'promql'\npromql.aliases = []\nfunction promql(Prism) {\n  // Thanks to: https://github.com/prometheus-community/monaco-promql/blob/master/src/promql/promql.ts\n  // As well as: https://kausal.co/blog/slate-prism-add-new-syntax-promql/\n  ;(function (Prism) {\n    // PromQL Aggregation Operators\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#aggregation-operators)\n    var aggregations = [\n      'sum',\n      'min',\n      'max',\n      'avg',\n      'group',\n      'stddev',\n      'stdvar',\n      'count',\n      'count_values',\n      'bottomk',\n      'topk',\n      'quantile'\n    ] // PromQL vector matching + the by and without clauses\n    // (https://prometheus.io/docs/prometheus/latest/querying/operators/#vector-matching)\n    var vectorMatching = [\n      'on',\n      'ignoring',\n      'group_right',\n      'group_left',\n      'by',\n      'without'\n    ] // PromQL offset modifier\n    // (https://prometheus.io/docs/prometheus/latest/querying/basics/#offset-modifier)\n    var offsetModifier = ['offset']\n    var keywords = aggregations.concat(vectorMatching, offsetModifier)\n    Prism.languages.promql = {\n      comment: {\n        pattern: /(^[ \\t]*)#.*/m,\n        lookbehind: true\n      },\n      'vector-match': {\n        // Match the comma-separated label lists inside vector matching:\n        pattern: new RegExp(\n          '((?:' + vectorMatching.join('|') + ')\\\\s*)\\\\([^)]*\\\\)'\n        ),\n        lookbehind: true,\n        inside: {\n          'label-key': {\n            pattern: /\\b[^,]+\\b/,\n            alias: 'attr-name'\n          },\n          punctuation: /[(),]/\n        }\n      },\n      'context-labels': {\n        pattern: /\\{[^{}]*\\}/,\n        inside: {\n          'label-key': {\n            pattern: /\\b[a-z_]\\w*(?=\\s*(?:=|![=~]))/,\n            alias: 'attr-name'\n          },\n          'label-value': {\n            pattern: /([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n            greedy: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\{|\\}|=~?|![=~]|,/\n        }\n      },\n      'context-range': [\n        {\n          pattern: /\\[[\\w\\s:]+\\]/,\n          // [1m]\n          inside: {\n            punctuation: /\\[|\\]|:/,\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        },\n        {\n          pattern: /(\\boffset\\s+)\\w+/,\n          // offset 1m\n          lookbehind: true,\n          inside: {\n            'range-duration': {\n              pattern: /\\b(?:\\d+(?:[smhdwy]|ms))+\\b/i,\n              alias: 'number'\n            }\n          }\n        }\n      ],\n      keyword: new RegExp('\\\\b(?:' + keywords.join('|') + ')\\\\b', 'i'),\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n      number:\n        /[-+]?(?:(?:\\b\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[-+]?\\d+)?\\b|\\b(?:0x[0-9a-f]+|nan|inf)\\b)/i,\n      operator: /[\\^*/%+-]|==|!=|<=|<|>=|>|\\b(?:and|or|unless)\\b/i,\n      punctuation: /[{};()`,.[\\]]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = properties\nproperties.displayName = 'properties'\nproperties.aliases = []\nfunction properties(Prism) {\n  Prism.languages.properties = {\n    comment: /^[ \\t]*[#!].*$/m,\n    'attr-value': {\n      pattern:\n        /(^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?: *[=:] *(?! )| ))(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])+/m,\n      lookbehind: true\n    },\n    'attr-name': /^[ \\t]*(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\s:=])+(?= *[=:]| )/m,\n    punctuation: /[=:]/\n  }\n}\n","'use strict'\n\nmodule.exports = protobuf\nprotobuf.displayName = 'protobuf'\nprotobuf.aliases = []\nfunction protobuf(Prism) {\n  ;(function (Prism) {\n    var builtinTypes =\n      /\\b(?:bool|bytes|double|s?fixed(?:32|64)|float|[su]?int(?:32|64)|string)\\b/\n    Prism.languages.protobuf = Prism.languages.extend('clike', {\n      'class-name': [\n        {\n          pattern:\n            /(\\b(?:enum|extend|message|service)\\s+)[A-Za-z_]\\w*(?=\\s*\\{)/,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /(\\b(?:rpc\\s+\\w+|returns)\\s*\\(\\s*(?:stream\\s+)?)\\.?[A-Za-z_]\\w*(?:\\.[A-Za-z_]\\w*)*(?=\\s*\\))/,\n          lookbehind: true\n        }\n      ],\n      keyword:\n        /\\b(?:enum|extend|extensions|import|message|oneof|option|optional|package|public|repeated|required|reserved|returns|rpc(?=\\s+\\w)|service|stream|syntax|to)\\b(?!\\s*=\\s*\\d)/,\n      function: /\\b[a-z_]\\w*(?=\\s*\\()/i\n    })\n    Prism.languages.insertBefore('protobuf', 'operator', {\n      map: {\n        pattern: /\\bmap<\\s*[\\w.]+\\s*,\\s*[\\w.]+\\s*>(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /[<>.,]/,\n          builtin: builtinTypes\n        }\n      },\n      builtin: builtinTypes,\n      'positional-class-name': {\n        pattern: /(?:\\b|\\B\\.)[a-z_]\\w*(?:\\.[a-z_]\\w*)*(?=\\s+[a-z_]\\w*\\s*[=;])/i,\n        alias: 'class-name',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      annotation: {\n        pattern: /(\\[\\s*)[a-z_]\\w*(?=\\s*=)/i,\n        lookbehind: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = psl\npsl.displayName = 'psl'\npsl.aliases = []\nfunction psl(Prism) {\n  Prism.languages.psl = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true,\n      inside: {\n        symbol: /\\\\[ntrbA-Z\"\\\\]/\n      }\n    },\n    'heredoc-string': {\n      pattern: /<<<([a-zA-Z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?\\1\\b/,\n      alias: 'string',\n      greedy: true\n    },\n    keyword:\n      /\\b(?:__multi|__single|case|default|do|else|elsif|exit|export|for|foreach|function|if|last|line|local|next|requires|return|switch|until|while|word)\\b/,\n    constant:\n      /\\b(?:ALARM|CHART_ADD_GRAPH|CHART_DELETE_GRAPH|CHART_DESTROY|CHART_LOAD|CHART_PRINT|EOF|OFFLINE|OK|PSL_PROF_LOG|R_CHECK_HORIZ|R_CHECK_VERT|R_CLICKER|R_COLUMN|R_FRAME|R_ICON|R_LABEL|R_LABEL_CENTER|R_LIST_MULTIPLE|R_LIST_MULTIPLE_ND|R_LIST_SINGLE|R_LIST_SINGLE_ND|R_MENU|R_POPUP|R_POPUP_SCROLLED|R_RADIO_HORIZ|R_RADIO_VERT|R_ROW|R_SCALE_HORIZ|R_SCALE_VERT|R_SEP_HORIZ|R_SEP_VERT|R_SPINNER|R_TEXT_FIELD|R_TEXT_FIELD_LABEL|R_TOGGLE|TRIM_LEADING|TRIM_LEADING_AND_TRAILING|TRIM_REDUNDANT|TRIM_TRAILING|VOID|WARN)\\b/,\n    boolean: /\\b(?:FALSE|False|NO|No|TRUE|True|YES|Yes|false|no|true|yes)\\b/,\n    variable: /\\b(?:PslDebug|errno|exit_status)\\b/,\n    builtin: {\n      pattern:\n        /\\b(?:PslExecute|PslFunctionCall|PslFunctionExists|PslSetOptions|_snmp_debug|acos|add_diary|annotate|annotate_get|ascii_to_ebcdic|asctime|asin|atan|atexit|batch_set|blackout|cat|ceil|chan_exists|change_state|close|code_cvt|cond_signal|cond_wait|console_type|convert_base|convert_date|convert_locale_date|cos|cosh|create|date|dcget_text|destroy|destroy_lock|dget_text|difference|dump_hist|ebcdic_to_ascii|encrypt|event_archive|event_catalog_get|event_check|event_query|event_range_manage|event_range_query|event_report|event_schedule|event_trigger|event_trigger2|execute|exists|exp|fabs|file|floor|fmod|fopen|fseek|ftell|full_discovery|get|get_chan_info|get_ranges|get_text|get_vars|getenv|gethostinfo|getpid|getpname|grep|history|history_get_retention|in_transition|index|int|internal|intersection|is_var|isnumber|join|kill|length|lines|lock|lock_info|log|log10|loge|matchline|msg_check|msg_get_format|msg_get_severity|msg_printf|msg_sprintf|ntharg|nthargf|nthline|nthlinef|num_bytes|num_consoles|pconfig|popen|poplines|pow|print|printf|proc_exists|process|random|read|readln|refresh_parameters|remote_check|remote_close|remote_event_query|remote_event_trigger|remote_file_send|remote_open|remove|replace|rindex|sec_check_priv|sec_store_get|sec_store_set|set|set_alarm_ranges|set_locale|share|sin|sinh|sleep|snmp_agent_config|snmp_agent_start|snmp_agent_stop|snmp_close|snmp_config|snmp_get|snmp_get_next|snmp_h_get|snmp_h_get_next|snmp_h_set|snmp_open|snmp_set|snmp_trap_ignore|snmp_trap_listen|snmp_trap_raise_std_trap|snmp_trap_receive|snmp_trap_register_im|snmp_trap_send|snmp_walk|sopen|sort|splitline|sprintf|sqrt|srandom|str_repeat|strcasecmp|subset|substr|system|tail|tan|tanh|text_domain|time|tmpnam|tolower|toupper|trace_psl_process|trim|union|unique|unlock|unset|va_arg|va_start|write)\\b/,\n      alias: 'builtin-function'\n    },\n    'foreach-variable': {\n      pattern:\n        /(\\bforeach\\s+(?:(?:\\w+\\b|\"(?:\\\\.|[^\\\\\"])*\")\\s+){0,2})[_a-zA-Z]\\w*(?=\\s*\\()/,\n      lookbehind: true,\n      greedy: true\n    },\n    function: /\\b[_a-z]\\w*\\b(?=\\s*\\()/i,\n    number: /\\b(?:0x[0-9a-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator: /--|\\+\\+|&&=?|\\|\\|=?|<<=?|>>=?|[=!]~|[-+*/%&|^!=<>]=?|\\.|[:?]/,\n    punctuation: /[(){}\\[\\];,]/\n  }\n}\n","'use strict'\n\nmodule.exports = pug\npug.displayName = 'pug'\npug.aliases = []\nfunction pug(Prism) {\n  ;(function (Prism) {\n    // TODO:\n    // - Add CSS highlighting inside <style> tags\n    // - Add support for multi-line code blocks\n    // - Add support for interpolation #{} and !{}\n    // - Add support for tag interpolation #[]\n    // - Add explicit support for plain text using |\n    // - Add support for markup embedded in plain text\n    Prism.languages.pug = {\n      // Multiline stuff should appear before the rest\n      // This handles both single-line and multi-line comments\n      comment: {\n        pattern: /(^([\\t ]*))\\/\\/.*(?:(?:\\r?\\n|\\r)\\2[\\t ].+)*/m,\n        lookbehind: true\n      },\n      // All the tag-related part is in lookbehind\n      // so that it can be highlighted by the \"tag\" pattern\n      'multiline-script': {\n        pattern:\n          /(^([\\t ]*)script\\b.*\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      // See at the end of the file for known filters\n      filter: {\n        pattern:\n          /(^([\\t ]*)):.+(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true,\n        inside: {\n          'filter-name': {\n            pattern: /^:[\\w-]+/,\n            alias: 'variable'\n          },\n          text: /\\S[\\s\\S]*/\n        }\n      },\n      'multiline-plain-text': {\n        pattern:\n          /(^([\\t ]*)[\\w\\-#.]+\\.[\\t ]*)(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/m,\n        lookbehind: true\n      },\n      markup: {\n        pattern: /(^[\\t ]*)<.+/m,\n        lookbehind: true,\n        inside: Prism.languages.markup\n      },\n      doctype: {\n        pattern: /((?:^|\\n)[\\t ]*)doctype(?: .+)?/,\n        lookbehind: true\n      },\n      // This handle all conditional and loop keywords\n      'flow-control': {\n        pattern:\n          /(^[\\t ]*)(?:case|default|each|else|if|unless|when|while)\\b(?: .+)?/m,\n        lookbehind: true,\n        inside: {\n          each: {\n            pattern: /^each .+? in\\b/,\n            inside: {\n              keyword: /\\b(?:each|in)\\b/,\n              punctuation: /,/\n            }\n          },\n          branch: {\n            pattern: /^(?:case|default|else|if|unless|when|while)\\b/,\n            alias: 'keyword'\n          },\n          rest: Prism.languages.javascript\n        }\n      },\n      keyword: {\n        pattern: /(^[\\t ]*)(?:append|block|extends|include|prepend)\\b.+/m,\n        lookbehind: true\n      },\n      mixin: [\n        // Declaration\n        {\n          pattern: /(^[\\t ]*)mixin .+/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^mixin/,\n            function: /\\w+(?=\\s*\\(|\\s*$)/,\n            punctuation: /[(),.]/\n          }\n        }, // Usage\n        {\n          pattern: /(^[\\t ]*)\\+.+/m,\n          lookbehind: true,\n          inside: {\n            name: {\n              pattern: /^\\+\\w+/,\n              alias: 'function'\n            },\n            rest: Prism.languages.javascript\n          }\n        }\n      ],\n      script: {\n        pattern: /(^[\\t ]*script(?:(?:&[^(]+)?\\([^)]+\\))*[\\t ]).+/m,\n        lookbehind: true,\n        inside: Prism.languages.javascript\n      },\n      'plain-text': {\n        pattern:\n          /(^[\\t ]*(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?[\\t ]).+/m,\n        lookbehind: true\n      },\n      tag: {\n        pattern: /(^[\\t ]*)(?!-)[\\w\\-#.]*[\\w\\-](?:(?:&[^(]+)?\\([^)]+\\))*\\/?:?/m,\n        lookbehind: true,\n        inside: {\n          attributes: [\n            {\n              pattern: /&[^(]+\\([^)]+\\)/,\n              inside: Prism.languages.javascript\n            },\n            {\n              pattern: /\\([^)]+\\)/,\n              inside: {\n                'attr-value': {\n                  pattern: /(=\\s*(?!\\s))(?:\\{[^}]*\\}|[^,)\\r\\n]+)/,\n                  lookbehind: true,\n                  inside: Prism.languages.javascript\n                },\n                'attr-name': /[\\w-]+(?=\\s*!?=|\\s*[,)])/,\n                punctuation: /[!=(),]+/\n              }\n            }\n          ],\n          punctuation: /:/,\n          'attr-id': /#[\\w\\-]+/,\n          'attr-class': /\\.[\\w\\-]+/\n        }\n      },\n      code: [\n        {\n          pattern: /(^[\\t ]*(?:-|!?=)).+/m,\n          lookbehind: true,\n          inside: Prism.languages.javascript\n        }\n      ],\n      punctuation: /[.\\-!=|]+/\n    }\n    var filter_pattern =\n      /(^([\\t ]*)):<filter_name>(?:(?:\\r?\\n|\\r(?!\\n))(?:\\2[\\t ].+|\\s*?(?=\\r?\\n|\\r)))+/\n        .source // Non exhaustive list of available filters and associated languages\n    var filters = [\n      {\n        filter: 'atpl',\n        language: 'twig'\n      },\n      {\n        filter: 'coffee',\n        language: 'coffeescript'\n      },\n      'ejs',\n      'handlebars',\n      'less',\n      'livescript',\n      'markdown',\n      {\n        filter: 'sass',\n        language: 'scss'\n      },\n      'stylus'\n    ]\n    var all_filters = {}\n    for (var i = 0, l = filters.length; i < l; i++) {\n      var filter = filters[i]\n      filter =\n        typeof filter === 'string'\n          ? {\n              filter: filter,\n              language: filter\n            }\n          : filter\n      if (Prism.languages[filter.language]) {\n        all_filters['filter-' + filter.filter] = {\n          pattern: RegExp(\n            filter_pattern.replace('<filter_name>', function () {\n              return filter.filter\n            }),\n            'm'\n          ),\n          lookbehind: true,\n          inside: {\n            'filter-name': {\n              pattern: /^:[\\w-]+/,\n              alias: 'variable'\n            },\n            text: {\n              pattern: /\\S[\\s\\S]*/,\n              alias: [filter.language, 'language-' + filter.language],\n              inside: Prism.languages[filter.language]\n            }\n          }\n        }\n      }\n    }\n    Prism.languages.insertBefore('pug', 'filter', all_filters)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function (Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern:\n            /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern:\n            /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r(?!\\n)))*?[ \\t]*(?:\\|[ \\t]*)?(?:-[ \\t]*)?\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern:\n          /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern:\n          /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|\\$(?!\\{)|(?!\\1)[^\\\\$]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\b\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:false|true)\\b/,\n      // Includes words reserved for future use\n      keyword:\n        /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern:\n          /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator:\n        /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern:\n          /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = pure\npure.displayName = 'pure'\npure.aliases = []\nfunction pure(Prism) {\n  ;(function (Prism) {\n    // https://agraef.github.io/pure-docs/pure.html#lexical-matters\n    Prism.languages.pure = {\n      comment: [\n        {\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n          lookbehind: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true\n        },\n        /#!.+/\n      ],\n      'inline-lang': {\n        pattern: /%<[\\s\\S]+?%>/,\n        greedy: true,\n        inside: {\n          lang: {\n            pattern: /(^%< *)-\\*-.+?-\\*-/,\n            lookbehind: true,\n            alias: 'comment'\n          },\n          delimiter: {\n            pattern: /^%<.*|%>$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n        greedy: true\n      },\n      number: {\n        // The look-behind prevents wrong highlighting of the .. operator\n        pattern:\n          /((?:\\.\\.)?)(?:\\b(?:inf|nan)\\b|\\b0x[\\da-f]+|(?:\\b(?:0b)?\\d+(?:\\.\\d+)?|\\B\\.\\d+)(?:e[+-]?\\d+)?L?)/i,\n        lookbehind: true\n      },\n      keyword:\n        /\\b(?:NULL|ans|break|bt|case|catch|cd|clear|const|def|del|dump|else|end|exit|extern|false|force|help|if|infix[lr]?|interface|let|ls|mem|namespace|nonfix|of|otherwise|outfix|override|postfix|prefix|private|public|pwd|quit|run|save|show|stats|then|throw|trace|true|type|underride|using|when|with)\\b/,\n      function:\n        /\\b(?:abs|add_(?:addr|constdef|(?:fundef|interface|macdef|typedef)(?:_at)?|vardef)|all|any|applp?|arity|bigintp?|blob(?:_crc|_size|p)?|boolp?|byte_c?string(?:_pointer)?|byte_(?:matrix|pointer)|calloc|cat|catmap|ceil|char[ps]?|check_ptrtag|chr|clear_sentry|clearsym|closurep?|cmatrixp?|cols?|colcat(?:map)?|colmap|colrev|colvector(?:p|seq)?|complex(?:_float_(?:matrix|pointer)|_matrix(?:_view)?|_pointer|p)?|conj|cookedp?|cst|cstring(?:_(?:dup|list|vector))?|curry3?|cyclen?|del_(?:constdef|fundef|interface|macdef|typedef|vardef)|delete|diag(?:mat)?|dim|dmatrixp?|do|double(?:_matrix(?:_view)?|_pointer|p)?|dowith3?|drop|dropwhile|eval(?:cmd)?|exactp|filter|fix|fixity|flip|float(?:_matrix|_pointer)|floor|fold[lr]1?|frac|free|funp?|functionp?|gcd|get(?:_(?:byte|constdef|double|float|fundef|int(?:64)?|interface(?:_typedef)?|long|macdef|pointer|ptrtag|sentry|short|string|typedef|vardef))?|globsym|hash|head|id|im|imatrixp?|index|inexactp|infp|init|insert|int(?:_matrix(?:_view)?|_pointer|p)?|int64_(?:matrix|pointer)|integerp?|iteraten?|iterwhile|join|keys?|lambdap?|last(?:err(?:pos)?)?|lcd|list[2p]?|listmap|make_ptrtag|malloc|map|matcat|matrixp?|max|member|min|nanp|nargs|nmatrixp?|null|numberp?|ord|pack(?:ed)?|pointer(?:_cast|_tag|_type|p)?|pow|pred|ptrtag|put(?:_(?:byte|double|float|int(?:64)?|long|pointer|short|string))?|rationalp?|re|realp?|realloc|recordp?|redim|reduce(?:_with)?|refp?|repeatn?|reverse|rlistp?|round|rows?|rowcat(?:map)?|rowmap|rowrev|rowvector(?:p|seq)?|same|scan[lr]1?|sentry|sgn|short_(?:matrix|pointer)|slice|smatrixp?|sort|split|str|strcat|stream|stride|string(?:_(?:dup|list|vector)|p)?|subdiag(?:mat)?|submat|subseq2?|substr|succ|supdiag(?:mat)?|symbolp?|tail|take|takewhile|thunkp?|transpose|trunc|tuplep?|typep|ubyte|uint(?:64)?|ulong|uncurry3?|unref|unzip3?|update|ushort|vals?|varp?|vector(?:p|seq)?|void|zip3?|zipwith3?)\\b/,\n      special: {\n        pattern: /\\b__[a-z]+__\\b/i,\n        alias: 'builtin'\n      },\n      // Any combination of operator chars can be an operator\n      // eslint-disable-next-line no-misleading-character-class\n      operator:\n        /(?:[!\"#$%&'*+,\\-.\\/:<=>?@\\\\^`|~\\u00a1-\\u00bf\\u00d7-\\u00f7\\u20d0-\\u2bff]|\\b_+\\b)+|\\b(?:and|div|mod|not|or)\\b/,\n      // FIXME: How can we prevent | and , to be highlighted as operator when they are used alone?\n      punctuation: /[(){}\\[\\];,|]/\n    }\n    var inlineLanguages = [\n      'c',\n      {\n        lang: 'c++',\n        alias: 'cpp'\n      },\n      'fortran'\n    ]\n    var inlineLanguageRe = /%< *-\\*- *<lang>\\d* *-\\*-[\\s\\S]+?%>/.source\n    inlineLanguages.forEach(function (lang) {\n      var alias = lang\n      if (typeof lang !== 'string') {\n        alias = lang.alias\n        lang = lang.lang\n      }\n      if (Prism.languages[alias]) {\n        var o = {}\n        o['inline-lang-' + alias] = {\n          pattern: RegExp(\n            inlineLanguageRe.replace(\n              '<lang>',\n              lang.replace(/([.+*?\\/\\\\(){}\\[\\]])/g, '\\\\$1')\n            ),\n            'i'\n          ),\n          inside: Prism.util.clone(Prism.languages.pure['inline-lang'].inside)\n        }\n        o['inline-lang-' + alias].inside.rest = Prism.util.clone(\n          Prism.languages[alias]\n        )\n        Prism.languages.insertBefore('pure', 'inline-lang', o)\n      }\n    }) // C is the default inline language\n    if (Prism.languages.c) {\n      Prism.languages.pure['inline-lang'].inside.rest = Prism.util.clone(\n        Prism.languages.c\n      )\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = purebasic\npurebasic.displayName = 'purebasic'\npurebasic.aliases = []\nfunction purebasic(Prism) {\n  /*\nOriginal Code by Bas Groothedde\n!!MANY THANKS!! I never would have made this, regex and me will never be best friends ;)\n==> https://codepen.io/ImagineProgramming/details/JYydBy/\nslightly changed to pass all tests\n*/\n  // PureBasic support, steal stuff from ansi-c\n  Prism.languages.purebasic = Prism.languages.extend('clike', {\n    comment: /;.*/,\n    keyword:\n      /\\b(?:align|and|as|break|calldebugger|case|compilercase|compilerdefault|compilerelse|compilerelseif|compilerendif|compilerendselect|compilererror|compilerif|compilerselect|continue|data|datasection|debug|debuglevel|declare|declarec|declarecdll|declaredll|declaremodule|default|define|dim|disableasm|disabledebugger|disableexplicit|else|elseif|enableasm|enabledebugger|enableexplicit|end|enddatasection|enddeclaremodule|endenumeration|endif|endimport|endinterface|endmacro|endmodule|endprocedure|endselect|endstructure|endstructureunion|endwith|enumeration|extends|fakereturn|for|foreach|forever|global|gosub|goto|if|import|importc|includebinary|includefile|includepath|interface|macro|module|newlist|newmap|next|not|or|procedure|procedurec|procedurecdll|proceduredll|procedurereturn|protected|prototype|prototypec|read|redim|repeat|restore|return|runtime|select|shared|static|step|structure|structureunion|swap|threaded|to|until|wend|while|with|xincludefile|xor)\\b/i,\n    function: /\\b\\w+(?:\\.\\w+)?\\s*(?=\\()/,\n    number: /(?:\\$[\\da-f]+|\\b-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e[+-]?\\d+)?)\\b/i,\n    operator:\n      /(?:@\\*?|\\?|\\*)\\w+|-[>-]?|\\+\\+?|!=?|<<?=?|>>?=?|==?|&&?|\\|?\\||[~^%?*/@]/\n  })\n  Prism.languages.insertBefore('purebasic', 'keyword', {\n    tag: /#\\w+\\$?/,\n    asm: {\n      pattern: /(^[\\t ]*)!.*/m,\n      lookbehind: true,\n      alias: 'tag',\n      inside: {\n        comment: /;.*/,\n        string: {\n          pattern: /([\"'`])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          greedy: true\n        },\n        // Anonymous label references, i.e.: jmp @b\n        'label-reference-anonymous': {\n          pattern: /(!\\s*j[a-z]+\\s+)@[fb]/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        // Named label reference, i.e.: jne label1\n        'label-reference-addressed': {\n          pattern: /(!\\s*j[a-z]+\\s+)[A-Z._?$@][\\w.?$@~#]*/i,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        keyword: [\n          /\\b(?:extern|global)\\b[^;\\r\\n]*/i,\n          /\\b(?:CPU|DEFAULT|FLOAT)\\b.*/\n        ],\n        function: {\n          pattern: /^([\\t ]*!\\s*)[\\da-z]+(?=\\s|$)/im,\n          lookbehind: true\n        },\n        'function-inline': {\n          pattern: /(:\\s*)[\\da-z]+(?=\\s)/i,\n          lookbehind: true,\n          alias: 'function'\n        },\n        label: {\n          pattern: /^([\\t ]*!\\s*)[A-Za-z._?$@][\\w.?$@~#]*(?=:)/m,\n          lookbehind: true,\n          alias: 'fasm-label'\n        },\n        register:\n          /\\b(?:st\\d|[xyz]mm\\d\\d?|[cdt]r\\d|r\\d\\d?[bwd]?|[er]?[abcd]x|[abcd][hl]|[er]?(?:bp|di|si|sp)|[cdefgs]s|mm\\d+)\\b/i,\n        number:\n          /(?:\\b|-|(?=\\$))(?:0[hx](?:[\\da-f]*\\.)?[\\da-f]+(?:p[+-]?\\d+)?|\\d[\\da-f]+[hx]|\\$\\d[\\da-f]*|0[oq][0-7]+|[0-7]+[oq]|0[by][01]+|[01]+[by]|0[dt]\\d+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:\\.?e[+-]?\\d+)?[dt]?)\\b/i,\n        operator: /[\\[\\]*+\\-/%<>=&|$!,.:]/\n      }\n    }\n  })\n  delete Prism.languages.purebasic['class-name']\n  delete Prism.languages.purebasic['boolean']\n  Prism.languages.pbfasm = Prism.languages['purebasic']\n}\n","'use strict'\nvar refractorHaskell = require('./haskell.js')\nmodule.exports = purescript\npurescript.displayName = 'purescript'\npurescript.aliases = ['purs']\nfunction purescript(Prism) {\n  Prism.register(refractorHaskell)\n  Prism.languages.purescript = Prism.languages.extend('haskell', {\n    keyword:\n      /\\b(?:ado|case|class|data|derive|do|else|forall|if|in|infixl|infixr|instance|let|module|newtype|of|primitive|then|type|where)\\b|∀/,\n    'import-statement': {\n      // The imported or hidden names are not included in this import\n      // statement. This is because we want to highlight those exactly like\n      // we do for the names in the program.\n      pattern:\n        /(^[\\t ]*)import\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*(?:\\s+as\\s+[A-Z][\\w']*(?:\\.[A-Z][\\w']*)*)?(?:\\s+hiding\\b)?/m,\n      lookbehind: true,\n      inside: {\n        keyword: /\\b(?:as|hiding|import)\\b/,\n        punctuation: /\\./\n      }\n    },\n    // These are builtin functions only. Constructors are highlighted later as a constant.\n    builtin:\n      /\\b(?:absurd|add|ap|append|apply|between|bind|bottom|clamp|compare|comparing|compose|conj|const|degree|discard|disj|div|eq|flap|flip|gcd|identity|ifM|join|lcm|liftA1|liftM1|map|max|mempty|min|mod|mul|negate|not|notEq|one|otherwise|recip|show|sub|top|unit|unless|unlessM|void|when|whenM|zero)\\b/,\n    operator: [\n      // Infix operators\n      Prism.languages.haskell.operator[0], // ASCII operators\n      Prism.languages.haskell.operator[2], // All UTF16 Unicode operator symbols\n      // This regex is equivalent to /(?=[\\x80-\\uFFFF])[\\p{gc=Math_Symbol}\\p{gc=Currency_Symbol}\\p{Modifier_Symbol}\\p{Other_Symbol}]/u\n      // See https://github.com/PrismJS/prism/issues/3006 for more details.\n      /[\\xa2-\\xa6\\xa8\\xa9\\xac\\xae-\\xb1\\xb4\\xb8\\xd7\\xf7\\u02c2-\\u02c5\\u02d2-\\u02df\\u02e5-\\u02eb\\u02ed\\u02ef-\\u02ff\\u0375\\u0384\\u0385\\u03f6\\u0482\\u058d-\\u058f\\u0606-\\u0608\\u060b\\u060e\\u060f\\u06de\\u06e9\\u06fd\\u06fe\\u07f6\\u07fe\\u07ff\\u09f2\\u09f3\\u09fa\\u09fb\\u0af1\\u0b70\\u0bf3-\\u0bfa\\u0c7f\\u0d4f\\u0d79\\u0e3f\\u0f01-\\u0f03\\u0f13\\u0f15-\\u0f17\\u0f1a-\\u0f1f\\u0f34\\u0f36\\u0f38\\u0fbe-\\u0fc5\\u0fc7-\\u0fcc\\u0fce\\u0fcf\\u0fd5-\\u0fd8\\u109e\\u109f\\u1390-\\u1399\\u166d\\u17db\\u1940\\u19de-\\u19ff\\u1b61-\\u1b6a\\u1b74-\\u1b7c\\u1fbd\\u1fbf-\\u1fc1\\u1fcd-\\u1fcf\\u1fdd-\\u1fdf\\u1fed-\\u1fef\\u1ffd\\u1ffe\\u2044\\u2052\\u207a-\\u207c\\u208a-\\u208c\\u20a0-\\u20bf\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211e-\\u2123\\u2125\\u2127\\u2129\\u212e\\u213a\\u213b\\u2140-\\u2144\\u214a-\\u214d\\u214f\\u218a\\u218b\\u2190-\\u2307\\u230c-\\u2328\\u232b-\\u2426\\u2440-\\u244a\\u249c-\\u24e9\\u2500-\\u2767\\u2794-\\u27c4\\u27c7-\\u27e5\\u27f0-\\u2982\\u2999-\\u29d7\\u29dc-\\u29fb\\u29fe-\\u2b73\\u2b76-\\u2b95\\u2b97-\\u2bff\\u2ce5-\\u2cea\\u2e50\\u2e51\\u2e80-\\u2e99\\u2e9b-\\u2ef3\\u2f00-\\u2fd5\\u2ff0-\\u2ffb\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303e\\u303f\\u309b\\u309c\\u3190\\u3191\\u3196-\\u319f\\u31c0-\\u31e3\\u3200-\\u321e\\u322a-\\u3247\\u3250\\u3260-\\u327f\\u328a-\\u32b0\\u32c0-\\u33ff\\u4dc0-\\u4dff\\ua490-\\ua4c6\\ua700-\\ua716\\ua720\\ua721\\ua789\\ua78a\\ua828-\\ua82b\\ua836-\\ua839\\uaa77-\\uaa79\\uab5b\\uab6a\\uab6b\\ufb29\\ufbb2-\\ufbc1\\ufdfc\\ufdfd\\ufe62\\ufe64-\\ufe66\\ufe69\\uff04\\uff0b\\uff1c-\\uff1e\\uff3e\\uff40\\uff5c\\uff5e\\uffe0-\\uffe6\\uffe8-\\uffee\\ufffc\\ufffd]/\n    ]\n  })\n  Prism.languages.purs = Prism.languages.purescript\n}\n","'use strict'\n\nmodule.exports = python\npython.displayName = 'python'\npython.aliases = ['py']\nfunction python(Prism) {\n  Prism.languages.python = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-interpolation': {\n      pattern:\n        /(?:f|fr|rf)(?:(\"\"\"|''')[\\s\\S]*?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\\\r\\n])*\\2)/i,\n      greedy: true,\n      inside: {\n        interpolation: {\n          // \"{\" <expression> <optional \"!s\", \"!r\", or \"!a\"> <optional \":\" format specifier> \"}\"\n          pattern:\n            /((?:^|[^{])(?:\\{\\{)*)\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}]|\\{(?!\\{)(?:[^{}])+\\})+\\})+\\}/,\n          lookbehind: true,\n          inside: {\n            'format-spec': {\n              pattern: /(:)[^:(){}]+(?=\\}$)/,\n              lookbehind: true\n            },\n            'conversion-option': {\n              pattern: /![sra](?=[:}]$)/,\n              alias: 'punctuation'\n            },\n            rest: null\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    },\n    'triple-quoted-string': {\n      pattern: /(?:[rub]|br|rb)?(\"\"\"|''')[\\s\\S]*?\\1/i,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(?:[rub]|br|rb)?(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/i,\n      greedy: true\n    },\n    function: {\n      pattern: /((?:^|\\s)def[ \\t]+)[a-zA-Z_]\\w*(?=\\s*\\()/g,\n      lookbehind: true\n    },\n    'class-name': {\n      pattern: /(\\bclass\\s+)\\w+/i,\n      lookbehind: true\n    },\n    decorator: {\n      pattern: /(^[\\t ]*)@\\w+(?:\\.\\w+)*/m,\n      lookbehind: true,\n      alias: ['annotation', 'punctuation'],\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:_(?=\\s*:)|and|as|assert|async|await|break|case|class|continue|def|del|elif|else|except|exec|finally|for|from|global|if|import|in|is|lambda|match|nonlocal|not|or|pass|print|raise|return|try|while|with|yield)\\b/,\n    builtin:\n      /\\b(?:__import__|abs|all|any|apply|ascii|basestring|bin|bool|buffer|bytearray|bytes|callable|chr|classmethod|cmp|coerce|compile|complex|delattr|dict|dir|divmod|enumerate|eval|execfile|file|filter|float|format|frozenset|getattr|globals|hasattr|hash|help|hex|id|input|int|intern|isinstance|issubclass|iter|len|list|locals|long|map|max|memoryview|min|next|object|oct|open|ord|pow|property|range|raw_input|reduce|reload|repr|reversed|round|set|setattr|slice|sorted|staticmethod|str|sum|super|tuple|type|unichr|unicode|vars|xrange|zip)\\b/,\n    boolean: /\\b(?:False|None|True)\\b/,\n    number:\n      /\\b0(?:b(?:_?[01])+|o(?:_?[0-7])+|x(?:_?[a-f0-9])+)\\b|(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:e[+-]?\\d+(?:_\\d+)*)?j?(?!\\w)/i,\n    operator: /[-+%=]=?|!=|:=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.python['string-interpolation'].inside[\n    'interpolation'\n  ].inside.rest = Prism.languages.python\n  Prism.languages.py = Prism.languages.python\n}\n","'use strict'\n\nmodule.exports = q\nq.displayName = 'q'\nq.aliases = []\nfunction q(Prism) {\n  Prism.languages.q = {\n    string: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n    comment: [\n      // From http://code.kx.com/wiki/Reference/Slash:\n      // When / is following a space (or a right parenthesis, bracket, or brace), it is ignored with the rest of the line.\n      {\n        pattern: /([\\t )\\]}])\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A line which has / as its first character and contains at least one other non-whitespace character is a whole-line comment and is ignored entirely.\n      // A / on a line by itself begins a multiline comment which is terminated by the next \\ on a line by itself.\n      // If a / is not matched by a \\, the multiline comment is unterminated and continues to end of file.\n      // The / and \\ must be the first char on the line, but may be followed by any amount of whitespace.\n      {\n        pattern:\n          /(^|\\r?\\n|\\r)\\/[\\t ]*(?:(?:\\r?\\n|\\r)(?:.*(?:\\r?\\n|\\r(?!\\n)))*?(?:\\\\(?=[\\t ]*(?:\\r?\\n|\\r))|$)|\\S.*)/,\n        lookbehind: true,\n        greedy: true\n      }, // From http://code.kx.com/wiki/Reference/Slash:\n      // A \\ on a line by itself with no preceding matching / will comment to end of file.\n      {\n        pattern: /^\\\\[\\t ]*(?:\\r?\\n|\\r)[\\s\\S]+/m,\n        greedy: true\n      },\n      {\n        pattern: /^#!.+/m,\n        greedy: true\n      }\n    ],\n    symbol: /`(?::\\S+|[\\w.]*)/,\n    datetime: {\n      pattern:\n        /0N[mdzuvt]|0W[dtz]|\\d{4}\\.\\d\\d(?:m|\\.\\d\\d(?:T(?:\\d\\d(?::\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?)?)?)?[dz]?)|\\d\\d:\\d\\d(?::\\d\\d(?:[.:]\\d\\d\\d)?)?[uvt]?/,\n      alias: 'number'\n    },\n    // The negative look-ahead prevents bad highlighting\n    // of verbs 0: and 1:\n    number:\n      /\\b(?![01]:)(?:0N[hje]?|0W[hj]?|0[wn]|0x[\\da-fA-F]+|\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?[hjfeb]?)/,\n    keyword:\n      /\\\\\\w+\\b|\\b(?:abs|acos|aj0?|all|and|any|asc|asin|asof|atan|attr|avgs?|binr?|by|ceiling|cols|cor|cos|count|cov|cross|csv|cut|delete|deltas|desc|dev|differ|distinct|div|do|dsave|ej|enlist|eval|except|exec|exit|exp|fby|fills|first|fkeys|flip|floor|from|get|getenv|group|gtime|hclose|hcount|hdel|hopen|hsym|iasc|identity|idesc|if|ij|in|insert|inter|inv|keys?|last|like|list|ljf?|load|log|lower|lsq|ltime|ltrim|mavg|maxs?|mcount|md5|mdev|med|meta|mins?|mmax|mmin|mmu|mod|msum|neg|next|not|null|or|over|parse|peach|pj|plist|prds?|prev|prior|rand|rank|ratios|raze|read0|read1|reciprocal|reval|reverse|rload|rotate|rsave|rtrim|save|scan|scov|sdev|select|set|setenv|show|signum|sin|sqrt|ssr?|string|sublist|sums?|sv|svar|system|tables|tan|til|trim|txf|type|uj|ungroup|union|update|upper|upsert|value|var|views?|vs|wavg|where|while|within|wj1?|wsum|ww|xasc|xbar|xcols?|xdesc|xexp|xgroup|xkey|xlog|xprev|xrank)\\b/,\n    adverb: {\n      pattern: /['\\/\\\\]:?|\\beach\\b/,\n      alias: 'function'\n    },\n    verb: {\n      pattern: /(?:\\B\\.\\B|\\b[01]:|<[=>]?|>=?|[:+\\-*%,!?~=|$&#@^]):?|\\b_\\b:?/,\n      alias: 'operator'\n    },\n    punctuation: /[(){}\\[\\];.]/\n  }\n}\n","'use strict'\n\nmodule.exports = qml\nqml.displayName = 'qml'\nqml.aliases = []\nfunction qml(Prism) {\n  ;(function (Prism) {\n    var jsString = /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|'(?:\\\\.|[^\\\\'\\r\\n])*'/.source\n    var jsComment = /\\/\\/.*(?!.)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\//.source\n    var jsExpr =\n      /(?:[^\\\\()[\\]{}\"'/]|<string>|\\/(?![*/])|<comment>|\\(<expr>*\\)|\\[<expr>*\\]|\\{<expr>*\\}|\\\\[\\s\\S])/.source\n        .replace(/<string>/g, function () {\n          return jsString\n        })\n        .replace(/<comment>/g, function () {\n          return jsComment\n        }) // the pattern will blow up, so only a few iterations\n    for (var i = 0; i < 2; i++) {\n      jsExpr = jsExpr.replace(/<expr>/g, function () {\n        return jsExpr\n      })\n    }\n    jsExpr = jsExpr.replace(/<expr>/g, '[^\\\\s\\\\S]')\n    Prism.languages.qml = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      'javascript-function': {\n        pattern: RegExp(\n          /((?:^|;)[ \\t]*)function\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*\\(<js>*\\)\\s*\\{<js>*\\}/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      'class-name': {\n        pattern: /((?:^|[:;])[ \\t]*)(?!\\d)\\w+(?=[ \\t]*\\{|[ \\t]+on\\b)/m,\n        lookbehind: true\n      },\n      property: [\n        {\n          pattern: /((?:^|[;{])[ \\t]*)(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true\n        },\n        {\n          pattern:\n            /((?:^|[;{])[ \\t]*)property[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*[ \\t]+(?!\\d)\\w+(?:\\.\\w+)*(?=[ \\t]*:)/m,\n          lookbehind: true,\n          inside: {\n            keyword: /^property/,\n            property: /\\w+(?:\\.\\w+)*/\n          }\n        }\n      ],\n      'javascript-expression': {\n        pattern: RegExp(\n          /(:[ \\t]*)(?![\\s;}[])(?:(?!$|[;}])<js>)+/.source.replace(\n            /<js>/g,\n            function () {\n              return jsExpr\n            }\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'language-javascript',\n        inside: Prism.languages.javascript\n      },\n      string: {\n        pattern: /\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      keyword: /\\b(?:as|import|on)\\b/,\n      punctuation: /[{}[\\]:;,]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:bool|date|float|int|list|number|string)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/,\n    number:\n      /\\b(?:0b[01]+|0x(?:[\\da-f]*\\.)?[\\da-fp\\-]+|(?:\\d+(?:\\.\\d+)?|\\.\\d+)(?:e\\d+)?[df]|(?:\\d+(?:\\.\\d+)?|\\.\\d+))\\b/i,\n    operator: {\n      pattern:\n        /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/\n  })\n}\n","'use strict'\n\nmodule.exports = qsharp\nqsharp.displayName = 'qsharp'\nqsharp.aliases = ['qs']\nfunction qsharp(Prism) {\n  ;(function (Prism) {\n    /**\n     * Replaces all placeholders \"<<n>>\" of given pattern with the n-th replacement (zero based).\n     *\n     * Note: This is a simple text based replacement. Be careful when using backreferences!\n     *\n     * @param {string} pattern the given pattern.\n     * @param {string[]} replacements a list of replacement which can be inserted into the given pattern.\n     * @returns {string} the pattern with all placeholders replaced with their corresponding replacements.\n     * @example replace(/a<<0>>a/.source, [/b+/.source]) === /a(?:b+)a/.source\n     */\n    function replace(pattern, replacements) {\n      return pattern.replace(/<<(\\d+)>>/g, function (m, index) {\n        return '(?:' + replacements[+index] + ')'\n      })\n    }\n    /**\n     * @param {string} pattern\n     * @param {string[]} replacements\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function re(pattern, replacements, flags) {\n      return RegExp(replace(pattern, replacements), flags || '')\n    }\n    /**\n     * Creates a nested pattern where all occurrences of the string `<<self>>` are replaced with the pattern itself.\n     *\n     * @param {string} pattern\n     * @param {number} depthLog2\n     * @returns {string}\n     */\n    function nested(pattern, depthLog2) {\n      for (var i = 0; i < depthLog2; i++) {\n        pattern = pattern.replace(/<<self>>/g, function () {\n          return '(?:' + pattern + ')'\n        })\n      }\n      return pattern.replace(/<<self>>/g, '[^\\\\s\\\\S]')\n    } // https://docs.microsoft.com/en-us/azure/quantum/user-guide/language/typesystem/\n    // https://github.com/microsoft/qsharp-language/tree/main/Specifications/Language/5_Grammar\n    var keywordKinds = {\n      // keywords which represent a return or variable type\n      type: 'Adj BigInt Bool Ctl Double false Int One Pauli PauliI PauliX PauliY PauliZ Qubit Range Result String true Unit Zero',\n      // all other keywords\n      other:\n        'Adjoint adjoint apply as auto body borrow borrowing Controlled controlled distribute elif else fail fixup for function if in internal intrinsic invert is let mutable namespace new newtype open operation repeat return self set until use using while within'\n    } // keywords\n    function keywordsToPattern(words) {\n      return '\\\\b(?:' + words.trim().replace(/ /g, '|') + ')\\\\b'\n    }\n    var keywords = RegExp(\n      keywordsToPattern(keywordKinds.type + ' ' + keywordKinds.other)\n    ) // types\n    var identifier = /\\b[A-Za-z_]\\w*\\b/.source\n    var qualifiedName = replace(/<<0>>(?:\\s*\\.\\s*<<0>>)*/.source, [identifier])\n    var typeInside = {\n      keyword: keywords,\n      punctuation: /[<>()?,.:[\\]]/\n    } // strings\n    var regularString = /\"(?:\\\\.|[^\\\\\"])*\"/.source\n    Prism.languages.qsharp = Prism.languages.extend('clike', {\n      comment: /\\/\\/.*/,\n      string: [\n        {\n          pattern: re(/(^|[^$\\\\])<<0>>/.source, [regularString]),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'class-name': [\n        {\n          // open Microsoft.Quantum.Canon;\n          // open Microsoft.Quantum.Canon as CN;\n          pattern: re(/(\\b(?:as|open)\\s+)<<0>>(?=\\s*(?:;|as\\b))/.source, [\n            qualifiedName\n          ]),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // namespace Quantum.App1;\n          pattern: re(/(\\bnamespace\\s+)<<0>>(?=\\s*\\{)/.source, [qualifiedName]),\n          lookbehind: true,\n          inside: typeInside\n        }\n      ],\n      keyword: keywords,\n      number:\n        /(?:\\b0(?:x[\\da-f]+|b[01]+|o[0-7]+)|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d*)?)(?:e[-+]?\\d+)?)l?\\b/i,\n      operator:\n        /\\band=|\\bor=|\\band\\b|\\bnot\\b|\\bor\\b|<[-=]|[-=]>|>>>=?|<<<=?|\\^\\^\\^=?|\\|\\|\\|=?|&&&=?|w\\/=?|~~~|[*\\/+\\-^=!%]=?/,\n      punctuation: /::|[{}[\\];(),.:]/\n    })\n    Prism.languages.insertBefore('qsharp', 'number', {\n      range: {\n        pattern: /\\.\\./,\n        alias: 'operator'\n      }\n    }) // single line\n    var interpolationExpr = nested(\n      replace(/\\{(?:[^\"{}]|<<0>>|<<self>>)*\\}/.source, [regularString]),\n      2\n    )\n    Prism.languages.insertBefore('qsharp', 'string', {\n      'interpolation-string': {\n        pattern: re(/\\$\"(?:\\\\.|<<0>>|[^\\\\\"{])*\"/.source, [interpolationExpr]),\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: re(/((?:^|[^\\\\])(?:\\\\\\\\)*)<<0>>/.source, [\n              interpolationExpr\n            ]),\n            lookbehind: true,\n            inside: {\n              punctuation: /^\\{|\\}$/,\n              expression: {\n                pattern: /[\\s\\S]+/,\n                alias: 'language-qsharp',\n                inside: Prism.languages.qsharp\n              }\n            }\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    })\n  })(Prism)\n  Prism.languages.qs = Prism.languages.qsharp\n}\n","'use strict'\n\nmodule.exports = r\nr.displayName = 'r'\nr.aliases = []\nfunction r(Prism) {\n  Prism.languages.r = {\n    comment: /#.*/,\n    string: {\n      pattern: /(['\"])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    'percent-operator': {\n      // Includes user-defined operators\n      // and %%, %*%, %/%, %in%, %o%, %x%\n      pattern: /%[^%\\s]*%/,\n      alias: 'operator'\n    },\n    boolean: /\\b(?:FALSE|TRUE)\\b/,\n    ellipsis: /\\.\\.(?:\\.|\\d+)/,\n    number: [\n      /\\b(?:Inf|NaN)\\b/,\n      /(?:\\b0x[\\dA-Fa-f]+(?:\\.\\d*)?|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[EePp][+-]?\\d+)?[iL]?/\n    ],\n    keyword:\n      /\\b(?:NA|NA_character_|NA_complex_|NA_integer_|NA_real_|NULL|break|else|for|function|if|in|next|repeat|while)\\b/,\n    operator: /->?>?|<(?:=|<?-)?|[>=!]=?|::?|&&?|\\|\\|?|[+*\\/^$@~]/,\n    punctuation: /[(){}\\[\\],;]/\n  }\n}\n","'use strict'\nvar refractorScheme = require('./scheme.js')\nmodule.exports = racket\nracket.displayName = 'racket'\nracket.aliases = ['rkt']\nfunction racket(Prism) {\n  Prism.register(refractorScheme)\n  Prism.languages.racket = Prism.languages.extend('scheme', {\n    'lambda-parameter': {\n      // the racket lambda syntax is a lot more complex, so we won't even attempt to capture it.\n      // this will just prevent false positives of the `function` pattern\n      pattern: /([(\\[]lambda\\s+[(\\[])[^()\\[\\]'\\s]+/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.insertBefore('racket', 'string', {\n    lang: {\n      pattern: /^#lang.+/m,\n      greedy: true,\n      alias: 'keyword'\n    }\n  })\n  Prism.languages.rkt = Prism.languages.racket\n}\n","'use strict'\n\nmodule.exports = reason\nreason.displayName = 'reason'\nreason.aliases = []\nfunction reason(Prism) {\n  Prism.languages.reason = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n\"])*\"/,\n      greedy: true\n    },\n    // 'class-name' must be matched *after* 'constructor' defined below\n    'class-name': /\\b[A-Z]\\w*/,\n    keyword:\n      /\\b(?:and|as|assert|begin|class|constraint|do|done|downto|else|end|exception|external|for|fun|function|functor|if|in|include|inherit|initializer|lazy|let|method|module|mutable|new|nonrec|object|of|open|or|private|rec|sig|struct|switch|then|to|try|type|val|virtual|when|while|with)\\b/,\n    operator:\n      /\\.{3}|:[:=]|\\|>|->|=(?:==?|>)?|<=?|>=?|[|^?'#!~`]|[+\\-*\\/]\\.?|\\b(?:asr|land|lor|lsl|lsr|lxor|mod)\\b/\n  })\n  Prism.languages.insertBefore('reason', 'class-name', {\n    char: {\n      pattern: /'(?:\\\\x[\\da-f]{2}|\\\\o[0-3][0-7][0-7]|\\\\\\d{3}|\\\\.|[^'\\\\\\r\\n])'/,\n      greedy: true\n    },\n    // Negative look-ahead prevents from matching things like String.capitalize\n    constructor: /\\b[A-Z]\\w*\\b(?!\\s*\\.)/,\n    label: {\n      pattern: /\\b[a-z]\\w*(?=::)/,\n      alias: 'symbol'\n    }\n  }) // We can't match functions property, so let's not even try.\n  delete Prism.languages.reason.function\n}\n","'use strict'\n\nmodule.exports = regex\nregex.displayName = 'regex'\nregex.aliases = []\nfunction regex(Prism) {\n  ;(function (Prism) {\n    var specialEscape = {\n      pattern: /\\\\[\\\\(){}[\\]^$+*?|.]/,\n      alias: 'escape'\n    }\n    var escape =\n      /\\\\(?:x[\\da-fA-F]{2}|u[\\da-fA-F]{4}|u\\{[\\da-fA-F]+\\}|0[0-7]{0,2}|[123][0-7]{2}|c[a-zA-Z]|.)/\n    var charSet = {\n      pattern: /\\.|\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var charSetWithoutDot = {\n      pattern: /\\\\[wsd]|\\\\p\\{[^{}]+\\}/i,\n      alias: 'class-name'\n    }\n    var rangeChar = '(?:[^\\\\\\\\-]|' + escape.source + ')'\n    var range = RegExp(rangeChar + '-' + rangeChar) // the name of a capturing group\n    var groupName = {\n      pattern: /(<|')[^<>']+(?=[>']$)/,\n      lookbehind: true,\n      alias: 'variable'\n    }\n    Prism.languages.regex = {\n      'char-class': {\n        pattern: /((?:^|[^\\\\])(?:\\\\\\\\)*)\\[(?:[^\\\\\\]]|\\\\[\\s\\S])*\\]/,\n        lookbehind: true,\n        inside: {\n          'char-class-negation': {\n            pattern: /(^\\[)\\^/,\n            lookbehind: true,\n            alias: 'operator'\n          },\n          'char-class-punctuation': {\n            pattern: /^\\[|\\]$/,\n            alias: 'punctuation'\n          },\n          range: {\n            pattern: range,\n            inside: {\n              escape: escape,\n              'range-punctuation': {\n                pattern: /-/,\n                alias: 'operator'\n              }\n            }\n          },\n          'special-escape': specialEscape,\n          'char-set': charSetWithoutDot,\n          escape: escape\n        }\n      },\n      'special-escape': specialEscape,\n      'char-set': charSet,\n      backreference: [\n        {\n          // a backreference which is not an octal escape\n          pattern: /\\\\(?![123][0-7]{2})[1-9]/,\n          alias: 'keyword'\n        },\n        {\n          pattern: /\\\\k<[^<>']+>/,\n          alias: 'keyword',\n          inside: {\n            'group-name': groupName\n          }\n        }\n      ],\n      anchor: {\n        pattern: /[$^]|\\\\[ABbGZz]/,\n        alias: 'function'\n      },\n      escape: escape,\n      group: [\n        {\n          // https://docs.oracle.com/javase/10/docs/api/java/util/regex/Pattern.html\n          // https://docs.microsoft.com/en-us/dotnet/standard/base-types/regular-expression-language-quick-reference?view=netframework-4.7.2#grouping-constructs\n          // (), (?<name>), (?'name'), (?>), (?:), (?=), (?!), (?<=), (?<!), (?is-m), (?i-m:)\n          pattern:\n            /\\((?:\\?(?:<[^<>']+>|'[^<>']+'|[>:]|<?[=!]|[idmnsuxU]+(?:-[idmnsuxU]+)?:?))?/,\n          alias: 'punctuation',\n          inside: {\n            'group-name': groupName\n          }\n        },\n        {\n          pattern: /\\)/,\n          alias: 'punctuation'\n        }\n      ],\n      quantifier: {\n        pattern: /(?:[+*?]|\\{\\d+(?:,\\d*)?\\})[?+]?/,\n        alias: 'number'\n      },\n      alternation: {\n        pattern: /\\|/,\n        alias: 'keyword'\n      }\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rego\nrego.displayName = 'rego'\nrego.aliases = []\nfunction rego(Prism) {\n  // https://www.openpolicyagent.org/docs/latest/policy-reference/\n  Prism.languages.rego = {\n    comment: /#.*/,\n    property: {\n      pattern:\n        /(^|[^\\\\.])(?:\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`|\\b[a-z_]\\w*\\b)(?=\\s*:(?!=))/i,\n      lookbehind: true,\n      greedy: true\n    },\n    string: {\n      pattern: /(^|[^\\\\])\"(?:\\\\.|[^\\\\\"\\r\\n])*\"|`[^`]*`/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:as|default|else|import|not|null|package|set(?=\\s*\\()|some|with)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    function: {\n      pattern: /\\b[a-z_]\\w*\\b(?:\\s*\\.\\s*\\b[a-z_]\\w*\\b)*(?=\\s*\\()/i,\n      inside: {\n        namespace: /\\b\\w+\\b(?=\\s*\\.)/,\n        punctuation: /\\./\n      }\n    },\n    number: /-?\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?\\b/i,\n    operator: /[-+*/%|&]|[<>:=]=?|!=|\\b_\\b/,\n    punctuation: /[,;.\\[\\]{}()]/\n  }\n}\n","'use strict'\n\nmodule.exports = renpy\nrenpy.displayName = 'renpy'\nrenpy.aliases = ['rpy']\nfunction renpy(Prism) {\n  Prism.languages.renpy = {\n    comment: {\n      pattern: /(^|[^\\\\])#.+/,\n      lookbehind: true\n    },\n    string: {\n      pattern:\n        /(\"\"\"|''')[\\s\\S]+?\\1|(\"|')(?:\\\\.|(?!\\2)[^\\\\])*\\2|(?:^#?(?:(?:[0-9a-fA-F]){3}|[0-9a-fA-F]{6})$)/m,\n      greedy: true\n    },\n    function: /\\b[a-z_]\\w*(?=\\()/i,\n    property:\n      /\\b(?:Update|UpdateVersion|action|activate_sound|adv_nvl_transition|after_load_transition|align|alpha|alt|anchor|antialias|area|auto|background|bar_invert|bar_resizing|bar_vertical|black_color|bold|bottom_bar|bottom_gutter|bottom_margin|bottom_padding|box_reverse|box_wrap|can_update|caret|child|color|crop|default_afm_enable|default_afm_time|default_fullscreen|default_text_cps|developer|directory_name|drag_handle|drag_joined|drag_name|drag_raise|draggable|dragged|drop_shadow|drop_shadow_color|droppable|dropped|easein|easeout|edgescroll|end_game_transition|end_splash_transition|enter_replay_transition|enter_sound|enter_transition|enter_yesno_transition|executable_name|exit_replay_transition|exit_sound|exit_transition|exit_yesno_transition|fadein|fadeout|first_indent|first_spacing|fit_first|focus|focus_mask|font|foreground|game_main_transition|get_installed_packages|google_play_key|google_play_salt|ground|has_music|has_sound|has_voice|height|help|hinting|hover|hover_background|hover_color|hover_sound|hovered|hyperlink_functions|idle|idle_color|image_style|include_update|insensitive|insensitive_background|insensitive_color|inside|intra_transition|italic|justify|kerning|keyboard_focus|language|layer_clipping|layers|layout|left_bar|left_gutter|left_margin|left_padding|length|line_leading|line_overlap_split|line_spacing|linear|main_game_transition|main_menu_music|maximum|min_width|minimum|minwidth|modal|mouse|mousewheel|name|narrator_menu|newline_indent|nvl_adv_transition|offset|order_reverse|outlines|overlay_functions|pos|position|prefix|radius|range|rest_indent|right_bar|right_gutter|right_margin|right_padding|rotate|rotate_pad|ruby_style|sample_sound|save_directory|say_attribute_transition|screen_height|screen_width|scrollbars|selected_hover|selected_hover_color|selected_idle|selected_idle_color|selected_insensitive|show_side_image|show_two_window|side_spacing|side_xpos|side_ypos|size|size_group|slow_cps|slow_cps_multiplier|spacing|strikethrough|subpixel|text_align|text_style|text_xpos|text_y_fudge|text_ypos|thumb|thumb_offset|thumb_shadow|thumbnail_height|thumbnail_width|time|top_bar|top_gutter|top_margin|top_padding|translations|underline|unscrollable|update|value|version|version_name|version_tuple|vertical|width|window_hide_transition|window_icon|window_left_padding|window_show_transition|window_title|windows_icon|xadjustment|xalign|xanchor|xanchoraround|xaround|xcenter|xfill|xinitial|xmargin|xmaximum|xminimum|xoffset|xofsset|xpadding|xpos|xsize|xzoom|yadjustment|yalign|yanchor|yanchoraround|yaround|ycenter|yfill|yinitial|ymargin|ymaximum|yminimum|yoffset|ypadding|ypos|ysize|ysizexysize|yzoom|zoom|zorder)\\b/,\n    tag: /\\b(?:bar|block|button|buttoscreenn|drag|draggroup|fixed|frame|grid|[hv]box|hotbar|hotspot|image|imagebutton|imagemap|input|key|label|menu|mm_menu_frame|mousearea|nvl|parallel|screen|self|side|tag|text|textbutton|timer|vbar|viewport|window)\\b|\\$/,\n    keyword:\n      /\\b(?:None|add|adjustment|alignaround|allow|angle|animation|around|as|assert|behind|box_layout|break|build|cache|call|center|changed|child_size|choice|circles|class|clear|clicked|clipping|clockwise|config|contains|continue|corner1|corner2|counterclockwise|def|default|define|del|delay|disabled|disabled_text|dissolve|elif|else|event|except|exclude|exec|expression|fade|finally|for|from|function|global|gm_root|has|hide|id|if|import|in|init|is|jump|knot|lambda|left|less_rounded|mm_root|movie|music|null|on|onlayer|pass|pause|persistent|play|print|python|queue|raise|random|renpy|repeat|return|right|rounded_window|scene|scope|set|show|slow|slow_abortable|slow_done|sound|stop|store|style|style_group|substitute|suffix|theme|transform|transform_anchor|transpose|try|ui|unhovered|updater|use|voice|while|widget|widget_hover|widget_selected|widget_text|yield)\\b/,\n    boolean: /\\b(?:[Ff]alse|[Tt]rue)\\b/,\n    number:\n      /(?:\\b(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?)|\\B\\.\\d+)(?:e[+-]?\\d+)?j?/i,\n    operator:\n      /[-+%=]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]|\\b(?:and|at|not|or|with)\\b/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.rpy = Prism.languages.renpy\n}\n","'use strict'\n\nmodule.exports = rest\nrest.displayName = 'rest'\nrest.aliases = []\nfunction rest(Prism) {\n  Prism.languages.rest = {\n    table: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:\\+[=-]+)+\\+(?:\\r?\\n|\\r)(?:\\1[+|].+[+|](?:\\r?\\n|\\r))+\\1(?:\\+[=-]+)+\\+/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\||(?:\\+[=-]+)+\\+/\n        }\n      },\n      {\n        pattern:\n          /(^[\\t ]*)=+ [ =]*=(?:(?:\\r?\\n|\\r)\\1.+)+(?:\\r?\\n|\\r)\\1=+ [ =]*=(?=(?:\\r?\\n|\\r){2}|\\s*$)/m,\n        lookbehind: true,\n        inside: {\n          punctuation: /[=-]+/\n        }\n      }\n    ],\n    // Directive-like patterns\n    'substitution-def': {\n      pattern: /(^[\\t ]*\\.\\. )\\|(?:[^|\\s](?:[^|]*[^|\\s])?)\\| [^:]+::/m,\n      lookbehind: true,\n      inside: {\n        substitution: {\n          pattern: /^\\|(?:[^|\\s]|[^|\\s][^|]*[^|\\s])\\|/,\n          alias: 'attr-value',\n          inside: {\n            punctuation: /^\\||\\|$/\n          }\n        },\n        directive: {\n          pattern: /( )(?! )[^:]+::/,\n          lookbehind: true,\n          alias: 'function',\n          inside: {\n            punctuation: /::$/\n          }\n        }\n      }\n    },\n    'link-target': [\n      {\n        pattern: /(^[\\t ]*\\.\\. )\\[[^\\]]+\\]/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]$/\n        }\n      },\n      {\n        pattern: /(^[\\t ]*\\.\\. )_(?:`[^`]+`|(?:[^:\\\\]|\\\\.)+):/m,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /^_|:$/\n        }\n      }\n    ],\n    directive: {\n      pattern: /(^[\\t ]*\\.\\. )[^:]+::/m,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        punctuation: /::$/\n      }\n    },\n    comment: {\n      // The two alternatives try to prevent highlighting of blank comments\n      pattern:\n        /(^[\\t ]*\\.\\.)(?:(?: .+)?(?:(?:\\r?\\n|\\r).+)+| .+)(?=(?:\\r?\\n|\\r){2}|$)/m,\n      lookbehind: true\n    },\n    title: [\n      // Overlined and underlined\n      {\n        pattern:\n          /^(([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+)(?:\\r?\\n|\\r).+(?:\\r?\\n|\\r)\\1$/m,\n        inside: {\n          punctuation:\n            /^[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+|[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }, // Underlined only\n      {\n        pattern:\n          /(^|(?:\\r?\\n|\\r){2}).+(?:\\r?\\n|\\r)([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2+(?=\\r?\\n|\\r|$)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]+$/,\n          important: /.+/\n        }\n      }\n    ],\n    hr: {\n      pattern:\n        /((?:\\r?\\n|\\r){2})([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\2{3,}(?=(?:\\r?\\n|\\r){2})/,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    field: {\n      pattern: /(^[\\t ]*):[^:\\r\\n]+:(?= )/m,\n      lookbehind: true,\n      alias: 'attr-name'\n    },\n    'command-line-option': {\n      pattern:\n        /(^[\\t ]*)(?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?(?:, (?:[+-][a-z\\d]|(?:--|\\/)[a-z\\d-]+)(?:[ =](?:[a-z][\\w-]*|<[^<>]+>))?)*(?=(?:\\r?\\n|\\r)? {2,}\\S)/im,\n      lookbehind: true,\n      alias: 'symbol'\n    },\n    'literal-block': {\n      pattern: /::(?:\\r?\\n|\\r){2}([ \\t]+)(?![ \\t]).+(?:(?:\\r?\\n|\\r)\\1.+)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^::/,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'quoted-literal-block': {\n      pattern:\n        /::(?:\\r?\\n|\\r){2}([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~]).*(?:(?:\\r?\\n|\\r)\\1.*)*/,\n      inside: {\n        'literal-block-punctuation': {\n          pattern: /^(?:::|([!\"#$%&'()*+,\\-.\\/:;<=>?@\\[\\\\\\]^_`{|}~])\\1*)/m,\n          alias: 'punctuation'\n        }\n      }\n    },\n    'list-bullet': {\n      pattern:\n        /(^[\\t ]*)(?:[*+\\-•‣⁃]|\\(?(?:\\d+|[a-z]|[ivxdclm]+)\\)|(?:\\d+|[a-z]|[ivxdclm]+)\\.)(?= )/im,\n      lookbehind: true,\n      alias: 'punctuation'\n    },\n    'doctest-block': {\n      pattern: /(^[\\t ]*)>>> .+(?:(?:\\r?\\n|\\r).+)*/m,\n      lookbehind: true,\n      inside: {\n        punctuation: /^>>>/\n      }\n    },\n    inline: [\n      {\n        pattern:\n          /(^|[\\s\\-:\\/'\"<(\\[{])(?::[^:]+:`.*?`|`.*?`:[^:]+:|(\\*\\*?|``?|\\|)(?!\\s)(?:(?!\\2).)*\\S\\2(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$))/m,\n        lookbehind: true,\n        inside: {\n          bold: {\n            pattern: /(^\\*\\*).+(?=\\*\\*$)/,\n            lookbehind: true\n          },\n          italic: {\n            pattern: /(^\\*).+(?=\\*$)/,\n            lookbehind: true\n          },\n          'inline-literal': {\n            pattern: /(^``).+(?=``$)/,\n            lookbehind: true,\n            alias: 'symbol'\n          },\n          role: {\n            pattern: /^:[^:]+:|:[^:]+:$/,\n            alias: 'function',\n            inside: {\n              punctuation: /^:|:$/\n            }\n          },\n          'interpreted-text': {\n            pattern: /(^`).+(?=`$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          substitution: {\n            pattern: /(^\\|).+(?=\\|$)/,\n            lookbehind: true,\n            alias: 'attr-value'\n          },\n          punctuation: /\\*\\*?|``?|\\|/\n        }\n      }\n    ],\n    link: [\n      {\n        pattern: /\\[[^\\[\\]]+\\]_(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/,\n        alias: 'string',\n        inside: {\n          punctuation: /^\\[|\\]_$/\n        }\n      },\n      {\n        pattern:\n          /(?:\\b[a-z\\d]+(?:[_.:+][a-z\\d]+)*_?_|`[^`]+`_?_|_`[^`]+`)(?=[\\s\\-.,:;!?\\\\\\/'\")\\]}]|$)/i,\n        alias: 'string',\n        inside: {\n          punctuation: /^_?`|`$|`?_?_$/\n        }\n      }\n    ],\n    // Line block start,\n    // quote attribution,\n    // explicit markup start,\n    // and anonymous hyperlink target shortcut (__)\n    punctuation: {\n      pattern: /(^[\\t ]*)(?:\\|(?= |$)|(?:---?|—|\\.\\.|__)(?= )|\\.\\.$)/m,\n      lookbehind: true\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = rip\nrip.displayName = 'rip'\nrip.aliases = []\nfunction rip(Prism) {\n  Prism.languages.rip = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\B`[^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]\\b/,\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    regex: {\n      pattern:\n        /(^|[^/])\\/(?!\\/)(?:\\[[^\\n\\r\\]]*\\]|\\\\.|[^/\\\\\\r\\n\\[])+\\/(?=\\s*(?:$|[\\r\\n,.;})]))/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:=>|->)|\\b(?:case|catch|class|else|exit|finally|if|raise|return|switch|try)\\b/,\n    builtin: /@|\\bSystem\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    date: /\\b\\d{4}-\\d{2}-\\d{2}\\b/,\n    time: /\\b\\d{2}:\\d{2}:\\d{2}\\b/,\n    datetime: /\\b\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\b/,\n    symbol: /:[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/,\n    number: /[+-]?\\b(?:\\d+\\.\\d+|\\d+)\\b/,\n    punctuation: /(?:\\.{2,3})|[`,.:;=\\/\\\\()<>\\[\\]{}]/,\n    reference: /[^\\d\\s`'\",.:;#\\/\\\\()<>\\[\\]{}][^\\s`'\",.:;#\\/\\\\()<>\\[\\]{}]*/\n  }\n}\n","'use strict'\n\nmodule.exports = roboconf\nroboconf.displayName = 'roboconf'\nroboconf.aliases = []\nfunction roboconf(Prism) {\n  Prism.languages.roboconf = {\n    comment: /#.*/,\n    keyword: {\n      pattern:\n        /(^|\\s)(?:(?:external|import)\\b|(?:facet|instance of)(?=[ \\t]+[\\w-]+[ \\t]*\\{))/,\n      lookbehind: true\n    },\n    component: {\n      pattern: /[\\w-]+(?=[ \\t]*\\{)/,\n      alias: 'variable'\n    },\n    property: /[\\w.-]+(?=[ \\t]*:)/,\n    value: {\n      pattern: /(=[ \\t]*(?![ \\t]))[^,;]+/,\n      lookbehind: true,\n      alias: 'attr-value'\n    },\n    optional: {\n      pattern: /\\(optional\\)/,\n      alias: 'builtin'\n    },\n    wildcard: {\n      pattern: /(\\.)\\*/,\n      lookbehind: true,\n      alias: 'operator'\n    },\n    punctuation: /[{},.;:=]/\n  }\n}\n","'use strict'\n\nmodule.exports = robotframework\nrobotframework.displayName = 'robotframework'\nrobotframework.aliases = []\nfunction robotframework(Prism) {\n  ;(function (Prism) {\n    var comment = {\n      pattern: /(^[ \\t]*| {2}|\\t)#.*/m,\n      lookbehind: true,\n      greedy: true\n    }\n    var variable = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)[$@&%]\\{(?:[^{}\\r\\n]|\\{[^{}\\r\\n]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        punctuation: /^[$@&%]\\{|\\}$/\n      }\n    }\n    function createSection(name, inside) {\n      var extendecInside = {}\n      extendecInside['section-header'] = {\n        pattern: /^ ?\\*{3}.+?\\*{3}/,\n        alias: 'keyword'\n      } // copy inside tokens\n      for (var token in inside) {\n        extendecInside[token] = inside[token]\n      }\n      extendecInside['tag'] = {\n        pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)\\[[-\\w]+\\]/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\[|\\]/\n        }\n      }\n      extendecInside['variable'] = variable\n      extendecInside['comment'] = comment\n      return {\n        pattern: RegExp(\n          /^ ?\\*{3}[ \\t]*<name>[ \\t]*\\*{3}(?:.|[\\r\\n](?!\\*{3}))*/.source.replace(\n            /<name>/g,\n            function () {\n              return name\n            }\n          ),\n          'im'\n        ),\n        alias: 'section',\n        inside: extendecInside\n      }\n    }\n    var docTag = {\n      pattern:\n        /(\\[Documentation\\](?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n      lookbehind: true,\n      alias: 'string'\n    }\n    var testNameLike = {\n      pattern: /([\\r\\n] ?)(?!#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      alias: 'function',\n      inside: {\n        variable: variable\n      }\n    }\n    var testPropertyLike = {\n      pattern: /([\\r\\n](?: {2}|\\t)[ \\t]*)(?!\\[|\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n      lookbehind: true,\n      inside: {\n        variable: variable\n      }\n    }\n    Prism.languages['robotframework'] = {\n      settings: createSection('Settings', {\n        documentation: {\n          pattern:\n            /([\\r\\n] ?Documentation(?: {2}|\\t)[ \\t]*)(?![ \\t]|#)(?:.|(?:\\r\\n?|\\n)[ \\t]*\\.{3})+/,\n          lookbehind: true,\n          alias: 'string'\n        },\n        property: {\n          pattern: /([\\r\\n] ?)(?!\\.{3}|#)(?:\\S(?:[ \\t]\\S)*)+/,\n          lookbehind: true\n        }\n      }),\n      variables: createSection('Variables'),\n      'test-cases': createSection('Test Cases', {\n        'test-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      keywords: createSection('Keywords', {\n        'keyword-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      tasks: createSection('Tasks', {\n        'task-name': testNameLike,\n        documentation: docTag,\n        property: testPropertyLike\n      }),\n      comment: comment\n    }\n    Prism.languages.robot = Prism.languages['robotframework']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *     constant, builtin, variable, symbol, regex\n   */\n  ;(function (Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: {\n        pattern: /#.*|^=begin\\s[\\s\\S]*?^=end/m,\n        greedy: true\n      },\n      'class-name': {\n        pattern:\n          /(\\b(?:class|module)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+|\\b[A-Z_]\\w*(?=\\s*\\.\\s*new\\b)/,\n        lookbehind: true,\n        inside: {\n          punctuation: /[.\\\\]/\n        }\n      },\n      keyword:\n        /\\b(?:BEGIN|END|alias|and|begin|break|case|class|def|define_method|defined|do|each|else|elsif|end|ensure|extend|for|if|in|include|module|new|next|nil|not|or|prepend|private|protected|public|raise|redo|require|rescue|retry|return|self|super|then|throw|undef|unless|until|when|while|yield)\\b/,\n      operator:\n        /\\.{2,3}|&\\.|===|<?=>|[!=]?~|(?:&&|\\|\\||<<|>>|\\*\\*|[+\\-*/%<>!^&|=])=?|[?:]/,\n      punctuation: /[(){}[\\].,;]/\n    })\n    Prism.languages.insertBefore('ruby', 'operator', {\n      'double-colon': {\n        pattern: /::/,\n        alias: 'punctuation'\n      }\n    })\n    var interpolation = {\n      pattern: /((?:^|[^\\\\])(?:\\\\{2})*)#\\{(?:[^{}]|\\{[^{}]*\\})*\\}/,\n      lookbehind: true,\n      inside: {\n        content: {\n          pattern: /^(#\\{)[\\s\\S]+(?=\\}$)/,\n          lookbehind: true,\n          inside: Prism.languages.ruby\n        },\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'punctuation'\n        }\n      }\n    }\n    delete Prism.languages.ruby.function\n    var percentExpression =\n      '(?:' +\n      [\n        /([^a-zA-Z0-9\\s{(\\[<=])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/.source,\n        /\\((?:[^()\\\\]|\\\\[\\s\\S]|\\((?:[^()\\\\]|\\\\[\\s\\S])*\\))*\\)/.source,\n        /\\{(?:[^{}\\\\]|\\\\[\\s\\S]|\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\})*\\}/.source,\n        /\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S]|\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\])*\\]/.source,\n        /<(?:[^<>\\\\]|\\\\[\\s\\S]|<(?:[^<>\\\\]|\\\\[\\s\\S])*>)*>/.source\n      ].join('|') +\n      ')'\n    var symbolName =\n      /(?:\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|(?:\\b[a-zA-Z_]\\w*|[^\\s\\0-\\x7F]+)[?!]?|\\$.)/\n        .source\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      'regex-literal': [\n        {\n          pattern: RegExp(\n            /%r/.source + percentExpression + /[egimnosux]{0,6}/.source\n          ),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(^|[^/])\\/(?!\\/)(?:\\[[^\\r\\n\\]]+\\]|\\\\.|[^[/\\\\\\r\\n])+\\/[egimnosux]{0,6}(?=\\s*(?:$|[\\r\\n,.;})#]))/,\n          lookbehind: true,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            regex: /[\\s\\S]+/\n          }\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: [\n        {\n          pattern: RegExp(/(^|[^:]):/.source + symbolName),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: RegExp(\n            /([\\r\\n{(,][ \\t]*)/.source + symbolName + /(?=:(?!:))/.source\n          ),\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'method-definition': {\n        pattern: /(\\bdef\\s+)\\w+(?:\\s*\\.\\s*\\w+)?/,\n        lookbehind: true,\n        inside: {\n          function: /\\b\\w+$/,\n          keyword: /^self\\b/,\n          'class-name': /^\\w+/,\n          punctuation: /\\./\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'string', {\n      'string-literal': [\n        {\n          pattern: RegExp(/%[qQiIwWs]?/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern:\n            /(\"|')(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\#\\r\\n])*\\1/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?([a-z_]\\w*)[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?[a-z_]\\w*|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?/\n              }\n            },\n            interpolation: interpolation,\n            string: /[\\s\\S]+/\n          }\n        },\n        {\n          pattern: /<<[-~]?'([a-z_]\\w*)'[\\r\\n](?:.*[\\r\\n])*?[\\t ]*\\1/i,\n          alias: 'heredoc-string',\n          greedy: true,\n          inside: {\n            delimiter: {\n              pattern: /^<<[-~]?'[a-z_]\\w*'|\\b[a-z_]\\w*$/i,\n              inside: {\n                symbol: /\\b\\w+/,\n                punctuation: /^<<[-~]?'|'$/\n              }\n            },\n            string: /[\\s\\S]+/\n          }\n        }\n      ],\n      'command-literal': [\n        {\n          pattern: RegExp(/%x/.source + percentExpression),\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        },\n        {\n          pattern: /`(?:#\\{[^}]+\\}|#(?!\\{)|\\\\(?:\\r\\n|[\\s\\S])|[^\\\\`#\\r\\n])*`/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation,\n            command: {\n              pattern: /[\\s\\S]+/,\n              alias: 'string'\n            }\n          }\n        }\n      ]\n    })\n    delete Prism.languages.ruby.string\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin:\n        /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Fixnum|Float|Hash|IO|Integer|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|Stat|String|Struct|Symbol|TMS|Thread|ThreadGroup|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z][A-Z0-9_]*(?:[?!]|\\b)/\n    })\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = rust\nrust.displayName = 'rust'\nrust.aliases = []\nfunction rust(Prism) {\n  ;(function (Prism) {\n    var multilineComment = /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\//.source\n    for (var i = 0; i < 2; i++) {\n      // support 4 levels of nested comments\n      multilineComment = multilineComment.replace(/<self>/g, function () {\n        return multilineComment\n      })\n    }\n    multilineComment = multilineComment.replace(/<self>/g, function () {\n      return /[^\\s\\S]/.source\n    })\n    Prism.languages.rust = {\n      comment: [\n        {\n          pattern: RegExp(/(^|[^\\\\])/.source + multilineComment),\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          pattern: /(^|[^\\\\:])\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      string: {\n        pattern: /b?\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|b?r(#*)\"(?:[^\"]|\"(?!\\1))*\"\\1/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /b?'(?:\\\\(?:x[0-7][\\da-fA-F]|u\\{(?:[\\da-fA-F]_*){1,6}\\}|.)|[^\\\\\\r\\n\\t'])'/,\n        greedy: true\n      },\n      attribute: {\n        pattern: /#!?\\[(?:[^\\[\\]\"]|\"(?:\\\\[\\s\\S]|[^\\\\\"])*\")*\\]/,\n        greedy: true,\n        alias: 'attr-name',\n        inside: {\n          string: null // see below\n        }\n      },\n      // Closure params should not be confused with bitwise OR |\n      'closure-params': {\n        pattern: /([=(,:]\\s*|\\bmove\\s*)\\|[^|]*\\||\\|[^|]*\\|(?=\\s*(?:\\{|->))/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          'closure-punctuation': {\n            pattern: /^\\||\\|$/,\n            alias: 'punctuation'\n          },\n          rest: null // see below\n        }\n      },\n      'lifetime-annotation': {\n        pattern: /'\\w+/,\n        alias: 'symbol'\n      },\n      'fragment-specifier': {\n        pattern: /(\\$\\w+:)[a-z]+/,\n        lookbehind: true,\n        alias: 'punctuation'\n      },\n      variable: /\\$\\w+/,\n      'function-definition': {\n        pattern: /(\\bfn\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'function'\n      },\n      'type-definition': {\n        pattern: /(\\b(?:enum|struct|trait|type|union)\\s+)\\w+/,\n        lookbehind: true,\n        alias: 'class-name'\n      },\n      'module-declaration': [\n        {\n          pattern: /(\\b(?:crate|mod)\\s+)[a-z][a-z_\\d]*/,\n          lookbehind: true,\n          alias: 'namespace'\n        },\n        {\n          pattern:\n            /(\\b(?:crate|self|super)\\s*)::\\s*[a-z][a-z_\\d]*\\b(?:\\s*::(?:\\s*[a-z][a-z_\\d]*\\s*::)*)?/,\n          lookbehind: true,\n          alias: 'namespace',\n          inside: {\n            punctuation: /::/\n          }\n        }\n      ],\n      keyword: [\n        // https://github.com/rust-lang/reference/blob/master/src/keywords.md\n        /\\b(?:Self|abstract|as|async|await|become|box|break|const|continue|crate|do|dyn|else|enum|extern|final|fn|for|if|impl|in|let|loop|macro|match|mod|move|mut|override|priv|pub|ref|return|self|static|struct|super|trait|try|type|typeof|union|unsafe|unsized|use|virtual|where|while|yield)\\b/, // primitives and str\n        // https://doc.rust-lang.org/stable/rust-by-example/primitives.html\n        /\\b(?:bool|char|f(?:32|64)|[ui](?:8|16|32|64|128|size)|str)\\b/\n      ],\n      // functions can technically start with an upper-case letter, but this will introduce a lot of false positives\n      // and Rust's naming conventions recommend snake_case anyway.\n      // https://doc.rust-lang.org/1.0.0/style/style/naming/README.html\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())/,\n      macro: {\n        pattern: /\\b\\w+!/,\n        alias: 'property'\n      },\n      constant: /\\b[A-Z_][A-Z_\\d]+\\b/,\n      'class-name': /\\b[A-Z]\\w*\\b/,\n      namespace: {\n        pattern: /(?:\\b[a-z][a-z_\\d]*\\s*::\\s*)*\\b[a-z][a-z_\\d]*\\s*::(?!\\s*<)/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      // Hex, oct, bin, dec numbers with visual separators and type suffix\n      number:\n        /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0o[0-7](?:_?[0-7])*|0b[01](?:_?[01])*|(?:(?:\\d(?:_?\\d)*)?\\.)?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)(?:_?(?:f32|f64|[iu](?:8|16|32|64|size)?))?\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /->|\\.\\.=|\\.{1,3}|::|[{}[\\];(),:]/,\n      operator: /[-+*\\/%!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?=?|[@?]/\n    }\n    Prism.languages.rust['closure-params'].inside.rest = Prism.languages.rust\n    Prism.languages.rust['attribute'].inside['string'] =\n      Prism.languages.rust['string']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sas\nsas.displayName = 'sas'\nsas.aliases = []\nfunction sas(Prism) {\n  ;(function (Prism) {\n    var stringPattern = /(?:\"(?:\"\"|[^\"])*\"(?!\")|'(?:''|[^'])*'(?!'))/.source\n    var number = /\\b(?:\\d[\\da-f]*x|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i\n    var numericConstant = {\n      pattern: RegExp(stringPattern + '[bx]'),\n      alias: 'number'\n    }\n    var macroVariable = {\n      pattern: /&[a-z_]\\w*/i\n    }\n    var macroKeyword = {\n      pattern:\n        /((?:^|\\s|=|\\())%(?:ABORT|BY|CMS|COPY|DISPLAY|DO|ELSE|END|EVAL|GLOBAL|GO|GOTO|IF|INC|INCLUDE|INDEX|INPUT|KTRIM|LENGTH|LET|LIST|LOCAL|PUT|QKTRIM|QSCAN|QSUBSTR|QSYSFUNC|QUPCASE|RETURN|RUN|SCAN|SUBSTR|SUPERQ|SYMDEL|SYMEXIST|SYMGLOBL|SYMLOCAL|SYSCALL|SYSEVALF|SYSEXEC|SYSFUNC|SYSGET|SYSRPUT|THEN|TO|TSO|UNQUOTE|UNTIL|UPCASE|WHILE|WINDOW)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var step = {\n      pattern: /(^|\\s)(?:proc\\s+\\w+|data(?!=)|quit|run)\\b/i,\n      alias: 'keyword',\n      lookbehind: true\n    }\n    var comment = [\n      /\\/\\*[\\s\\S]*?\\*\\//,\n      {\n        pattern: /(^[ \\t]*|;\\s*)\\*[^;]*;/m,\n        lookbehind: true\n      }\n    ]\n    var string = {\n      pattern: RegExp(stringPattern),\n      greedy: true\n    }\n    var punctuation = /[$%@.(){}\\[\\];,\\\\]/\n    var func = {\n      pattern: /%?\\b\\w+(?=\\()/,\n      alias: 'keyword'\n    }\n    var args = {\n      function: func,\n      'arg-value': {\n        pattern: /(=\\s*)[A-Z\\.]+/i,\n        lookbehind: true\n      },\n      operator: /=/,\n      'macro-variable': macroVariable,\n      arg: {\n        pattern: /[A-Z]+/i,\n        alias: 'keyword'\n      },\n      number: number,\n      'numeric-constant': numericConstant,\n      punctuation: punctuation,\n      string: string\n    }\n    var format = {\n      pattern: /\\b(?:format|put)\\b=?[\\w'$.]+/i,\n      inside: {\n        keyword: /^(?:format|put)(?==)/i,\n        equals: /=/,\n        format: {\n          pattern: /(?:\\w|\\$\\d)+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var altformat = {\n      pattern: /\\b(?:format|put)\\s+[\\w']+(?:\\s+[$.\\w]+)+(?=;)/i,\n      inside: {\n        keyword: /^(?:format|put)/i,\n        format: {\n          pattern: /[\\w$]+\\.\\d?/,\n          alias: 'number'\n        }\n      }\n    }\n    var globalStatements = {\n      pattern:\n        /((?:^|\\s)=?)(?:catname|checkpoint execute_always|dm|endsas|filename|footnote|%include|libname|%list|lock|missing|options|page|resetline|%run|sasfile|skip|sysecho|title\\d?)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var submitStatement = {\n      pattern: /(^|\\s)(?:submit(?:\\s+(?:load|norun|parseonly))?|endsubmit)\\b/i,\n      lookbehind: true,\n      alias: 'keyword'\n    }\n    var actionSets =\n      /aStore|accessControl|aggregation|audio|autotune|bayesianNetClassifier|bioMedImage|boolRule|builtins|cardinality|cdm|clustering|conditionalRandomFields|configuration|copula|countreg|dataDiscovery|dataPreprocess|dataSciencePilot|dataStep|decisionTree|deduplication|deepLearn|deepNeural|deepRnn|ds2|ecm|entityRes|espCluster|explainModel|factmac|fastKnn|fcmpact|fedSql|freqTab|gVarCluster|gam|gleam|graphSemiSupLearn|hiddenMarkovModel|hyperGroup|ica|image|iml|kernalPca|langModel|ldaTopic|loadStreams|mbc|mixed|mlTools|modelPublishing|network|neuralNet|nmf|nonParametricBayes|nonlinear|optNetwork|optimization|panel|pca|percentile|phreg|pls|qkb|qlim|quantreg|recommend|regression|reinforcementLearn|robustPca|ruleMining|sampling|sandwich|sccasl|search(?:Analytics)?|sentimentAnalysis|sequence|session(?:Prop)?|severity|simSystem|simple|smartData|sparkEmbeddedProcess|sparseML|spatialreg|spc|stabilityMonitoring|svDataDescription|svm|table|text(?:Filters|Frequency|Mining|Parse|Rule(?:Develop|Score)|Topic|Util)|timeData|transpose|tsInfo|tsReconcile|uniTimeSeries|varReduce/\n        .source\n    var casActions = {\n      pattern: RegExp(\n        /(^|\\s)(?:action\\s+)?(?:<act>)\\.[a-z]+\\b[^;]+/.source.replace(\n          /<act>/g,\n          function () {\n            return actionSets\n          }\n        ),\n        'i'\n      ),\n      lookbehind: true,\n      inside: {\n        keyword: RegExp(\n          /(?:<act>)\\.[a-z]+\\b/.source.replace(/<act>/g, function () {\n            return actionSets\n          }),\n          'i'\n        ),\n        action: {\n          pattern: /(?:action)/i,\n          alias: 'keyword'\n        },\n        comment: comment,\n        function: func,\n        'arg-value': args['arg-value'],\n        operator: args.operator,\n        argument: args.arg,\n        number: number,\n        'numeric-constant': numericConstant,\n        punctuation: punctuation,\n        string: string\n      }\n    }\n    var keywords = {\n      pattern:\n        /((?:^|\\s)=?)(?:after|analysis|and|array|barchart|barwidth|begingraph|by|call|cas|cbarline|cfill|class(?:lev)?|close|column|computed?|contains|continue|data(?==)|define|delete|describe|document|do\\s+over|do|dol|drop|dul|else|end(?:comp|source)?|entryTitle|eval(?:uate)?|exec(?:ute)?|exit|file(?:name)?|fill(?:attrs)?|flist|fnc|function(?:list)?|global|goto|group(?:by)?|headline|headskip|histogram|if|infile|keep|keylabel|keyword|label|layout|leave|legendlabel|length|libname|loadactionset|merge|midpoints|_?null_|name|noobs|nowd|ods|options|or|otherwise|out(?:put)?|over(?:lay)?|plot|print|put|raise|ranexp|rannor|rbreak|retain|return|select|session|sessref|set|source|statgraph|sum|summarize|table|temp|terminate|then\\s+do|then|title\\d?|to|var|when|where|xaxisopts|y2axisopts|yaxisopts)\\b/i,\n      lookbehind: true\n    }\n    Prism.languages.sas = {\n      datalines: {\n        pattern: /^([ \\t]*)(?:cards|(?:data)?lines);[\\s\\S]+?^[ \\t]*;/im,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          keyword: {\n            pattern: /^(?:cards|(?:data)?lines)/i\n          },\n          punctuation: /;/\n        }\n      },\n      'proc-sql': {\n        pattern:\n          /(^proc\\s+(?:fed)?sql(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          sql: {\n            pattern: RegExp(\n              /^[ \\t]*(?:select|alter\\s+table|(?:create|describe|drop)\\s+(?:index|table(?:\\s+constraints)?|view)|create\\s+unique\\s+index|insert\\s+into|update)(?:<str>|[^;\"'])+;/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            alias: 'language-sql',\n            inside: Prism.languages.sql\n          },\n          'global-statements': globalStatements,\n          'sql-statements': {\n            pattern:\n              /(^|\\s)(?:disconnect\\s+from|begin|commit|exec(?:ute)?|reset|rollback|validate)\\b/i,\n            lookbehind: true,\n            alias: 'keyword'\n          },\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-groovy': {\n        pattern:\n          /(^proc\\s+groovy(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          groovy: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-groovy',\n            inside: Prism.languages.groovy\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-lua': {\n        pattern:\n          /(^proc\\s+lua(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|data|quit|run);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          lua: {\n            pattern: RegExp(\n              /(^[ \\t]*submit(?:\\s+(?:load|norun|parseonly))?)(?:<str>|[^\"'])+?(?=endsubmit;)/.source.replace(\n                /<str>/g,\n                function () {\n                  return stringPattern\n                }\n              ),\n              'im'\n            ),\n            lookbehind: true,\n            alias: 'language-lua',\n            inside: Prism.languages.lua\n          },\n          keyword: keywords,\n          'submit-statement': submitStatement,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-cas': {\n        pattern:\n          /(^proc\\s+cas(?:\\s+[\\w|=]+)?;)[\\s\\S]+?(?=^(?:proc\\s+\\w+|quit|data);|(?![\\s\\S]))/im,\n        lookbehind: true,\n        inside: {\n          comment: comment,\n          'statement-var': {\n            pattern: /((?:^|\\s)=?)saveresult\\s[^;]+/im,\n            lookbehind: true,\n            inside: {\n              statement: {\n                pattern: /^saveresult\\s+\\S+/i,\n                inside: {\n                  keyword: /^(?:saveresult)/i\n                }\n              },\n              rest: args\n            }\n          },\n          'cas-actions': casActions,\n          statement: {\n            pattern:\n              /((?:^|\\s)=?)(?:default|(?:un)?set|on|output|upload)[^;]+/im,\n            lookbehind: true,\n            inside: args\n          },\n          step: step,\n          keyword: keywords,\n          function: func,\n          format: format,\n          altformat: altformat,\n          'global-statements': globalStatements,\n          number: number,\n          'numeric-constant': numericConstant,\n          punctuation: punctuation,\n          string: string\n        }\n      },\n      'proc-args': {\n        pattern: RegExp(\n          /(^proc\\s+\\w+\\s+)(?!\\s)(?:[^;\"']|<str>)+;/.source.replace(\n            /<str>/g,\n            function () {\n              return stringPattern\n            }\n          ),\n          'im'\n        ),\n        lookbehind: true,\n        inside: args\n      },\n      /*Special keywords within macros*/\n      'macro-keyword': macroKeyword,\n      'macro-variable': macroVariable,\n      'macro-string-functions': {\n        pattern:\n          /((?:^|\\s|=))%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)\\(.*?(?:[^%]\\))/i,\n        lookbehind: true,\n        inside: {\n          function: {\n            pattern: /%(?:BQUOTE|NRBQUOTE|NRQUOTE|NRSTR|QUOTE|STR)/i,\n            alias: 'keyword'\n          },\n          'macro-keyword': macroKeyword,\n          'macro-variable': macroVariable,\n          'escaped-char': {\n            pattern: /%['\"()<>=¬^~;,#]/\n          },\n          punctuation: punctuation\n        }\n      },\n      'macro-declaration': {\n        pattern: /^%macro[^;]+(?=;)/im,\n        inside: {\n          keyword: /%macro/i\n        }\n      },\n      'macro-end': {\n        pattern: /^%mend[^;]+(?=;)/im,\n        inside: {\n          keyword: /%mend/i\n        }\n      },\n      /*%_zscore(headcir, _lhc, _mhc, _shc, headcz, headcpct, _Fheadcz); */\n      macro: {\n        pattern: /%_\\w+(?=\\()/,\n        alias: 'keyword'\n      },\n      input: {\n        pattern: /\\binput\\s[-\\w\\s/*.$&]+;/i,\n        inside: {\n          input: {\n            alias: 'keyword',\n            pattern: /^input/i\n          },\n          comment: comment,\n          number: number,\n          'numeric-constant': numericConstant\n        }\n      },\n      'options-args': {\n        pattern: /(^options)[-'\"|/\\\\<>*+=:()\\w\\s]*(?=;)/im,\n        lookbehind: true,\n        inside: args\n      },\n      'cas-actions': casActions,\n      comment: comment,\n      function: func,\n      format: format,\n      altformat: altformat,\n      'numeric-constant': numericConstant,\n      datetime: {\n        // '1jan2013'd, '9:25:19pm't, '18jan2003:9:27:05am'dt\n        pattern: RegExp(stringPattern + '(?:dt?|t)'),\n        alias: 'number'\n      },\n      string: string,\n      step: step,\n      keyword: keywords,\n      // In SAS Studio syntax highlighting, these operators are styled like keywords\n      'operator-keyword': {\n        pattern: /\\b(?:eq|ge|gt|in|le|lt|ne|not)\\b/i,\n        alias: 'operator'\n      },\n      // Decimal (1.2e23), hexadecimal (0c1x)\n      number: number,\n      operator: /\\*\\*?|\\|\\|?|!!?|¦¦?|<[>=]?|>[<=]?|[-+\\/=&]|[~¬^]=?/,\n      punctuation: punctuation\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sass\nsass.displayName = 'sass'\nsass.aliases = []\nfunction sass(Prism) {\n  ;(function (Prism) {\n    Prism.languages.sass = Prism.languages.extend('css', {\n      // Sass comments don't need to be closed, only indented\n      comment: {\n        pattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n    Prism.languages.insertBefore('sass', 'atrule', {\n      // We want to consume the whole line\n      'atrule-line': {\n        // Includes support for = and + shortcuts\n        pattern: /^(?:[ \\t]*)[@+=].+/m,\n        greedy: true,\n        inside: {\n          atrule: /(?:@[\\w-]+|[+=])/\n        }\n      }\n    })\n    delete Prism.languages.sass.atrule\n    var variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n    var operator = [\n      /[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n      {\n        pattern: /(\\s)-(?=\\s)/,\n        lookbehind: true\n      }\n    ]\n    Prism.languages.insertBefore('sass', 'property', {\n      // We want to consume the whole line\n      'variable-line': {\n        pattern: /^[ \\t]*\\$.+/m,\n        greedy: true,\n        inside: {\n          punctuation: /:/,\n          variable: variable,\n          operator: operator\n        }\n      },\n      // We want to consume the whole line\n      'property-line': {\n        pattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n        greedy: true,\n        inside: {\n          property: [\n            /[^:\\s]+(?=\\s*:)/,\n            {\n              pattern: /(:)[^:\\s]+/,\n              lookbehind: true\n            }\n          ],\n          punctuation: /:/,\n          variable: variable,\n          operator: operator,\n          important: Prism.languages.sass.important\n        }\n      }\n    })\n    delete Prism.languages.sass.property\n    delete Prism.languages.sass.important // Now that whole lines for other patterns are consumed,\n    // what's left should be selectors\n    Prism.languages.insertBefore('sass', 'punctuation', {\n      selector: {\n        pattern:\n          /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n        lookbehind: true,\n        greedy: true\n      }\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorJava = require('./java.js')\nmodule.exports = scala\nscala.displayName = 'scala'\nscala.aliases = []\nfunction scala(Prism) {\n  Prism.register(refractorJava)\n  Prism.languages.scala = Prism.languages.extend('java', {\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    keyword:\n      /<-|=>|\\b(?:abstract|case|catch|class|def|do|else|extends|final|finally|for|forSome|if|implicit|import|lazy|match|new|null|object|override|package|private|protected|return|sealed|self|super|this|throw|trait|try|type|val|var|while|with|yield)\\b/,\n    number:\n      /\\b0x(?:[\\da-f]*\\.)?[\\da-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e\\d+)?[dfl]?/i,\n    builtin:\n      /\\b(?:Any|AnyRef|AnyVal|Boolean|Byte|Char|Double|Float|Int|Long|Nothing|Short|String|Unit)\\b/,\n    symbol: /'[^\\d\\s\\\\]\\w*/\n  })\n  Prism.languages.insertBefore('scala', 'triple-quoted-string', {\n    'string-interpolation': {\n      pattern:\n        /\\b[a-z]\\w*(?:\"\"\"(?:[^$]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*?\"\"\"|\"(?:[^$\"\\r\\n]|\\$(?:[^{]|\\{(?:[^{}]|\\{[^{}]*\\})*\\}))*\")/i,\n      greedy: true,\n      inside: {\n        id: {\n          pattern: /^\\w+/,\n          greedy: true,\n          alias: 'function'\n        },\n        escape: {\n          pattern: /\\\\\\$\"|\\$[$\"]/,\n          greedy: true,\n          alias: 'symbol'\n        },\n        interpolation: {\n          pattern: /\\$(?:\\w+|\\{(?:[^{}]|\\{[^{}]*\\})*\\})/,\n          greedy: true,\n          inside: {\n            punctuation: /^\\$\\{?|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.scala\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  delete Prism.languages.scala['class-name']\n  delete Prism.languages.scala['function']\n}\n","'use strict'\n\nmodule.exports = scheme\nscheme.displayName = 'scheme'\nscheme.aliases = []\nfunction scheme(Prism) {\n  ;(function (Prism) {\n    Prism.languages.scheme = {\n      // this supports \"normal\" single-line comments:\n      //   ; comment\n      // and (potentially nested) multiline comments:\n      //   #| comment #| nested |# still comment |#\n      // (only 1 level of nesting is supported)\n      comment:\n        /;.*|#;\\s*(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\[(?:[^\\[\\]]|\\[[^\\[\\]]*\\])*\\])|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#)|#\\|(?:[^#|]|#(?!\\|)|\\|(?!#))*\\|#)*\\|#/,\n      string: {\n        pattern: /\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      symbol: {\n        pattern: /'[^()\\[\\]#'\\s]+/,\n        greedy: true\n      },\n      char: {\n        pattern:\n          /#\\\\(?:[ux][a-fA-F\\d]+\\b|[-a-zA-Z]+\\b|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|\\S)/,\n        greedy: true\n      },\n      'lambda-parameter': [\n        // https://www.cs.cmu.edu/Groups/AI/html/r4rs/r4rs_6.html#SEC30\n        {\n          pattern:\n            /((?:^|[^'`#])[(\\[]lambda\\s+)(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)/,\n          lookbehind: true\n        },\n        {\n          pattern: /((?:^|[^'`#])[(\\[]lambda\\s+[(\\[])[^()\\[\\]']+/,\n          lookbehind: true\n        }\n      ],\n      keyword: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:begin|case(?:-lambda)?|cond(?:-expand)?|define(?:-library|-macro|-record-type|-syntax|-values)?|defmacro|delay(?:-force)?|do|else|except|export|guard|if|import|include(?:-ci|-library-declarations)?|lambda|let(?:rec)?(?:-syntax|-values|\\*)?|let\\*-values|only|parameterize|prefix|(?:quasi-?)?quote|rename|set!|syntax-(?:case|rules)|unless|unquote(?:-splicing)?|when)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      builtin: {\n        // all functions of the base library of R7RS plus some of built-ins of R5Rs\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:abs|and|append|apply|assoc|ass[qv]|binary-port\\?|boolean=?\\?|bytevector(?:-append|-copy|-copy!|-length|-u8-ref|-u8-set!|\\?)?|caar|cadr|call-with-(?:current-continuation|port|values)|call\\/cc|car|cdar|cddr|cdr|ceiling|char(?:->integer|-ready\\?|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)|close-(?:input-port|output-port|port)|complex\\?|cons|current-(?:error|input|output)-port|denominator|dynamic-wind|eof-object\\??|eq\\?|equal\\?|eqv\\?|error|error-object(?:-irritants|-message|\\?)|eval|even\\?|exact(?:-integer-sqrt|-integer\\?|\\?)?|expt|features|file-error\\?|floor(?:-quotient|-remainder|\\/)?|flush-output-port|for-each|gcd|get-output-(?:bytevector|string)|inexact\\??|input-port(?:-open\\?|\\?)|integer(?:->char|\\?)|lcm|length|list(?:->string|->vector|-copy|-ref|-set!|-tail|\\?)?|make-(?:bytevector|list|parameter|string|vector)|map|max|member|memq|memv|min|modulo|negative\\?|newline|not|null\\?|number(?:->string|\\?)|numerator|odd\\?|open-(?:input|output)-(?:bytevector|string)|or|output-port(?:-open\\?|\\?)|pair\\?|peek-char|peek-u8|port\\?|positive\\?|procedure\\?|quotient|raise|raise-continuable|rational\\?|rationalize|read-(?:bytevector|bytevector!|char|error\\?|line|string|u8)|real\\?|remainder|reverse|round|set-c[ad]r!|square|string(?:->list|->number|->symbol|->utf8|->vector|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?|<\\?|<=\\?|=\\?|>\\?|>=\\?)?|substring|symbol(?:->string|\\?|=\\?)|syntax-error|textual-port\\?|truncate(?:-quotient|-remainder|\\/)?|u8-ready\\?|utf8->string|values|vector(?:->list|->string|-append|-copy|-copy!|-fill!|-for-each|-length|-map|-ref|-set!|\\?)?|with-exception-handler|write-(?:bytevector|char|string|u8)|zero\\?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      operator: {\n        pattern: /((?:^|[^'`#])[(\\[])(?:[-+*%/]|[<>]=?|=>?)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      number: {\n        // The number pattern from [the R7RS spec](https://small.r7rs.org/attachment/r7rs.pdf).\n        //\n        // <number>      := <num 2>|<num 8>|<num 10>|<num 16>\n        // <num R>       := <prefix R><complex R>\n        // <complex R>   := <real R>(?:@<real R>|<imaginary R>)?|<imaginary R>\n        // <imaginary R> := [+-](?:<ureal R>|(?:inf|nan)\\.0)?i\n        // <real R>      := [+-]?<ureal R>|[+-](?:inf|nan)\\.0\n        // <ureal R>     := <uint R>(?:\\/<uint R>)?\n        //                | <decimal R>\n        //\n        // <decimal 10>  := (?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?\n        // <uint R>      := <digit R>+\n        // <prefix R>    := <radix R>(?:#[ei])?|(?:#[ei])?<radix R>\n        // <radix 2>     := #b\n        // <radix 8>     := #o\n        // <radix 10>    := (?:#d)?\n        // <radix 16>    := #x\n        // <digit 2>     := [01]\n        // <digit 8>     := [0-7]\n        // <digit 10>    := \\d\n        // <digit 16>    := [0-9a-f]\n        //\n        // The problem with this grammar is that the resulting regex is way to complex, so we simplify by grouping all\n        // non-decimal bases together. This results in a decimal (dec) and combined binary, octal, and hexadecimal (box)\n        // pattern:\n        pattern: RegExp(\n          SortedBNF({\n            '<ureal dec>':\n              /\\d+(?:\\/\\d+)|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:[esfdl][+-]?\\d+)?/.source,\n            '<real dec>': /[+-]?<ureal dec>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary dec>': /[+-](?:<ureal dec>|(?:inf|nan)\\.0)?i/.source,\n            '<complex dec>':\n              /<real dec>(?:@<real dec>|<imaginary dec>)?|<imaginary dec>/\n                .source,\n            '<num dec>': /(?:#d(?:#[ei])?|#[ei](?:#d)?)?<complex dec>/.source,\n            '<ureal box>': /[0-9a-f]+(?:\\/[0-9a-f]+)?/.source,\n            '<real box>': /[+-]?<ureal box>|[+-](?:inf|nan)\\.0/.source,\n            '<imaginary box>': /[+-](?:<ureal box>|(?:inf|nan)\\.0)?i/.source,\n            '<complex box>':\n              /<real box>(?:@<real box>|<imaginary box>)?|<imaginary box>/\n                .source,\n            '<num box>': /#[box](?:#[ei])?|(?:#[ei])?#[box]<complex box>/\n              .source,\n            '<number>': /(^|[()\\[\\]\\s])(?:<num dec>|<num box>)(?=[()\\[\\]\\s]|$)/\n              .source\n          }),\n          'i'\n        ),\n        lookbehind: true\n      },\n      boolean: {\n        pattern: /(^|[()\\[\\]\\s])#(?:[ft]|false|true)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      function: {\n        pattern:\n          /((?:^|[^'`#])[(\\[])(?:[^|()\\[\\]'\\s]+|\\|(?:[^\\\\|]|\\\\.)*\\|)(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true\n      },\n      identifier: {\n        pattern: /(^|[()\\[\\]\\s])\\|(?:[^\\\\|]|\\\\.)*\\|(?=[()\\[\\]\\s]|$)/,\n        lookbehind: true,\n        greedy: true\n      },\n      punctuation: /[()\\[\\]']/\n    }\n    /**\n     * Given a topologically sorted BNF grammar, this will return the RegExp source of last rule of the grammar.\n     *\n     * @param {Record<string, string>} grammar\n     * @returns {string}\n     */\n    function SortedBNF(grammar) {\n      for (var key in grammar) {\n        grammar[key] = grammar[key].replace(/<[\\w\\s]+>/g, function (key) {\n          return '(?:' + grammar[key].trim() + ')'\n        })\n      } // return the last item\n      return grammar[key]\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = scss\nscss.displayName = 'scss'\nscss.aliases = []\nfunction scss(Prism) {\n  Prism.languages.scss = Prism.languages.extend('css', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n      lookbehind: true\n    },\n    atrule: {\n      pattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n      inside: {\n        rule: /@[\\w-]+/ // See rest below\n      }\n    },\n    // url, compassified\n    url: /(?:[-a-z]+-)?url(?=\\()/i,\n    // CSS selector regex is not appropriate for Sass\n    // since there can be lot more things (var, @ directive, nesting..)\n    // a selector must start at the end of a property or after a brace (end of other rules or nesting)\n    // it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n    // the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n    // can \"pass\" as a selector- e.g: proper#{$erty})\n    // this one was hard to do, so please be careful if you edit this one :)\n    selector: {\n      // Initial look-ahead is used to prevent matching of blank selectors\n      pattern:\n        /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n      inside: {\n        parent: {\n          pattern: /&/,\n          alias: 'important'\n        },\n        placeholder: /%[-\\w]+/,\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    },\n    property: {\n      pattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n      inside: {\n        variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n      }\n    }\n  })\n  Prism.languages.insertBefore('scss', 'atrule', {\n    keyword: [\n      /@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n      {\n        pattern: /( )(?:from|through)(?= )/,\n        lookbehind: true\n      }\n    ]\n  })\n  Prism.languages.insertBefore('scss', 'important', {\n    // var and interpolated vars\n    variable: /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n  })\n  Prism.languages.insertBefore('scss', 'function', {\n    'module-modifier': {\n      pattern: /\\b(?:as|hide|show|with)\\b/i,\n      alias: 'keyword'\n    },\n    placeholder: {\n      pattern: /%[-\\w]+/,\n      alias: 'selector'\n    },\n    statement: {\n      pattern: /\\B!(?:default|optional)\\b/i,\n      alias: 'keyword'\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    operator: {\n      pattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n      lookbehind: true\n    }\n  })\n  Prism.languages.scss['atrule'].inside.rest = Prism.languages.scss\n}\n","'use strict'\nvar refractorBash = require('./bash.js')\nmodule.exports = shellSession\nshellSession.displayName = 'shellSession'\nshellSession.aliases = []\nfunction shellSession(Prism) {\n  Prism.register(refractorBash)\n  ;(function (Prism) {\n    // CAREFUL!\n    // The following patterns are concatenated, so the group referenced by a back reference is non-obvious!\n    var strings = [\n      // normal string\n      /\"(?:\\\\[\\s\\S]|\\$\\([^)]+\\)|\\$(?!\\()|`[^`]+`|[^\"\\\\`$])*\"/.source,\n      /'[^']*'/.source,\n      /\\$'(?:[^'\\\\]|\\\\[\\s\\S])*'/.source, // here doc\n      // 2 capturing groups\n      /<<-?\\s*([\"']?)(\\w+)\\1\\s[\\s\\S]*?[\\r\\n]\\2/.source\n    ].join('|')\n    Prism.languages['shell-session'] = {\n      command: {\n        pattern: RegExp(\n          // user info\n          /^/.source +\n            '(?:' + // <user> \":\" ( <path> )?\n            (/[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+(?::[^\\0-\\x1F$#%*?\"<>:;|]+)?/\n              .source +\n              '|' + // <path>\n              // Since the path pattern is quite general, we will require it to start with a special character to\n              // prevent false positives.\n              /[/~.][^\\0-\\x1F$#%*?\"<>@:;|]*/.source) +\n            ')?' + // shell symbol\n            /[$#%](?=\\s)/.source + // bash command\n            /(?:[^\\\\\\r\\n \\t'\"<$]|[ \\t](?:(?!#)|#.*$)|\\\\(?:[^\\r]|\\r\\n?)|\\$(?!')|<(?!<)|<<str>>)+/.source.replace(\n              /<<str>>/g,\n              function () {\n                return strings\n              }\n            ),\n          'm'\n        ),\n        greedy: true,\n        inside: {\n          info: {\n            // foo@bar:~/files$ exit\n            // foo@bar$ exit\n            // ~/files$ exit\n            pattern: /^[^#$%]+/,\n            alias: 'punctuation',\n            inside: {\n              user: /^[^\\s@:$#%*!/\\\\]+@[^\\r\\n@:$#%*!/\\\\]+/,\n              punctuation: /:/,\n              path: /[\\s\\S]+/\n            }\n          },\n          bash: {\n            pattern: /(^[$#%]\\s*)\\S[\\s\\S]*/,\n            lookbehind: true,\n            alias: 'language-bash',\n            inside: Prism.languages.bash\n          },\n          'shell-symbol': {\n            pattern: /^[$#%]/,\n            alias: 'important'\n          }\n        }\n      },\n      output: /.(?:.*(?:[\\r\\n]|.$))*/\n    }\n    Prism.languages['sh-session'] = Prism.languages['shellsession'] =\n      Prism.languages['shell-session']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = smali\nsmali.displayName = 'smali'\nsmali.aliases = []\nfunction smali(Prism) {\n  // Test files for the parser itself:\n  // https://github.com/JesusFreke/smali/tree/master/smali/src/test/resources/LexerTest\n  Prism.languages.smali = {\n    comment: /#.*/,\n    string: {\n      pattern: /\"(?:[^\\r\\n\\\\\"]|\\\\.)*\"|'(?:[^\\r\\n\\\\']|\\\\(?:.|u[\\da-fA-F]{4}))'/,\n      greedy: true\n    },\n    'class-name': {\n      pattern:\n        /(^|[^L])L(?:(?:\\w+|`[^`\\r\\n]*`)\\/)*(?:[\\w$]+|`[^`\\r\\n]*`)(?=\\s*;)/,\n      lookbehind: true,\n      inside: {\n        'class-name': {\n          pattern: /(^L|\\/)(?:[\\w$]+|`[^`\\r\\n]*`)$/,\n          lookbehind: true\n        },\n        namespace: {\n          pattern: /^(L)(?:(?:\\w+|`[^`\\r\\n]*`)\\/)+/,\n          lookbehind: true,\n          inside: {\n            punctuation: /\\//\n          }\n        },\n        builtin: /^L/\n      }\n    },\n    builtin: [\n      {\n        // Reference: https://github.com/JesusFreke/smali/wiki/TypesMethodsAndFields#types\n        pattern: /([();\\[])[BCDFIJSVZ]+/,\n        lookbehind: true\n      },\n      {\n        // e.g. .field mWifiOnUid:I\n        pattern: /([\\w$>]:)[BCDFIJSVZ]/,\n        lookbehind: true\n      }\n    ],\n    keyword: [\n      {\n        pattern: /(\\.end\\s+)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\w.-])\\.(?!\\d)[\\w-]+/,\n        lookbehind: true\n      },\n      {\n        pattern:\n          /(^|[^\\w.-])(?:abstract|annotation|bridge|constructor|enum|final|interface|private|protected|public|runtime|static|synthetic|system|transient)(?![\\w.-])/,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^|[^\\w.-])(?:\\w+|<[\\w$-]+>)(?=\\()/,\n      lookbehind: true\n    },\n    field: {\n      pattern: /[\\w$]+(?=:)/,\n      alias: 'variable'\n    },\n    register: {\n      pattern: /(^|[^\\w.-])[vp]\\d(?![\\w.-])/,\n      lookbehind: true,\n      alias: 'variable'\n    },\n    boolean: {\n      pattern: /(^|[^\\w.-])(?:false|true)(?![\\w.-])/,\n      lookbehind: true\n    },\n    number: {\n      pattern:\n        /(^|[^/\\w.-])-?(?:NAN|INFINITY|0x(?:[\\dA-F]+(?:\\.[\\dA-F]*)?|\\.[\\dA-F]+)(?:p[+-]?[\\dA-F]+)?|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?)[dflst]?(?![\\w.-])/i,\n      lookbehind: true\n    },\n    label: {\n      pattern: /(:)\\w+/,\n      lookbehind: true,\n      alias: 'property'\n    },\n    operator: /->|\\.\\.|[\\[=]/,\n    punctuation: /[{}(),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = smalltalk\nsmalltalk.displayName = 'smalltalk'\nsmalltalk.aliases = []\nfunction smalltalk(Prism) {\n  Prism.languages.smalltalk = {\n    comment: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    char: {\n      pattern: /\\$./,\n      greedy: true\n    },\n    string: {\n      pattern: /'(?:''|[^'])*'/,\n      greedy: true\n    },\n    symbol: /#[\\da-z]+|#(?:-|([+\\/\\\\*~<>=@%|&?!])\\1?)|#(?=\\()/i,\n    'block-arguments': {\n      pattern: /(\\[\\s*):[^\\[|]*\\|/,\n      lookbehind: true,\n      inside: {\n        variable: /:[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    'temporary-variables': {\n      pattern: /\\|[^|]+\\|/,\n      inside: {\n        variable: /[\\da-z]+/i,\n        punctuation: /\\|/\n      }\n    },\n    keyword: /\\b(?:new|nil|self|super)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: [\n      /\\d+r-?[\\dA-Z]+(?:\\.[\\dA-Z]+)?(?:e-?\\d+)?/,\n      /\\b\\d+(?:\\.\\d+)?(?:e-?\\d+)?/\n    ],\n    operator: /[<=]=?|:=|~[~=]|\\/\\/?|\\\\\\\\|>[>=]?|[!^+\\-*&|,@]/,\n    punctuation: /[.;:?\\[\\](){}]/\n  }\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.smarty = {\n      comment: {\n        pattern: /^\\{\\*[\\s\\S]*?\\*\\}/,\n        greedy: true\n      },\n      'embedded-php': {\n        pattern: /^\\{php\\}[\\s\\S]*?\\{\\/php\\}/,\n        greedy: true,\n        inside: {\n          smarty: {\n            pattern: /^\\{php\\}|\\{\\/php\\}$/,\n            inside: null // see below\n          },\n          php: {\n            pattern: /[\\s\\S]+/,\n            alias: 'language-php',\n            inside: Prism.languages.php\n          }\n        }\n      },\n      string: [\n        {\n          pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n          greedy: true,\n          inside: {\n            interpolation: {\n              pattern: /\\{[^{}]*\\}|`[^`]*`/,\n              inside: {\n                'interpolation-punctuation': {\n                  pattern: /^[{`]|[`}]$/,\n                  alias: 'punctuation'\n                },\n                expression: {\n                  pattern: /[\\s\\S]+/,\n                  inside: null // see below\n                }\n              }\n            },\n            variable: /\\$\\w+/\n          }\n        },\n        {\n          pattern: /'(?:\\\\.|[^'\\\\\\r\\n])*'/,\n          greedy: true\n        }\n      ],\n      keyword: {\n        pattern: /(^\\{\\/?)[a-z_]\\w*\\b(?!\\()/i,\n        lookbehind: true,\n        greedy: true\n      },\n      delimiter: {\n        pattern: /^\\{\\/?|\\}$/,\n        greedy: true,\n        alias: 'punctuation'\n      },\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->|\\w\\s*=)(?!\\d)\\w+\\b(?!\\()/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /(\\|\\s*)@?[a-z_]\\w*|\\b[a-z_]\\w*(?=\\()/i,\n        lookbehind: true\n      },\n      'attr-name': /\\b[a-z_]\\w*(?=\\s*=)/i,\n      boolean: /\\b(?:false|no|off|on|true|yes)\\b/,\n      punctuation: /[\\[\\](){}.,:`]|->/,\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:and|eq|gt?e|gt|lt?e|lt|mod|neq?|not|or)\\b/\n      ]\n    }\n    Prism.languages.smarty['embedded-php'].inside.smarty.inside =\n      Prism.languages.smarty\n    Prism.languages.smarty.string[0].inside.interpolation.inside.expression.inside =\n      Prism.languages.smarty\n    var string = /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"|'(?:\\\\.|[^'\\\\\\r\\n])*'/\n    var smartyPattern = RegExp(\n      // comments\n      /\\{\\*[\\s\\S]*?\\*\\}/.source +\n        '|' + // php tags\n        /\\{php\\}[\\s\\S]*?\\{\\/php\\}/.source +\n        '|' + // smarty blocks\n        /\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>|\\{(?:[^{}\"']|<str>)*\\})*\\})*\\}/.source.replace(\n          /<str>/g,\n          function () {\n            return string.source\n          }\n        ),\n      'g'\n    ) // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var smartyLiteralStart = '{literal}'\n      var smartyLiteralEnd = '{/literal}'\n      var smartyLiteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function (match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLiteralEnd) {\n            smartyLiteralMode = false\n          }\n          if (!smartyLiteralMode) {\n            if (match === smartyLiteralStart) {\n              smartyLiteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = sml\nsml.displayName = 'sml'\nsml.aliases = ['smlnj']\nfunction sml(Prism) {\n  // https://smlfamily.github.io/sml97-defn.pdf\n  // https://people.mpi-sws.org/~rossberg/sml.html\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:abstype|and|andalso|as|case|datatype|do|else|end|eqtype|exception|fn|fun|functor|handle|if|in|include|infix|infixr|let|local|nonfix|of|op|open|orelse|raise|rec|sharing|sig|signature|struct|structure|then|type|val|where|while|with|withtype)\\b/i\n    Prism.languages.sml = {\n      // allow one level of nesting\n      comment:\n        /\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*)|\\(\\*(?:[^*(]|\\*(?!\\))|\\((?!\\*))*\\*\\))*\\*\\)/,\n      string: {\n        pattern: /#?\"(?:[^\"\\\\]|\\\\.)*\"/,\n        greedy: true\n      },\n      'class-name': [\n        {\n          // This is only an approximation since the real grammar is context-free\n          //\n          // Why the main loop so complex?\n          // The main loop is approximately the same as /(?:\\s*(?:[*,]|->)\\s*<TERMINAL>)*/ which is, obviously, a lot\n          // simpler. The difference is that if a comma is the last iteration of the loop, then the terminal must be\n          // followed by a long identifier.\n          pattern: RegExp(\n            /((?:^|[^:]):\\s*)<TERMINAL>(?:\\s*(?:(?:\\*|->)\\s*<TERMINAL>|,\\s*<TERMINAL>(?:(?=<NOT-LAST>)|(?!<NOT-LAST>)\\s+<LONG-ID>)))*/.source\n              .replace(/<NOT-LAST>/g, function () {\n                return /\\s*(?:[*,]|->)/.source\n              })\n              .replace(/<TERMINAL>/g, function () {\n                return /(?:'[\\w']*|<LONG-ID>|\\((?:[^()]|\\([^()]*\\))*\\)|\\{(?:[^{}]|\\{[^{}]*\\})*\\})(?:\\s+<LONG-ID>)*/\n                  .source\n              })\n              .replace(/<LONG-ID>/g, function () {\n                return /(?!<KEYWORD>)[a-z\\d_][\\w'.]*/.source\n              })\n              .replace(/<KEYWORD>/g, function () {\n                return keywords.source\n              }),\n            'i'\n          ),\n          lookbehind: true,\n          greedy: true,\n          inside: null // see below\n        },\n        {\n          pattern:\n            /((?:^|[^\\w'])(?:datatype|exception|functor|signature|structure|type)\\s+)[a-z_][\\w'.]*/i,\n          lookbehind: true\n        }\n      ],\n      function: {\n        pattern: /((?:^|[^\\w'])fun\\s+)[a-z_][\\w'.]*/i,\n        lookbehind: true\n      },\n      keyword: keywords,\n      variable: {\n        pattern: /(^|[^\\w'])'[\\w']*/,\n        lookbehind: true\n      },\n      number: /~?\\b(?:\\d+(?:\\.\\d+)?(?:e~?\\d+)?|0x[\\da-f]+)\\b/i,\n      word: {\n        pattern: /\\b0w(?:\\d+|x[\\da-f]+)\\b/i,\n        alias: 'constant'\n      },\n      boolean: /\\b(?:false|true)\\b/i,\n      operator: /\\.\\.\\.|:[>=:]|=>?|->|[<>]=?|[!+\\-*/^#|@~]/,\n      punctuation: /[(){}\\[\\].:,;]/\n    }\n    Prism.languages.sml['class-name'][0].inside = Prism.languages.sml\n    Prism.languages.smlnj = Prism.languages.sml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = solidity\nsolidity.displayName = 'solidity'\nsolidity.aliases = ['sol']\nfunction solidity(Prism) {\n  Prism.languages.solidity = Prism.languages.extend('clike', {\n    'class-name': {\n      pattern:\n        /(\\b(?:contract|enum|interface|library|new|struct|using)\\s+)(?!\\d)[\\w$]+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:_|anonymous|as|assembly|assert|break|calldata|case|constant|constructor|continue|contract|default|delete|do|else|emit|enum|event|external|for|from|function|if|import|indexed|inherited|interface|internal|is|let|library|mapping|memory|modifier|new|payable|pragma|private|public|pure|require|returns?|revert|selfdestruct|solidity|storage|struct|suicide|switch|this|throw|using|var|view|while)\\b/,\n    operator: /=>|->|:=|=:|\\*\\*|\\+\\+|--|\\|\\||&&|<<=?|>>=?|[-+*/%^&|<>!=]=?|[~?]/\n  })\n  Prism.languages.insertBefore('solidity', 'keyword', {\n    builtin:\n      /\\b(?:address|bool|byte|u?int(?:8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?|string|bytes(?:[1-9]|[12]\\d|3[0-2])?)\\b/\n  })\n  Prism.languages.insertBefore('solidity', 'number', {\n    version: {\n      pattern: /([<>]=?|\\^)\\d+\\.\\d+\\.\\d+\\b/,\n      lookbehind: true,\n      alias: 'number'\n    }\n  })\n  Prism.languages.sol = Prism.languages.solidity\n}\n","'use strict'\n\nmodule.exports = solutionFile\nsolutionFile.displayName = 'solutionFile'\nsolutionFile.aliases = []\nfunction solutionFile(Prism) {\n  ;(function (Prism) {\n    var guid = {\n      // https://en.wikipedia.org/wiki/Universally_unique_identifier#Format\n      pattern: /\\{[\\da-f]{8}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{4}-[\\da-f]{12}\\}/i,\n      alias: 'constant',\n      inside: {\n        punctuation: /[{}]/\n      }\n    }\n    Prism.languages['solution-file'] = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n        greedy: true,\n        inside: {\n          guid: guid\n        }\n      },\n      object: {\n        // Foo\n        //   Bar(\"abs\") = 9\n        //   EndBar\n        //   Prop = TRUE\n        // EndFoo\n        pattern:\n          /^([ \\t]*)(?:([A-Z]\\w*)\\b(?=.*(?:\\r\\n?|\\n)(?:\\1[ \\t].*(?:\\r\\n?|\\n))*\\1End\\2(?=[ \\t]*$))|End[A-Z]\\w*(?=[ \\t]*$))/m,\n        lookbehind: true,\n        greedy: true,\n        alias: 'keyword'\n      },\n      property: {\n        pattern: /^([ \\t]*)(?!\\s)[^\\r\\n\"#=()]*[^\\s\"#=()](?=\\s*=)/m,\n        lookbehind: true,\n        inside: {\n          guid: guid\n        }\n      },\n      guid: guid,\n      number: /\\b\\d+(?:\\.\\d+)*\\b/,\n      boolean: /\\b(?:FALSE|TRUE)\\b/,\n      operator: /=/,\n      punctuation: /[(),]/\n    }\n    Prism.languages['sln'] = Prism.languages['solution-file']\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern:\n          /(\\{+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /(\\{+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern:\n            /(\\{+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|html|in|int|js|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^\\{+\\/?|\\/?\\}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+\\]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function (env) {\n      var soyPattern = /\\{\\{.+?\\}\\}|\\{.+?\\}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function (match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorTurtle = require('./turtle.js')\nmodule.exports = sparql\nsparql.displayName = 'sparql'\nsparql.aliases = ['rq']\nfunction sparql(Prism) {\n  Prism.register(refractorTurtle)\n  Prism.languages.sparql = Prism.languages.extend('turtle', {\n    boolean: /\\b(?:false|true)\\b/i,\n    variable: {\n      pattern: /[?$]\\w+/,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('sparql', 'punctuation', {\n    keyword: [\n      /\\b(?:A|ADD|ALL|AS|ASC|ASK|BNODE|BY|CLEAR|CONSTRUCT|COPY|CREATE|DATA|DEFAULT|DELETE|DESC|DESCRIBE|DISTINCT|DROP|EXISTS|FILTER|FROM|GROUP|HAVING|INSERT|INTO|LIMIT|LOAD|MINUS|MOVE|NAMED|NOT|NOW|OFFSET|OPTIONAL|ORDER|RAND|REDUCED|SELECT|SEPARATOR|SERVICE|SILENT|STRUUID|UNION|USING|UUID|VALUES|WHERE)\\b/i,\n      /\\b(?:ABS|AVG|BIND|BOUND|CEIL|COALESCE|CONCAT|CONTAINS|COUNT|DATATYPE|DAY|ENCODE_FOR_URI|FLOOR|GROUP_CONCAT|HOURS|IF|IRI|isBLANK|isIRI|isLITERAL|isNUMERIC|isURI|LANG|LANGMATCHES|LCASE|MAX|MD5|MIN|MINUTES|MONTH|REGEX|REPLACE|ROUND|sameTerm|SAMPLE|SECONDS|SHA1|SHA256|SHA384|SHA512|STR|STRAFTER|STRBEFORE|STRDT|STRENDS|STRLANG|STRLEN|STRSTARTS|SUBSTR|SUM|TIMEZONE|TZ|UCASE|URI|YEAR)\\b(?=\\s*\\()/i,\n      /\\b(?:BASE|GRAPH|PREFIX)\\b/i\n    ]\n  })\n  Prism.languages.rq = Prism.languages.sparql\n}\n","'use strict'\n\nmodule.exports = splunkSpl\nsplunkSpl.displayName = 'splunkSpl'\nsplunkSpl.aliases = []\nfunction splunkSpl(Prism) {\n  Prism.languages['splunk-spl'] = {\n    comment: /`comment\\(\"(?:\\\\.|[^\\\\\"])*\"\\)`/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\\\\\"])*\"/,\n      greedy: true\n    },\n    // https://docs.splunk.com/Documentation/Splunk/7.3.0/SearchReference/ListOfSearchCommands\n    keyword:\n      /\\b(?:abstract|accum|addcoltotals|addinfo|addtotals|analyzefields|anomalies|anomalousvalue|anomalydetection|append|appendcols|appendcsv|appendlookup|appendpipe|arules|associate|audit|autoregress|bin|bucket|bucketdir|chart|cluster|cofilter|collect|concurrency|contingency|convert|correlate|datamodel|dbinspect|dedup|delete|delta|diff|erex|eval|eventcount|eventstats|extract|fieldformat|fields|fieldsummary|filldown|fillnull|findtypes|folderize|foreach|format|from|gauge|gentimes|geom|geomfilter|geostats|head|highlight|history|iconify|input|inputcsv|inputlookup|iplocation|join|kmeans|kv|kvform|loadjob|localize|localop|lookup|makecontinuous|makemv|makeresults|map|mcollect|metadata|metasearch|meventcollect|mstats|multikv|multisearch|mvcombine|mvexpand|nomv|outlier|outputcsv|outputlookup|outputtext|overlap|pivot|predict|rangemap|rare|regex|relevancy|reltime|rename|replace|rest|return|reverse|rex|rtorder|run|savedsearch|script|scrub|search|searchtxn|selfjoin|sendemail|set|setfields|sichart|sirare|sistats|sitimechart|sitop|sort|spath|stats|strcat|streamstats|table|tags|tail|timechart|timewrap|top|transaction|transpose|trendline|tscollect|tstats|typeahead|typelearner|typer|union|uniq|untable|where|x11|xmlkv|xmlunescape|xpath|xyseries)\\b/i,\n    'operator-word': {\n      pattern: /\\b(?:and|as|by|not|or|xor)\\b/i,\n      alias: 'operator'\n    },\n    function: /\\b\\w+(?=\\s*\\()/,\n    property: /\\b\\w+(?=\\s*=(?!=))/,\n    date: {\n      // MM/DD/YYYY(:HH:MM:SS)?\n      pattern: /\\b\\d{1,2}\\/\\d{1,2}\\/\\d{1,4}(?:(?::\\d{1,2}){3})?\\b/,\n      alias: 'number'\n    },\n    number: /\\b\\d+(?:\\.\\d+)?\\b/,\n    boolean: /\\b(?:f|false|t|true)\\b/i,\n    operator: /[<>=]=?|[-+*/%|]/,\n    punctuation: /[()[\\],]/\n  }\n}\n","'use strict'\n\nmodule.exports = sqf\nsqf.displayName = 'sqf'\nsqf.aliases = []\nfunction sqf(Prism) {\n  Prism.languages.sqf = Prism.languages.extend('clike', {\n    string: {\n      pattern: /\"(?:(?:\"\")?[^\"])*\"(?!\")|'(?:[^'])*'/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:breakOut|breakTo|call|case|catch|default|do|echo|else|execFSM|execVM|exitWith|for|forEach|forEachMember|forEachMemberAgent|forEachMemberTeam|from|goto|if|nil|preprocessFile|preprocessFileLineNumbers|private|scopeName|spawn|step|switch|then|throw|to|try|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function:\n      /\\b(?:abs|accTime|acos|action|actionIDs|actionKeys|actionKeysImages|actionKeysNames|actionKeysNamesArray|actionName|actionParams|activateAddons|activatedAddons|activateKey|add3DENConnection|add3DENEventHandler|add3DENLayer|addAction|addBackpack|addBackpackCargo|addBackpackCargoGlobal|addBackpackGlobal|addCamShake|addCuratorAddons|addCuratorCameraArea|addCuratorEditableObjects|addCuratorEditingArea|addCuratorPoints|addEditorObject|addEventHandler|addForce|addForceGeneratorRTD|addGoggles|addGroupIcon|addHandgunItem|addHeadgear|addItem|addItemCargo|addItemCargoGlobal|addItemPool|addItemToBackpack|addItemToUniform|addItemToVest|addLiveStats|addMagazine|addMagazineAmmoCargo|addMagazineCargo|addMagazineCargoGlobal|addMagazineGlobal|addMagazinePool|addMagazines|addMagazineTurret|addMenu|addMenuItem|addMissionEventHandler|addMPEventHandler|addMusicEventHandler|addOwnedMine|addPlayerScores|addPrimaryWeaponItem|addPublicVariableEventHandler|addRating|addResources|addScore|addScoreSide|addSecondaryWeaponItem|addSwitchableUnit|addTeamMember|addToRemainsCollector|addTorque|addUniform|addVehicle|addVest|addWaypoint|addWeapon|addWeaponCargo|addWeaponCargoGlobal|addWeaponGlobal|addWeaponItem|addWeaponPool|addWeaponTurret|admin|agent|agents|AGLToASL|aimedAtTarget|aimPos|airDensityCurveRTD|airDensityRTD|airplaneThrottle|airportSide|AISFinishHeal|alive|all3DENEntities|allAirports|allControls|allCurators|allCutLayers|allDead|allDeadMen|allDisplays|allGroups|allMapMarkers|allMines|allMissionObjects|allow3DMode|allowCrewInImmobile|allowCuratorLogicIgnoreAreas|allowDamage|allowDammage|allowFileOperations|allowFleeing|allowGetIn|allowSprint|allPlayers|allSimpleObjects|allSites|allTurrets|allUnits|allUnitsUAV|allVariables|ammo|ammoOnPylon|animate|animateBay|animateDoor|animatePylon|animateSource|animationNames|animationPhase|animationSourcePhase|animationState|append|apply|armoryPoints|arrayIntersect|asin|ASLToAGL|ASLToATL|assert|assignAsCargo|assignAsCargoIndex|assignAsCommander|assignAsDriver|assignAsGunner|assignAsTurret|assignCurator|assignedCargo|assignedCommander|assignedDriver|assignedGunner|assignedItems|assignedTarget|assignedTeam|assignedVehicle|assignedVehicleRole|assignItem|assignTeam|assignToAirport|atan|atan2|atg|ATLToASL|attachedObject|attachedObjects|attachedTo|attachObject|attachTo|attackEnabled|backpack|backpackCargo|backpackContainer|backpackItems|backpackMagazines|backpackSpaceFor|behaviour|benchmark|binocular|blufor|boundingBox|boundingBoxReal|boundingCenter|briefingName|buildingExit|buildingPos|buldozer_EnableRoadDiag|buldozer_IsEnabledRoadDiag|buldozer_LoadNewRoads|buldozer_reloadOperMap|buttonAction|buttonSetAction|cadetMode|callExtension|camCommand|camCommit|camCommitPrepared|camCommitted|camConstuctionSetParams|camCreate|camDestroy|cameraEffect|cameraEffectEnableHUD|cameraInterest|cameraOn|cameraView|campaignConfigFile|camPreload|camPreloaded|camPrepareBank|camPrepareDir|camPrepareDive|camPrepareFocus|camPrepareFov|camPrepareFovRange|camPreparePos|camPrepareRelPos|camPrepareTarget|camSetBank|camSetDir|camSetDive|camSetFocus|camSetFov|camSetFovRange|camSetPos|camSetRelPos|camSetTarget|camTarget|camUseNVG|canAdd|canAddItemToBackpack|canAddItemToUniform|canAddItemToVest|cancelSimpleTaskDestination|canFire|canMove|canSlingLoad|canStand|canSuspend|canTriggerDynamicSimulation|canUnloadInCombat|canVehicleCargo|captive|captiveNum|cbChecked|cbSetChecked|ceil|channelEnabled|cheatsEnabled|checkAIFeature|checkVisibility|civilian|className|clear3DENAttribute|clear3DENInventory|clearAllItemsFromBackpack|clearBackpackCargo|clearBackpackCargoGlobal|clearForcesRTD|clearGroupIcons|clearItemCargo|clearItemCargoGlobal|clearItemPool|clearMagazineCargo|clearMagazineCargoGlobal|clearMagazinePool|clearOverlay|clearRadio|clearVehicleInit|clearWeaponCargo|clearWeaponCargoGlobal|clearWeaponPool|clientOwner|closeDialog|closeDisplay|closeOverlay|collapseObjectTree|collect3DENHistory|collectiveRTD|combatMode|commandArtilleryFire|commandChat|commander|commandFire|commandFollow|commandFSM|commandGetOut|commandingMenu|commandMove|commandRadio|commandStop|commandSuppressiveFire|commandTarget|commandWatch|comment|commitOverlay|compile|compileFinal|completedFSM|composeText|configClasses|configFile|configHierarchy|configName|configNull|configProperties|configSourceAddonList|configSourceMod|configSourceModList|confirmSensorTarget|connectTerminalToUAV|controlNull|controlsGroupCtrl|copyFromClipboard|copyToClipboard|copyWaypoints|cos|count|countEnemy|countFriendly|countSide|countType|countUnknown|create3DENComposition|create3DENEntity|createAgent|createCenter|createDialog|createDiaryLink|createDiaryRecord|createDiarySubject|createDisplay|createGearDialog|createGroup|createGuardedPoint|createLocation|createMarker|createMarkerLocal|createMenu|createMine|createMissionDisplay|createMPCampaignDisplay|createSimpleObject|createSimpleTask|createSite|createSoundSource|createTask|createTeam|createTrigger|createUnit|createVehicle|createVehicleCrew|createVehicleLocal|crew|ctAddHeader|ctAddRow|ctClear|ctCurSel|ctData|ctFindHeaderRows|ctFindRowHeader|ctHeaderControls|ctHeaderCount|ctRemoveHeaders|ctRemoveRows|ctrlActivate|ctrlAddEventHandler|ctrlAngle|ctrlAutoScrollDelay|ctrlAutoScrollRewind|ctrlAutoScrollSpeed|ctrlChecked|ctrlClassName|ctrlCommit|ctrlCommitted|ctrlCreate|ctrlDelete|ctrlEnable|ctrlEnabled|ctrlFade|ctrlHTMLLoaded|ctrlIDC|ctrlIDD|ctrlMapAnimAdd|ctrlMapAnimClear|ctrlMapAnimCommit|ctrlMapAnimDone|ctrlMapCursor|ctrlMapMouseOver|ctrlMapScale|ctrlMapScreenToWorld|ctrlMapWorldToScreen|ctrlModel|ctrlModelDirAndUp|ctrlModelScale|ctrlParent|ctrlParentControlsGroup|ctrlPosition|ctrlRemoveAllEventHandlers|ctrlRemoveEventHandler|ctrlScale|ctrlSetActiveColor|ctrlSetAngle|ctrlSetAutoScrollDelay|ctrlSetAutoScrollRewind|ctrlSetAutoScrollSpeed|ctrlSetBackgroundColor|ctrlSetChecked|ctrlSetDisabledColor|ctrlSetEventHandler|ctrlSetFade|ctrlSetFocus|ctrlSetFont|ctrlSetFontH1|ctrlSetFontH1B|ctrlSetFontH2|ctrlSetFontH2B|ctrlSetFontH3|ctrlSetFontH3B|ctrlSetFontH4|ctrlSetFontH4B|ctrlSetFontH5|ctrlSetFontH5B|ctrlSetFontH6|ctrlSetFontH6B|ctrlSetFontHeight|ctrlSetFontHeightH1|ctrlSetFontHeightH2|ctrlSetFontHeightH3|ctrlSetFontHeightH4|ctrlSetFontHeightH5|ctrlSetFontHeightH6|ctrlSetFontHeightSecondary|ctrlSetFontP|ctrlSetFontPB|ctrlSetFontSecondary|ctrlSetForegroundColor|ctrlSetModel|ctrlSetModelDirAndUp|ctrlSetModelScale|ctrlSetPixelPrecision|ctrlSetPosition|ctrlSetScale|ctrlSetStructuredText|ctrlSetText|ctrlSetTextColor|ctrlSetTextColorSecondary|ctrlSetTextSecondary|ctrlSetTooltip|ctrlSetTooltipColorBox|ctrlSetTooltipColorShade|ctrlSetTooltipColorText|ctrlShow|ctrlShown|ctrlText|ctrlTextHeight|ctrlTextSecondary|ctrlTextWidth|ctrlType|ctrlVisible|ctRowControls|ctRowCount|ctSetCurSel|ctSetData|ctSetHeaderTemplate|ctSetRowTemplate|ctSetValue|ctValue|curatorAddons|curatorCamera|curatorCameraArea|curatorCameraAreaCeiling|curatorCoef|curatorEditableObjects|curatorEditingArea|curatorEditingAreaType|curatorMouseOver|curatorPoints|curatorRegisteredObjects|curatorSelected|curatorWaypointCost|current3DENOperation|currentChannel|currentCommand|currentMagazine|currentMagazineDetail|currentMagazineDetailTurret|currentMagazineTurret|currentMuzzle|currentNamespace|currentTask|currentTasks|currentThrowable|currentVisionMode|currentWaypoint|currentWeapon|currentWeaponMode|currentWeaponTurret|currentZeroing|cursorObject|cursorTarget|customChat|customRadio|cutFadeOut|cutObj|cutRsc|cutText|damage|date|dateToNumber|daytime|deActivateKey|debriefingText|debugFSM|debugLog|deg|delete3DENEntities|deleteAt|deleteCenter|deleteCollection|deleteEditorObject|deleteGroup|deleteGroupWhenEmpty|deleteIdentity|deleteLocation|deleteMarker|deleteMarkerLocal|deleteRange|deleteResources|deleteSite|deleteStatus|deleteTeam|deleteVehicle|deleteVehicleCrew|deleteWaypoint|detach|detectedMines|diag_activeMissionFSMs|diag_activeScripts|diag_activeSQFScripts|diag_activeSQSScripts|diag_captureFrame|diag_captureFrameToFile|diag_captureSlowFrame|diag_codePerformance|diag_drawMode|diag_dynamicSimulationEnd|diag_enable|diag_enabled|diag_fps|diag_fpsMin|diag_frameNo|diag_lightNewLoad|diag_list|diag_log|diag_logSlowFrame|diag_mergeConfigFile|diag_recordTurretLimits|diag_setLightNew|diag_tickTime|diag_toggle|dialog|diarySubjectExists|didJIP|didJIPOwner|difficulty|difficultyEnabled|difficultyEnabledRTD|difficultyOption|direction|directSay|disableAI|disableCollisionWith|disableConversation|disableDebriefingStats|disableMapIndicators|disableNVGEquipment|disableRemoteSensors|disableSerialization|disableTIEquipment|disableUAVConnectability|disableUserInput|displayAddEventHandler|displayCtrl|displayNull|displayParent|displayRemoveAllEventHandlers|displayRemoveEventHandler|displaySetEventHandler|dissolveTeam|distance|distance2D|distanceSqr|distributionRegion|do3DENAction|doArtilleryFire|doFire|doFollow|doFSM|doGetOut|doMove|doorPhase|doStop|doSuppressiveFire|doTarget|doWatch|drawArrow|drawEllipse|drawIcon|drawIcon3D|drawLine|drawLine3D|drawLink|drawLocation|drawPolygon|drawRectangle|drawTriangle|driver|drop|dynamicSimulationDistance|dynamicSimulationDistanceCoef|dynamicSimulationEnabled|dynamicSimulationSystemEnabled|east|edit3DENMissionAttributes|editObject|editorSetEventHandler|effectiveCommander|emptyPositions|enableAI|enableAIFeature|enableAimPrecision|enableAttack|enableAudioFeature|enableAutoStartUpRTD|enableAutoTrimRTD|enableCamShake|enableCaustics|enableChannel|enableCollisionWith|enableCopilot|enableDebriefingStats|enableDiagLegend|enableDynamicSimulation|enableDynamicSimulationSystem|enableEndDialog|enableEngineArtillery|enableEnvironment|enableFatigue|enableGunLights|enableInfoPanelComponent|enableIRLasers|enableMimics|enablePersonTurret|enableRadio|enableReload|enableRopeAttach|enableSatNormalOnDetail|enableSaving|enableSentences|enableSimulation|enableSimulationGlobal|enableStamina|enableStressDamage|enableTeamSwitch|enableTraffic|enableUAVConnectability|enableUAVWaypoints|enableVehicleCargo|enableVehicleSensor|enableWeaponDisassembly|endl|endLoadingScreen|endMission|engineOn|enginesIsOnRTD|enginesPowerRTD|enginesRpmRTD|enginesTorqueRTD|entities|environmentEnabled|estimatedEndServerTime|estimatedTimeLeft|evalObjectArgument|everyBackpack|everyContainer|exec|execEditorScript|exp|expectedDestination|exportJIPMessages|eyeDirection|eyePos|face|faction|fadeMusic|fadeRadio|fadeSound|fadeSpeech|failMission|fillWeaponsFromPool|find|findCover|findDisplay|findEditorObject|findEmptyPosition|findEmptyPositionReady|findIf|findNearestEnemy|finishMissionInit|finite|fire|fireAtTarget|firstBackpack|flag|flagAnimationPhase|flagOwner|flagSide|flagTexture|fleeing|floor|flyInHeight|flyInHeightASL|fog|fogForecast|fogParams|forceAddUniform|forceAtPositionRTD|forcedMap|forceEnd|forceFlagTexture|forceFollowRoad|forceGeneratorRTD|forceMap|forceRespawn|forceSpeed|forceWalk|forceWeaponFire|forceWeatherChange|forgetTarget|format|formation|formationDirection|formationLeader|formationMembers|formationPosition|formationTask|formatText|formLeader|freeLook|fromEditor|fuel|fullCrew|gearIDCAmmoCount|gearSlotAmmoCount|gearSlotData|get3DENActionState|get3DENAttribute|get3DENCamera|get3DENConnections|get3DENEntity|get3DENEntityID|get3DENGrid|get3DENIconsVisible|get3DENLayerEntities|get3DENLinesVisible|get3DENMissionAttribute|get3DENMouseOver|get3DENSelected|getAimingCoef|getAllEnvSoundControllers|getAllHitPointsDamage|getAllOwnedMines|getAllSoundControllers|getAmmoCargo|getAnimAimPrecision|getAnimSpeedCoef|getArray|getArtilleryAmmo|getArtilleryComputerSettings|getArtilleryETA|getAssignedCuratorLogic|getAssignedCuratorUnit|getBackpackCargo|getBleedingRemaining|getBurningValue|getCameraViewDirection|getCargoIndex|getCenterOfMass|getClientState|getClientStateNumber|getCompatiblePylonMagazines|getConnectedUAV|getContainerMaxLoad|getCursorObjectParams|getCustomAimCoef|getDammage|getDescription|getDir|getDirVisual|getDLCAssetsUsage|getDLCAssetsUsageByName|getDLCs|getDLCUsageTime|getEditorCamera|getEditorMode|getEditorObjectScope|getElevationOffset|getEngineTargetRpmRTD|getEnvSoundController|getFatigue|getFieldManualStartPage|getForcedFlagTexture|getFriend|getFSMVariable|getFuelCargo|getGroupIcon|getGroupIconParams|getGroupIcons|getHideFrom|getHit|getHitIndex|getHitPointDamage|getItemCargo|getMagazineCargo|getMarkerColor|getMarkerPos|getMarkerSize|getMarkerType|getMass|getMissionConfig|getMissionConfigValue|getMissionDLCs|getMissionLayerEntities|getMissionLayers|getModelInfo|getMousePosition|getMusicPlayedTime|getNumber|getObjectArgument|getObjectChildren|getObjectDLC|getObjectMaterials|getObjectProxy|getObjectTextures|getObjectType|getObjectViewDistance|getOxygenRemaining|getPersonUsedDLCs|getPilotCameraDirection|getPilotCameraPosition|getPilotCameraRotation|getPilotCameraTarget|getPlateNumber|getPlayerChannel|getPlayerScores|getPlayerUID|getPlayerUIDOld|getPos|getPosASL|getPosASLVisual|getPosASLW|getPosATL|getPosATLVisual|getPosVisual|getPosWorld|getPylonMagazines|getRelDir|getRelPos|getRemoteSensorsDisabled|getRepairCargo|getResolution|getRotorBrakeRTD|getShadowDistance|getShotParents|getSlingLoad|getSoundController|getSoundControllerResult|getSpeed|getStamina|getStatValue|getSuppression|getTerrainGrid|getTerrainHeightASL|getText|getTotalDLCUsageTime|getTrimOffsetRTD|getUnitLoadout|getUnitTrait|getUserMFDText|getUserMFDValue|getVariable|getVehicleCargo|getWeaponCargo|getWeaponSway|getWingsOrientationRTD|getWingsPositionRTD|getWPPos|glanceAt|globalChat|globalRadio|goggles|group|groupChat|groupFromNetId|groupIconSelectable|groupIconsVisible|groupId|groupOwner|groupRadio|groupSelectedUnits|groupSelectUnit|grpNull|gunner|gusts|halt|handgunItems|handgunMagazine|handgunWeapon|handsHit|hasInterface|hasPilotCamera|hasWeapon|hcAllGroups|hcGroupParams|hcLeader|hcRemoveAllGroups|hcRemoveGroup|hcSelected|hcSelectGroup|hcSetGroup|hcShowBar|hcShownBar|headgear|hideBody|hideObject|hideObjectGlobal|hideSelection|hint|hintC|hintCadet|hintSilent|hmd|hostMission|htmlLoad|HUDMovementLevels|humidity|image|importAllGroups|importance|in|inArea|inAreaArray|incapacitatedState|independent|inflame|inflamed|infoPanel|infoPanelComponentEnabled|infoPanelComponents|infoPanels|inGameUISetEventHandler|inheritsFrom|initAmbientLife|inPolygon|inputAction|inRangeOfArtillery|insertEditorObject|intersect|is3DEN|is3DENMultiplayer|isAbleToBreathe|isAgent|isAimPrecisionEnabled|isArray|isAutoHoverOn|isAutonomous|isAutoStartUpEnabledRTD|isAutotest|isAutoTrimOnRTD|isBleeding|isBurning|isClass|isCollisionLightOn|isCopilotEnabled|isDamageAllowed|isDedicated|isDLCAvailable|isEngineOn|isEqualTo|isEqualType|isEqualTypeAll|isEqualTypeAny|isEqualTypeArray|isEqualTypeParams|isFilePatchingEnabled|isFlashlightOn|isFlatEmpty|isForcedWalk|isFormationLeader|isGroupDeletedWhenEmpty|isHidden|isInRemainsCollector|isInstructorFigureEnabled|isIRLaserOn|isKeyActive|isKindOf|isLaserOn|isLightOn|isLocalized|isManualFire|isMarkedForCollection|isMultiplayer|isMultiplayerSolo|isNil|isNull|isNumber|isObjectHidden|isObjectRTD|isOnRoad|isPipEnabled|isPlayer|isRealTime|isRemoteExecuted|isRemoteExecutedJIP|isServer|isShowing3DIcons|isSimpleObject|isSprintAllowed|isStaminaEnabled|isSteamMission|isStreamFriendlyUIEnabled|isStressDamageEnabled|isText|isTouchingGround|isTurnedOut|isTutHintsEnabled|isUAVConnectable|isUAVConnected|isUIContext|isUniformAllowed|isVehicleCargo|isVehicleRadarOn|isVehicleSensorEnabled|isWalking|isWeaponDeployed|isWeaponRested|itemCargo|items|itemsWithMagazines|join|joinAs|joinAsSilent|joinSilent|joinString|kbAddDatabase|kbAddDatabaseTargets|kbAddTopic|kbHasTopic|kbReact|kbRemoveTopic|kbTell|kbWasSaid|keyImage|keyName|knowsAbout|land|landAt|landResult|language|laserTarget|lbAdd|lbClear|lbColor|lbColorRight|lbCurSel|lbData|lbDelete|lbIsSelected|lbPicture|lbPictureRight|lbSelection|lbSetColor|lbSetColorRight|lbSetCurSel|lbSetData|lbSetPicture|lbSetPictureColor|lbSetPictureColorDisabled|lbSetPictureColorSelected|lbSetPictureRight|lbSetPictureRightColor|lbSetPictureRightColorDisabled|lbSetPictureRightColorSelected|lbSetSelectColor|lbSetSelectColorRight|lbSetSelected|lbSetText|lbSetTextRight|lbSetTooltip|lbSetValue|lbSize|lbSort|lbSortByValue|lbText|lbTextRight|lbValue|leader|leaderboardDeInit|leaderboardGetRows|leaderboardInit|leaderboardRequestRowsFriends|leaderboardRequestRowsGlobal|leaderboardRequestRowsGlobalAroundUser|leaderboardsRequestUploadScore|leaderboardsRequestUploadScoreKeepBest|leaderboardState|leaveVehicle|libraryCredits|libraryDisclaimers|lifeState|lightAttachObject|lightDetachObject|lightIsOn|lightnings|limitSpeed|linearConversion|lineBreak|lineIntersects|lineIntersectsObjs|lineIntersectsSurfaces|lineIntersectsWith|linkItem|list|listObjects|listRemoteTargets|listVehicleSensors|ln|lnbAddArray|lnbAddColumn|lnbAddRow|lnbClear|lnbColor|lnbColorRight|lnbCurSelRow|lnbData|lnbDeleteColumn|lnbDeleteRow|lnbGetColumnsPosition|lnbPicture|lnbPictureRight|lnbSetColor|lnbSetColorRight|lnbSetColumnsPos|lnbSetCurSelRow|lnbSetData|lnbSetPicture|lnbSetPictureColor|lnbSetPictureColorRight|lnbSetPictureColorSelected|lnbSetPictureColorSelectedRight|lnbSetPictureRight|lnbSetText|lnbSetTextRight|lnbSetValue|lnbSize|lnbSort|lnbSortByValue|lnbText|lnbTextRight|lnbValue|load|loadAbs|loadBackpack|loadFile|loadGame|loadIdentity|loadMagazine|loadOverlay|loadStatus|loadUniform|loadVest|local|localize|locationNull|locationPosition|lock|lockCameraTo|lockCargo|lockDriver|locked|lockedCargo|lockedDriver|lockedTurret|lockIdentity|lockTurret|lockWP|log|logEntities|logNetwork|logNetworkTerminate|lookAt|lookAtPos|magazineCargo|magazines|magazinesAllTurrets|magazinesAmmo|magazinesAmmoCargo|magazinesAmmoFull|magazinesDetail|magazinesDetailBackpack|magazinesDetailUniform|magazinesDetailVest|magazinesTurret|magazineTurretAmmo|mapAnimAdd|mapAnimClear|mapAnimCommit|mapAnimDone|mapCenterOnCamera|mapGridPosition|markAsFinishedOnSteam|markerAlpha|markerBrush|markerColor|markerDir|markerPos|markerShape|markerSize|markerText|markerType|max|members|menuAction|menuAdd|menuChecked|menuClear|menuCollapse|menuData|menuDelete|menuEnable|menuEnabled|menuExpand|menuHover|menuPicture|menuSetAction|menuSetCheck|menuSetData|menuSetPicture|menuSetValue|menuShortcut|menuShortcutText|menuSize|menuSort|menuText|menuURL|menuValue|min|mineActive|mineDetectedBy|missionConfigFile|missionDifficulty|missionName|missionNamespace|missionStart|missionVersion|modelToWorld|modelToWorldVisual|modelToWorldVisualWorld|modelToWorldWorld|modParams|moonIntensity|moonPhase|morale|move|move3DENCamera|moveInAny|moveInCargo|moveInCommander|moveInDriver|moveInGunner|moveInTurret|moveObjectToEnd|moveOut|moveTime|moveTo|moveToCompleted|moveToFailed|musicVolume|name|nameSound|nearEntities|nearestBuilding|nearestLocation|nearestLocations|nearestLocationWithDubbing|nearestObject|nearestObjects|nearestTerrainObjects|nearObjects|nearObjectsReady|nearRoads|nearSupplies|nearTargets|needReload|netId|netObjNull|newOverlay|nextMenuItemIndex|nextWeatherChange|nMenuItems|numberOfEnginesRTD|numberToDate|objectCurators|objectFromNetId|objectParent|objNull|objStatus|onBriefingGear|onBriefingGroup|onBriefingNotes|onBriefingPlan|onBriefingTeamSwitch|onCommandModeChanged|onDoubleClick|onEachFrame|onGroupIconClick|onGroupIconOverEnter|onGroupIconOverLeave|onHCGroupSelectionChanged|onMapSingleClick|onPlayerConnected|onPlayerDisconnected|onPreloadFinished|onPreloadStarted|onShowNewObject|onTeamSwitch|openCuratorInterface|openDLCPage|openDSInterface|openMap|openSteamApp|openYoutubeVideo|opfor|orderGetIn|overcast|overcastForecast|owner|param|params|parseNumber|parseSimpleArray|parseText|parsingNamespace|particlesQuality|pi|pickWeaponPool|pitch|pixelGrid|pixelGridBase|pixelGridNoUIScale|pixelH|pixelW|playableSlotsNumber|playableUnits|playAction|playActionNow|player|playerRespawnTime|playerSide|playersNumber|playGesture|playMission|playMove|playMoveNow|playMusic|playScriptedMission|playSound|playSound3D|position|positionCameraToWorld|posScreenToWorld|posWorldToScreen|ppEffectAdjust|ppEffectCommit|ppEffectCommitted|ppEffectCreate|ppEffectDestroy|ppEffectEnable|ppEffectEnabled|ppEffectForceInNVG|precision|preloadCamera|preloadObject|preloadSound|preloadTitleObj|preloadTitleRsc|primaryWeapon|primaryWeaponItems|primaryWeaponMagazine|priority|processDiaryLink|processInitCommands|productVersion|profileName|profileNamespace|profileNameSteam|progressLoadingScreen|progressPosition|progressSetPosition|publicVariable|publicVariableClient|publicVariableServer|pushBack|pushBackUnique|putWeaponPool|queryItemsPool|queryMagazinePool|queryWeaponPool|rad|radioChannelAdd|radioChannelCreate|radioChannelRemove|radioChannelSetCallSign|radioChannelSetLabel|radioVolume|rain|rainbow|random|rank|rankId|rating|rectangular|registeredTasks|registerTask|reload|reloadEnabled|remoteControl|remoteExec|remoteExecCall|remoteExecutedOwner|remove3DENConnection|remove3DENEventHandler|remove3DENLayer|removeAction|removeAll3DENEventHandlers|removeAllActions|removeAllAssignedItems|removeAllContainers|removeAllCuratorAddons|removeAllCuratorCameraAreas|removeAllCuratorEditingAreas|removeAllEventHandlers|removeAllHandgunItems|removeAllItems|removeAllItemsWithMagazines|removeAllMissionEventHandlers|removeAllMPEventHandlers|removeAllMusicEventHandlers|removeAllOwnedMines|removeAllPrimaryWeaponItems|removeAllWeapons|removeBackpack|removeBackpackGlobal|removeCuratorAddons|removeCuratorCameraArea|removeCuratorEditableObjects|removeCuratorEditingArea|removeDrawIcon|removeDrawLinks|removeEventHandler|removeFromRemainsCollector|removeGoggles|removeGroupIcon|removeHandgunItem|removeHeadgear|removeItem|removeItemFromBackpack|removeItemFromUniform|removeItemFromVest|removeItems|removeMagazine|removeMagazineGlobal|removeMagazines|removeMagazinesTurret|removeMagazineTurret|removeMenuItem|removeMissionEventHandler|removeMPEventHandler|removeMusicEventHandler|removeOwnedMine|removePrimaryWeaponItem|removeSecondaryWeaponItem|removeSimpleTask|removeSwitchableUnit|removeTeamMember|removeUniform|removeVest|removeWeapon|removeWeaponAttachmentCargo|removeWeaponCargo|removeWeaponGlobal|removeWeaponTurret|reportRemoteTarget|requiredVersion|resetCamShake|resetSubgroupDirection|resistance|resize|resources|respawnVehicle|restartEditorCamera|reveal|revealMine|reverse|reversedMouseY|roadAt|roadsConnectedTo|roleDescription|ropeAttachedObjects|ropeAttachedTo|ropeAttachEnabled|ropeAttachTo|ropeCreate|ropeCut|ropeDestroy|ropeDetach|ropeEndPosition|ropeLength|ropes|ropeUnwind|ropeUnwound|rotorsForcesRTD|rotorsRpmRTD|round|runInitScript|safeZoneH|safeZoneW|safeZoneWAbs|safeZoneX|safeZoneXAbs|safeZoneY|save3DENInventory|saveGame|saveIdentity|saveJoysticks|saveOverlay|saveProfileNamespace|saveStatus|saveVar|savingEnabled|say|say2D|say3D|score|scoreSide|screenshot|screenToWorld|scriptDone|scriptName|scriptNull|scudState|secondaryWeapon|secondaryWeaponItems|secondaryWeaponMagazine|select|selectBestPlaces|selectDiarySubject|selectedEditorObjects|selectEditorObject|selectionNames|selectionPosition|selectLeader|selectMax|selectMin|selectNoPlayer|selectPlayer|selectRandom|selectRandomWeighted|selectWeapon|selectWeaponTurret|sendAUMessage|sendSimpleCommand|sendTask|sendTaskResult|sendUDPMessage|serverCommand|serverCommandAvailable|serverCommandExecutable|serverName|serverTime|set|set3DENAttribute|set3DENAttributes|set3DENGrid|set3DENIconsVisible|set3DENLayer|set3DENLinesVisible|set3DENLogicType|set3DENMissionAttribute|set3DENMissionAttributes|set3DENModelsVisible|set3DENObjectType|set3DENSelected|setAccTime|setActualCollectiveRTD|setAirplaneThrottle|setAirportSide|setAmmo|setAmmoCargo|setAmmoOnPylon|setAnimSpeedCoef|setAperture|setApertureNew|setArmoryPoints|setAttributes|setAutonomous|setBehaviour|setBleedingRemaining|setBrakesRTD|setCameraInterest|setCamShakeDefParams|setCamShakeParams|setCamUseTI|setCaptive|setCenterOfMass|setCollisionLight|setCombatMode|setCompassOscillation|setConvoySeparation|setCuratorCameraAreaCeiling|setCuratorCoef|setCuratorEditingAreaType|setCuratorWaypointCost|setCurrentChannel|setCurrentTask|setCurrentWaypoint|setCustomAimCoef|setCustomWeightRTD|setDamage|setDammage|setDate|setDebriefingText|setDefaultCamera|setDestination|setDetailMapBlendPars|setDir|setDirection|setDrawIcon|setDriveOnPath|setDropInterval|setDynamicSimulationDistance|setDynamicSimulationDistanceCoef|setEditorMode|setEditorObjectScope|setEffectCondition|setEngineRpmRTD|setFace|setFaceAnimation|setFatigue|setFeatureType|setFlagAnimationPhase|setFlagOwner|setFlagSide|setFlagTexture|setFog|setForceGeneratorRTD|setFormation|setFormationTask|setFormDir|setFriend|setFromEditor|setFSMVariable|setFuel|setFuelCargo|setGroupIcon|setGroupIconParams|setGroupIconsSelectable|setGroupIconsVisible|setGroupId|setGroupIdGlobal|setGroupOwner|setGusts|setHideBehind|setHit|setHitIndex|setHitPointDamage|setHorizonParallaxCoef|setHUDMovementLevels|setIdentity|setImportance|setInfoPanel|setLeader|setLightAmbient|setLightAttenuation|setLightBrightness|setLightColor|setLightDayLight|setLightFlareMaxDistance|setLightFlareSize|setLightIntensity|setLightnings|setLightUseFlare|setLocalWindParams|setMagazineTurretAmmo|setMarkerAlpha|setMarkerAlphaLocal|setMarkerBrush|setMarkerBrushLocal|setMarkerColor|setMarkerColorLocal|setMarkerDir|setMarkerDirLocal|setMarkerPos|setMarkerPosLocal|setMarkerShape|setMarkerShapeLocal|setMarkerSize|setMarkerSizeLocal|setMarkerText|setMarkerTextLocal|setMarkerType|setMarkerTypeLocal|setMass|setMimic|setMousePosition|setMusicEffect|setMusicEventHandler|setName|setNameSound|setObjectArguments|setObjectMaterial|setObjectMaterialGlobal|setObjectProxy|setObjectTexture|setObjectTextureGlobal|setObjectViewDistance|setOvercast|setOwner|setOxygenRemaining|setParticleCircle|setParticleClass|setParticleFire|setParticleParams|setParticleRandom|setPilotCameraDirection|setPilotCameraRotation|setPilotCameraTarget|setPilotLight|setPiPEffect|setPitch|setPlateNumber|setPlayable|setPlayerRespawnTime|setPos|setPosASL|setPosASL2|setPosASLW|setPosATL|setPosition|setPosWorld|setPylonLoadOut|setPylonsPriority|setRadioMsg|setRain|setRainbow|setRandomLip|setRank|setRectangular|setRepairCargo|setRotorBrakeRTD|setShadowDistance|setShotParents|setSide|setSimpleTaskAlwaysVisible|setSimpleTaskCustomData|setSimpleTaskDescription|setSimpleTaskDestination|setSimpleTaskTarget|setSimpleTaskType|setSimulWeatherLayers|setSize|setSkill|setSlingLoad|setSoundEffect|setSpeaker|setSpeech|setSpeedMode|setStamina|setStaminaScheme|setStatValue|setSuppression|setSystemOfUnits|setTargetAge|setTaskMarkerOffset|setTaskResult|setTaskState|setTerrainGrid|setText|setTimeMultiplier|setTitleEffect|setToneMapping|setToneMappingParams|setTrafficDensity|setTrafficDistance|setTrafficGap|setTrafficSpeed|setTriggerActivation|setTriggerArea|setTriggerStatements|setTriggerText|setTriggerTimeout|setTriggerType|setType|setUnconscious|setUnitAbility|setUnitLoadout|setUnitPos|setUnitPosWeak|setUnitRank|setUnitRecoilCoefficient|setUnitTrait|setUnloadInCombat|setUserActionText|setUserMFDText|setUserMFDValue|setVariable|setVectorDir|setVectorDirAndUp|setVectorUp|setVehicleAmmo|setVehicleAmmoDef|setVehicleArmor|setVehicleCargo|setVehicleId|setVehicleInit|setVehicleLock|setVehiclePosition|setVehicleRadar|setVehicleReceiveRemoteTargets|setVehicleReportOwnPosition|setVehicleReportRemoteTargets|setVehicleTIPars|setVehicleVarName|setVelocity|setVelocityModelSpace|setVelocityTransformation|setViewDistance|setVisibleIfTreeCollapsed|setWantedRpmRTD|setWaves|setWaypointBehaviour|setWaypointCombatMode|setWaypointCompletionRadius|setWaypointDescription|setWaypointForceBehaviour|setWaypointFormation|setWaypointHousePosition|setWaypointLoiterRadius|setWaypointLoiterType|setWaypointName|setWaypointPosition|setWaypointScript|setWaypointSpeed|setWaypointStatements|setWaypointTimeout|setWaypointType|setWaypointVisible|setWeaponReloadingTime|setWind|setWindDir|setWindForce|setWindStr|setWingForceScaleRTD|setWPPos|show3DIcons|showChat|showCinemaBorder|showCommandingMenu|showCompass|showCuratorCompass|showGPS|showHUD|showLegend|showMap|shownArtilleryComputer|shownChat|shownCompass|shownCuratorCompass|showNewEditorObject|shownGPS|shownHUD|shownMap|shownPad|shownRadio|shownScoretable|shownUAVFeed|shownWarrant|shownWatch|showPad|showRadio|showScoretable|showSubtitles|showUAVFeed|showWarrant|showWatch|showWaypoint|showWaypoints|side|sideAmbientLife|sideChat|sideEmpty|sideEnemy|sideFriendly|sideLogic|sideRadio|sideUnknown|simpleTasks|simulationEnabled|simulCloudDensity|simulCloudOcclusion|simulInClouds|simulWeatherSync|sin|size|sizeOf|skill|skillFinal|skipTime|sleep|sliderPosition|sliderRange|sliderSetPosition|sliderSetRange|sliderSetSpeed|sliderSpeed|slingLoadAssistantShown|soldierMagazines|someAmmo|sort|soundVolume|speaker|speed|speedMode|splitString|sqrt|squadParams|stance|startLoadingScreen|stop|stopEngineRTD|stopped|str|sunOrMoon|supportInfo|suppressFor|surfaceIsWater|surfaceNormal|surfaceType|swimInDepth|switchableUnits|switchAction|switchCamera|switchGesture|switchLight|switchMove|synchronizedObjects|synchronizedTriggers|synchronizedWaypoints|synchronizeObjectsAdd|synchronizeObjectsRemove|synchronizeTrigger|synchronizeWaypoint|systemChat|systemOfUnits|tan|targetKnowledge|targets|targetsAggregate|targetsQuery|taskAlwaysVisible|taskChildren|taskCompleted|taskCustomData|taskDescription|taskDestination|taskHint|taskMarkerOffset|taskNull|taskParent|taskResult|taskState|taskType|teamMember|teamMemberNull|teamName|teams|teamSwitch|teamSwitchEnabled|teamType|terminate|terrainIntersect|terrainIntersectASL|terrainIntersectAtASL|text|textLog|textLogFormat|tg|time|timeMultiplier|titleCut|titleFadeOut|titleObj|titleRsc|titleText|toArray|toFixed|toLower|toString|toUpper|triggerActivated|triggerActivation|triggerArea|triggerAttachedVehicle|triggerAttachObject|triggerAttachVehicle|triggerDynamicSimulation|triggerStatements|triggerText|triggerTimeout|triggerTimeoutCurrent|triggerType|turretLocal|turretOwner|turretUnit|tvAdd|tvClear|tvCollapse|tvCollapseAll|tvCount|tvCurSel|tvData|tvDelete|tvExpand|tvExpandAll|tvPicture|tvPictureRight|tvSetColor|tvSetCurSel|tvSetData|tvSetPicture|tvSetPictureColor|tvSetPictureColorDisabled|tvSetPictureColorSelected|tvSetPictureRight|tvSetPictureRightColor|tvSetPictureRightColorDisabled|tvSetPictureRightColorSelected|tvSetSelectColor|tvSetText|tvSetTooltip|tvSetValue|tvSort|tvSortByValue|tvText|tvTooltip|tvValue|type|typeName|typeOf|UAVControl|uiNamespace|uiSleep|unassignCurator|unassignItem|unassignTeam|unassignVehicle|underwater|uniform|uniformContainer|uniformItems|uniformMagazines|unitAddons|unitAimPosition|unitAimPositionVisual|unitBackpack|unitIsUAV|unitPos|unitReady|unitRecoilCoefficient|units|unitsBelowHeight|unlinkItem|unlockAchievement|unregisterTask|updateDrawIcon|updateMenuItem|updateObjectTree|useAIOperMapObstructionTest|useAISteeringComponent|useAudioTimeForMoves|userInputDisabled|vectorAdd|vectorCos|vectorCrossProduct|vectorDiff|vectorDir|vectorDirVisual|vectorDistance|vectorDistanceSqr|vectorDotProduct|vectorFromTo|vectorMagnitude|vectorMagnitudeSqr|vectorModelToWorld|vectorModelToWorldVisual|vectorMultiply|vectorNormalized|vectorUp|vectorUpVisual|vectorWorldToModel|vectorWorldToModelVisual|vehicle|vehicleCargoEnabled|vehicleChat|vehicleRadio|vehicleReceiveRemoteTargets|vehicleReportOwnPosition|vehicleReportRemoteTargets|vehicles|vehicleVarName|velocity|velocityModelSpace|verifySignature|vest|vestContainer|vestItems|vestMagazines|viewDistance|visibleCompass|visibleGPS|visibleMap|visiblePosition|visiblePositionASL|visibleScoretable|visibleWatch|waitUntil|waves|waypointAttachedObject|waypointAttachedVehicle|waypointAttachObject|waypointAttachVehicle|waypointBehaviour|waypointCombatMode|waypointCompletionRadius|waypointDescription|waypointForceBehaviour|waypointFormation|waypointHousePosition|waypointLoiterRadius|waypointLoiterType|waypointName|waypointPosition|waypoints|waypointScript|waypointsEnabledUAV|waypointShow|waypointSpeed|waypointStatements|waypointTimeout|waypointTimeoutCurrent|waypointType|waypointVisible|weaponAccessories|weaponAccessoriesCargo|weaponCargo|weaponDirection|weaponInertia|weaponLowered|weapons|weaponsItems|weaponsItemsCargo|weaponState|weaponsTurret|weightRTD|west|WFSideText|wind|windDir|windRTD|windStr|wingsForcesRTD|worldName|worldSize|worldToModel|worldToModelVisual|worldToScreen)\\b/i,\n    number:\n      /(?:\\$|\\b0x)[\\da-f]+\\b|(?:\\B\\.\\d+|\\b\\d+(?:\\.\\d+)?)(?:e[+-]?\\d+)?\\b/i,\n    operator: /##|>>|&&|\\|\\||[!=<>]=?|[-+*/%#^]|\\b(?:and|mod|not|or)\\b/i,\n    'magic-variable': {\n      pattern:\n        /\\b(?:this|thisList|thisTrigger|_exception|_fnc_scriptName|_fnc_scriptNameParent|_forEachIndex|_this|_thisEventHandler|_thisFSM|_thisScript|_x)\\b/i,\n      alias: 'keyword'\n    },\n    constant: /\\bDIK(?:_[a-z\\d]+)+\\b/i\n  })\n  Prism.languages.insertBefore('sqf', 'string', {\n    macro: {\n      pattern: /(^[ \\t]*)#[a-z](?:[^\\r\\n\\\\]|\\\\(?:\\r\\n|[\\s\\S]))*/im,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property',\n      inside: {\n        directive: {\n          pattern: /#[a-z]+\\b/i,\n          alias: 'keyword'\n        },\n        comment: Prism.languages.sqf.comment\n      }\n    }\n  })\n  delete Prism.languages.sqf['class-name']\n}\n","'use strict'\n\nmodule.exports = sql\nsql.displayName = 'sql'\nsql.aliases = []\nfunction sql(Prism) {\n  Prism.languages.sql = {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    variable: [\n      {\n        pattern: /@([\"'`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])+\\1/,\n        greedy: true\n      },\n      /@[\\w.$]+/\n    ],\n    string: {\n      pattern: /(^|[^@\\\\])(\"|')(?:\\\\[\\s\\S]|(?!\\2)[^\\\\]|\\2\\2)*\\2/,\n      greedy: true,\n      lookbehind: true\n    },\n    identifier: {\n      pattern: /(^|[^@\\\\])`(?:\\\\[\\s\\S]|[^`\\\\]|``)*`/,\n      greedy: true,\n      lookbehind: true,\n      inside: {\n        punctuation: /^`|`$/\n      }\n    },\n    function:\n      /\\b(?:AVG|COUNT|FIRST|FORMAT|LAST|LCASE|LEN|MAX|MID|MIN|MOD|NOW|ROUND|SUM|UCASE)(?=\\s*\\()/i,\n    // Should we highlight user defined functions too?\n    keyword:\n      /\\b(?:ACTION|ADD|AFTER|ALGORITHM|ALL|ALTER|ANALYZE|ANY|APPLY|AS|ASC|AUTHORIZATION|AUTO_INCREMENT|BACKUP|BDB|BEGIN|BERKELEYDB|BIGINT|BINARY|BIT|BLOB|BOOL|BOOLEAN|BREAK|BROWSE|BTREE|BULK|BY|CALL|CASCADED?|CASE|CHAIN|CHAR(?:ACTER|SET)?|CHECK(?:POINT)?|CLOSE|CLUSTERED|COALESCE|COLLATE|COLUMNS?|COMMENT|COMMIT(?:TED)?|COMPUTE|CONNECT|CONSISTENT|CONSTRAINT|CONTAINS(?:TABLE)?|CONTINUE|CONVERT|CREATE|CROSS|CURRENT(?:_DATE|_TIME|_TIMESTAMP|_USER)?|CURSOR|CYCLE|DATA(?:BASES?)?|DATE(?:TIME)?|DAY|DBCC|DEALLOCATE|DEC|DECIMAL|DECLARE|DEFAULT|DEFINER|DELAYED|DELETE|DELIMITERS?|DENY|DESC|DESCRIBE|DETERMINISTIC|DISABLE|DISCARD|DISK|DISTINCT|DISTINCTROW|DISTRIBUTED|DO|DOUBLE|DROP|DUMMY|DUMP(?:FILE)?|DUPLICATE|ELSE(?:IF)?|ENABLE|ENCLOSED|END|ENGINE|ENUM|ERRLVL|ERRORS|ESCAPED?|EXCEPT|EXEC(?:UTE)?|EXISTS|EXIT|EXPLAIN|EXTENDED|FETCH|FIELDS|FILE|FILLFACTOR|FIRST|FIXED|FLOAT|FOLLOWING|FOR(?: EACH ROW)?|FORCE|FOREIGN|FREETEXT(?:TABLE)?|FROM|FULL|FUNCTION|GEOMETRY(?:COLLECTION)?|GLOBAL|GOTO|GRANT|GROUP|HANDLER|HASH|HAVING|HOLDLOCK|HOUR|IDENTITY(?:COL|_INSERT)?|IF|IGNORE|IMPORT|INDEX|INFILE|INNER|INNODB|INOUT|INSERT|INT|INTEGER|INTERSECT|INTERVAL|INTO|INVOKER|ISOLATION|ITERATE|JOIN|KEYS?|KILL|LANGUAGE|LAST|LEAVE|LEFT|LEVEL|LIMIT|LINENO|LINES|LINESTRING|LOAD|LOCAL|LOCK|LONG(?:BLOB|TEXT)|LOOP|MATCH(?:ED)?|MEDIUM(?:BLOB|INT|TEXT)|MERGE|MIDDLEINT|MINUTE|MODE|MODIFIES|MODIFY|MONTH|MULTI(?:LINESTRING|POINT|POLYGON)|NATIONAL|NATURAL|NCHAR|NEXT|NO|NONCLUSTERED|NULLIF|NUMERIC|OFF?|OFFSETS?|ON|OPEN(?:DATASOURCE|QUERY|ROWSET)?|OPTIMIZE|OPTION(?:ALLY)?|ORDER|OUT(?:ER|FILE)?|OVER|PARTIAL|PARTITION|PERCENT|PIVOT|PLAN|POINT|POLYGON|PRECEDING|PRECISION|PREPARE|PREV|PRIMARY|PRINT|PRIVILEGES|PROC(?:EDURE)?|PUBLIC|PURGE|QUICK|RAISERROR|READS?|REAL|RECONFIGURE|REFERENCES|RELEASE|RENAME|REPEAT(?:ABLE)?|REPLACE|REPLICATION|REQUIRE|RESIGNAL|RESTORE|RESTRICT|RETURN(?:ING|S)?|REVOKE|RIGHT|ROLLBACK|ROUTINE|ROW(?:COUNT|GUIDCOL|S)?|RTREE|RULE|SAVE(?:POINT)?|SCHEMA|SECOND|SELECT|SERIAL(?:IZABLE)?|SESSION(?:_USER)?|SET(?:USER)?|SHARE|SHOW|SHUTDOWN|SIMPLE|SMALLINT|SNAPSHOT|SOME|SONAME|SQL|START(?:ING)?|STATISTICS|STATUS|STRIPED|SYSTEM_USER|TABLES?|TABLESPACE|TEMP(?:ORARY|TABLE)?|TERMINATED|TEXT(?:SIZE)?|THEN|TIME(?:STAMP)?|TINY(?:BLOB|INT|TEXT)|TOP?|TRAN(?:SACTIONS?)?|TRIGGER|TRUNCATE|TSEQUAL|TYPES?|UNBOUNDED|UNCOMMITTED|UNDEFINED|UNION|UNIQUE|UNLOCK|UNPIVOT|UNSIGNED|UPDATE(?:TEXT)?|USAGE|USE|USER|USING|VALUES?|VAR(?:BINARY|CHAR|CHARACTER|YING)|VIEW|WAITFOR|WARNINGS|WHEN|WHERE|WHILE|WITH(?: ROLLUP|IN)?|WORK|WRITE(?:TEXT)?|YEAR)\\b/i,\n    boolean: /\\b(?:FALSE|NULL|TRUE)\\b/i,\n    number: /\\b0x[\\da-f]+\\b|\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+\\b/i,\n    operator:\n      /[-+*\\/=%^~]|&&?|\\|\\|?|!=?|<(?:=>?|<|>)?|>[>=]?|\\b(?:AND|BETWEEN|DIV|ILIKE|IN|IS|LIKE|NOT|OR|REGEXP|RLIKE|SOUNDS LIKE|XOR)\\b/i,\n    punctuation: /[;[\\]()`,.]/\n  }\n}\n","'use strict'\n\nmodule.exports = squirrel\nsquirrel.displayName = 'squirrel'\nsquirrel.aliases = []\nfunction squirrel(Prism) {\n  Prism.languages.squirrel = Prism.languages.extend('clike', {\n    comment: [\n      Prism.languages.clike['comment'][0],\n      {\n        pattern: /(^|[^\\\\:])(?:\\/\\/|#).*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\\\\\"'@])(?:@\"(?:[^\"]|\"\")*\"(?!\")|\"(?:[^\\\\\\r\\n\"]|\\\\.)*\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    'class-name': {\n      pattern: /(\\b(?:class|enum|extends|instanceof)\\s+)\\w+(?:\\.\\w+)*/,\n      lookbehind: true,\n      inside: {\n        punctuation: /\\./\n      }\n    },\n    keyword:\n      /\\b(?:__FILE__|__LINE__|base|break|case|catch|class|clone|const|constructor|continue|default|delete|else|enum|extends|for|foreach|function|if|in|instanceof|local|null|resume|return|static|switch|this|throw|try|typeof|while|yield)\\b/,\n    number: /\\b(?:0x[0-9a-fA-F]+|\\d+(?:\\.(?:\\d+|[eE][+-]?\\d+))?)\\b/,\n    operator: /\\+\\+|--|<=>|<[-<]|>>>?|&&?|\\|\\|?|[-+*/%!=<>]=?|[~^]|::?/,\n    punctuation: /[(){}\\[\\],;.]/\n  })\n  Prism.languages.insertBefore('squirrel', 'string', {\n    char: {\n      pattern: /(^|[^\\\\\"'])'(?:[^\\\\']|\\\\(?:[xuU][0-9a-fA-F]{0,8}|[\\s\\S]))'/,\n      lookbehind: true,\n      greedy: true\n    }\n  })\n  Prism.languages.insertBefore('squirrel', 'operator', {\n    'attribute-punctuation': {\n      pattern: /<\\/|\\/>/,\n      alias: 'important'\n    },\n    lambda: {\n      pattern: /@(?=\\()/,\n      alias: 'operator'\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = stan\nstan.displayName = 'stan'\nstan.aliases = []\nfunction stan(Prism) {\n  ;(function (Prism) {\n    // https://mc-stan.org/docs/2_28/reference-manual/bnf-grammars.html\n    var higherOrderFunctions =\n      /\\b(?:algebra_solver|algebra_solver_newton|integrate_1d|integrate_ode|integrate_ode_bdf|integrate_ode_rk45|map_rect|ode_(?:adams|bdf|ckrk|rk45)(?:_tol)?|ode_adjoint_tol_ctl|reduce_sum|reduce_sum_static)\\b/\n    Prism.languages.stan = {\n      comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\/|#(?!include).*/,\n      string: {\n        // String literals can contain spaces and any printable ASCII characters except for \" and \\\n        // https://mc-stan.org/docs/2_24/reference-manual/print-statements-section.html#string-literals\n        pattern: /\"[\\x20\\x21\\x23-\\x5B\\x5D-\\x7E]*\"/,\n        greedy: true\n      },\n      directive: {\n        pattern: /^([ \\t]*)#include\\b.*/m,\n        lookbehind: true,\n        alias: 'property'\n      },\n      'function-arg': {\n        pattern: RegExp(\n          '(' +\n            higherOrderFunctions.source +\n            /\\s*\\(\\s*/.source +\n            ')' +\n            /[a-zA-Z]\\w*/.source\n        ),\n        lookbehind: true,\n        alias: 'function'\n      },\n      constraint: {\n        pattern: /(\\b(?:int|matrix|real|row_vector|vector)\\s*)<[^<>]*>/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /(=\\s*)\\S(?:\\S|\\s+(?!\\s))*?(?=\\s*(?:>$|,\\s*\\w+\\s*=))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          property: /\\b[a-z]\\w*(?=\\s*=)/i,\n          operator: /=/,\n          punctuation: /^<|>$|,/\n        }\n      },\n      keyword: [\n        {\n          pattern:\n            /\\bdata(?=\\s*\\{)|\\b(?:functions|generated|model|parameters|quantities|transformed)\\b/,\n          alias: 'program-block'\n        },\n        /\\b(?:array|break|cholesky_factor_corr|cholesky_factor_cov|complex|continue|corr_matrix|cov_matrix|data|else|for|if|in|increment_log_prob|int|matrix|ordered|positive_ordered|print|real|reject|return|row_vector|simplex|target|unit_vector|vector|void|while)\\b/, // these are functions that are known to take another function as their first argument.\n        higherOrderFunctions\n      ],\n      function: /\\b[a-z]\\w*(?=\\s*\\()/i,\n      number:\n        /(?:\\b\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\B\\.\\d+(?:_\\d+)*)(?:E[+-]?\\d+(?:_\\d+)*)?i?(?!\\w)/i,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: /<-|\\.[*/]=?|\\|\\|?|&&|[!=<>+\\-*/]=?|['^%~?:]/,\n      punctuation: /[()\\[\\]{},;]/\n    }\n    Prism.languages.stan.constraint.inside.expression.inside =\n      Prism.languages.stan\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = stylus\nstylus.displayName = 'stylus'\nstylus.aliases = []\nfunction stylus(Prism) {\n  ;(function (Prism) {\n    var unit = {\n      pattern: /(\\b\\d+)(?:%|[a-z]+)/,\n      lookbehind: true\n    } // 123 -123 .123 -.123 12.3 -12.3\n    var number = {\n      pattern: /(^|[^\\w.-])-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/,\n      lookbehind: true\n    }\n    var inside = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true\n      },\n      url: {\n        pattern: /\\burl\\(([\"']?).*?\\1\\)/i,\n        greedy: true\n      },\n      string: {\n        pattern: /(\"|')(?:(?!\\1)[^\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\\1/,\n        greedy: true\n      },\n      interpolation: null,\n      // See below\n      func: null,\n      // See below\n      important: /\\B!(?:important|optional)\\b/i,\n      keyword: {\n        pattern: /(^|\\s+)(?:(?:else|for|if|return|unless)(?=\\s|$)|@[\\w-]+)/,\n        lookbehind: true\n      },\n      hexcode: /#[\\da-f]{3,6}/i,\n      color: [\n        /\\b(?:AliceBlue|AntiqueWhite|Aqua|Aquamarine|Azure|Beige|Bisque|Black|BlanchedAlmond|Blue|BlueViolet|Brown|BurlyWood|CadetBlue|Chartreuse|Chocolate|Coral|CornflowerBlue|Cornsilk|Crimson|Cyan|DarkBlue|DarkCyan|DarkGoldenRod|DarkGr[ae]y|DarkGreen|DarkKhaki|DarkMagenta|DarkOliveGreen|DarkOrange|DarkOrchid|DarkRed|DarkSalmon|DarkSeaGreen|DarkSlateBlue|DarkSlateGr[ae]y|DarkTurquoise|DarkViolet|DeepPink|DeepSkyBlue|DimGr[ae]y|DodgerBlue|FireBrick|FloralWhite|ForestGreen|Fuchsia|Gainsboro|GhostWhite|Gold|GoldenRod|Gr[ae]y|Green|GreenYellow|HoneyDew|HotPink|IndianRed|Indigo|Ivory|Khaki|Lavender|LavenderBlush|LawnGreen|LemonChiffon|LightBlue|LightCoral|LightCyan|LightGoldenRodYellow|LightGr[ae]y|LightGreen|LightPink|LightSalmon|LightSeaGreen|LightSkyBlue|LightSlateGr[ae]y|LightSteelBlue|LightYellow|Lime|LimeGreen|Linen|Magenta|Maroon|MediumAquaMarine|MediumBlue|MediumOrchid|MediumPurple|MediumSeaGreen|MediumSlateBlue|MediumSpringGreen|MediumTurquoise|MediumVioletRed|MidnightBlue|MintCream|MistyRose|Moccasin|NavajoWhite|Navy|OldLace|Olive|OliveDrab|Orange|OrangeRed|Orchid|PaleGoldenRod|PaleGreen|PaleTurquoise|PaleVioletRed|PapayaWhip|PeachPuff|Peru|Pink|Plum|PowderBlue|Purple|Red|RosyBrown|RoyalBlue|SaddleBrown|Salmon|SandyBrown|SeaGreen|SeaShell|Sienna|Silver|SkyBlue|SlateBlue|SlateGr[ae]y|Snow|SpringGreen|SteelBlue|Tan|Teal|Thistle|Tomato|Transparent|Turquoise|Violet|Wheat|White|WhiteSmoke|Yellow|YellowGreen)\\b/i,\n        {\n          pattern:\n            /\\b(?:hsl|rgb)\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*\\)\\B|\\b(?:hsl|rgb)a\\(\\s*\\d{1,3}\\s*,\\s*\\d{1,3}%?\\s*,\\s*\\d{1,3}%?\\s*,\\s*(?:0|0?\\.\\d+|1)\\s*\\)\\B/i,\n          inside: {\n            unit: unit,\n            number: number,\n            function: /[\\w-]+(?=\\()/,\n            punctuation: /[(),]/\n          }\n        }\n      ],\n      entity: /\\\\[\\da-f]{1,8}/i,\n      unit: unit,\n      boolean: /\\b(?:false|true)\\b/,\n      operator: [\n        // We want non-word chars around \"-\" because it is\n        // accepted in property names.\n        /~|[+!\\/%<>?=]=?|[-:]=|\\*[*=]?|\\.{2,3}|&&|\\|\\||\\B-\\B|\\b(?:and|in|is(?: a| defined| not|nt)?|not|or)\\b/\n      ],\n      number: number,\n      punctuation: /[{}()\\[\\];:,]/\n    }\n    inside['interpolation'] = {\n      pattern: /\\{[^\\r\\n}:]+\\}/,\n      alias: 'variable',\n      inside: {\n        delimiter: {\n          pattern: /^\\{|\\}$/,\n          alias: 'punctuation'\n        },\n        rest: inside\n      }\n    }\n    inside['func'] = {\n      pattern: /[\\w-]+\\([^)]*\\).*/,\n      inside: {\n        function: /^[^(]+/,\n        rest: inside\n      }\n    }\n    Prism.languages.stylus = {\n      'atrule-declaration': {\n        pattern: /(^[ \\t]*)@.+/m,\n        lookbehind: true,\n        inside: {\n          atrule: /^@[\\w-]+/,\n          rest: inside\n        }\n      },\n      'variable-declaration': {\n        pattern: /(^[ \\t]*)[\\w$-]+\\s*.?=[ \\t]*(?:\\{[^{}]*\\}|\\S.*|$)/m,\n        lookbehind: true,\n        inside: {\n          variable: /^\\S+/,\n          rest: inside\n        }\n      },\n      statement: {\n        pattern: /(^[ \\t]*)(?:else|for|if|return|unless)[ \\t].+/m,\n        lookbehind: true,\n        inside: {\n          keyword: /^\\S+/,\n          rest: inside\n        }\n      },\n      // A property/value pair cannot end with a comma or a brace\n      // It cannot have indented content unless it ended with a semicolon\n      'property-declaration': {\n        pattern:\n          /((?:^|\\{)([ \\t]*))(?:[\\w-]|\\{[^}\\r\\n]+\\})+(?:\\s*:\\s*|[ \\t]+)(?!\\s)[^{\\r\\n]*(?:;|[^{\\r\\n,]$(?!(?:\\r?\\n|\\r)(?:\\{|\\2[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          property: {\n            pattern: /^[^\\s:]+/,\n            inside: {\n              interpolation: inside.interpolation\n            }\n          },\n          rest: inside\n        }\n      },\n      // A selector can contain parentheses only as part of a pseudo-element\n      // It can span multiple lines.\n      // It must end with a comma or an accolade or have indented content.\n      selector: {\n        pattern:\n          /(^[ \\t]*)(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)(?:(?:\\r?\\n|\\r)(?:\\1(?:(?=\\S)(?:[^{}\\r\\n:()]|::?[\\w-]+(?:\\([^)\\r\\n]*\\)|(?![\\w-]))|\\{[^}\\r\\n]+\\})+)))*(?:,$|\\{|(?=(?:\\r?\\n|\\r)(?:\\{|\\1[ \\t])))/m,\n        lookbehind: true,\n        inside: {\n          interpolation: inside.interpolation,\n          comment: inside.comment,\n          punctuation: /[{},]/\n        }\n      },\n      func: inside.func,\n      string: inside.string,\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n        lookbehind: true,\n        greedy: true\n      },\n      interpolation: inside.interpolation,\n      punctuation: /[{}()\\[\\];:.]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = swift\nswift.displayName = 'swift'\nswift.aliases = []\nfunction swift(Prism) {\n  Prism.languages.swift = {\n    comment: {\n      // Nested comments are supported up to 2 levels\n      pattern:\n        /(^|[^\\\\:])(?:\\/\\/.*|\\/\\*(?:[^/*]|\\/(?!\\*)|\\*(?!\\/)|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*\\*\\/)/,\n      lookbehind: true,\n      greedy: true\n    },\n    'string-literal': [\n      // https://docs.swift.org/swift-book/LanguageGuide/StringsAndCharacters.html\n      {\n        pattern: RegExp(\n          /(^|[^\"#])/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^(])|[^\\\\\\r\\n\"])*\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:\\((?:[^()]|\\([^()]*\\))*\\)|[^(])|[^\\\\\"]|\"(?!\"\"))*\"\"\"/\n              .source +\n            ')' +\n            /(?![\"#])/.source\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\\\($/,\n            alias: 'punctuation'\n          },\n          punctuation: /\\\\(?=[\\r\\n])/,\n          string: /[\\s\\S]+/\n        }\n      },\n      {\n        pattern: RegExp(\n          /(^|[^\"#])(#+)/.source +\n            '(?:' + // single-line string\n            /\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|\\r\\n|[^#])|[^\\\\\\r\\n])*?\"/\n              .source +\n            '|' + // multi-line string\n            /\"\"\"(?:\\\\(?:#+\\((?:[^()]|\\([^()]*\\))*\\)|[^#])|[^\\\\])*?\"\"\"/.source +\n            ')' +\n            '\\\\2'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern: /(\\\\#+\\()(?:[^()]|\\([^()]*\\))*(?=\\))/,\n            lookbehind: true,\n            inside: null // see below\n          },\n          'interpolation-punctuation': {\n            pattern: /^\\)|\\\\#+\\($/,\n            alias: 'punctuation'\n          },\n          string: /[\\s\\S]+/\n        }\n      }\n    ],\n    directive: {\n      // directives with conditions\n      pattern: RegExp(\n        /#/.source +\n          '(?:' +\n          (/(?:elseif|if)\\b/.source +\n            '(?:[ \\t]*' + // This regex is a little complex. It's equivalent to this:\n            //   (?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*<round>)?|<round>)(?:[ \\t]*(?:&&|\\|\\|))?\n            // where <round> is a general parentheses expression.\n            /(?:![ \\t]*)?(?:\\b\\w+\\b(?:[ \\t]*\\((?:[^()]|\\([^()]*\\))*\\))?|\\((?:[^()]|\\([^()]*\\))*\\))(?:[ \\t]*(?:&&|\\|\\|))?/\n              .source +\n            ')+') +\n          '|' +\n          /(?:else|endif)\\b/.source +\n          ')'\n      ),\n      alias: 'property',\n      inside: {\n        'directive-name': /^#\\w+/,\n        boolean: /\\b(?:false|true)\\b/,\n        number: /\\b\\d+(?:\\.\\d+)*\\b/,\n        operator: /!|&&|\\|\\||[<>]=?/,\n        punctuation: /[(),]/\n      }\n    },\n    literal: {\n      pattern:\n        /#(?:colorLiteral|column|dsohandle|file(?:ID|Literal|Path)?|function|imageLiteral|line)\\b/,\n      alias: 'constant'\n    },\n    'other-directive': {\n      pattern: /#\\w+\\b/,\n      alias: 'property'\n    },\n    attribute: {\n      pattern: /@\\w+/,\n      alias: 'atrule'\n    },\n    'function-definition': {\n      pattern: /(\\bfunc\\s+)\\w+/,\n      lookbehind: true,\n      alias: 'function'\n    },\n    label: {\n      // https://docs.swift.org/swift-book/LanguageGuide/ControlFlow.html#ID141\n      pattern:\n        /\\b(break|continue)\\s+\\w+|\\b[a-zA-Z_]\\w*(?=\\s*:\\s*(?:for|repeat|while)\\b)/,\n      lookbehind: true,\n      alias: 'important'\n    },\n    keyword:\n      /\\b(?:Any|Protocol|Self|Type|actor|as|assignment|associatedtype|associativity|async|await|break|case|catch|class|continue|convenience|default|defer|deinit|didSet|do|dynamic|else|enum|extension|fallthrough|fileprivate|final|for|func|get|guard|higherThan|if|import|in|indirect|infix|init|inout|internal|is|isolated|lazy|left|let|lowerThan|mutating|none|nonisolated|nonmutating|open|operator|optional|override|postfix|precedencegroup|prefix|private|protocol|public|repeat|required|rethrows|return|right|safe|self|set|some|static|struct|subscript|super|switch|throw|throws|try|typealias|unowned|unsafe|var|weak|where|while|willSet)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    nil: {\n      pattern: /\\bnil\\b/,\n      alias: 'constant'\n    },\n    'short-argument': /\\$\\d+\\b/,\n    omit: {\n      pattern: /\\b_\\b/,\n      alias: 'keyword'\n    },\n    number:\n      /\\b(?:[\\d_]+(?:\\.[\\de_]+)?|0x[a-f0-9_]+(?:\\.[a-f0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\b/i,\n    // A class name must start with an upper-case letter and be either 1 letter long or contain a lower-case letter.\n    'class-name': /\\b[A-Z](?:[A-Z_\\d]*[a-z]\\w*)?\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    constant: /\\b(?:[A-Z_]{2,}|k[A-Z][A-Za-z_]+)\\b/,\n    // Operators are generic in Swift. Developers can even create new operators (e.g. +++).\n    // https://docs.swift.org/swift-book/ReferenceManual/zzSummaryOfTheGrammar.html#ID481\n    // This regex only supports ASCII operators.\n    operator: /[-+*/%=!<>&|^~?]+|\\.[.\\-+*/%=!<>&|^~?]+/,\n    punctuation: /[{}[\\]();,.:\\\\]/\n  }\n  Prism.languages.swift['string-literal'].forEach(function (rule) {\n    rule.inside['interpolation'].inside = Prism.languages.swift\n  })\n}\n","'use strict'\n\nmodule.exports = systemd\nsystemd.displayName = 'systemd'\nsystemd.aliases = []\nfunction systemd(Prism) {\n  // https://www.freedesktop.org/software/systemd/man/systemd.syntax.html\n  ;(function (Prism) {\n    var comment = {\n      pattern: /^[;#].*/m,\n      greedy: true\n    }\n    var quotesSource = /\"(?:[^\\r\\n\"\\\\]|\\\\(?:[^\\r]|\\r\\n?))*\"(?!\\S)/.source\n    Prism.languages.systemd = {\n      comment: comment,\n      section: {\n        pattern: /^\\[[^\\n\\r\\[\\]]*\\](?=[ \\t]*$)/m,\n        greedy: true,\n        inside: {\n          punctuation: /^\\[|\\]$/,\n          'section-name': {\n            pattern: /[\\s\\S]+/,\n            alias: 'selector'\n          }\n        }\n      },\n      key: {\n        pattern: /^[^\\s=]+(?=[ \\t]*=)/m,\n        greedy: true,\n        alias: 'attr-name'\n      },\n      value: {\n        // This pattern is quite complex because of two properties:\n        //  1) Quotes (strings) must be preceded by a space. Since we can't use lookbehinds, we have to \"resolve\"\n        //     the lookbehind. You will see this in the main loop where spaces are handled separately.\n        //  2) Line continuations.\n        //     After line continuations, empty lines and comments are ignored so we have to consume them.\n        pattern: RegExp(\n          /(=[ \\t]*(?!\\s))/.source + // the value either starts with quotes or not\n            '(?:' +\n            quotesSource +\n            '|(?=[^\"\\r\\n]))' + // main loop\n            '(?:' +\n            (/[^\\s\\\\]/.source + // handle spaces separately because of quotes\n              '|' +\n              '[ \\t]+(?:(?![ \\t\"])|' +\n              quotesSource +\n              ')' + // line continuation\n              '|' +\n              /\\\\[\\r\\n]+(?:[#;].*[\\r\\n]+)*(?![#;])/.source) +\n            ')*'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'attr-value',\n        inside: {\n          comment: comment,\n          quoted: {\n            pattern: RegExp(/(^|\\s)/.source + quotesSource),\n            lookbehind: true,\n            greedy: true\n          },\n          punctuation: /\\\\$/m,\n          boolean: {\n            pattern: /^(?:false|no|off|on|true|yes)$/,\n            greedy: true\n          }\n        }\n      },\n      punctuation: /=/\n    }\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorCsharp = require('./csharp.js')\nmodule.exports = t4Cs\nt4Cs.displayName = 't4Cs'\nt4Cs.aliases = []\nfunction t4Cs(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorCsharp)\n  Prism.languages.t4 = Prism.languages['t4-cs'] =\n    Prism.languages['t4-templating'].createT4('csharp')\n}\n","'use strict'\n\nmodule.exports = t4Templating\nt4Templating.displayName = 't4Templating'\nt4Templating.aliases = []\nfunction t4Templating(Prism) {\n  ;(function (Prism) {\n    function createBlock(prefix, inside, contentAlias) {\n      return {\n        pattern: RegExp('<#' + prefix + '[\\\\s\\\\S]*?#>'),\n        alias: 'block',\n        inside: {\n          delimiter: {\n            pattern: RegExp('^<#' + prefix + '|#>$'),\n            alias: 'important'\n          },\n          content: {\n            pattern: /[\\s\\S]+/,\n            inside: inside,\n            alias: contentAlias\n          }\n        }\n      }\n    }\n    function createT4(insideLang) {\n      var grammar = Prism.languages[insideLang]\n      var className = 'language-' + insideLang\n      return {\n        block: {\n          pattern: /<#[\\s\\S]+?#>/,\n          inside: {\n            directive: createBlock('@', {\n              'attr-value': {\n                pattern: /=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/,\n                inside: {\n                  punctuation: /^=|^[\"']|[\"']$/\n                }\n              },\n              keyword: /\\b\\w+(?=\\s)/,\n              'attr-name': /\\b\\w+/\n            }),\n            expression: createBlock('=', grammar, className),\n            'class-feature': createBlock('\\\\+', grammar, className),\n            standard: createBlock('', grammar, className)\n          }\n        }\n      }\n    }\n    Prism.languages['t4-templating'] = Object.defineProperty({}, 'createT4', {\n      value: createT4\n    })\n  })(Prism)\n}\n","'use strict'\nvar refractorT4Templating = require('./t4-templating.js')\nvar refractorVbnet = require('./vbnet.js')\nmodule.exports = t4Vb\nt4Vb.displayName = 't4Vb'\nt4Vb.aliases = []\nfunction t4Vb(Prism) {\n  Prism.register(refractorT4Templating)\n  Prism.register(refractorVbnet)\n  Prism.languages['t4-vb'] = Prism.languages['t4-templating'].createT4('vbnet')\n}\n","'use strict'\nvar refractorYaml = require('./yaml.js')\nmodule.exports = tap\ntap.displayName = 'tap'\ntap.aliases = []\nfunction tap(Prism) {\n  Prism.register(refractorYaml)\n  // https://en.wikipedia.org/wiki/Test_Anything_Protocol\n  Prism.languages.tap = {\n    fail: /not ok[^#{\\n\\r]*/,\n    pass: /ok[^#{\\n\\r]*/,\n    pragma: /pragma [+-][a-z]+/,\n    bailout: /bail out!.*/i,\n    version: /TAP version \\d+/i,\n    plan: /\\b\\d+\\.\\.\\d+(?: +#.*)?/,\n    subtest: {\n      pattern: /# Subtest(?:: .*)?/,\n      greedy: true\n    },\n    punctuation: /[{}]/,\n    directive: /#.*/,\n    yamlish: {\n      pattern: /(^[ \\t]*)---[\\s\\S]*?[\\r\\n][ \\t]*\\.\\.\\.$/m,\n      lookbehind: true,\n      inside: Prism.languages.yaml,\n      alias: 'language-yaml'\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = tcl\ntcl.displayName = 'tcl'\ntcl.aliases = []\nfunction tcl(Prism) {\n  Prism.languages.tcl = {\n    comment: {\n      pattern: /(^|[^\\\\])#.*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n      greedy: true\n    },\n    variable: [\n      {\n        pattern: /(\\$)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/,\n        lookbehind: true\n      },\n      {\n        pattern: /(\\$)\\{[^}]+\\}/,\n        lookbehind: true\n      },\n      {\n        pattern: /(^[\\t ]*set[ \\t]+)(?:::)?(?:[a-zA-Z0-9]+::)*\\w+/m,\n        lookbehind: true\n      }\n    ],\n    function: {\n      pattern: /(^[\\t ]*proc[ \\t]+)\\S+/m,\n      lookbehind: true\n    },\n    builtin: [\n      {\n        pattern:\n          /(^[\\t ]*)(?:break|class|continue|error|eval|exit|for|foreach|if|proc|return|switch|while)\\b/m,\n        lookbehind: true\n      },\n      /\\b(?:else|elseif)\\b/\n    ],\n    scope: {\n      pattern: /(^[\\t ]*)(?:global|upvar|variable)\\b/m,\n      lookbehind: true,\n      alias: 'constant'\n    },\n    keyword: {\n      pattern:\n        /(^[\\t ]*|\\[)(?:Safe_Base|Tcl|after|append|apply|array|auto_(?:execok|import|load|mkindex|qualify|reset)|automkindex_old|bgerror|binary|catch|cd|chan|clock|close|concat|dde|dict|encoding|eof|exec|expr|fblocked|fconfigure|fcopy|file(?:event|name)?|flush|gets|glob|history|http|incr|info|interp|join|lappend|lassign|lindex|linsert|list|llength|load|lrange|lrepeat|lreplace|lreverse|lsearch|lset|lsort|math(?:func|op)|memory|msgcat|namespace|open|package|parray|pid|pkg_mkIndex|platform|puts|pwd|re_syntax|read|refchan|regexp|registry|regsub|rename|scan|seek|set|socket|source|split|string|subst|tcl(?:_endOfWord|_findLibrary|startOf(?:Next|Previous)Word|test|vars|wordBreak(?:After|Before))|tell|time|tm|trace|unknown|unload|unset|update|uplevel|vwait)\\b/m,\n      lookbehind: true\n    },\n    operator:\n      /!=?|\\*\\*?|==|&&?|\\|\\|?|<[=<]?|>[=>]?|[-+~\\/%?^]|\\b(?:eq|in|ne|ni)\\b/,\n    punctuation: /[{}()\\[\\]]/\n  }\n}\n","'use strict'\n\nmodule.exports = textile\ntextile.displayName = 'textile'\ntextile.aliases = []\nfunction textile(Prism) {\n  ;(function (Prism) {\n    // We don't allow for pipes inside parentheses\n    // to not break table pattern |(. foo |). bar |\n    var modifierRegex = /\\([^|()\\n]+\\)|\\[[^\\]\\n]+\\]|\\{[^}\\n]+\\}/.source // Opening and closing parentheses which are not a modifier\n    // This pattern is necessary to prevent exponential backtracking\n    var parenthesesRegex = /\\)|\\((?![^|()\\n]+\\))/.source\n    /**\n     * @param {string} source\n     * @param {string} [flags]\n     */\n    function withModifier(source, flags) {\n      return RegExp(\n        source\n          .replace(/<MOD>/g, function () {\n            return '(?:' + modifierRegex + ')'\n          })\n          .replace(/<PAR>/g, function () {\n            return '(?:' + parenthesesRegex + ')'\n          }),\n        flags || ''\n      )\n    }\n    var modifierTokens = {\n      css: {\n        pattern: /\\{[^{}]+\\}/,\n        inside: {\n          rest: Prism.languages.css\n        }\n      },\n      'class-id': {\n        pattern: /(\\()[^()]+(?=\\))/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      lang: {\n        pattern: /(\\[)[^\\[\\]]+(?=\\])/,\n        lookbehind: true,\n        alias: 'attr-value'\n      },\n      // Anything else is punctuation (the first pattern is for row/col spans inside tables)\n      punctuation: /[\\\\\\/]\\d+|\\S/\n    }\n    var textile = (Prism.languages.textile = Prism.languages.extend('markup', {\n      phrase: {\n        pattern: /(^|\\r|\\n)\\S[\\s\\S]*?(?=$|\\r?\\n\\r?\\n|\\r\\r)/,\n        lookbehind: true,\n        inside: {\n          // h1. Header 1\n          'block-tag': {\n            pattern: withModifier(/^[a-z]\\w*(?:<MOD>|<PAR>|[<>=])*\\./.source),\n            inside: {\n              modifier: {\n                pattern: withModifier(\n                  /(^[a-z]\\w*)(?:<MOD>|<PAR>|[<>=])+(?=\\.)/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              tag: /^[a-z]\\w*/,\n              punctuation: /\\.$/\n            }\n          },\n          // # List item\n          // * List item\n          list: {\n            pattern: withModifier(/^[*#]+<MOD>*\\s+\\S.*/.source, 'm'),\n            inside: {\n              modifier: {\n                pattern: withModifier(/(^[*#]+)<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /^[*#]+/\n            }\n          },\n          // | cell | cell | cell |\n          table: {\n            // Modifiers can be applied to the row: {color:red}.|1|2|3|\n            // or the cell: |{color:red}.1|2|3|\n            pattern: withModifier(\n              /^(?:(?:<MOD>|<PAR>|[<>=^~])+\\.\\s*)?(?:\\|(?:(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.|(?!(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+\\.))[^|]*)+\\|/\n                .source,\n              'm'\n            ),\n            inside: {\n              modifier: {\n                // Modifiers for rows after the first one are\n                // preceded by a pipe and a line feed\n                pattern: withModifier(\n                  /(^|\\|(?:\\r?\\n|\\r)?)(?:<MOD>|<PAR>|[<>=^~_]|[\\\\/]\\d+)+(?=\\.)/\n                    .source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /\\||^\\./\n            }\n          },\n          inline: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /(^|[^a-zA-Z\\d])(\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>*.+?\\2(?![a-zA-Z\\d])/\n                .source\n            ),\n            lookbehind: true,\n            inside: {\n              // Note: superscripts and subscripts are not handled specifically\n              // *bold*, **bold**\n              bold: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(\\*\\*?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // _italic_, __italic__\n              italic: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^(__?)<MOD>*).+?(?=\\2)/.source),\n                lookbehind: true\n              },\n              // ??cite??\n              cite: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\?\\?<MOD>*).+?(?=\\?\\?)/.source),\n                lookbehind: true,\n                alias: 'string'\n              },\n              // @code@\n              code: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^@<MOD>*).+?(?=@)/.source),\n                lookbehind: true,\n                alias: 'keyword'\n              },\n              // +inserted+\n              inserted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\\+<MOD>*).+?(?=\\+)/.source),\n                lookbehind: true\n              },\n              // -deleted-\n              deleted: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^-<MOD>*).+?(?=-)/.source),\n                lookbehind: true\n              },\n              // %span%\n              span: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^%<MOD>*).+?(?=%)/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(\n                  /(^\\*\\*|__|\\?\\?|[*_%@+\\-^~])<MOD>+/.source\n                ),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              punctuation: /[*_%?@+\\-^~]+/\n            }\n          },\n          // [alias]http://example.com\n          'link-ref': {\n            pattern: /^\\[[^\\]]+\\]\\S+$/m,\n            inside: {\n              string: {\n                pattern: /(^\\[)[^\\]]+(?=\\])/,\n                lookbehind: true\n              },\n              url: {\n                pattern: /(^\\])\\S+$/,\n                lookbehind: true\n              },\n              punctuation: /[\\[\\]]/\n            }\n          },\n          // \"text\":http://example.com\n          // \"text\":link-ref\n          link: {\n            // eslint-disable-next-line regexp/no-super-linear-backtracking\n            pattern: withModifier(\n              /\"<MOD>*[^\"]+\":.+?(?=[^\\w/]?(?:\\s|$))/.source\n            ),\n            inside: {\n              text: {\n                // eslint-disable-next-line regexp/no-super-linear-backtracking\n                pattern: withModifier(/(^\"<MOD>*)[^\"]+(?=\")/.source),\n                lookbehind: true\n              },\n              modifier: {\n                pattern: withModifier(/(^\")<MOD>+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[\":]/\n            }\n          },\n          // !image.jpg!\n          // !image.jpg(Title)!:http://example.com\n          image: {\n            pattern: withModifier(\n              /!(?:<MOD>|<PAR>|[<>=])*(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?!(?::.+?(?=[^\\w/]?(?:\\s|$)))?/\n                .source\n            ),\n            inside: {\n              source: {\n                pattern: withModifier(\n                  /(^!(?:<MOD>|<PAR>|[<>=])*)(?![<>=])[^!\\s()]+(?:\\([^)]+\\))?(?=!)/\n                    .source\n                ),\n                lookbehind: true,\n                alias: 'url'\n              },\n              modifier: {\n                pattern: withModifier(/(^!)(?:<MOD>|<PAR>|[<>=])+/.source),\n                lookbehind: true,\n                inside: modifierTokens\n              },\n              url: {\n                pattern: /(:).+/,\n                lookbehind: true\n              },\n              punctuation: /[!:]/\n            }\n          },\n          // Footnote[1]\n          footnote: {\n            pattern: /\\b\\[\\d+\\]/,\n            alias: 'comment',\n            inside: {\n              punctuation: /\\[|\\]/\n            }\n          },\n          // CSS(Cascading Style Sheet)\n          acronym: {\n            pattern: /\\b[A-Z\\d]+\\([^)]+\\)/,\n            inside: {\n              comment: {\n                pattern: /(\\()[^()]+(?=\\))/,\n                lookbehind: true\n              },\n              punctuation: /[()]/\n            }\n          },\n          // Prism(C)\n          mark: {\n            pattern: /\\b\\((?:C|R|TM)\\)/,\n            alias: 'comment',\n            inside: {\n              punctuation: /[()]/\n            }\n          }\n        }\n      }\n    }))\n    var phraseInside = textile['phrase'].inside\n    var nestedPatterns = {\n      inline: phraseInside['inline'],\n      link: phraseInside['link'],\n      image: phraseInside['image'],\n      footnote: phraseInside['footnote'],\n      acronym: phraseInside['acronym'],\n      mark: phraseInside['mark']\n    } // Only allow alpha-numeric HTML tags, not XML tags\n    textile.tag.pattern =\n      /<\\/?(?!\\d)[a-z0-9]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/i // Allow some nesting\n    var phraseInlineInside = phraseInside['inline'].inside\n    phraseInlineInside['bold'].inside = nestedPatterns\n    phraseInlineInside['italic'].inside = nestedPatterns\n    phraseInlineInside['inserted'].inside = nestedPatterns\n    phraseInlineInside['deleted'].inside = nestedPatterns\n    phraseInlineInside['span'].inside = nestedPatterns // Allow some styles inside table cells\n    var phraseTableInside = phraseInside['table'].inside\n    phraseTableInside['inline'] = nestedPatterns['inline']\n    phraseTableInside['link'] = nestedPatterns['link']\n    phraseTableInside['image'] = nestedPatterns['image']\n    phraseTableInside['footnote'] = nestedPatterns['footnote']\n    phraseTableInside['acronym'] = nestedPatterns['acronym']\n    phraseTableInside['mark'] = nestedPatterns['mark']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = toml\ntoml.displayName = 'toml'\ntoml.aliases = []\nfunction toml(Prism) {\n  ;(function (Prism) {\n    var key = /(?:[\\w-]+|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\")/.source\n    /**\n     * @param {string} pattern\n     */\n    function insertKey(pattern) {\n      return pattern.replace(/__/g, function () {\n        return key\n      })\n    }\n    Prism.languages.toml = {\n      comment: {\n        pattern: /#.*/,\n        greedy: true\n      },\n      table: {\n        pattern: RegExp(\n          insertKey(\n            /(^[\\t ]*\\[\\s*(?:\\[\\s*)?)__(?:\\s*\\.\\s*__)*(?=\\s*\\])/.source\n          ),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'class-name'\n      },\n      key: {\n        pattern: RegExp(\n          insertKey(/(^[\\t ]*|[{,]\\s*)__(?:\\s*\\.\\s*__)*(?=\\s*=)/.source),\n          'm'\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'property'\n      },\n      string: {\n        pattern:\n          /\"\"\"(?:\\\\[\\s\\S]|[^\\\\])*?\"\"\"|'''[\\s\\S]*?'''|'[^'\\n\\r]*'|\"(?:\\\\.|[^\\\\\"\\r\\n])*\"/,\n        greedy: true\n      },\n      date: [\n        {\n          // Offset Date-Time, Local Date-Time, Local Date\n          pattern:\n            /\\b\\d{4}-\\d{2}-\\d{2}(?:[T\\s]\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|[+-]\\d{2}:\\d{2})?)?\\b/i,\n          alias: 'number'\n        },\n        {\n          // Local Time\n          pattern: /\\b\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?\\b/,\n          alias: 'number'\n        }\n      ],\n      number:\n        /(?:\\b0(?:x[\\da-zA-Z]+(?:_[\\da-zA-Z]+)*|o[0-7]+(?:_[0-7]+)*|b[10]+(?:_[10]+)*))\\b|[-+]?\\b\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?\\b|[-+]?\\b(?:inf|nan)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      punctuation: /[.,=[\\]{}]/\n    }\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = tremor\ntremor.displayName = 'tremor'\ntremor.aliases = []\nfunction tremor(Prism) {\n  ;(function (Prism) {\n    Prism.languages.tremor = {\n      comment: {\n        pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:--|\\/\\/|#).*)/,\n        lookbehind: true\n      },\n      'interpolated-string': null,\n      // see below\n      extractor: {\n        pattern: /\\b[a-z_]\\w*\\|(?:[^\\r\\n\\\\|]|\\\\(?:\\r\\n|[\\s\\S]))*\\|/i,\n        greedy: true,\n        inside: {\n          regex: {\n            pattern: /(^re)\\|[\\s\\S]+/,\n            lookbehind: true\n          },\n          function: /^\\w+/,\n          value: /\\|[\\s\\S]+/\n        }\n      },\n      identifier: {\n        pattern: /`[^`]*`/,\n        greedy: true\n      },\n      function: /\\b[a-z_]\\w*(?=\\s*(?:::\\s*<|\\())\\b/,\n      keyword:\n        /\\b(?:args|as|by|case|config|connect|connector|const|copy|create|default|define|deploy|drop|each|emit|end|erase|event|flow|fn|for|from|group|having|insert|into|intrinsic|let|links|match|merge|mod|move|of|operator|patch|pipeline|recur|script|select|set|sliding|state|stream|to|tumbling|update|use|when|where|window|with)\\b/,\n      boolean: /\\b(?:false|null|true)\\b/i,\n      number:\n        /\\b(?:0b[01_]*|0x[0-9a-fA-F_]*|\\d[\\d_]*(?:\\.\\d[\\d_]*)?(?:[Ee][+-]?[\\d_]+)?)\\b/,\n      'pattern-punctuation': {\n        pattern: /%(?=[({[])/,\n        alias: 'punctuation'\n      },\n      operator:\n        /[-+*\\/%~!^]=?|=[=>]?|&[&=]?|\\|[|=]?|<<?=?|>>?>?=?|(?:absent|and|not|or|present|xor)\\b/,\n      punctuation: /::|[;\\[\\]()\\{\\},.:]/\n    }\n    var interpolationPattern =\n      /#\\{(?:[^\"{}]|\\{[^{}]*\\}|\"(?:[^\"\\\\\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\")*\\}/.source\n    Prism.languages.tremor['interpolated-string'] = {\n      pattern: RegExp(\n        /(^|[^\\\\])/.source +\n          '(?:' +\n          '\"\"\"(?:' +\n          /[^\"\\\\#]|\\\\[\\s\\S]|\"(?!\"\")|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"\"\"' +\n          '|' +\n          '\"(?:' +\n          /[^\"\\\\\\r\\n#]|\\\\(?:\\r\\n|[\\s\\S])|#(?!\\{)/.source +\n          '|' +\n          interpolationPattern +\n          ')*\"' +\n          ')'\n      ),\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: RegExp(interpolationPattern),\n          inside: {\n            punctuation: /^#\\{|\\}$/,\n            expression: {\n              pattern: /[\\s\\S]+/,\n              inside: Prism.languages.tremor\n            }\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n    Prism.languages.troy = Prism.languages['tremor']\n    Prism.languages.trickle = Prism.languages['tremor']\n  })(Prism)\n}\n","'use strict'\nvar refractorJsx = require('./jsx.js')\nvar refractorTypescript = require('./typescript.js')\nmodule.exports = tsx\ntsx.displayName = 'tsx'\ntsx.aliases = []\nfunction tsx(Prism) {\n  Prism.register(refractorJsx)\n  Prism.register(refractorTypescript)\n  ;(function (Prism) {\n    var typescript = Prism.util.clone(Prism.languages.typescript)\n    Prism.languages.tsx = Prism.languages.extend('jsx', typescript) // doesn't work with TS because TS is too complex\n    delete Prism.languages.tsx['parameter']\n    delete Prism.languages.tsx['literal-property'] // This will prevent collisions between TSX tags and TS generic types.\n    // Idea by https://github.com/karlhorky\n    // Discussion: https://github.com/PrismJS/prism/issues/2594#issuecomment-710666928\n    var tag = Prism.languages.tsx.tag\n    tag.pattern = RegExp(\n      /(^|[^\\w$]|(?=<\\/))/.source + '(?:' + tag.pattern.source + ')',\n      tag.pattern.flags\n    )\n    tag.lookbehind = true\n  })(Prism)\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function (Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword:\n        /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|SWITCH|TAGS|THROW|TRY|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|not|or)\\b/,\n      variable: {\n        pattern: /\\b[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*\\b/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%\\]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function (env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function (env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = turtle\nturtle.displayName = 'turtle'\nturtle.aliases = []\nfunction turtle(Prism) {\n  Prism.languages.turtle = {\n    comment: {\n      pattern: /#.*/,\n      greedy: true\n    },\n    'multiline-string': {\n      pattern:\n        /\"\"\"(?:(?:\"\"?)?(?:[^\"\\\\]|\\\\.))*\"\"\"|'''(?:(?:''?)?(?:[^'\\\\]|\\\\.))*'''/,\n      greedy: true,\n      alias: 'string',\n      inside: {\n        comment: /#.*/\n      }\n    },\n    string: {\n      pattern: /\"(?:[^\\\\\"\\r\\n]|\\\\.)*\"|'(?:[^\\\\'\\r\\n]|\\\\.)*'/,\n      greedy: true\n    },\n    url: {\n      pattern:\n        /<(?:[^\\x00-\\x20<>\"{}|^`\\\\]|\\\\(?:u[\\da-fA-F]{4}|U[\\da-fA-F]{8}))*>/,\n      greedy: true,\n      inside: {\n        punctuation: /[<>]/\n      }\n    },\n    function: {\n      pattern:\n        /(?:(?![-.\\d\\xB7])[-.\\w\\xB7\\xC0-\\uFFFD]+)?:(?:(?![-.])(?:[-.:\\w\\xC0-\\uFFFD]|%[\\da-f]{2}|\\\\.)+)?/i,\n      inside: {\n        'local-name': {\n          pattern: /([^:]*:)[\\s\\S]+/,\n          lookbehind: true\n        },\n        prefix: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            punctuation: /:/\n          }\n        }\n      }\n    },\n    number: /[+-]?\\b\\d+(?:\\.\\d*)?(?:e[+-]?\\d+)?/i,\n    punctuation: /[{}.,;()[\\]]|\\^\\^/,\n    boolean: /\\b(?:false|true)\\b/,\n    keyword: [/(?:\\ba|@prefix|@base)\\b|=/, /\\b(?:base|graph|prefix)\\b/i],\n    tag: {\n      pattern: /@[a-z]+(?:-[a-z\\d]+)*/i,\n      inside: {\n        punctuation: /@/\n      }\n    }\n  }\n  Prism.languages.trig = Prism.languages['turtle']\n}\n","'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  Prism.languages.twig = {\n    comment: /^\\{#[\\s\\S]*?#\\}$/,\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      }\n    },\n    keyword: /\\b(?:even|if|odd)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n  Prism.hooks.add('before-tokenize', function (env) {\n    if (env.language !== 'twig') {\n      return\n    }\n    var pattern = /\\{(?:#[\\s\\S]*?#|%[\\s\\S]*?%|\\{[\\s\\S]*?\\})\\}/g\n    Prism.languages['markup-templating'].buildPlaceholders(env, 'twig', pattern)\n  })\n  Prism.hooks.add('after-tokenize', function (env) {\n    Prism.languages['markup-templating'].tokenizePlaceholders(env, 'twig')\n  })\n}\n","'use strict'\n\nmodule.exports = typescript\ntypescript.displayName = 'typescript'\ntypescript.aliases = ['ts']\nfunction typescript(Prism) {\n  ;(function (Prism) {\n    Prism.languages.typescript = Prism.languages.extend('javascript', {\n      'class-name': {\n        pattern:\n          /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n        lookbehind: true,\n        greedy: true,\n        inside: null // see below\n      },\n      builtin:\n        /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/\n    }) // The keywords TypeScript adds to JavaScript\n    Prism.languages.typescript.keyword.push(\n      /\\b(?:abstract|declare|is|keyof|readonly|require)\\b/, // keywords that have to be followed by an identifier\n      /\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/, // This is for `import type *, {}`\n      /\\btype\\b(?=\\s*(?:[\\{*]|$))/\n    ) // doesn't work with TS because TS is too complex\n    delete Prism.languages.typescript['parameter']\n    delete Prism.languages.typescript['literal-property'] // a version of typescript specifically for highlighting types\n    var typeInside = Prism.languages.extend('typescript', {})\n    delete typeInside['class-name']\n    Prism.languages.typescript['class-name'].inside = typeInside\n    Prism.languages.insertBefore('typescript', 'function', {\n      decorator: {\n        pattern: /@[$\\w\\xA0-\\uFFFF]+/,\n        inside: {\n          at: {\n            pattern: /^@/,\n            alias: 'operator'\n          },\n          function: /^[\\s\\S]+/\n        }\n      },\n      'generic-function': {\n        // e.g. foo<T extends \"bar\" | \"baz\">( ...\n        pattern:\n          /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n        greedy: true,\n        inside: {\n          function: /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n          generic: {\n            pattern: /<[\\s\\S]+/,\n            // everything after the first <\n            alias: 'class-name',\n            inside: typeInside\n          }\n        }\n      }\n    })\n    Prism.languages.ts = Prism.languages.typescript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = typoscript\ntyposcript.displayName = 'typoscript'\ntyposcript.aliases = ['tsconfig']\nfunction typoscript(Prism) {\n  ;(function (Prism) {\n    var keywords =\n      /\\b(?:ACT|ACTIFSUB|CARRAY|CASE|CLEARGIF|COA|COA_INT|CONSTANTS|CONTENT|CUR|EDITPANEL|EFFECT|EXT|FILE|FLUIDTEMPLATE|FORM|FRAME|FRAMESET|GIFBUILDER|GMENU|GMENU_FOLDOUT|GMENU_LAYERS|GP|HMENU|HRULER|HTML|IENV|IFSUB|IMAGE|IMGMENU|IMGMENUITEM|IMGTEXT|IMG_RESOURCE|INCLUDE_TYPOSCRIPT|JSMENU|JSMENUITEM|LLL|LOAD_REGISTER|NO|PAGE|RECORDS|RESTORE_REGISTER|TEMPLATE|TEXT|TMENU|TMENUITEM|TMENU_LAYERS|USER|USER_INT|_GIFBUILDER|global|globalString|globalVar)\\b/\n    Prism.languages.typoscript = {\n      comment: [\n        {\n          // multiline comments /* */\n          pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n          lookbehind: true\n        },\n        {\n          // double-slash comments - ignored when backslashes or colon is found in front\n          // also ignored whenever directly after an equal-sign, because it would probably be an url without protocol\n          pattern: /(^|[^\\\\:= \\t]|(?:^|[^= \\t])[ \\t]+)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // hash comments - ignored when leading quote is found for hex colors in strings\n          pattern: /(^|[^\"'])#.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      function: [\n        {\n          // old include style\n          pattern:\n            /<INCLUDE_TYPOSCRIPT:\\s*source\\s*=\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')\\s*>/,\n          inside: {\n            string: {\n              pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n              inside: {\n                keyword: keywords\n              }\n            },\n            keyword: {\n              pattern: /INCLUDE_TYPOSCRIPT/\n            }\n          }\n        },\n        {\n          // new include style\n          pattern: /@import\\s*(?:\"[^\"\\r\\n]*\"|'[^'\\r\\n]*')/,\n          inside: {\n            string: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/\n          }\n        }\n      ],\n      string: {\n        pattern: /^([^=]*=[< ]?)(?:(?!\\]\\n).)*/,\n        lookbehind: true,\n        inside: {\n          function: /\\{\\$.*\\}/,\n          // constants include\n          keyword: keywords,\n          number: /^\\d+$/,\n          punctuation: /[,|:]/\n        }\n      },\n      keyword: keywords,\n      number: {\n        // special highlighting for indexes of arrays in tags\n        pattern: /\\b\\d+\\s*[.{=]/,\n        inside: {\n          operator: /[.{=]/\n        }\n      },\n      tag: {\n        pattern: /\\.?[-\\w\\\\]+\\.?/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      punctuation: /[{}[\\];(),.:|]/,\n      operator: /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/\n    }\n    Prism.languages.tsconfig = Prism.languages.typoscript\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = unrealscript\nunrealscript.displayName = 'unrealscript'\nunrealscript.aliases = ['uc', 'uscript']\nfunction unrealscript(Prism) {\n  Prism.languages.unrealscript = {\n    comment: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    category: {\n      pattern:\n        /(\\b(?:(?:autoexpand|hide|show)categories|var)\\s*\\()[^()]+(?=\\))/,\n      lookbehind: true,\n      greedy: true,\n      alias: 'property'\n    },\n    metadata: {\n      pattern: /(\\w\\s*)<\\s*\\w+\\s*=[^<>|=\\r\\n]+(?:\\|\\s*\\w+\\s*=[^<>|=\\r\\n]+)*>/,\n      lookbehind: true,\n      greedy: true,\n      inside: {\n        property: /\\b\\w+(?=\\s*=)/,\n        operator: /=/,\n        punctuation: /[<>|]/\n      }\n    },\n    macro: {\n      pattern: /`\\w+/,\n      alias: 'property'\n    },\n    'class-name': {\n      pattern:\n        /(\\b(?:class|enum|extends|interface|state(?:\\(\\))?|struct|within)\\s+)\\w+/,\n      lookbehind: true\n    },\n    keyword:\n      /\\b(?:abstract|actor|array|auto|autoexpandcategories|bool|break|byte|case|class|classgroup|client|coerce|collapsecategories|config|const|continue|default|defaultproperties|delegate|dependson|deprecated|do|dontcollapsecategories|editconst|editinlinenew|else|enum|event|exec|export|extends|final|float|for|forcescriptorder|foreach|function|goto|guid|hidecategories|hidedropdown|if|ignores|implements|inherits|input|int|interface|iterator|latent|local|material|name|native|nativereplication|noexport|nontransient|noteditinlinenew|notplaceable|operator|optional|out|pawn|perobjectconfig|perobjectlocalized|placeable|postoperator|preoperator|private|protected|reliable|replication|return|server|showcategories|simulated|singular|state|static|string|struct|structdefault|structdefaultproperties|switch|texture|transient|travel|unreliable|until|var|vector|while|within)\\b/,\n    function: /\\b[a-z_]\\w*(?=\\s*\\()/i,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n    // https://docs.unrealengine.com/udk/Three/UnrealScriptExpressions.html\n    operator:\n      />>|<<|--|\\+\\+|\\*\\*|[-+*/~!=<>$@]=?|&&?|\\|\\|?|\\^\\^?|[?:%]|\\b(?:ClockwiseFrom|Cross|Dot)\\b/,\n    punctuation: /[()[\\]{};,.]/\n  }\n  Prism.languages.uc = Prism.languages.uscript = Prism.languages.unrealscript\n}\n","'use strict'\n\nmodule.exports = uorazor\nuorazor.displayName = 'uorazor'\nuorazor.aliases = []\nfunction uorazor(Prism) {\n  Prism.languages.uorazor = {\n    'comment-hash': {\n      pattern: /#.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    'comment-slash': {\n      pattern: /\\/\\/.*/,\n      alias: 'comment',\n      greedy: true\n    },\n    string: {\n      pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      inside: {\n        punctuation: /^['\"]|['\"]$/\n      },\n      greedy: true\n    },\n    'source-layers': {\n      pattern:\n        /\\b(?:arms|backpack|blue|bracelet|cancel|clear|cloak|criminal|earrings|enemy|facialhair|friend|friendly|gloves|gray|grey|ground|hair|head|innerlegs|innertorso|innocent|lefthand|middletorso|murderer|neck|nonfriendly|onehandedsecondary|outerlegs|outertorso|pants|red|righthand|ring|self|shirt|shoes|talisman|waist)\\b/i,\n      alias: 'function'\n    },\n    'source-commands': {\n      pattern:\n        /\\b(?:alliance|attack|cast|clearall|clearignore|clearjournal|clearlist|clearsysmsg|createlist|createtimer|dclick|dclicktype|dclickvar|dress|dressconfig|drop|droprelloc|emote|getlabel|guild|gumpclose|gumpresponse|hotkey|ignore|lasttarget|lift|lifttype|menu|menuresponse|msg|org|organize|organizer|overhead|pause|poplist|potion|promptresponse|pushlist|removelist|removetimer|rename|restock|say|scav|scavenger|script|setability|setlasttarget|setskill|settimer|setvar|sysmsg|target|targetloc|targetrelloc|targettype|undress|unignore|unsetvar|useobject|useonce|useskill|usetype|virtue|wait|waitforgump|waitformenu|waitforprompt|waitforstat|waitforsysmsg|waitfortarget|walk|wfsysmsg|wft|whisper|yell)\\b/,\n      alias: 'function'\n    },\n    'tag-name': {\n      pattern: /(^\\{%-?\\s*)\\w+/,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    delimiter: {\n      pattern: /^\\{[{%]-?|-?[%}]\\}$/,\n      alias: 'punctuation'\n    },\n    function:\n      /\\b(?:atlist|close|closest|count|counter|counttype|dead|dex|diffhits|diffmana|diffstam|diffweight|find|findbuff|finddebuff|findlayer|findtype|findtypelist|followers|gumpexists|hidden|hits|hp|hue|human|humanoid|ingump|inlist|insysmessage|insysmsg|int|invul|lhandempty|list|listexists|mana|maxhits|maxhp|maxmana|maxstam|maxweight|monster|mounted|name|next|noto|paralyzed|poisoned|position|prev|previous|queued|rand|random|rhandempty|skill|stam|str|targetexists|timer|timerexists|varexist|warmode|weight)\\b/,\n    keyword:\n      /\\b(?:and|as|break|continue|else|elseif|endfor|endif|endwhile|for|if|loop|not|or|replay|stop|while)\\b/,\n    boolean: /\\b(?:false|null|true)\\b/,\n    number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n    operator: [\n      {\n        pattern:\n          /(\\s)(?:and|b-and|b-or|b-xor|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n        lookbehind: true\n      },\n      /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n    ],\n    punctuation: /[()\\[\\]{}:.,]/\n  }\n}\n","'use strict'\n\nmodule.exports = uri\nuri.displayName = 'uri'\nuri.aliases = ['url']\nfunction uri(Prism) {\n  // https://tools.ietf.org/html/rfc3986#appendix-A\n  Prism.languages.uri = {\n    scheme: {\n      pattern: /^[a-z][a-z0-9+.-]*:/im,\n      greedy: true,\n      inside: {\n        'scheme-delimiter': /:$/\n      }\n    },\n    fragment: {\n      pattern: /#[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'fragment-delimiter': /^#/\n      }\n    },\n    query: {\n      pattern: /\\?[\\w\\-.~!$&'()*+,;=%:@/?]*/,\n      inside: {\n        'query-delimiter': {\n          pattern: /^\\?/,\n          greedy: true\n        },\n        'pair-delimiter': /[&;]/,\n        pair: {\n          pattern: /^[^=][\\s\\S]*/,\n          inside: {\n            key: /^[^=]+/,\n            value: {\n              pattern: /(^=)[\\s\\S]+/,\n              lookbehind: true\n            }\n          }\n        }\n      }\n    },\n    authority: {\n      pattern: RegExp(\n        /^\\/\\//.source + // [ userinfo \"@\" ]\n          /(?:[\\w\\-.~!$&'()*+,;=%:]*@)?/.source + // host\n          ('(?:' + // IP-literal\n            /\\[(?:[0-9a-fA-F:.]{2,48}|v[0-9a-fA-F]+\\.[\\w\\-.~!$&'()*+,;=]+)\\]/\n              .source +\n            '|' + // IPv4address or registered name\n            /[\\w\\-.~!$&'()*+,;=%]*/.source +\n            ')') + // [ \":\" port ]\n          /(?::\\d*)?/.source,\n        'm'\n      ),\n      inside: {\n        'authority-delimiter': /^\\/\\//,\n        'user-info-segment': {\n          pattern: /^[\\w\\-.~!$&'()*+,;=%:]*@/,\n          inside: {\n            'user-info-delimiter': /@$/,\n            'user-info': /^[\\w\\-.~!$&'()*+,;=%:]+/\n          }\n        },\n        'port-segment': {\n          pattern: /:\\d*$/,\n          inside: {\n            'port-delimiter': /^:/,\n            port: /^\\d+/\n          }\n        },\n        host: {\n          pattern: /[\\s\\S]+/,\n          inside: {\n            'ip-literal': {\n              pattern: /^\\[[\\s\\S]+\\]$/,\n              inside: {\n                'ip-literal-delimiter': /^\\[|\\]$/,\n                'ipv-future': /^v[\\s\\S]+/,\n                'ipv6-address': /^[\\s\\S]+/\n              }\n            },\n            'ipv4-address':\n              /^(?:(?:[03-9]\\d?|[12]\\d{0,2})\\.){3}(?:[03-9]\\d?|[12]\\d{0,2})$/\n          }\n        }\n      }\n    },\n    path: {\n      pattern: /^[\\w\\-.~!$&'()*+,;=%:@/]+/m,\n      inside: {\n        'path-separator': /\\//\n      }\n    }\n  }\n  Prism.languages.url = Prism.languages.uri\n}\n","'use strict'\n\nmodule.exports = v\nv.displayName = 'v'\nv.aliases = []\nfunction v(Prism) {\n  ;(function (Prism) {\n    var interpolationExpr = {\n      pattern: /[\\s\\S]+/,\n      inside: null\n    }\n    Prism.languages.v = Prism.languages.extend('clike', {\n      string: {\n        pattern: /r?([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        alias: 'quoted-string',\n        greedy: true,\n        inside: {\n          interpolation: {\n            pattern:\n              /((?:^|[^\\\\])(?:\\\\{2})*)\\$(?:\\{[^{}]*\\}|\\w+(?:\\.\\w+(?:\\([^\\(\\)]*\\))?|\\[[^\\[\\]]+\\])*)/,\n            lookbehind: true,\n            inside: {\n              'interpolation-variable': {\n                pattern: /^\\$\\w[\\s\\S]*$/,\n                alias: 'variable'\n              },\n              'interpolation-punctuation': {\n                pattern: /^\\$\\{|\\}$/,\n                alias: 'punctuation'\n              },\n              'interpolation-expression': interpolationExpr\n            }\n          }\n        }\n      },\n      'class-name': {\n        pattern: /(\\b(?:enum|interface|struct|type)\\s+)(?:C\\.)?\\w+/,\n        lookbehind: true\n      },\n      keyword:\n        /(?:\\b(?:__global|as|asm|assert|atomic|break|chan|const|continue|defer|else|embed|enum|fn|for|go(?:to)?|if|import|in|interface|is|lock|match|module|mut|none|or|pub|return|rlock|select|shared|sizeof|static|struct|type(?:of)?|union|unsafe)|\\$(?:else|for|if)|#(?:flag|include))\\b/,\n      number:\n        /\\b(?:0x[a-f\\d]+(?:_[a-f\\d]+)*|0b[01]+(?:_[01]+)*|0o[0-7]+(?:_[0-7]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?)\\b/i,\n      operator:\n        /~|\\?|[*\\/%^!=]=?|\\+[=+]?|-[=-]?|\\|[=|]?|&(?:=|&|\\^=?)?|>(?:>=?|=)?|<(?:<=?|=|-)?|:=|\\.\\.\\.?/,\n      builtin:\n        /\\b(?:any(?:_float|_int)?|bool|byte(?:ptr)?|charptr|f(?:32|64)|i(?:8|16|64|128|nt)|rune|size_t|string|u(?:16|32|64|128)|voidptr)\\b/\n    })\n    interpolationExpr.inside = Prism.languages.v\n    Prism.languages.insertBefore('v', 'string', {\n      char: {\n        pattern: /`(?:\\\\`|\\\\?[^`]{1,2})`/,\n        // using {1,2} instead of `u` flag for compatibility\n        alias: 'rune'\n      }\n    })\n    Prism.languages.insertBefore('v', 'operator', {\n      attribute: {\n        pattern:\n          /(^[\\t ]*)\\[(?:deprecated|direct_array_access|flag|inline|live|ref_only|typedef|unsafe_fn|windows_stdcall)\\]/m,\n        lookbehind: true,\n        alias: 'annotation',\n        inside: {\n          punctuation: /[\\[\\]]/,\n          keyword: /\\w+/\n        }\n      },\n      generic: {\n        pattern: /<\\w+>(?=\\s*[\\)\\{])/,\n        inside: {\n          punctuation: /[<>]/,\n          'class-name': /\\w+/\n        }\n      }\n    })\n    Prism.languages.insertBefore('v', 'function', {\n      'generic-function': {\n        // e.g. foo<T>( ...\n        pattern: /\\b\\w+\\s*<\\w+>(?=\\()/,\n        inside: {\n          function: /^\\w+/,\n          generic: {\n            pattern: /<\\w+>/,\n            inside: Prism.languages.v.generic.inside\n          }\n        }\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = vala\nvala.displayName = 'vala'\nvala.aliases = []\nfunction vala(Prism) {\n  Prism.languages.vala = Prism.languages.extend('clike', {\n    // Classes copied from prism-csharp\n    'class-name': [\n      {\n        // (Foo bar, Bar baz)\n        pattern: /\\b[A-Z]\\w*(?:\\.\\w+)*\\b(?=(?:\\?\\s+|\\*?\\s+\\*?)\\w)/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // [Foo]\n        pattern: /(\\[)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo : Bar\n        pattern:\n          /(\\b(?:class|interface)\\s+[A-Z]\\w*(?:\\.\\w+)*\\s*:\\s*)[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      {\n        // class Foo\n        pattern:\n          /((?:\\b(?:class|enum|interface|new|struct)\\s+)|(?:catch\\s+\\())[A-Z]\\w*(?:\\.\\w+)*\\b/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\./\n        }\n      }\n    ],\n    keyword:\n      /\\b(?:abstract|as|assert|async|base|bool|break|case|catch|char|class|const|construct|continue|default|delegate|delete|do|double|dynamic|else|ensures|enum|errordomain|extern|finally|float|for|foreach|get|if|in|inline|int|int16|int32|int64|int8|interface|internal|is|lock|long|namespace|new|null|out|override|owned|params|private|protected|public|ref|requires|return|set|short|signal|sizeof|size_t|ssize_t|static|string|struct|switch|this|throw|throws|try|typeof|uchar|uint|uint16|uint32|uint64|uint8|ulong|unichar|unowned|ushort|using|value|var|virtual|void|volatile|weak|while|yield)\\b/i,\n    function: /\\b\\w+(?=\\s*\\()/,\n    number:\n      /(?:\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?)(?:f|u?l?)?/i,\n    operator:\n      /\\+\\+|--|&&|\\|\\||<<=?|>>=?|=>|->|~|[+\\-*\\/%&^|=!<>]=?|\\?\\??|\\.\\.\\./,\n    punctuation: /[{}[\\];(),.:]/,\n    constant: /\\b[A-Z0-9_]+\\b/\n  })\n  Prism.languages.insertBefore('vala', 'string', {\n    'raw-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    'template-string': {\n      pattern: /@\"[\\s\\S]*?\"/,\n      greedy: true,\n      inside: {\n        interpolation: {\n          pattern: /\\$(?:\\([^)]*\\)|[a-zA-Z]\\w*)/,\n          inside: {\n            delimiter: {\n              pattern: /^\\$\\(?|\\)$/,\n              alias: 'punctuation'\n            },\n            rest: Prism.languages.vala\n          }\n        },\n        string: /[\\s\\S]+/\n      }\n    }\n  })\n  Prism.languages.insertBefore('vala', 'keyword', {\n    regex: {\n      pattern:\n        /\\/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[imsx]{0,4}(?=\\s*(?:$|[\\r\\n,.;})\\]]))/,\n      greedy: true,\n      inside: {\n        'regex-source': {\n          pattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n          lookbehind: true,\n          alias: 'language-regex',\n          inside: Prism.languages.regex\n        },\n        'regex-delimiter': /^\\//,\n        'regex-flags': /^[a-z]+$/\n      }\n    }\n  })\n}\n","'use strict'\nvar refractorBasic = require('./basic.js')\nmodule.exports = vbnet\nvbnet.displayName = 'vbnet'\nvbnet.aliases = []\nfunction vbnet(Prism) {\n  Prism.register(refractorBasic)\n  Prism.languages.vbnet = Prism.languages.extend('basic', {\n    comment: [\n      {\n        pattern: /(?:!|REM\\b).+/i,\n        inside: {\n          keyword: /^REM/i\n        }\n      },\n      {\n        pattern: /(^|[^\\\\:])'.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /(^|[^\"])\"(?:\"\"|[^\"])*\"(?!\")/,\n      lookbehind: true,\n      greedy: true\n    },\n    keyword:\n      /(?:\\b(?:ADDHANDLER|ADDRESSOF|ALIAS|AND|ANDALSO|AS|BEEP|BLOAD|BOOLEAN|BSAVE|BYREF|BYTE|BYVAL|CALL(?: ABSOLUTE)?|CASE|CATCH|CBOOL|CBYTE|CCHAR|CDATE|CDBL|CDEC|CHAIN|CHAR|CHDIR|CINT|CLASS|CLEAR|CLNG|CLOSE|CLS|COBJ|COM|COMMON|CONST|CONTINUE|CSBYTE|CSHORT|CSNG|CSTR|CTYPE|CUINT|CULNG|CUSHORT|DATA|DATE|DECIMAL|DECLARE|DEF(?: FN| SEG|DBL|INT|LNG|SNG|STR)|DEFAULT|DELEGATE|DIM|DIRECTCAST|DO|DOUBLE|ELSE|ELSEIF|END|ENUM|ENVIRON|ERASE|ERROR|EVENT|EXIT|FALSE|FIELD|FILES|FINALLY|FOR(?: EACH)?|FRIEND|FUNCTION|GET|GETTYPE|GETXMLNAMESPACE|GLOBAL|GOSUB|GOTO|HANDLES|IF|IMPLEMENTS|IMPORTS|IN|INHERITS|INPUT|INTEGER|INTERFACE|IOCTL|IS|ISNOT|KEY|KILL|LET|LIB|LIKE|LINE INPUT|LOCATE|LOCK|LONG|LOOP|LSET|ME|MKDIR|MOD|MODULE|MUSTINHERIT|MUSTOVERRIDE|MYBASE|MYCLASS|NAME|NAMESPACE|NARROWING|NEW|NEXT|NOT|NOTHING|NOTINHERITABLE|NOTOVERRIDABLE|OBJECT|OF|OFF|ON(?: COM| ERROR| KEY| TIMER)?|OPEN|OPERATOR|OPTION(?: BASE)?|OPTIONAL|OR|ORELSE|OUT|OVERLOADS|OVERRIDABLE|OVERRIDES|PARAMARRAY|PARTIAL|POKE|PRIVATE|PROPERTY|PROTECTED|PUBLIC|PUT|RAISEEVENT|READ|READONLY|REDIM|REM|REMOVEHANDLER|RESTORE|RESUME|RETURN|RMDIR|RSET|RUN|SBYTE|SELECT(?: CASE)?|SET|SHADOWS|SHARED|SHELL|SHORT|SINGLE|SLEEP|STATIC|STEP|STOP|STRING|STRUCTURE|SUB|SWAP|SYNCLOCK|SYSTEM|THEN|THROW|TIMER|TO|TROFF|TRON|TRUE|TRY|TRYCAST|TYPE|TYPEOF|UINTEGER|ULONG|UNLOCK|UNTIL|USHORT|USING|VIEW PRINT|WAIT|WEND|WHEN|WHILE|WIDENING|WITH|WITHEVENTS|WRITE|WRITEONLY|XOR)|\\B(?:#CONST|#ELSE|#ELSEIF|#END|#IF))(?:\\$|\\b)/i,\n    punctuation: /[,;:(){}]/\n  })\n}\n","'use strict'\n\nmodule.exports = velocity\nvelocity.displayName = 'velocity'\nvelocity.aliases = []\nfunction velocity(Prism) {\n  ;(function (Prism) {\n    Prism.languages.velocity = Prism.languages.extend('markup', {})\n    var velocity = {\n      variable: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)\\$!?(?:[a-z][\\w-]*(?:\\([^)]*\\))?(?:\\.[a-z][\\w-]*(?:\\([^)]*\\))?|\\[[^\\]]+\\])*|\\{[^}]+\\})/i,\n        lookbehind: true,\n        inside: {} // See below\n      },\n      string: {\n        pattern: /\"[^\"]*\"|'[^']*'/,\n        greedy: true\n      },\n      number: /\\b\\d+\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /[=!<>]=?|[+*/%-]|&&|\\|\\||\\.\\.|\\b(?:eq|g[et]|l[et]|n(?:e|ot))\\b/,\n      punctuation: /[(){}[\\]:,.]/\n    }\n    velocity.variable.inside = {\n      string: velocity['string'],\n      function: {\n        pattern: /([^\\w-])[a-z][\\w-]*(?=\\()/,\n        lookbehind: true\n      },\n      number: velocity['number'],\n      boolean: velocity['boolean'],\n      punctuation: velocity['punctuation']\n    }\n    Prism.languages.insertBefore('velocity', 'comment', {\n      unparsed: {\n        pattern: /(^|[^\\\\])#\\[\\[[\\s\\S]*?\\]\\]#/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          punctuation: /^#\\[\\[|\\]\\]#$/\n        }\n      },\n      'velocity-comment': [\n        {\n          pattern: /(^|[^\\\\])#\\*[\\s\\S]*?\\*#/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        },\n        {\n          pattern: /(^|[^\\\\])##.*/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'comment'\n        }\n      ],\n      directive: {\n        pattern:\n          /(^|[^\\\\](?:\\\\\\\\)*)#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})(?:\\s*\\((?:[^()]|\\([^()]*\\))*\\))?/i,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /^#@?(?:[a-z][\\w-]*|\\{[a-z][\\w-]*\\})|\\bin\\b/,\n            inside: {\n              punctuation: /[{}]/\n            }\n          },\n          rest: velocity\n        }\n      },\n      variable: velocity['variable']\n    })\n    Prism.languages.velocity['tag'].inside['attr-value'].inside.rest =\n      Prism.languages.velocity\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = verilog\nverilog.displayName = 'verilog'\nverilog.aliases = []\nfunction verilog(Prism) {\n  Prism.languages.verilog = {\n    comment: {\n      pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    'kernel-function': {\n      // support for any kernel function (ex: $display())\n      pattern: /\\B\\$\\w+\\b/,\n      alias: 'property'\n    },\n    // support for user defined constants (ex: `define)\n    constant: /\\B`\\w+\\b/,\n    function: /\\b\\w+(?=\\()/,\n    // support for verilog and system verilog keywords\n    keyword:\n      /\\b(?:alias|and|assert|assign|assume|automatic|before|begin|bind|bins|binsof|bit|break|buf|bufif0|bufif1|byte|case|casex|casez|cell|chandle|class|clocking|cmos|config|const|constraint|context|continue|cover|covergroup|coverpoint|cross|deassign|default|defparam|design|disable|dist|do|edge|else|end|endcase|endclass|endclocking|endconfig|endfunction|endgenerate|endgroup|endinterface|endmodule|endpackage|endprimitive|endprogram|endproperty|endsequence|endspecify|endtable|endtask|enum|event|expect|export|extends|extern|final|first_match|for|force|foreach|forever|fork|forkjoin|function|generate|genvar|highz0|highz1|if|iff|ifnone|ignore_bins|illegal_bins|import|incdir|include|initial|inout|input|inside|instance|int|integer|interface|intersect|join|join_any|join_none|large|liblist|library|local|localparam|logic|longint|macromodule|matches|medium|modport|module|nand|negedge|new|nmos|nor|noshowcancelled|not|notif0|notif1|null|or|output|package|packed|parameter|pmos|posedge|primitive|priority|program|property|protected|pull0|pull1|pulldown|pullup|pulsestyle_ondetect|pulsestyle_onevent|pure|rand|randc|randcase|randsequence|rcmos|real|realtime|ref|reg|release|repeat|return|rnmos|rpmos|rtran|rtranif0|rtranif1|scalared|sequence|shortint|shortreal|showcancelled|signed|small|solve|specify|specparam|static|string|strong0|strong1|struct|super|supply0|supply1|table|tagged|task|this|throughout|time|timeprecision|timeunit|tran|tranif0|tranif1|tri|tri0|tri1|triand|trior|trireg|type|typedef|union|unique|unsigned|use|uwire|var|vectored|virtual|void|wait|wait_order|wand|weak0|weak1|while|wildcard|wire|with|within|wor|xnor|xor)\\b/,\n    // bold highlighting for all verilog and system verilog logic blocks\n    important: /\\b(?:always|always_comb|always_ff|always_latch)\\b(?: *@)?/,\n    // support for time ticks, vectors, and real numbers\n    number:\n      /\\B##?\\d+|(?:\\b\\d+)?'[odbh] ?[\\da-fzx_?]+|\\b(?:\\d*[._])?\\d+(?:e[-+]?\\d+)?/i,\n    operator: /[-+{}^~%*\\/?=!<>&|]+/,\n    punctuation: /[[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vhdl\nvhdl.displayName = 'vhdl'\nvhdl.aliases = []\nfunction vhdl(Prism) {\n  Prism.languages.vhdl = {\n    comment: /--.+/,\n    // support for all logic vectors\n    'vhdl-vectors': {\n      pattern: /\\b[oxb]\"[\\da-f_]+\"|\"[01uxzwlh-]+\"/i,\n      alias: 'number'\n    },\n    // support for operator overloading included\n    'quoted-function': {\n      pattern: /\"\\S+?\"(?=\\()/,\n      alias: 'function'\n    },\n    string: /\"(?:[^\\\\\"\\r\\n]|\\\\(?:\\r\\n|[\\s\\S]))*\"/,\n    constant: /\\b(?:library|use)\\b/i,\n    // support for predefined attributes included\n    keyword:\n      /\\b(?:'active|'ascending|'base|'delayed|'driving|'driving_value|'event|'high|'image|'instance_name|'last_active|'last_event|'last_value|'left|'leftof|'length|'low|'path_name|'pos|'pred|'quiet|'range|'reverse_range|'right|'rightof|'simple_name|'stable|'succ|'transaction|'val|'value|access|after|alias|all|architecture|array|assert|attribute|begin|block|body|buffer|bus|case|component|configuration|constant|disconnect|downto|else|elsif|end|entity|exit|file|for|function|generate|generic|group|guarded|if|impure|in|inertial|inout|is|label|library|linkage|literal|loop|map|new|next|null|of|on|open|others|out|package|port|postponed|procedure|process|pure|range|record|register|reject|report|return|select|severity|shared|signal|subtype|then|to|transport|type|unaffected|units|until|use|variable|wait|when|while|with)\\b/i,\n    boolean: /\\b(?:false|true)\\b/i,\n    function: /\\w+(?=\\()/,\n    // decimal, based, physical, and exponential numbers supported\n    number: /'[01uxzwlh-]'|\\b(?:\\d+#[\\da-f_.]+#|\\d[\\d_.]*)(?:e[-+]?\\d+)?/i,\n    operator:\n      /[<>]=?|:=|[-+*/&=]|\\b(?:abs|and|mod|nand|nor|not|or|rem|rol|ror|sla|sll|sra|srl|xnor|xor)\\b/i,\n    punctuation: /[{}[\\];(),.:]/\n  }\n}\n","'use strict'\n\nmodule.exports = vim\nvim.displayName = 'vim'\nvim.aliases = []\nfunction vim(Prism) {\n  Prism.languages.vim = {\n    string: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\r\\n]|'')*'/,\n    comment: /\".*/,\n    function: /\\b\\w+(?=\\()/,\n    keyword:\n      /\\b(?:N|Next|P|Print|X|XMLent|XMLns|ab|abbreviate|abc|abclear|abo|aboveleft|al|all|ar|arga|argadd|argd|argdelete|argdo|arge|argedit|argg|argglobal|argl|arglocal|args|argu|argument|as|ascii|b|bN|bNext|ba|bad|badd|ball|bd|bdelete|be|bel|belowright|bf|bfirst|bl|blast|bm|bmodified|bn|bnext|bo|botright|bp|bprevious|br|brea|break|breaka|breakadd|breakd|breakdel|breakl|breaklist|brewind|bro|browse|bufdo|buffer|buffers|bun|bunload|bw|bwipeout|c|cN|cNext|cNfcNfile|ca|cabbrev|cabc|cabclear|cad|caddb|caddbuffer|caddexpr|caddf|caddfile|cal|call|cat|catch|cb|cbuffer|cc|ccl|cclose|cd|ce|center|cex|cexpr|cf|cfile|cfir|cfirst|cg|cgetb|cgetbuffer|cgete|cgetexpr|cgetfile|change|changes|chd|chdir|che|checkpath|checkt|checktime|cl|cla|clast|clist|clo|close|cmapc|cmapclear|cn|cnew|cnewer|cnext|cnf|cnfile|cnorea|cnoreabbrev|co|col|colder|colo|colorscheme|comc|comclear|comp|compiler|con|conf|confirm|continue|cope|copen|copy|cp|cpf|cpfile|cprevious|cq|cquit|cr|crewind|cu|cuna|cunabbrev|cunmap|cw|cwindow|d|debugg|debuggreedy|delc|delcommand|delete|delf|delfunction|delm|delmarks|di|diffg|diffget|diffoff|diffpatch|diffpu|diffput|diffsplit|diffthis|diffu|diffupdate|dig|digraphs|display|dj|djump|dl|dlist|dr|drop|ds|dsearch|dsp|dsplit|e|earlier|echoe|echoerr|echom|echomsg|echon|edit|el|else|elsei|elseif|em|emenu|en|endf|endfo|endfor|endfun|endfunction|endif|endt|endtry|endw|endwhile|ene|enew|ex|exi|exit|exu|exusage|f|file|files|filetype|fin|fina|finally|find|fini|finish|fir|first|fix|fixdel|fo|fold|foldc|foldclose|foldd|folddoc|folddoclosed|folddoopen|foldo|foldopen|for|fu|fun|function|go|goto|gr|grep|grepa|grepadd|h|ha|hardcopy|help|helpf|helpfind|helpg|helpgrep|helpt|helptags|hid|hide|his|history|ia|iabbrev|iabc|iabclear|if|ij|ijump|il|ilist|imapc|imapclear|in|inorea|inoreabbrev|isearch|isp|isplit|iu|iuna|iunabbrev|iunmap|j|join|ju|jumps|k|kee|keepalt|keepj|keepjumps|keepmarks|l|lN|lNext|lNf|lNfile|la|lad|laddb|laddbuffer|laddexpr|laddf|laddfile|lan|language|last|later|lb|lbuffer|lc|lcd|lch|lchdir|lcl|lclose|left|lefta|leftabove|let|lex|lexpr|lf|lfile|lfir|lfirst|lg|lgetb|lgetbuffer|lgete|lgetexpr|lgetfile|lgr|lgrep|lgrepa|lgrepadd|lh|lhelpgrep|list|ll|lla|llast|lli|llist|lm|lmak|lmake|lmap|lmapc|lmapclear|ln|lne|lnew|lnewer|lnext|lnf|lnfile|lnoremap|lo|loadview|loc|lockmarks|lockv|lockvar|lol|lolder|lop|lopen|lp|lpf|lpfile|lprevious|lr|lrewind|ls|lt|ltag|lu|lunmap|lv|lvimgrep|lvimgrepa|lvimgrepadd|lw|lwindow|m|ma|mak|make|mark|marks|mat|match|menut|menutranslate|mk|mkexrc|mks|mksession|mksp|mkspell|mkv|mkvie|mkview|mkvimrc|mod|mode|move|mz|mzf|mzfile|mzscheme|n|nbkey|new|next|nmapc|nmapclear|noh|nohlsearch|norea|noreabbrev|nu|number|nun|nunmap|o|omapc|omapclear|on|only|open|opt|options|ou|ounmap|p|pc|pclose|pe|ped|pedit|perl|perld|perldo|po|pop|popu|popup|pp|ppop|pre|preserve|prev|previous|print|prof|profd|profdel|profile|promptf|promptfind|promptr|promptrepl|ps|psearch|ptN|ptNext|pta|ptag|ptf|ptfirst|ptj|ptjump|ptl|ptlast|ptn|ptnext|ptp|ptprevious|ptr|ptrewind|pts|ptselect|pu|put|pw|pwd|py|pyf|pyfile|python|q|qa|qall|quit|quita|quitall|r|read|rec|recover|red|redi|redir|redo|redr|redraw|redraws|redrawstatus|reg|registers|res|resize|ret|retab|retu|return|rew|rewind|ri|right|rightb|rightbelow|ru|rub|ruby|rubyd|rubydo|rubyf|rubyfile|runtime|rv|rviminfo|sN|sNext|sa|sal|sall|san|sandbox|sargument|sav|saveas|sb|sbN|sbNext|sba|sball|sbf|sbfirst|sbl|sblast|sbm|sbmodified|sbn|sbnext|sbp|sbprevious|sbr|sbrewind|sbuffer|scrip|scripte|scriptencoding|scriptnames|se|set|setf|setfiletype|setg|setglobal|setl|setlocal|sf|sfind|sfir|sfirst|sh|shell|sign|sil|silent|sim|simalt|sl|sla|slast|sleep|sm|smagic|smap|smapc|smapclear|sme|smenu|sn|snext|sni|sniff|sno|snomagic|snor|snoremap|snoreme|snoremenu|so|sor|sort|source|sp|spe|spelld|spelldump|spellgood|spelli|spellinfo|spellr|spellrepall|spellu|spellundo|spellw|spellwrong|split|spr|sprevious|sre|srewind|st|sta|stag|star|startg|startgreplace|startinsert|startr|startreplace|stj|stjump|stop|stopi|stopinsert|sts|stselect|sun|sunhide|sunm|sunmap|sus|suspend|sv|sview|syncbind|t|tN|tNext|ta|tab|tabN|tabNext|tabc|tabclose|tabd|tabdo|tabe|tabedit|tabf|tabfind|tabfir|tabfirst|tabl|tablast|tabm|tabmove|tabn|tabnew|tabnext|tabo|tabonly|tabp|tabprevious|tabr|tabrewind|tabs|tag|tags|tc|tcl|tcld|tcldo|tclf|tclfile|te|tearoff|tf|tfirst|th|throw|tj|tjump|tl|tlast|tm|tmenu|tn|tnext|to|topleft|tp|tprevious|tr|trewind|try|ts|tselect|tu|tunmenu|u|una|unabbreviate|undo|undoj|undojoin|undol|undolist|unh|unhide|unlet|unlo|unlockvar|unm|unmap|up|update|ve|verb|verbose|version|vert|vertical|vi|vie|view|vim|vimgrep|vimgrepa|vimgrepadd|visual|viu|viusage|vmapc|vmapclear|vne|vnew|vs|vsplit|vu|vunmap|w|wN|wNext|wa|wall|wh|while|win|winc|wincmd|windo|winp|winpos|winsize|wn|wnext|wp|wprevious|wq|wqa|wqall|write|ws|wsverb|wv|wviminfo|x|xa|xall|xit|xm|xmap|xmapc|xmapclear|xme|xmenu|xn|xnoremap|xnoreme|xnoremenu|xu|xunmap|y|yank)\\b/,\n    builtin:\n      /\\b(?:acd|ai|akm|aleph|allowrevins|altkeymap|ambiwidth|ambw|anti|antialias|arab|arabic|arabicshape|ari|arshape|autochdir|autocmd|autoindent|autoread|autowrite|autowriteall|aw|awa|background|backspace|backup|backupcopy|backupdir|backupext|backupskip|balloondelay|ballooneval|balloonexpr|bdir|bdlay|beval|bex|bexpr|bg|bh|bin|binary|biosk|bioskey|bk|bkc|bomb|breakat|brk|browsedir|bs|bsdir|bsk|bt|bufhidden|buflisted|buftype|casemap|ccv|cdpath|cedit|cfu|ch|charconvert|ci|cin|cindent|cink|cinkeys|cino|cinoptions|cinw|cinwords|clipboard|cmdheight|cmdwinheight|cmp|cms|columns|com|comments|commentstring|compatible|complete|completefunc|completeopt|consk|conskey|copyindent|cot|cpo|cpoptions|cpt|cscopepathcomp|cscopeprg|cscopequickfix|cscopetag|cscopetagorder|cscopeverbose|cspc|csprg|csqf|cst|csto|csverb|cuc|cul|cursorcolumn|cursorline|cwh|debug|deco|def|define|delcombine|dex|dg|dict|dictionary|diff|diffexpr|diffopt|digraph|dip|dir|directory|dy|ea|ead|eadirection|eb|ed|edcompatible|ef|efm|ei|ek|enc|encoding|endofline|eol|ep|equalalways|equalprg|errorbells|errorfile|errorformat|esckeys|et|eventignore|expandtab|exrc|fcl|fcs|fdc|fde|fdi|fdl|fdls|fdm|fdn|fdo|fdt|fen|fenc|fencs|fex|ff|ffs|fileencoding|fileencodings|fileformat|fileformats|fillchars|fk|fkmap|flp|fml|fmr|foldcolumn|foldenable|foldexpr|foldignore|foldlevel|foldlevelstart|foldmarker|foldmethod|foldminlines|foldnestmax|foldtext|formatexpr|formatlistpat|formatoptions|formatprg|fp|fs|fsync|ft|gcr|gd|gdefault|gfm|gfn|gfs|gfw|ghr|gp|grepformat|grepprg|gtl|gtt|guicursor|guifont|guifontset|guifontwide|guiheadroom|guioptions|guipty|guitablabel|guitabtooltip|helpfile|helpheight|helplang|hf|hh|hi|hidden|highlight|hk|hkmap|hkmapp|hkp|hl|hlg|hls|hlsearch|ic|icon|iconstring|ignorecase|im|imactivatekey|imak|imc|imcmdline|imd|imdisable|imi|iminsert|ims|imsearch|inc|include|includeexpr|incsearch|inde|indentexpr|indentkeys|indk|inex|inf|infercase|insertmode|invacd|invai|invakm|invallowrevins|invaltkeymap|invanti|invantialias|invar|invarab|invarabic|invarabicshape|invari|invarshape|invautochdir|invautoindent|invautoread|invautowrite|invautowriteall|invaw|invawa|invbackup|invballooneval|invbeval|invbin|invbinary|invbiosk|invbioskey|invbk|invbl|invbomb|invbuflisted|invcf|invci|invcin|invcindent|invcompatible|invconfirm|invconsk|invconskey|invcopyindent|invcp|invcscopetag|invcscopeverbose|invcst|invcsverb|invcuc|invcul|invcursorcolumn|invcursorline|invdeco|invdelcombine|invdg|invdiff|invdigraph|invdisable|invea|inveb|inved|invedcompatible|invek|invendofline|inveol|invequalalways|inverrorbells|invesckeys|invet|invex|invexpandtab|invexrc|invfen|invfk|invfkmap|invfoldenable|invgd|invgdefault|invguipty|invhid|invhidden|invhk|invhkmap|invhkmapp|invhkp|invhls|invhlsearch|invic|invicon|invignorecase|invim|invimc|invimcmdline|invimd|invincsearch|invinf|invinfercase|invinsertmode|invis|invjoinspaces|invjs|invlazyredraw|invlbr|invlinebreak|invlisp|invlist|invloadplugins|invlpl|invlz|invma|invmacatsui|invmagic|invmh|invml|invmod|invmodeline|invmodifiable|invmodified|invmore|invmousef|invmousefocus|invmousehide|invnu|invnumber|invodev|invopendevice|invpaste|invpi|invpreserveindent|invpreviewwindow|invprompt|invpvw|invreadonly|invremap|invrestorescreen|invrevins|invri|invrightleft|invrightleftcmd|invrl|invrlc|invro|invrs|invru|invruler|invsb|invsc|invscb|invscrollbind|invscs|invsecure|invsft|invshellslash|invshelltemp|invshiftround|invshortname|invshowcmd|invshowfulltag|invshowmatch|invshowmode|invsi|invsm|invsmartcase|invsmartindent|invsmarttab|invsmd|invsn|invsol|invspell|invsplitbelow|invsplitright|invspr|invsr|invssl|invsta|invstartofline|invstmp|invswapfile|invswf|invta|invtagbsearch|invtagrelative|invtagstack|invtbi|invtbidi|invtbs|invtermbidi|invterse|invtextauto|invtextmode|invtf|invtgst|invtildeop|invtimeout|invtitle|invto|invtop|invtr|invttimeout|invttybuiltin|invttyfast|invtx|invvb|invvisualbell|invwa|invwarn|invwb|invweirdinvert|invwfh|invwfw|invwildmenu|invwinfixheight|invwinfixwidth|invwiv|invwmnu|invwrap|invwrapscan|invwrite|invwriteany|invwritebackup|invws|isf|isfname|isi|isident|isk|iskeyword|isprint|joinspaces|js|key|keymap|keymodel|keywordprg|km|kmp|kp|langmap|langmenu|laststatus|lazyredraw|lbr|lcs|linebreak|lines|linespace|lisp|lispwords|listchars|loadplugins|lpl|lsp|lz|macatsui|magic|makeef|makeprg|matchpairs|matchtime|maxcombine|maxfuncdepth|maxmapdepth|maxmem|maxmempattern|maxmemtot|mco|mef|menuitems|mfd|mh|mis|mkspellmem|ml|mls|mm|mmd|mmp|mmt|modeline|modelines|modifiable|modified|more|mouse|mousef|mousefocus|mousehide|mousem|mousemodel|mouses|mouseshape|mouset|mousetime|mp|mps|msm|mzq|mzquantum|nf|noacd|noai|noakm|noallowrevins|noaltkeymap|noanti|noantialias|noar|noarab|noarabic|noarabicshape|noari|noarshape|noautochdir|noautoindent|noautoread|noautowrite|noautowriteall|noaw|noawa|nobackup|noballooneval|nobeval|nobin|nobinary|nobiosk|nobioskey|nobk|nobl|nobomb|nobuflisted|nocf|noci|nocin|nocindent|nocompatible|noconfirm|noconsk|noconskey|nocopyindent|nocp|nocscopetag|nocscopeverbose|nocst|nocsverb|nocuc|nocul|nocursorcolumn|nocursorline|nodeco|nodelcombine|nodg|nodiff|nodigraph|nodisable|noea|noeb|noed|noedcompatible|noek|noendofline|noeol|noequalalways|noerrorbells|noesckeys|noet|noex|noexpandtab|noexrc|nofen|nofk|nofkmap|nofoldenable|nogd|nogdefault|noguipty|nohid|nohidden|nohk|nohkmap|nohkmapp|nohkp|nohls|noic|noicon|noignorecase|noim|noimc|noimcmdline|noimd|noincsearch|noinf|noinfercase|noinsertmode|nois|nojoinspaces|nojs|nolazyredraw|nolbr|nolinebreak|nolisp|nolist|noloadplugins|nolpl|nolz|noma|nomacatsui|nomagic|nomh|noml|nomod|nomodeline|nomodifiable|nomodified|nomore|nomousef|nomousefocus|nomousehide|nonu|nonumber|noodev|noopendevice|nopaste|nopi|nopreserveindent|nopreviewwindow|noprompt|nopvw|noreadonly|noremap|norestorescreen|norevins|nori|norightleft|norightleftcmd|norl|norlc|noro|nors|noru|noruler|nosb|nosc|noscb|noscrollbind|noscs|nosecure|nosft|noshellslash|noshelltemp|noshiftround|noshortname|noshowcmd|noshowfulltag|noshowmatch|noshowmode|nosi|nosm|nosmartcase|nosmartindent|nosmarttab|nosmd|nosn|nosol|nospell|nosplitbelow|nosplitright|nospr|nosr|nossl|nosta|nostartofline|nostmp|noswapfile|noswf|nota|notagbsearch|notagrelative|notagstack|notbi|notbidi|notbs|notermbidi|noterse|notextauto|notextmode|notf|notgst|notildeop|notimeout|notitle|noto|notop|notr|nottimeout|nottybuiltin|nottyfast|notx|novb|novisualbell|nowa|nowarn|nowb|noweirdinvert|nowfh|nowfw|nowildmenu|nowinfixheight|nowinfixwidth|nowiv|nowmnu|nowrap|nowrapscan|nowrite|nowriteany|nowritebackup|nows|nrformats|numberwidth|nuw|odev|oft|ofu|omnifunc|opendevice|operatorfunc|opfunc|osfiletype|pa|para|paragraphs|paste|pastetoggle|patchexpr|patchmode|path|pdev|penc|pex|pexpr|pfn|ph|pheader|pi|pm|pmbcs|pmbfn|popt|preserveindent|previewheight|previewwindow|printdevice|printencoding|printexpr|printfont|printheader|printmbcharset|printmbfont|printoptions|prompt|pt|pumheight|pvh|pvw|qe|quoteescape|readonly|remap|report|restorescreen|revins|rightleft|rightleftcmd|rl|rlc|ro|rs|rtp|ruf|ruler|rulerformat|runtimepath|sbo|sc|scb|scr|scroll|scrollbind|scrolljump|scrolloff|scrollopt|scs|sect|sections|secure|sel|selection|selectmode|sessionoptions|sft|shcf|shellcmdflag|shellpipe|shellquote|shellredir|shellslash|shelltemp|shelltype|shellxquote|shiftround|shiftwidth|shm|shortmess|shortname|showbreak|showcmd|showfulltag|showmatch|showmode|showtabline|shq|si|sidescroll|sidescrolloff|siso|sj|slm|smartcase|smartindent|smarttab|smc|smd|softtabstop|sol|spc|spell|spellcapcheck|spellfile|spelllang|spellsuggest|spf|spl|splitbelow|splitright|sps|sr|srr|ss|ssl|ssop|stal|startofline|statusline|stl|stmp|su|sua|suffixes|suffixesadd|sw|swapfile|swapsync|swb|swf|switchbuf|sws|sxq|syn|synmaxcol|syntax|t_AB|t_AF|t_AL|t_CS|t_CV|t_Ce|t_Co|t_Cs|t_DL|t_EI|t_F1|t_F2|t_F3|t_F4|t_F5|t_F6|t_F7|t_F8|t_F9|t_IE|t_IS|t_K1|t_K3|t_K4|t_K5|t_K6|t_K7|t_K8|t_K9|t_KA|t_KB|t_KC|t_KD|t_KE|t_KF|t_KG|t_KH|t_KI|t_KJ|t_KK|t_KL|t_RI|t_RV|t_SI|t_Sb|t_Sf|t_WP|t_WS|t_ZH|t_ZR|t_al|t_bc|t_cd|t_ce|t_cl|t_cm|t_cs|t_da|t_db|t_dl|t_fs|t_k1|t_k2|t_k3|t_k4|t_k5|t_k6|t_k7|t_k8|t_k9|t_kB|t_kD|t_kI|t_kN|t_kP|t_kb|t_kd|t_ke|t_kh|t_kl|t_kr|t_ks|t_ku|t_le|t_mb|t_md|t_me|t_mr|t_ms|t_nd|t_op|t_se|t_so|t_sr|t_te|t_ti|t_ts|t_ue|t_us|t_ut|t_vb|t_ve|t_vi|t_vs|t_xs|tabline|tabpagemax|tabstop|tagbsearch|taglength|tagrelative|tagstack|tal|tb|tbi|tbidi|tbis|tbs|tenc|term|termbidi|termencoding|terse|textauto|textmode|textwidth|tgst|thesaurus|tildeop|timeout|timeoutlen|title|titlelen|titleold|titlestring|toolbar|toolbariconsize|top|tpm|tsl|tsr|ttimeout|ttimeoutlen|ttm|tty|ttybuiltin|ttyfast|ttym|ttymouse|ttyscroll|ttytype|tw|tx|uc|ul|undolevels|updatecount|updatetime|ut|vb|vbs|vdir|verbosefile|vfile|viewdir|viewoptions|viminfo|virtualedit|visualbell|vop|wak|warn|wb|wc|wcm|wd|weirdinvert|wfh|wfw|whichwrap|wi|wig|wildchar|wildcharm|wildignore|wildmenu|wildmode|wildoptions|wim|winaltkeys|window|winfixheight|winfixwidth|winheight|winminheight|winminwidth|winwidth|wiv|wiw|wm|wmh|wmnu|wmw|wop|wrap|wrapmargin|wrapscan|writeany|writebackup|writedelay|ww)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?)\\b/i,\n    operator:\n      /\\|\\||&&|[-+.]=?|[=!](?:[=~][#?]?)?|[<>]=?[#?]?|[*\\/%?]|\\b(?:is(?:not)?)\\b/,\n    punctuation: /[{}[\\](),;:]/\n  }\n}\n","'use strict'\n\nmodule.exports = visualBasic\nvisualBasic.displayName = 'visualBasic'\nvisualBasic.aliases = []\nfunction visualBasic(Prism) {\n  Prism.languages['visual-basic'] = {\n    comment: {\n      pattern: /(?:['‘’]|REM\\b)(?:[^\\r\\n_]|_(?:\\r\\n?|\\n)?)*/i,\n      inside: {\n        keyword: /^REM/i\n      }\n    },\n    directive: {\n      pattern:\n        /#(?:Const|Else|ElseIf|End|ExternalChecksum|ExternalSource|If|Region)(?:\\b_[ \\t]*(?:\\r\\n?|\\n)|.)+/i,\n      alias: 'property',\n      greedy: true\n    },\n    string: {\n      pattern: /\\$?[\"“”](?:[\"“”]{2}|[^\"“”])*[\"“”]C?/i,\n      greedy: true\n    },\n    date: {\n      pattern:\n        /#[ \\t]*(?:\\d+([/-])\\d+\\1\\d+(?:[ \\t]+(?:\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?))?|\\d+[ \\t]*(?:AM|PM)|\\d+:\\d+(?::\\d+)?(?:[ \\t]*(?:AM|PM))?)[ \\t]*#/i,\n      alias: 'number'\n    },\n    number:\n      /(?:(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)(?:E[+-]?\\d+)?|&[HO][\\dA-F]+)(?:[FRD]|U?[ILS])?/i,\n    boolean: /\\b(?:False|Nothing|True)\\b/i,\n    keyword:\n      /\\b(?:AddHandler|AddressOf|Alias|And(?:Also)?|As|Boolean|ByRef|Byte|ByVal|Call|Case|Catch|C(?:Bool|Byte|Char|Date|Dbl|Dec|Int|Lng|Obj|SByte|Short|Sng|Str|Type|UInt|ULng|UShort)|Char|Class|Const|Continue|Currency|Date|Decimal|Declare|Default|Delegate|Dim|DirectCast|Do|Double|Each|Else(?:If)?|End(?:If)?|Enum|Erase|Error|Event|Exit|Finally|For|Friend|Function|Get(?:Type|XMLNamespace)?|Global|GoSub|GoTo|Handles|If|Implements|Imports|In|Inherits|Integer|Interface|Is|IsNot|Let|Lib|Like|Long|Loop|Me|Mod|Module|Must(?:Inherit|Override)|My(?:Base|Class)|Namespace|Narrowing|New|Next|Not(?:Inheritable|Overridable)?|Object|Of|On|Operator|Option(?:al)?|Or(?:Else)?|Out|Overloads|Overridable|Overrides|ParamArray|Partial|Private|Property|Protected|Public|RaiseEvent|ReadOnly|ReDim|RemoveHandler|Resume|Return|SByte|Select|Set|Shadows|Shared|short|Single|Static|Step|Stop|String|Structure|Sub|SyncLock|Then|Throw|To|Try|TryCast|Type|TypeOf|U(?:Integer|Long|Short)|Until|Using|Variant|Wend|When|While|Widening|With(?:Events)?|WriteOnly|Xor)\\b/i,\n    operator: /[+\\-*/\\\\^<=>&#@$%!]|\\b_(?=[ \\t]*[\\r\\n])/,\n    punctuation: /[{}().,:?]/\n  }\n  Prism.languages.vb = Prism.languages['visual-basic']\n  Prism.languages.vba = Prism.languages['visual-basic']\n}\n","'use strict'\n\nmodule.exports = warpscript\nwarpscript.displayName = 'warpscript'\nwarpscript.aliases = []\nfunction warpscript(Prism) {\n  Prism.languages.warpscript = {\n    comment: /#.*|\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n    string: {\n      pattern:\n        /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'|<'(?:[^\\\\']|'(?!>)|\\\\.)*'>/,\n      greedy: true\n    },\n    variable: /\\$\\S+/,\n    macro: {\n      pattern: /@\\S+/,\n      alias: 'property'\n    },\n    // WarpScript doesn't have any keywords, these are all functions under the control category\n    // https://www.warp10.io/tags/control\n    keyword:\n      /\\b(?:BREAK|CHECKMACRO|CONTINUE|CUDF|DEFINED|DEFINEDMACRO|EVAL|FAIL|FOR|FOREACH|FORSTEP|IFT|IFTE|MSGFAIL|NRETURN|RETHROW|RETURN|SWITCH|TRY|UDF|UNTIL|WHILE)\\b/,\n    number:\n      /[+-]?\\b(?:NaN|Infinity|\\d+(?:\\.\\d*)?(?:[Ee][+-]?\\d+)?|0x[\\da-fA-F]+|0b[01]+)\\b/,\n    boolean: /\\b(?:F|T|false|true)\\b/,\n    punctuation: /<%|%>|[{}[\\]()]/,\n    // Some operators from the \"operators\" category\n    // https://www.warp10.io/tags/operators\n    operator:\n      /==|&&?|\\|\\|?|\\*\\*?|>>>?|<<|[<>!~]=?|[-/%^]|\\+!?|\\b(?:AND|NOT|OR)\\b/\n  }\n}\n","'use strict'\n\nmodule.exports = wasm\nwasm.displayName = 'wasm'\nwasm.aliases = []\nfunction wasm(Prism) {\n  Prism.languages.wasm = {\n    comment: [\n      /\\(;[\\s\\S]*?;\\)/,\n      {\n        pattern: /;;.*/,\n        greedy: true\n      }\n    ],\n    string: {\n      pattern: /\"(?:\\\\[\\s\\S]|[^\"\\\\])*\"/,\n      greedy: true\n    },\n    keyword: [\n      {\n        pattern: /\\b(?:align|offset)=/,\n        inside: {\n          operator: /=/\n        }\n      },\n      {\n        pattern:\n          /\\b(?:(?:f32|f64|i32|i64)(?:\\.(?:abs|add|and|ceil|clz|const|convert_[su]\\/i(?:32|64)|copysign|ctz|demote\\/f64|div(?:_[su])?|eqz?|extend_[su]\\/i32|floor|ge(?:_[su])?|gt(?:_[su])?|le(?:_[su])?|load(?:(?:8|16|32)_[su])?|lt(?:_[su])?|max|min|mul|neg?|nearest|or|popcnt|promote\\/f32|reinterpret\\/[fi](?:32|64)|rem_[su]|rot[lr]|shl|shr_[su]|sqrt|store(?:8|16|32)?|sub|trunc(?:_[su]\\/f(?:32|64))?|wrap\\/i64|xor))?|memory\\.(?:grow|size))\\b/,\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      /\\b(?:anyfunc|block|br(?:_if|_table)?|call(?:_indirect)?|data|drop|elem|else|end|export|func|get_(?:global|local)|global|if|import|local|loop|memory|module|mut|nop|offset|param|result|return|select|set_(?:global|local)|start|table|tee_local|then|type|unreachable)\\b/\n    ],\n    variable: /\\$[\\w!#$%&'*+\\-./:<=>?@\\\\^`|~]+/,\n    number:\n      /[+-]?\\b(?:\\d(?:_?\\d)*(?:\\.\\d(?:_?\\d)*)?(?:[eE][+-]?\\d(?:_?\\d)*)?|0x[\\da-fA-F](?:_?[\\da-fA-F])*(?:\\.[\\da-fA-F](?:_?[\\da-fA-D])*)?(?:[pP][+-]?\\d(?:_?\\d)*)?)\\b|\\binf\\b|\\bnan(?::0x[\\da-fA-F](?:_?[\\da-fA-D])*)?\\b/,\n    punctuation: /[()]/\n  }\n}\n","'use strict'\n\nmodule.exports = webIdl\nwebIdl.displayName = 'webIdl'\nwebIdl.aliases = []\nfunction webIdl(Prism) {\n  ;(function (Prism) {\n    var id = /(?:\\B-|\\b_|\\b)[A-Za-z][\\w-]*(?![\\w-])/.source\n    var type =\n      '(?:' +\n      /\\b(?:unsigned\\s+)?long\\s+long(?![\\w-])/.source +\n      '|' +\n      /\\b(?:unrestricted|unsigned)\\s+[a-z]+(?![\\w-])/.source +\n      '|' +\n      /(?!(?:unrestricted|unsigned)\\b)/.source +\n      id +\n      /(?:\\s*<(?:[^<>]|<[^<>]*>)*>)?/.source +\n      ')' +\n      /(?:\\s*\\?)?/.source\n    var typeInside = {}\n    Prism.languages['web-idl'] = {\n      comment: {\n        pattern: /\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//,\n        greedy: true\n      },\n      string: {\n        pattern: /\"[^\"]*\"/,\n        greedy: true\n      },\n      namespace: {\n        pattern: RegExp(/(\\bnamespace\\s+)/.source + id),\n        lookbehind: true\n      },\n      'class-name': [\n        {\n          pattern:\n            /(^|[^\\w-])(?:iterable|maplike|setlike)\\s*<(?:[^<>]|<[^<>]*>)*>/,\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:attribute|const|deleter|getter|optional|setter)\\s+)/.source +\n              type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // callback return type\n          pattern: RegExp(\n            '(' + /\\bcallback\\s+/.source + id + /\\s*=\\s*/.source + ')' + type\n          ),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          // typedef\n          pattern: RegExp(/(\\btypedef\\b\\s*)/.source + type),\n          lookbehind: true,\n          inside: typeInside\n        },\n        {\n          pattern: RegExp(\n            /(\\b(?:callback|dictionary|enum|interface(?:\\s+mixin)?)\\s+)(?!(?:interface|mixin)\\b)/\n              .source + id\n          ),\n          lookbehind: true\n        },\n        {\n          // inheritance\n          pattern: RegExp(/(:\\s*)/.source + id),\n          lookbehind: true\n        }, // includes and implements\n        RegExp(id + /(?=\\s+(?:implements|includes)\\b)/.source),\n        {\n          pattern: RegExp(/(\\b(?:implements|includes)\\s+)/.source + id),\n          lookbehind: true\n        },\n        {\n          // function return type, parameter types, and dictionary members\n          pattern: RegExp(\n            type +\n              '(?=' +\n              /\\s*(?:\\.{3}\\s*)?/.source +\n              id +\n              /\\s*[(),;=]/.source +\n              ')'\n          ),\n          inside: typeInside\n        }\n      ],\n      builtin:\n        /\\b(?:ArrayBuffer|BigInt64Array|BigUint64Array|ByteString|DOMString|DataView|Float32Array|Float64Array|FrozenArray|Int16Array|Int32Array|Int8Array|ObservableArray|Promise|USVString|Uint16Array|Uint32Array|Uint8Array|Uint8ClampedArray)\\b/,\n      keyword: [\n        /\\b(?:async|attribute|callback|const|constructor|deleter|dictionary|enum|getter|implements|includes|inherit|interface|mixin|namespace|null|optional|or|partial|readonly|required|setter|static|stringifier|typedef|unrestricted)\\b/, // type keywords\n        /\\b(?:any|bigint|boolean|byte|double|float|iterable|long|maplike|object|octet|record|sequence|setlike|short|symbol|undefined|unsigned|void)\\b/\n      ],\n      boolean: /\\b(?:false|true)\\b/,\n      number: {\n        pattern:\n          /(^|[^\\w-])-?(?:0x[0-9a-f]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|NaN|Infinity)(?![\\w-])/i,\n        lookbehind: true\n      },\n      operator: /\\.{3}|[=:?<>-]/,\n      punctuation: /[(){}[\\].,;]/\n    }\n    for (var key in Prism.languages['web-idl']) {\n      if (key !== 'class-name') {\n        typeInside[key] = Prism.languages['web-idl'][key]\n      }\n    }\n    Prism.languages['webidl'] = Prism.languages['web-idl']\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = wiki\nwiki.displayName = 'wiki'\nwiki.aliases = []\nfunction wiki(Prism) {\n  Prism.languages.wiki = Prism.languages.extend('markup', {\n    'block-comment': {\n      pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n      lookbehind: true,\n      alias: 'comment'\n    },\n    heading: {\n      pattern: /^(=+)[^=\\r\\n].*?\\1/m,\n      inside: {\n        punctuation: /^=+|=+$/,\n        important: /.+/\n      }\n    },\n    emphasis: {\n      // TODO Multi-line\n      pattern: /('{2,5}).+?\\1/,\n      inside: {\n        'bold-italic': {\n          pattern: /(''''').+?(?=\\1)/,\n          lookbehind: true,\n          alias: ['bold', 'italic']\n        },\n        bold: {\n          pattern: /(''')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        italic: {\n          pattern: /('')[^'](?:.*?[^'])?(?=\\1)/,\n          lookbehind: true\n        },\n        punctuation: /^''+|''+$/\n      }\n    },\n    hr: {\n      pattern: /^-{4,}/m,\n      alias: 'punctuation'\n    },\n    url: [\n      /ISBN +(?:97[89][ -]?)?(?:\\d[ -]?){9}[\\dx]\\b|(?:PMID|RFC) +\\d+/i,\n      /\\[\\[.+?\\]\\]|\\[.+?\\]/\n    ],\n    variable: [\n      /__[A-Z]+__/, // FIXME Nested structures should be handled\n      // {{formatnum:{{#expr:{{{3}}}}}}}\n      /\\{{3}.+?\\}{3}/,\n      /\\{\\{.+?\\}\\}/\n    ],\n    symbol: [/^#redirect/im, /~{3,5}/],\n    // Handle table attrs:\n    // {|\n    // ! style=\"text-align:left;\"| Item\n    // |}\n    'table-tag': {\n      pattern: /((?:^|[|!])[|!])[^|\\r\\n]+\\|(?!\\|)/m,\n      lookbehind: true,\n      inside: {\n        'table-bar': {\n          pattern: /\\|$/,\n          alias: 'punctuation'\n        },\n        rest: Prism.languages.markup['tag'].inside\n      }\n    },\n    punctuation: /^(?:\\{\\||\\|\\}|\\|-|[*#:;!|])|\\|\\||!!/m\n  })\n  Prism.languages.insertBefore('wiki', 'tag', {\n    // Prevent highlighting inside <nowiki>, <source> and <pre> tags\n    nowiki: {\n      pattern: /<(nowiki|pre|source)\\b[^>]*>[\\s\\S]*?<\\/\\1>/i,\n      inside: {\n        tag: {\n          pattern: /<(?:nowiki|pre|source)\\b[^>]*>|<\\/(?:nowiki|pre|source)>/i,\n          inside: Prism.languages.markup['tag'].inside\n        }\n      }\n    }\n  })\n}\n","'use strict'\n\nmodule.exports = wolfram\nwolfram.displayName = 'wolfram'\nwolfram.aliases = ['mathematica', 'wl', 'nb']\nfunction wolfram(Prism) {\n  Prism.languages.wolfram = {\n    // Allow one level of nesting - note: regex taken from applescipt\n    comment: /\\(\\*(?:\\(\\*(?:[^*]|\\*(?!\\)))*\\*\\)|(?!\\(\\*)[\\s\\S])*?\\*\\)/,\n    string: {\n      pattern: /\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n      greedy: true\n    },\n    keyword:\n      /\\b(?:Abs|AbsArg|Accuracy|Block|Do|For|Function|If|Manipulate|Module|Nest|NestList|None|Return|Switch|Table|Which|While)\\b/,\n    context: {\n      pattern: /\\b\\w+`+\\w*/,\n      alias: 'class-name'\n    },\n    blank: {\n      pattern: /\\b\\w+_\\b/,\n      alias: 'regex'\n    },\n    'global-variable': {\n      pattern: /\\$\\w+/,\n      alias: 'variable'\n    },\n    boolean: /\\b(?:False|True)\\b/,\n    number:\n      /(?:\\b(?=\\d)|\\B(?=\\.))(?:0[bo])?(?:(?:\\d|0x[\\da-f])[\\da-f]*(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?j?\\b/i,\n    operator:\n      /\\/\\.|;|=\\.|\\^=|\\^:=|:=|<<|>>|<\\||\\|>|:>|\\|->|->|<-|@@@|@@|@|\\/@|=!=|===|==|=|\\+|-|\\^|\\[\\/-+%=\\]=?|!=|\\*\\*?=?|\\/\\/?=?|<[<=>]?|>[=>]?|[&|^~]/,\n    punctuation: /[{}[\\];(),.:]/\n  }\n  Prism.languages.mathematica = Prism.languages.wolfram\n  Prism.languages.wl = Prism.languages.wolfram\n  Prism.languages.nb = Prism.languages.wolfram\n}\n","'use strict'\n\nmodule.exports = wren\nwren.displayName = 'wren'\nwren.aliases = []\nfunction wren(Prism) {\n  // https://wren.io/\n  Prism.languages.wren = {\n    // Multiline comments in Wren can have nested multiline comments\n    // Comments: // and /* */\n    comment: [\n      {\n        // support 3 levels of nesting\n        // regex: \\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|<self>)*\\*\\/\n        pattern:\n          /\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*)|\\/\\*(?:[^*/]|\\*(?!\\/)|\\/(?!\\*))*\\*\\/)*\\*\\/)*\\*\\//,\n        greedy: true\n      },\n      {\n        pattern: /(^|[^\\\\:])\\/\\/.*/,\n        lookbehind: true,\n        greedy: true\n      }\n    ],\n    // Triple quoted strings are multiline but cannot have interpolation (raw strings)\n    // Based on prism-python.js\n    'triple-quoted-string': {\n      pattern: /\"\"\"[\\s\\S]*?\"\"\"/,\n      greedy: true,\n      alias: 'string'\n    },\n    // see below\n    'string-literal': null,\n    // #!/usr/bin/env wren on the first line\n    hashbang: {\n      pattern: /^#!\\/.+/,\n      greedy: true,\n      alias: 'comment'\n    },\n    // Attributes are special keywords to add meta data to classes\n    attribute: {\n      // #! attributes are stored in class properties\n      // #!myvar = true\n      // #attributes are not stored and dismissed at compilation\n      pattern: /#!?[ \\t\\u3000]*\\w+/,\n      alias: 'keyword'\n    },\n    'class-name': [\n      {\n        // class definition\n        // class Meta {}\n        pattern: /(\\bclass\\s+)\\w+/,\n        lookbehind: true\n      }, // A class must always start with an uppercase.\n      // File.read\n      /\\b[A-Z][a-z\\d_]*\\b/\n    ],\n    // A constant can be a variable, class, property or method. Just named in all uppercase letters\n    constant: /\\b[A-Z][A-Z\\d_]*\\b/,\n    null: {\n      pattern: /\\bnull\\b/,\n      alias: 'keyword'\n    },\n    keyword:\n      /\\b(?:as|break|class|construct|continue|else|for|foreign|if|import|in|is|return|static|super|this|var|while)\\b/,\n    boolean: /\\b(?:false|true)\\b/,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    // Functions can be Class.method()\n    function: /\\b[a-z_]\\w*(?=\\s*[({])/i,\n    operator: /<<|>>|[=!<>]=?|&&|\\|\\||[-+*/%~^&|?:]|\\.{2,3}/,\n    punctuation: /[\\[\\](){}.,;]/\n  }\n  Prism.languages.wren['string-literal'] = {\n    // A single quote string is multiline and can have interpolation (similar to JS backticks ``)\n    pattern:\n      /(^|[^\\\\\"])\"(?:[^\\\\\"%]|\\\\[\\s\\S]|%(?!\\()|%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\))*\"/,\n    lookbehind: true,\n    greedy: true,\n    inside: {\n      interpolation: {\n        // \"%(interpolation)\"\n        pattern:\n          /((?:^|[^\\\\])(?:\\\\{2})*)%\\((?:[^()]|\\((?:[^()]|\\([^)]*\\))*\\))*\\)/,\n        lookbehind: true,\n        inside: {\n          expression: {\n            pattern: /^(%\\()[\\s\\S]+(?=\\)$)/,\n            lookbehind: true,\n            inside: Prism.languages.wren\n          },\n          'interpolation-punctuation': {\n            pattern: /^%\\(|\\)$/,\n            alias: 'punctuation'\n          }\n        }\n      },\n      string: /[\\s\\S]+/\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = xeora\nxeora.displayName = 'xeora'\nxeora.aliases = ['xeoracube']\nfunction xeora(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xeora = Prism.languages.extend('markup', {\n      constant: {\n        pattern: /\\$(?:DomainContents|PageRenderDuration)\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$/\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$@?(?:#+|[-+*~=^])?[\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$.]/\n          },\n          operator: {\n            pattern: /#+|[-+*~=^@]/\n          }\n        }\n      },\n      'function-inline': {\n        pattern:\n          /\\$F:[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\$/,\n        inside: {\n          variable: {\n            pattern: /(?:[,|])@?(?:#+|[-+*~=^])?[\\w.]+/,\n            inside: {\n              punctuation: {\n                pattern: /[,.|]/\n              },\n              operator: {\n                pattern: /#+|[-+*~=^@]/\n              }\n            }\n          },\n          punctuation: {\n            pattern: /\\$\\w:|[$:?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'function-block': {\n        pattern:\n          /\\$XF:\\{[-\\w.]+\\?[-\\w.]+(?:,(?:(?:@[-#]*\\w+\\.[\\w+.]\\.*)*\\|)*(?:(?:[\\w+]|[-#*.~^]+[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*|(?:@[-#]*\\w+\\.[\\w+.]\\.*)+(?:(?:[\\w+]|[-#*~^][-#*.~^]*[\\w+]|=\\S)(?:[^$=]|=+[^=])*=*)?)?)?\\}:XF\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[$:{}?.,|]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-inline': {\n        pattern: /\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\/\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-open': {\n        pattern:\n          /\\$\\w+:\\{|\\$\\w(?:#\\d+\\+?)?(?:\\[[-\\w.]+\\])?:[-\\w.]+:\\{(?:![A-Z]+)?/,\n        inside: {\n          punctuation: {\n            pattern: /\\$(?:\\w:|C(?:\\[|#\\d))?|[:{[\\]]/,\n            inside: {\n              tag: {\n                pattern: /#\\d/\n              }\n            }\n          },\n          attribute: {\n            pattern: /![A-Z]+$/,\n            inside: {\n              punctuation: {\n                pattern: /!/\n              }\n            },\n            alias: 'keyword'\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-separator': {\n        pattern: /\\}:[-\\w.]+:\\{/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}]/\n          }\n        },\n        alias: 'function'\n      },\n      'directive-block-close': {\n        pattern: /\\}:[-\\w.]+\\$/,\n        inside: {\n          punctuation: {\n            pattern: /[:{}$]/\n          }\n        },\n        alias: 'function'\n      }\n    })\n    Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        variable: Prism.languages.xeora['function-inline'].inside['variable']\n      },\n      Prism.languages.xeora['function-block']\n    )\n    Prism.languages.xeoracube = Prism.languages.xeora\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xmlDoc\nxmlDoc.displayName = 'xmlDoc'\nxmlDoc.aliases = []\nfunction xmlDoc(Prism) {\n  ;(function (Prism) {\n    /**\n     * If the given language is present, it will insert the given doc comment grammar token into it.\n     *\n     * @param {string} lang\n     * @param {any} docComment\n     */\n    function insertDocComment(lang, docComment) {\n      if (Prism.languages[lang]) {\n        Prism.languages.insertBefore(lang, 'comment', {\n          'doc-comment': docComment\n        })\n      }\n    }\n    var tag = Prism.languages.markup.tag\n    var slashDocComment = {\n      pattern: /\\/\\/\\/.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    var tickDocComment = {\n      pattern: /'''.*/,\n      greedy: true,\n      alias: 'comment',\n      inside: {\n        tag: tag\n      }\n    }\n    insertDocComment('csharp', slashDocComment)\n    insertDocComment('fsharp', slashDocComment)\n    insertDocComment('vbnet', tickDocComment)\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = xojo\nxojo.displayName = 'xojo'\nxojo.aliases = []\nfunction xojo(Prism) {\n  Prism.languages.xojo = {\n    comment: {\n      pattern: /(?:'|\\/\\/|Rem\\b).+/i,\n      greedy: true\n    },\n    string: {\n      pattern: /\"(?:\"\"|[^\"])*\"/,\n      greedy: true\n    },\n    number: [/(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:E[+-]?\\d+)?/i, /&[bchou][a-z\\d]+/i],\n    directive: {\n      pattern: /#(?:Else|ElseIf|Endif|If|Pragma)\\b/i,\n      alias: 'property'\n    },\n    keyword:\n      /\\b(?:AddHandler|App|Array|As(?:signs)?|Auto|Boolean|Break|By(?:Ref|Val)|Byte|Call|Case|Catch|CFStringRef|CGFloat|Class|Color|Const|Continue|CString|Currency|CurrentMethodName|Declare|Delegate|Dim|Do(?:uble|wnTo)?|Each|Else(?:If)?|End|Enumeration|Event|Exception|Exit|Extends|False|Finally|For|Function|Get|GetTypeInfo|Global|GOTO|If|Implements|In|Inherits|Int(?:8|16|32|64|eger|erface)?|Lib|Loop|Me|Module|Next|Nil|Object|Optional|OSType|ParamArray|Private|Property|Protected|PString|Ptr|Raise(?:Event)?|ReDim|RemoveHandler|Return|Select(?:or)?|Self|Set|Shared|Short|Single|Soft|Static|Step|String|Sub|Super|Text|Then|To|True|Try|Ubound|UInt(?:8|16|32|64|eger)?|Until|Using|Var(?:iant)?|Wend|While|WindowPtr|WString)\\b/i,\n    operator:\n      /<[=>]?|>=?|[+\\-*\\/\\\\^=]|\\b(?:AddressOf|And|Ctype|IsA?|Mod|New|Not|Or|WeakAddressOf|Xor)\\b/i,\n    punctuation: /[.,;:()]/\n  }\n}\n","'use strict'\n\nmodule.exports = xquery\nxquery.displayName = 'xquery'\nxquery.aliases = []\nfunction xquery(Prism) {\n  ;(function (Prism) {\n    Prism.languages.xquery = Prism.languages.extend('markup', {\n      'xquery-comment': {\n        pattern: /\\(:[\\s\\S]*?:\\)/,\n        greedy: true,\n        alias: 'comment'\n      },\n      string: {\n        pattern: /([\"'])(?:\\1\\1|(?!\\1)[\\s\\S])*\\1/,\n        greedy: true\n      },\n      extension: {\n        pattern: /\\(#.+?#\\)/,\n        alias: 'symbol'\n      },\n      variable: /\\$[-\\w:]+/,\n      axis: {\n        pattern:\n          /(^|[^-])(?:ancestor(?:-or-self)?|attribute|child|descendant(?:-or-self)?|following(?:-sibling)?|parent|preceding(?:-sibling)?|self)(?=::)/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      'keyword-operator': {\n        pattern:\n          /(^|[^:-])\\b(?:and|castable as|div|eq|except|ge|gt|idiv|instance of|intersect|is|le|lt|mod|ne|or|union)\\b(?=$|[^:-])/,\n        lookbehind: true,\n        alias: 'operator'\n      },\n      keyword: {\n        pattern:\n          /(^|[^:-])\\b(?:as|ascending|at|base-uri|boundary-space|case|cast as|collation|construction|copy-namespaces|declare|default|descending|else|empty (?:greatest|least)|encoding|every|external|for|function|if|import|in|inherit|lax|let|map|module|namespace|no-inherit|no-preserve|option|order(?: by|ed|ing)?|preserve|return|satisfies|schema|some|stable|strict|strip|then|to|treat as|typeswitch|unordered|validate|variable|version|where|xquery)\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      function: /[\\w-]+(?::[\\w-]+)*(?=\\s*\\()/,\n      'xquery-element': {\n        pattern: /(element\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'tag'\n      },\n      'xquery-attribute': {\n        pattern: /(attribute\\s+)[\\w-]+(?::[\\w-]+)*/,\n        lookbehind: true,\n        alias: 'attr-name'\n      },\n      builtin: {\n        pattern:\n          /(^|[^:-])\\b(?:attribute|comment|document|element|processing-instruction|text|xs:(?:ENTITIES|ENTITY|ID|IDREFS?|NCName|NMTOKENS?|NOTATION|Name|QName|anyAtomicType|anyType|anyURI|base64Binary|boolean|byte|date|dateTime|dayTimeDuration|decimal|double|duration|float|gDay|gMonth|gMonthDay|gYear|gYearMonth|hexBinary|int|integer|language|long|negativeInteger|nonNegativeInteger|nonPositiveInteger|normalizedString|positiveInteger|short|string|time|token|unsigned(?:Byte|Int|Long|Short)|untyped(?:Atomic)?|yearMonthDuration))\\b(?=$|[^:-])/,\n        lookbehind: true\n      },\n      number: /\\b\\d+(?:\\.\\d+)?(?:E[+-]?\\d+)?/,\n      operator: [\n        /[+*=?|@]|\\.\\.?|:=|!=|<[=<]?|>[=>]?/,\n        {\n          pattern: /(\\s)-(?=\\s)/,\n          lookbehind: true\n        }\n      ],\n      punctuation: /[[\\](){},;:/]/\n    })\n    Prism.languages.xquery.tag.pattern =\n      /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s+[^\\s>\\/=]+(?:=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+))?)*\\s*\\/?>/\n    Prism.languages.xquery['tag'].inside['attr-value'].pattern =\n      /=(?:(\"|')(?:\\\\[\\s\\S]|\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}|(?!\\1)[^\\\\])*\\1|[^\\s'\">=]+)/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['punctuation'] =\n      /^=\"|\"$/\n    Prism.languages.xquery['tag'].inside['attr-value'].inside['expression'] = {\n      // Allow for two levels of nesting\n      pattern: /\\{(?!\\{)(?:\\{(?:\\{[^{}]*\\}|[^{}])*\\}|[^{}])+\\}/,\n      inside: Prism.languages.xquery,\n      alias: 'language-xquery'\n    } // The following will handle plain text inside tags\n    var stringifyToken = function (token) {\n      if (typeof token === 'string') {\n        return token\n      }\n      if (typeof token.content === 'string') {\n        return token.content\n      }\n      return token.content.map(stringifyToken).join('')\n    }\n    var walkTokens = function (tokens) {\n      var openedTags = []\n      for (var i = 0; i < tokens.length; i++) {\n        var token = tokens[i]\n        var notTagNorBrace = false\n        if (typeof token !== 'string') {\n          if (\n            token.type === 'tag' &&\n            token.content[0] &&\n            token.content[0].type === 'tag'\n          ) {\n            // We found a tag, now find its kind\n            if (token.content[0].content[0].content === '</') {\n              // Closing tag\n              if (\n                openedTags.length > 0 &&\n                openedTags[openedTags.length - 1].tagName ===\n                  stringifyToken(token.content[0].content[1])\n              ) {\n                // Pop matching opening tag\n                openedTags.pop()\n              }\n            } else {\n              if (token.content[token.content.length - 1].content === '/>') {\n                // Autoclosed tag, ignore\n              } else {\n                // Opening tag\n                openedTags.push({\n                  tagName: stringifyToken(token.content[0].content[1]),\n                  openedBraces: 0\n                })\n              }\n            }\n          } else if (\n            openedTags.length > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '{' && // Ignore `{{`\n            (!tokens[i + 1] ||\n              tokens[i + 1].type !== 'punctuation' ||\n              tokens[i + 1].content !== '{') &&\n            (!tokens[i - 1] ||\n              tokens[i - 1].type !== 'plain-text' ||\n              tokens[i - 1].content !== '{')\n          ) {\n            // Here we might have entered an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces++\n          } else if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces > 0 &&\n            token.type === 'punctuation' &&\n            token.content === '}'\n          ) {\n            // Here we might have left an XQuery expression inside a tag\n            openedTags[openedTags.length - 1].openedBraces--\n          } else if (token.type !== 'comment') {\n            notTagNorBrace = true\n          }\n        }\n        if (notTagNorBrace || typeof token === 'string') {\n          if (\n            openedTags.length > 0 &&\n            openedTags[openedTags.length - 1].openedBraces === 0\n          ) {\n            // Here we are inside a tag, and not inside an XQuery expression.\n            // That's plain text: drop any tokens matched.\n            var plainText = stringifyToken(token) // And merge text with adjacent text\n            if (\n              i < tokens.length - 1 &&\n              (typeof tokens[i + 1] === 'string' ||\n                tokens[i + 1].type === 'plain-text')\n            ) {\n              plainText += stringifyToken(tokens[i + 1])\n              tokens.splice(i + 1, 1)\n            }\n            if (\n              i > 0 &&\n              (typeof tokens[i - 1] === 'string' ||\n                tokens[i - 1].type === 'plain-text')\n            ) {\n              plainText = stringifyToken(tokens[i - 1]) + plainText\n              tokens.splice(i - 1, 1)\n              i--\n            }\n            if (/^\\s+$/.test(plainText)) {\n              tokens[i] = plainText\n            } else {\n              tokens[i] = new Prism.Token(\n                'plain-text',\n                plainText,\n                null,\n                plainText\n              )\n            }\n          }\n        }\n        if (token.content && typeof token.content !== 'string') {\n          walkTokens(token.content)\n        }\n      }\n    }\n    Prism.hooks.add('after-tokenize', function (env) {\n      if (env.language !== 'xquery') {\n        return\n      }\n      walkTokens(env.tokens)\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yaml\nyaml.displayName = 'yaml'\nyaml.aliases = ['yml']\nfunction yaml(Prism) {\n  ;(function (Prism) {\n    // https://yaml.org/spec/1.2/spec.html#c-ns-anchor-property\n    // https://yaml.org/spec/1.2/spec.html#c-ns-alias-node\n    var anchorOrAlias = /[*&][^\\s[\\]{},]+/ // https://yaml.org/spec/1.2/spec.html#c-ns-tag-property\n    var tag =\n      /!(?:<[\\w\\-%#;/?:@&=+$,.!~*'()[\\]]+>|(?:[a-zA-Z\\d-]*!)?[\\w\\-%#;/?:@&=+$.~*'()]+)?/ // https://yaml.org/spec/1.2/spec.html#c-ns-properties(n,c)\n    var properties =\n      '(?:' +\n      tag.source +\n      '(?:[ \\t]+' +\n      anchorOrAlias.source +\n      ')?|' +\n      anchorOrAlias.source +\n      '(?:[ \\t]+' +\n      tag.source +\n      ')?)' // https://yaml.org/spec/1.2/spec.html#ns-plain(n,c)\n    // This is a simplified version that doesn't support \"#\" and multiline keys\n    // All these long scarry character classes are simplified versions of YAML's characters\n    var plainKey =\n      /(?:[^\\s\\x00-\\x08\\x0e-\\x1f!\"#%&'*,\\-:>?@[\\]`{|}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]|[?:-]<PLAIN>)(?:[ \\t]*(?:(?![#:])<PLAIN>|:<PLAIN>))*/.source.replace(\n        /<PLAIN>/g,\n        function () {\n          return /[^\\s\\x00-\\x08\\x0e-\\x1f,[\\]{}\\x7f-\\x84\\x86-\\x9f\\ud800-\\udfff\\ufffe\\uffff]/\n            .source\n        }\n      )\n    var string = /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"|'(?:[^'\\\\\\r\\n]|\\\\.)*'/.source\n    /**\n     *\n     * @param {string} value\n     * @param {string} [flags]\n     * @returns {RegExp}\n     */\n    function createValuePattern(value, flags) {\n      flags = (flags || '').replace(/m/g, '') + 'm' // add m flag\n      var pattern =\n        /([:\\-,[{]\\s*(?:\\s<<prop>>[ \\t]+)?)(?:<<value>>)(?=[ \\t]*(?:$|,|\\]|\\}|(?:[\\r\\n]\\s*)?#))/.source\n          .replace(/<<prop>>/g, function () {\n            return properties\n          })\n          .replace(/<<value>>/g, function () {\n            return value\n          })\n      return RegExp(pattern, flags)\n    }\n    Prism.languages.yaml = {\n      scalar: {\n        pattern: RegExp(\n          /([\\-:]\\s*(?:\\s<<prop>>[ \\t]+)?[|>])[ \\t]*(?:((?:\\r?\\n|\\r)[ \\t]+)\\S[^\\r\\n]*(?:\\2[^\\r\\n]+)*)/.source.replace(\n            /<<prop>>/g,\n            function () {\n              return properties\n            }\n          )\n        ),\n        lookbehind: true,\n        alias: 'string'\n      },\n      comment: /#.*/,\n      key: {\n        pattern: RegExp(\n          /((?:^|[:\\-,[{\\r\\n?])[ \\t]*(?:<<prop>>[ \\t]+)?)<<key>>(?=\\s*:\\s)/.source\n            .replace(/<<prop>>/g, function () {\n              return properties\n            })\n            .replace(/<<key>>/g, function () {\n              return '(?:' + plainKey + '|' + string + ')'\n            })\n        ),\n        lookbehind: true,\n        greedy: true,\n        alias: 'atrule'\n      },\n      directive: {\n        pattern: /(^[ \\t]*)%.+/m,\n        lookbehind: true,\n        alias: 'important'\n      },\n      datetime: {\n        pattern: createValuePattern(\n          /\\d{4}-\\d\\d?-\\d\\d?(?:[tT]|[ \\t]+)\\d\\d?:\\d{2}:\\d{2}(?:\\.\\d*)?(?:[ \\t]*(?:Z|[-+]\\d\\d?(?::\\d{2})?))?|\\d{4}-\\d{2}-\\d{2}|\\d\\d?:\\d{2}(?::\\d{2}(?:\\.\\d*)?)?/\n            .source\n        ),\n        lookbehind: true,\n        alias: 'number'\n      },\n      boolean: {\n        pattern: createValuePattern(/false|true/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      null: {\n        pattern: createValuePattern(/null|~/.source, 'i'),\n        lookbehind: true,\n        alias: 'important'\n      },\n      string: {\n        pattern: createValuePattern(string),\n        lookbehind: true,\n        greedy: true\n      },\n      number: {\n        pattern: createValuePattern(\n          /[+-]?(?:0x[\\da-f]+|0o[0-7]+|(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?|\\.inf|\\.nan)/\n            .source,\n          'i'\n        ),\n        lookbehind: true\n      },\n      tag: tag,\n      important: anchorOrAlias,\n      punctuation: /---|[:[\\]{}\\-,|>?]|\\.\\.\\./\n    }\n    Prism.languages.yml = Prism.languages.yaml\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = yang\nyang.displayName = 'yang'\nyang.aliases = []\nfunction yang(Prism) {\n  Prism.languages.yang = {\n    // https://tools.ietf.org/html/rfc6020#page-34\n    // http://www.yang-central.org/twiki/bin/view/Main/YangExamples\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*/,\n    string: {\n      pattern: /\"(?:[^\\\\\"]|\\\\.)*\"|'[^']*'/,\n      greedy: true\n    },\n    keyword: {\n      pattern: /(^|[{};\\r\\n][ \\t]*)[a-z_][\\w.-]*/i,\n      lookbehind: true\n    },\n    namespace: {\n      pattern: /(\\s)[a-z_][\\w.-]*(?=:)/i,\n      lookbehind: true\n    },\n    boolean: /\\b(?:false|true)\\b/,\n    operator: /\\+/,\n    punctuation: /[{};:]/\n  }\n}\n","'use strict'\n\nmodule.exports = zig\nzig.displayName = 'zig'\nzig.aliases = []\nfunction zig(Prism) {\n  ;(function (Prism) {\n    function literal(str) {\n      return function () {\n        return str\n      }\n    }\n    var keyword =\n      /\\b(?:align|allowzero|and|anyframe|anytype|asm|async|await|break|cancel|catch|comptime|const|continue|defer|else|enum|errdefer|error|export|extern|fn|for|if|inline|linksection|nakedcc|noalias|nosuspend|null|or|orelse|packed|promise|pub|resume|return|stdcallcc|struct|suspend|switch|test|threadlocal|try|undefined|union|unreachable|usingnamespace|var|volatile|while)\\b/\n    var IDENTIFIER = '\\\\b(?!' + keyword.source + ')(?!\\\\d)\\\\w+\\\\b'\n    var ALIGN = /align\\s*\\((?:[^()]|\\([^()]*\\))*\\)/.source\n    var PREFIX_TYPE_OP =\n      /(?:\\?|\\bpromise->|(?:\\[[^[\\]]*\\]|\\*(?!\\*)|\\*\\*)(?:\\s*<ALIGN>|\\s*const\\b|\\s*volatile\\b|\\s*allowzero\\b)*)/.source.replace(\n        /<ALIGN>/g,\n        literal(ALIGN)\n      )\n    var SUFFIX_EXPR =\n      /(?:\\bpromise\\b|(?:\\berror\\.)?<ID>(?:\\.<ID>)*(?!\\s+<ID>))/.source.replace(\n        /<ID>/g,\n        literal(IDENTIFIER)\n      )\n    var TYPE =\n      '(?!\\\\s)(?:!?\\\\s*(?:' + PREFIX_TYPE_OP + '\\\\s*)*' + SUFFIX_EXPR + ')+'\n    /*\n     * A simplified grammar for Zig compile time type literals:\n     *\n     * TypeExpr = ( \"!\"? PREFIX_TYPE_OP* SUFFIX_EXPR )+\n     *\n     * SUFFIX_EXPR = ( \\b \"promise\" \\b | ( \\b \"error\" \".\" )? IDENTIFIER ( \".\" IDENTIFIER )* (?! \\s+ IDENTIFIER ) )\n     *\n     * PREFIX_TYPE_OP = \"?\"\n     *                | \\b \"promise\" \"->\"\n     *                | ( \"[\" [^\\[\\]]* \"]\" | \"*\" | \"**\" ) ( ALIGN | \"const\" \\b | \"volatile\" \\b | \"allowzero\" \\b )*\n     *\n     * ALIGN = \"align\" \"(\" ( [^()] | \"(\" [^()]* \")\" )* \")\"\n     *\n     * IDENTIFIER = \\b (?! KEYWORD ) [a-zA-Z_] \\w* \\b\n     *\n     */\n    Prism.languages.zig = {\n      comment: [\n        {\n          pattern: /\\/\\/[/!].*/,\n          alias: 'doc-comment'\n        },\n        /\\/{2}.*/\n      ],\n      string: [\n        {\n          // \"string\" and c\"string\"\n          pattern: /(^|[^\\\\@])c?\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n          lookbehind: true,\n          greedy: true\n        },\n        {\n          // multiline strings and c-strings\n          pattern: /([\\r\\n])([ \\t]+c?\\\\{2}).*(?:(?:\\r\\n?|\\n)\\2.*)*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      char: {\n        // characters 'a', '\\n', '\\xFF', '\\u{10FFFF}'\n        pattern:\n          /(^|[^\\\\])'(?:[^'\\\\\\r\\n]|[\\uD800-\\uDFFF]{2}|\\\\(?:.|x[a-fA-F\\d]{2}|u\\{[a-fA-F\\d]{1,6}\\}))'/,\n        lookbehind: true,\n        greedy: true\n      },\n      builtin: /\\B@(?!\\d)\\w+(?=\\s*\\()/,\n      label: {\n        pattern:\n          /(\\b(?:break|continue)\\s*:\\s*)\\w+\\b|\\b(?!\\d)\\w+\\b(?=\\s*:\\s*(?:\\{|while\\b))/,\n        lookbehind: true\n      },\n      'class-name': [\n        // const Foo = struct {};\n        /\\b(?!\\d)\\w+(?=\\s*=\\s*(?:(?:extern|packed)\\s+)?(?:enum|struct|union)\\s*[({])/,\n        {\n          // const x: i32 = 9;\n          // var x: Bar;\n          // fn foo(x: bool, y: f32) void {}\n          pattern: RegExp(\n            /(:\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?[=;,)])|<TYPE>(?=\\s*(?:<ALIGN>\\s*)?\\{)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        },\n        {\n          // extern fn foo(x: f64) f64; (optional alignment)\n          pattern: RegExp(\n            /(\\)\\s*)<TYPE>(?=\\s*(?:<ALIGN>\\s*)?;)/.source\n              .replace(/<TYPE>/g, literal(TYPE))\n              .replace(/<ALIGN>/g, literal(ALIGN))\n          ),\n          lookbehind: true,\n          inside: null // see below\n        }\n      ],\n      'builtin-type': {\n        pattern:\n          /\\b(?:anyerror|bool|c_u?(?:int|long|longlong|short)|c_longdouble|c_void|comptime_(?:float|int)|f(?:16|32|64|128)|[iu](?:8|16|32|64|128|size)|noreturn|type|void)\\b/,\n        alias: 'keyword'\n      },\n      keyword: keyword,\n      function: /\\b(?!\\d)\\w+(?=\\s*\\()/,\n      number:\n        /\\b(?:0b[01]+|0o[0-7]+|0x[a-fA-F\\d]+(?:\\.[a-fA-F\\d]*)?(?:[pP][+-]?[a-fA-F\\d]+)?|\\d+(?:\\.\\d*)?(?:[eE][+-]?\\d+)?)\\b/,\n      boolean: /\\b(?:false|true)\\b/,\n      operator:\n        /\\.[*?]|\\.{2,3}|[-=]>|\\*\\*|\\+\\+|\\|\\||(?:<<|>>|[-+*]%|[-+*/%^&|<>!=])=?|[?~]/,\n      punctuation: /[.:,;(){}[\\]]/\n    }\n    Prism.languages.zig['class-name'].forEach(function (obj) {\n      if (obj.inside === null) {\n        obj.inside = Prism.languages.zig\n      }\n    })\n  })(Prism)\n}\n","'use strict'\n\nmodule.exports = alphabetical\n\n// Check if the given character code, or the character code at the first\n// character, is alphabetical.\nfunction alphabetical(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","'use strict'\n\nvar alphabetical = require('is-alphabetical')\nvar decimal = require('is-decimal')\n\nmodule.exports = alphanumerical\n\n// Check if the given character code, or the character code at the first\n// character, is alphanumerical.\nfunction alphanumerical(character) {\n  return alphabetical(character) || decimal(character)\n}\n","'use strict'\n\nmodule.exports = decimal\n\n// Check if the given character code, or the character code at the first\n// character, is decimal.\nfunction decimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","'use strict'\n\nmodule.exports = hexadecimal\n\n// Check if the given character code, or the character code at the first\n// character, is hexadecimal.\nfunction hexadecimal(character) {\n  var code = typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nvar legacy = require('character-entities-legacy')\nvar invalid = require('character-reference-invalid')\nvar decimal = require('is-decimal')\nvar hexadecimal = require('is-hexadecimal')\nvar alphanumerical = require('is-alphanumerical')\nvar decodeEntity = require('./decode-entity')\n\nmodule.exports = parseEntities\n\nvar own = {}.hasOwnProperty\nvar fromCharCode = String.fromCharCode\nvar noop = Function.prototype\n\n// Default settings.\nvar defaults = {\n  warning: null,\n  reference: null,\n  text: null,\n  warningContext: null,\n  referenceContext: null,\n  textContext: null,\n  position: {},\n  additional: null,\n  attribute: false,\n  nonTerminated: true\n}\n\n// Characters.\nvar tab = 9 // '\\t'\nvar lineFeed = 10 // '\\n'\nvar formFeed = 12 // '\\f'\nvar space = 32 // ' '\nvar ampersand = 38 // '&'\nvar semicolon = 59 // ';'\nvar lessThan = 60 // '<'\nvar equalsTo = 61 // '='\nvar numberSign = 35 // '#'\nvar uppercaseX = 88 // 'X'\nvar lowercaseX = 120 // 'x'\nvar replacementCharacter = 65533 // '�'\n\n// Reference types.\nvar name = 'named'\nvar hexa = 'hexadecimal'\nvar deci = 'decimal'\n\n// Map of bases.\nvar bases = {}\n\nbases[hexa] = 16\nbases[deci] = 10\n\n// Map of types to tests.\n// Each type of character reference accepts different characters.\n// This test is used to detect whether a reference has ended (as the semicolon\n// is not strictly needed).\nvar tests = {}\n\ntests[name] = alphanumerical\ntests[deci] = decimal\ntests[hexa] = hexadecimal\n\n// Warning types.\nvar namedNotTerminated = 1\nvar numericNotTerminated = 2\nvar namedEmpty = 3\nvar numericEmpty = 4\nvar namedUnknown = 5\nvar numericDisallowed = 6\nvar numericProhibited = 7\n\n// Warning messages.\nvar messages = {}\n\nmessages[namedNotTerminated] =\n  'Named character references must be terminated by a semicolon'\nmessages[numericNotTerminated] =\n  'Numeric character references must be terminated by a semicolon'\nmessages[namedEmpty] = 'Named character references cannot be empty'\nmessages[numericEmpty] = 'Numeric character references cannot be empty'\nmessages[namedUnknown] = 'Named character references must be known'\nmessages[numericDisallowed] =\n  'Numeric character references cannot be disallowed'\nmessages[numericProhibited] =\n  'Numeric character references cannot be outside the permissible Unicode range'\n\n// Wrap to ensure clean parameters are given to `parse`.\nfunction parseEntities(value, options) {\n  var settings = {}\n  var option\n  var key\n\n  if (!options) {\n    options = {}\n  }\n\n  for (key in defaults) {\n    option = options[key]\n    settings[key] =\n      option === null || option === undefined ? defaults[key] : option\n  }\n\n  if (settings.position.indent || settings.position.start) {\n    settings.indent = settings.position.indent || []\n    settings.position = settings.position.start\n  }\n\n  return parse(value, settings)\n}\n\n// Parse entities.\n// eslint-disable-next-line complexity\nfunction parse(value, settings) {\n  var additional = settings.additional\n  var nonTerminated = settings.nonTerminated\n  var handleText = settings.text\n  var handleReference = settings.reference\n  var handleWarning = settings.warning\n  var textContext = settings.textContext\n  var referenceContext = settings.referenceContext\n  var warningContext = settings.warningContext\n  var pos = settings.position\n  var indent = settings.indent || []\n  var length = value.length\n  var index = 0\n  var lines = -1\n  var column = pos.column || 1\n  var line = pos.line || 1\n  var queue = ''\n  var result = []\n  var entityCharacters\n  var namedEntity\n  var terminated\n  var characters\n  var character\n  var reference\n  var following\n  var warning\n  var reason\n  var output\n  var entity\n  var begin\n  var start\n  var type\n  var test\n  var prev\n  var next\n  var diff\n  var end\n\n  if (typeof additional === 'string') {\n    additional = additional.charCodeAt(0)\n  }\n\n  // Cache the current point.\n  prev = now()\n\n  // Wrap `handleWarning`.\n  warning = handleWarning ? parseError : noop\n\n  // Ensure the algorithm walks over the first character and the end\n  // (inclusive).\n  index--\n  length++\n\n  while (++index < length) {\n    // If the previous character was a newline.\n    if (character === lineFeed) {\n      column = indent[lines] || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === ampersand) {\n      following = value.charCodeAt(index + 1)\n\n      // The behaviour depends on the identity of the next character.\n      if (\n        following === tab ||\n        following === lineFeed ||\n        following === formFeed ||\n        following === space ||\n        following === ampersand ||\n        following === lessThan ||\n        following !== following ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n\n        continue\n      }\n\n      start = index + 1\n      begin = start\n      end = start\n\n      if (following === numberSign) {\n        // Numerical entity.\n        end = ++begin\n\n        // The behaviour further depends on the next character.\n        following = value.charCodeAt(end)\n\n        if (following === uppercaseX || following === lowercaseX) {\n          // ASCII hex digits.\n          type = hexa\n          end = ++begin\n        } else {\n          // ASCII digits.\n          type = deci\n        }\n      } else {\n        // Named entity.\n        type = name\n      }\n\n      entityCharacters = ''\n      entity = ''\n      characters = ''\n      test = tests[type]\n      end--\n\n      while (++end < length) {\n        following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === name && own.call(legacy, characters)) {\n          entityCharacters = characters\n          entity = legacy[characters]\n        }\n      }\n\n      terminated = value.charCodeAt(end) === semicolon\n\n      if (terminated) {\n        end++\n\n        namedEntity = type === name ? decodeEntity(characters) : false\n\n        if (namedEntity) {\n          entityCharacters = characters\n          entity = namedEntity\n        }\n      }\n\n      diff = 1 + end - start\n\n      if (!terminated && !nonTerminated) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) entity is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== name) {\n          warning(numericEmpty, diff)\n        }\n      } else if (type === name) {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !entity) {\n          warning(namedUnknown, 1)\n        } else {\n          // If theres something after an entity name which is not known, cap\n          // the reference.\n          if (entityCharacters !== characters) {\n            end = begin + entityCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            reason = entityCharacters ? namedNotTerminated : namedEmpty\n\n            if (settings.attribute) {\n              following = value.charCodeAt(end)\n\n              if (following === equalsTo) {\n                warning(reason, diff)\n                entity = null\n              } else if (alphanumerical(following)) {\n                entity = null\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = entity\n      } else {\n        if (!terminated) {\n          // All non-terminated numeric entities are not rendered, and trigger a\n          // warning.\n          warning(numericNotTerminated, diff)\n        }\n\n        // When terminated and number, parse as either hexadecimal or decimal.\n        reference = parseInt(characters, bases[type])\n\n        // Trigger a warning when the parsed number is prohibited, and replace\n        // with replacement character.\n        if (prohibited(reference)) {\n          warning(numericProhibited, diff)\n          reference = fromCharCode(replacementCharacter)\n        } else if (reference in invalid) {\n          // Trigger a warning when the parsed number is disallowed, and replace\n          // by an alternative.\n          warning(numericDisallowed, diff)\n          reference = invalid[reference]\n        } else {\n          // Parse the number.\n          output = ''\n\n          // Trigger a warning when the parsed number should not be used.\n          if (disallowed(reference)) {\n            warning(numericDisallowed, diff)\n          }\n\n          // Stringify the number.\n          if (reference > 0xffff) {\n            reference -= 0x10000\n            output += fromCharCode((reference >>> (10 & 0x3ff)) | 0xd800)\n            reference = 0xdc00 | (reference & 0x3ff)\n          }\n\n          reference = output + fromCharCode(reference)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat an entity.\n      if (reference) {\n        flush()\n\n        prev = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        next = now()\n        next.offset++\n\n        if (handleReference) {\n          handleReference.call(\n            referenceContext,\n            reference,\n            {start: prev, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        prev = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (\n        character === 10 // Line feed\n      ) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (character === character) {\n        queue += fromCharCode(character)\n        column++\n      } else {\n        flush()\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line: line,\n      column: column,\n      offset: index + (pos.offset || 0)\n    }\n  }\n\n  // “Throw” a parse-error: a warning.\n  function parseError(code, offset) {\n    var position = now()\n\n    position.column += offset\n    position.offset += offset\n\n    handleWarning.call(warningContext, messages[code], position, code)\n  }\n\n  // Flush `queue` (normal text).\n  // Macro invoked before each entity and at the end of `value`.\n  // Does nothing when `queue` is empty.\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (handleText) {\n        handleText.call(textContext, queue, {start: prev, end: now()})\n      }\n\n      queue = ''\n    }\n  }\n}\n\n// Check if `character` is outside the permissible unicode range.\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n// Check if `character` is disallowed.\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _extends() {\n  module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  return _extends.apply(this, arguments);\n}\nmodule.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var objectWithoutPropertiesLoose = require(\"./objectWithoutPropertiesLoose.js\");\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\nmodule.exports = _objectWithoutProperties, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\nmodule.exports = _objectWithoutPropertiesLoose, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\nvar iterableToArray = require(\"./iterableToArray.js\");\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nmodule.exports = toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : String(i);\n}\nmodule.exports = toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["hasOwn","Object","prototype","hasOwnProperty","toStr","toString","defineProperty","gOPD","getOwnPropertyDescriptor","isArray","arr","Array","call","isPlainObject","obj","key","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","target","options","name","enumerable","configurable","value","newValue","writable","getProperty","module","exports","extend","src","copy","copyIsArray","clone","arguments","i","length","deep","contentsTree__leaf","React","className","styles","parse","tokens","input","String","index","indexOf","start","end","token","slice","trim","push","stringify","values","settings","join","padRight","padLeft","nameRe","nameReJsx","emptyOptions","jsx","test","re","empty","replace","Schema","property","normal","space","this","merge","definitions","assign","normalize","toLowerCase","Info","attribute","boolean","booleanish","overloadedBoolean","number","commaSeparated","spaceSeparated","commaOrSpaceSeparated","mustUseProperty","defined","powers","increment","checks","keys","DefinedInfo","mask","super","mark","check","own","create","definition","prop","properties","info","transform","attributes","includes","xlink","_","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xml","xmlLang","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlns","xmlnsxlink","xmlnsXLink","aria","ariaActiveDescendant","ariaAtomic","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDescribedBy","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaHidden","ariaInvalid","ariaKeyShortcuts","ariaLabel","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","html","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","alt","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","blocking","capture","charSet","checked","cite","cols","colSpan","content","contentEditable","controls","controlsList","coords","crossOrigin","data","dateTime","decoding","default","defer","dir","dirName","disabled","download","draggable","encType","enterKeyHint","fetchPriority","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","id","imageSizes","imageSrcSet","inert","inputMode","integrity","is","isMap","itemId","itemProp","itemRef","itemScope","itemType","kind","label","lang","language","list","loading","loop","low","manifest","max","maxLength","media","method","min","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforeMatch","onBeforePrint","onBeforeToggle","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClick","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseOver","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onScroll","onScrollEnd","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","open","optimum","pattern","ping","placeholder","playsInline","popover","popoverTarget","popoverTargetAction","poster","preload","readOnly","referrerPolicy","rel","required","reversed","rows","rowSpan","sandbox","scope","scoped","seamless","selected","shadowRootDelegatesFocus","shadowRootMode","shape","size","sizes","slot","span","spellCheck","srcDoc","srcLang","srcSet","step","style","tabIndex","title","translate","type","typeMustMatch","useMap","width","wrap","align","aLink","archive","axis","background","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","char","charOff","classId","clear","code","codeBase","codeType","color","compact","declare","event","face","frame","frameBorder","hSpace","leftMargin","link","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","object","profile","prompt","rev","rightMargin","rules","scheme","scrolling","standby","summary","text","topMargin","valueType","version","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","prefix","results","security","unselectable","svg","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dataType","dominantBaseline","enableBackground","fillOpacity","fillRule","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","transformOrigin","typeOf","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","begin","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","d","defaultAction","descent","diffuseConstant","direction","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","fill","filter","filterRes","filterUnits","focusable","focusHighlight","format","fr","from","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","handler","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","mode","numOctaves","observer","offset","opacity","operator","order","orient","orientation","origin","overflow","overlay","path","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","r","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","resource","restart","result","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","startOffset","stdDeviation","stemh","stemv","stitchTiles","string","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","to","u1","u2","unicode","viewBox","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","valid","dash","cap","find","schema","Type","charAt","rest","camelcase","toUpperCase","dashes","kebab","$0","hastToReact","split","pointEnd","point","pointStart","node","position","line","column","undefined","stringifyPosition","pos","VFileMessage","Error","causeOrReason","optionsOrParentOrPlace","reason","legacyCause","place","ancestors","cause","message","ruleId","source","parent","fatal","file","stack","actual","expected","note","url","emptyMap","Map","dashSomething","tableElements","Set","tableCellElement","docs","toJsxRuntime","tree","Fragment","TypeError","filePath","development","jsxDEV","props","isStaticChildren","children","columnNumber","fileName","lineNumber","developmentCreate","jsxs","fn","productionCreate","state","components","elementAttributeNameCase","evaluater","createEvaluater","ignoreInvalidStyle","passKeys","passNode","stylePropertyNameCase","tableCellAlignToStyle","one","parentSchema","tagName","findComponentFromName","alignValue","createProperty","has","createElementProps","createChildren","child","thing","addNode","addChildren","pop","estree","expression","body","evaluateExpression","crashEstree","mdxExpression","objectExpression","argument","createJsxElementProps","mdxJsxElement","evaluateProgram","mdxEsm","root","countsByName","count","get","set","Number","isNaN","styleObject","replacer","error","toCamel","parseStyle","domCasing","cssCasing","transformStyleToCssCasing","transformStylesToCssCasing","allowExpression","identifiers","computed","Boolean","optional","toDash","$1","urlAttributes","icon","includeImageAlt","includeHtml","splice","remove","items","parameters","chunkStart","unshift","subtokenize","events","jumps","lineIndex","otherIndex","otherEvent","subevents","more","_tokenizer","_isInFirstContentOfListItem","contentType","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","parser","childEvents","gaps","stream","previous","current","adjust","breaks","sliceStream","next","defineSkip","_gfmTasklistFirstContentOfListItem","write","combineExtensions","extensions","all","syntaxExtension","extension","hook","left","right","constructs","existing","before","add","asciiAlpha","regexCheck","asciiAlphanumeric","asciiAtext","asciiControl","asciiDigit","asciiHexDigit","asciiPunctuation","markdownLineEnding","markdownLineEndingOrSpace","markdownSpace","unicodePunctuation","unicodeWhitespace","regex","fromCharCode","factorySpace","effects","ok","limit","POSITIVE_INFINITY","enter","consume","exit","tokenize","contentStart","attempt","contentInitial","lineStart","self","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","containerContinue","flow","flowContinue","writeToChild","eof","seen","entry","nok","document","disable","null","blankLine","after","partial","chunkInside","contentEnd","continuationConstruct","contentContinue","resolve","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","charCodeAt","_index","_bufferIndex","called","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","head","shift","sliceChunks","chunkIndex","go","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","map","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","resolveTo","thematicBreak","marker","sequence","initialSize","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","contBefore","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","enclosedBefore","raw","enclosed","enclosedEscape","rawEscape","factoryLabel","markerType","labelInside","labelEscape","factoryTitle","escape","factoryWhitespace","normalizeIdentifier","identifier","labelAfter","markerAfter","destinationBefore","destinationAfter","titleBefore","afterWhitespace","beforeMarker","titleAfter","titleAfterOptionalWhitespace","codeIndented","afterPrefix","furtherStart","headingAtx","sequenceOpen","sequenceFurther","setextUnderline","paragraph","heading","htmlBlockNames","htmlRawNames","htmlFlow","closingTag","buffer","markerB","declarationOpen","tagCloseStart","continuationDeclarationInside","commentOpenInside","cdataOpenInside","slash","basicSelfClosing","completeClosingTagAfter","completeAttributeNameBefore","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCdataInside","continuationStart","blankLineBefore","continuationAfter","nonLazyContinuationStart","continuationStartNonLazy","continuationBefore","continuationRawEndTag","nonLazyContinuation","codeFenced","closeStart","startBefore","beforeSequenceClose","sequenceClose","sizeOpen","sequenceCloseAfter","initialPrefix","beforeSequenceOpen","infoBefore","atNonLazyBreak","metaBefore","meta","contentBefore","beforeContentChunk","contentChunk","createElement","decodeNamedCharacterReference","characterReference","innerHTML","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","labelEndNok","resourceConstruct","labelEndOk","referenceFullConstruct","referenceNotFull","referenceCollapsedConstruct","close","group","insideSpan","resourceBefore","resourceOpen","resourceEnd","resourceDestinationAfter","resourceDestinationMissing","resourceBetween","resourceTitleAfter","referenceFullAfter","referenceFullMissing","referenceCollapsedOpen","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","closingSequence","use","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","instruction","tagOpen","declaration","commentEnd","comment","commentClose","lineEndingBefore","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","lineEndingAfter","lineEndingAfterPrefix","labelStartLink","hardBreakEscape","codeText","between","tailExitIndex","headEnterIndex","search","decodeNumericCharacterReference","base","parseInt","fromCodePoint","characterEscapeOrReference","decode","$2","hex","fromMarkdown","encoding","config","transforms","canContainEols","opener","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","compile","tokenStack","resume","listStack","prepareList","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","expectingFirstListItemValue","flowCodeInside","depth","setextHeadingSlurpLineEnding","codePointAt","siblings","atHardBreak","inReference","referenceType","ancestor","decodeString","fragment","characterReferenceType","ordered","spread","compiler","postprocess","atCarriageReturn","match","endPosition","TextDecoder","lastIndex","exec","Math","ceil","preprocess","combined","remarkParse","doc","env","globalThis","deserialize","serialized","$","out","unpair","Date","flags","RegExp","BigInt","deserializer","EMPTY","asString","shouldSkip","TYPE","serialize","json","lossy","strict","pair","valueOf","toJSON","entries","toISOString","serializer","structuredClone","any","normalizeUri","skip","encodeURIComponent","defaultFootnoteBackContent","rereferenceIndex","defaultFootnoteBackLabel","referenceIndex","convert","castFactory","tests","apply","anyFactory","checkAsRecord","nodeAsRecord","propsFactory","typeFactory","testFunction","looksLikeANode","CONTINUE","EXIT","SKIP","visitParents","visitor","reverse","factory","parents","visit","subresult","grandparents","toResult","nodeAsParent","concat","testOrVisitor","visitorOrReverse","maybeReverse","revert","subtype","suffix","contents","listItemLoose","tab","trimLines","last","lines","trimLine","blockquote","patch","applyData","break","delete","footnoteReference","clobberPrefix","safeId","footnoteOrder","counter","reuseCounter","footnoteCounts","dataFootnoteRef","sup","allowDangerousHtml","imageReference","definitionById","inlineCode","linkReference","loose","listLoose","table","firstRow","tableContent","tableCell","tableRow","cellIndex","cells","cell","toml","ignore","yaml","footnoteDefinition","hName","hChildren","hProperties","defaultUnknownHandler","nodes","trimMarkdownSpaceStart","toHast","footnoteById","handlers","handle","passThrough","shallow","unknownHandler","createState","foot","footnoteBackContent","footnoteBackLabel","footnoteLabel","footnoteLabelTagName","footnoteLabelProperties","listItems","backReferences","counts","dataFootnoteBackref","tailTail","dataFootnotes","footer","remarkRehype","destination","hastTree","run","bail","getPrototypeOf","Symbol","toStringTag","iterator","trough","fns","pipeline","middlewareIndex","callback","output","middleware","wrapped","fnExpectsCallback","done","then","middelware","basename","ext","assertPath","seenNonSlash","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","proc","cwd","isUrl","fileUrlOrPath","protocol","auth","urlToPath","URL","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","VFile","isUint8Array","history","messages","stored","assertNonEmpty","assertPart","stem","fail","part","CallableInstance","proto","func","setPrototypeOf","names","getOwnPropertyNames","p","descriptor","Processor","Compiler","Parser","attachers","freezeIndex","frozen","namespace","transformers","attacher","assertUnfrozen","freeze","transformer","realFile","vfile","assertParser","process","assertCompiler","executor","Promise","reject","parseTree","realDone","compileTree","compileResult","processSync","complete","assertDone","assertNode","outputTree","resultingTree","runSync","addPlugin","addList","addPreset","plugin","plugins","entryIndex","primary","currentPrimary","unified","asyncName","looksLikeAVFile","emptyPlugins","emptyRemarkRehypeOptions","safeProtocol","deprecations","Markdown","allowedElements","allowElement","disallowedElements","rehypePlugins","remarkPlugins","remarkRehypeOptions","skipHtml","unwrapDisallowed","urlTransform","defaultUrlTransform","processor","deprecation","mdastTree","colon","questionMark","numberSign","buttonTypes","createH","defaultTagName","caseSensitive","createAdjustMap","selector","subvalue","parseSelector","isProperties","addProperty","addChild","parsePrimitive","finalResult","h","s","webNamespaces","mathml","nodeName","quirksMode","childNodes","location","loc","indices","toPoint","toOffset","namespaceURI","attrs","sourceCodeLocation","startTag","endTag","verbose","opening","closing","createLocation","startLine","startCol","endLine","endCol","endOffset","zwitch","invalid","unknown","currentSchema","parentNode","publicId","systemId","htmlVoidElements","UNDEFINED_CODE_POINTS","REPLACEMENT_CHARACTER","CODE_POINTS","SEQUENCES","isSurrogate","cp","isControlCodePoint","isUndefinedCodePoint","ERR","Preprocessor","lastGapPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","bufferWaterline","isEol","lineStartPos","droppedBufferSize","lastErrOffset","col","getError","_err","onParseError","_addGap","_processSurrogate","nextCp","isSurrogatePair","EOF","surrogateInInputStream","willDropParsedChunk","dropParsedChunk","substring","isLastChunk","insertHtmlAtCurrentPos","startsWith","peek","CARRIAGE_RETURN","LINE_FEED","advance","_checkForProblematicCharacters","controlCharacterInInputStream","noncharacterInInputStream","retreat","TokenType","getTokenAttr","attrName","_a","Uint16Array","c","decodeMap","codePoint","replaceCodePoint","CharCodes","BinTrieFlags","EntityDecoderState","DecodingMode","isNumber","ZERO","NINE","isHexadecimalCharacter","UPPER_A","UPPER_F","LOWER_A","LOWER_F","isEntityInAttributeInvalidEnd","EQUALS","UPPER_Z","LOWER_Z","isAsciiAlphaNumeric","EntityDecoder","decodeTree","emitCodePoint","errors","EntityStart","treeIndex","excess","decodeMode","Strict","startEntity","str","NUM","NumericStart","stateNumericStart","NamedEntity","stateNamedEntity","NumericDecimal","stateNumericDecimal","NumericHex","stateNumericHex","LOWER_X","addToNumericResult","digitCount","pow","substr","startIdx","emitNumericEntity","lastCp","expectedLength","absenceOfDigitsInNumericCharacterReference","SEMI","missingSemicolonAfterCharacterReference","validateNumericCharacterReference","valueLength","VALUE_LENGTH","determineBranch","Attribute","emitNotTerminatedNamedEntity","emitNamedEntityData","getDecoder","ret","decoder","len","nodeIdx","branchCount","BRANCH_LENGTH","jumpOffset","JUMP_TABLE","lo","hi","mid","midVal","ATTRS","DOCUMENT_MODE","TAG_NAMES","TAG_ID","NS","TAG_NAME_TO_ID","A","ADDRESS","ANNOTATION_XML","APPLET","AREA","ARTICLE","ASIDE","B","BASE","BASEFONT","BGSOUND","BIG","BLOCKQUOTE","BODY","BR","BUTTON","CAPTION","CENTER","CODE","COL","COLGROUP","DD","DESC","DETAILS","DIALOG","DIR","DIV","DL","DT","EM","EMBED","FIELDSET","FIGCAPTION","FIGURE","FONT","FOOTER","FOREIGN_OBJECT","FORM","FRAME","FRAMESET","H1","H2","H3","H4","H5","H6","HEAD","HEADER","HGROUP","HR","HTML","I","IMG","IMAGE","INPUT","IFRAME","KEYGEN","LABEL","LI","LINK","LISTING","MAIN","MALIGNMARK","MARQUEE","MATH","MENU","META","MGLYPH","MI","MO","MN","MS","MTEXT","NAV","NOBR","NOFRAMES","NOEMBED","NOSCRIPT","OBJECT","OL","OPTGROUP","OPTION","P","PARAM","PLAINTEXT","PRE","RB","RP","RT","RTC","RUBY","S","SCRIPT","SECTION","SELECT","SOURCE","SMALL","SPAN","STRIKE","STRONG","STYLE","SUB","SUMMARY","SUP","TABLE","TBODY","TEMPLATE","TEXTAREA","TFOOT","TD","TH","THEAD","TITLE","TR","TRACK","TT","U","UL","SVG","VAR","WBR","XMP","getTagID","UNKNOWN","SPECIAL_ELEMENTS","MATHML","XLINK","XML","XMLNS","isNumberedHeader","tn","C1_CONTROLS_REFERENCE_REPLACEMENTS","State","TokenizerMode","DATA","RCDATA","RAWTEXT","SCRIPT_DATA","CDATA_SECTION","isAsciiDigit","DIGIT_0","DIGIT_9","isAsciiUpper","LATIN_CAPITAL_A","LATIN_CAPITAL_Z","isAsciiLetter","LATIN_SMALL_A","LATIN_SMALL_Z","isAsciiLower","isAsciiUpperHexDigit","LATIN_CAPITAL_F","isAsciiLowerHexDigit","LATIN_SMALL_F","toAsciiLower","isWhitespace","SPACE","TABULATION","FORM_FEED","isScriptDataDoubleEscapeSequenceEnd","SOLIDUS","GREATER_THAN_SIGN","Tokenizer","paused","inLoop","inForeignNode","lastStartTagName","active","charRefCode","consumedAfterSnapshot","currentCharacterToken","currentToken","currentAttr","preprocessor","currentLocation","getCurrentLocation","_b","sourceCodeLocationInfo","_runParsingLoop","_consume","_ensureHibernation","_callState","pause","writeCallback","_unconsume","_reconsumeInState","_advanceBy","_consumeSequenceIfMatch","_createStartTagToken","START_TAG","tagID","selfClosing","ackSelfClosing","_createEndTagToken","END_TAG","_createCommentToken","COMMENT","_createDoctypeToken","initialName","DOCTYPE","forceQuirks","_createCharacterToken","chars","_createAttr","attrNameFirstCh","_leaveAttrName","_leaveAttrValue","duplicateAttribute","prepareToken","ct","_emitCurrentCharacterToken","emitCurrentTagToken","onStartTag","endTagWithAttributes","endTagWithTrailingSolidus","onEndTag","emitCurrentComment","onComment","emitCurrentDoctype","onDoctype","nextLocation","CHARACTER","onCharacter","NULL_CHARACTER","onNullCharacter","WHITESPACE_CHARACTER","onWhitespaceCharacter","_emitEOFToken","onEof","_appendCharToCurrentCharacterToken","ch","_emitCodePoint","NULL","_emitChars","_matchNamedCharacterReference","withoutSemicolon","masked","SEMICOLON","_isCharacterReferenceInAttribute","EQUALS_SIGN","AMPERSAND","ATTRIBUTE_VALUE_DOUBLE_QUOTED","ATTRIBUTE_VALUE_SINGLE_QUOTED","ATTRIBUTE_VALUE_UNQUOTED","_flushCodePointConsumedAsCharacterReference","_stateData","_stateRcdata","_stateRawtext","_stateScriptData","_statePlaintext","TAG_OPEN","_stateTagOpen","END_TAG_OPEN","_stateEndTagOpen","TAG_NAME","_stateTagName","RCDATA_LESS_THAN_SIGN","_stateRcdataLessThanSign","RCDATA_END_TAG_OPEN","_stateRcdataEndTagOpen","RCDATA_END_TAG_NAME","_stateRcdataEndTagName","RAWTEXT_LESS_THAN_SIGN","_stateRawtextLessThanSign","RAWTEXT_END_TAG_OPEN","_stateRawtextEndTagOpen","RAWTEXT_END_TAG_NAME","_stateRawtextEndTagName","SCRIPT_DATA_LESS_THAN_SIGN","_stateScriptDataLessThanSign","SCRIPT_DATA_END_TAG_OPEN","_stateScriptDataEndTagOpen","SCRIPT_DATA_END_TAG_NAME","_stateScriptDataEndTagName","SCRIPT_DATA_ESCAPE_START","_stateScriptDataEscapeStart","SCRIPT_DATA_ESCAPE_START_DASH","_stateScriptDataEscapeStartDash","SCRIPT_DATA_ESCAPED","_stateScriptDataEscaped","SCRIPT_DATA_ESCAPED_DASH","_stateScriptDataEscapedDash","SCRIPT_DATA_ESCAPED_DASH_DASH","_stateScriptDataEscapedDashDash","SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN","_stateScriptDataEscapedLessThanSign","SCRIPT_DATA_ESCAPED_END_TAG_OPEN","_stateScriptDataEscapedEndTagOpen","SCRIPT_DATA_ESCAPED_END_TAG_NAME","_stateScriptDataEscapedEndTagName","SCRIPT_DATA_DOUBLE_ESCAPE_START","_stateScriptDataDoubleEscapeStart","SCRIPT_DATA_DOUBLE_ESCAPED","_stateScriptDataDoubleEscaped","SCRIPT_DATA_DOUBLE_ESCAPED_DASH","_stateScriptDataDoubleEscapedDash","SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH","_stateScriptDataDoubleEscapedDashDash","SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN","_stateScriptDataDoubleEscapedLessThanSign","SCRIPT_DATA_DOUBLE_ESCAPE_END","_stateScriptDataDoubleEscapeEnd","BEFORE_ATTRIBUTE_NAME","_stateBeforeAttributeName","ATTRIBUTE_NAME","_stateAttributeName","AFTER_ATTRIBUTE_NAME","_stateAfterAttributeName","BEFORE_ATTRIBUTE_VALUE","_stateBeforeAttributeValue","_stateAttributeValueDoubleQuoted","_stateAttributeValueSingleQuoted","_stateAttributeValueUnquoted","AFTER_ATTRIBUTE_VALUE_QUOTED","_stateAfterAttributeValueQuoted","SELF_CLOSING_START_TAG","_stateSelfClosingStartTag","BOGUS_COMMENT","_stateBogusComment","MARKUP_DECLARATION_OPEN","_stateMarkupDeclarationOpen","COMMENT_START","_stateCommentStart","COMMENT_START_DASH","_stateCommentStartDash","_stateComment","COMMENT_LESS_THAN_SIGN","_stateCommentLessThanSign","COMMENT_LESS_THAN_SIGN_BANG","_stateCommentLessThanSignBang","COMMENT_LESS_THAN_SIGN_BANG_DASH","_stateCommentLessThanSignBangDash","COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH","_stateCommentLessThanSignBangDashDash","COMMENT_END_DASH","_stateCommentEndDash","COMMENT_END","_stateCommentEnd","COMMENT_END_BANG","_stateCommentEndBang","_stateDoctype","BEFORE_DOCTYPE_NAME","_stateBeforeDoctypeName","DOCTYPE_NAME","_stateDoctypeName","AFTER_DOCTYPE_NAME","_stateAfterDoctypeName","AFTER_DOCTYPE_PUBLIC_KEYWORD","_stateAfterDoctypePublicKeyword","BEFORE_DOCTYPE_PUBLIC_IDENTIFIER","_stateBeforeDoctypePublicIdentifier","DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypePublicIdentifierDoubleQuoted","DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED","_stateDoctypePublicIdentifierSingleQuoted","AFTER_DOCTYPE_PUBLIC_IDENTIFIER","_stateAfterDoctypePublicIdentifier","BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS","_stateBetweenDoctypePublicAndSystemIdentifiers","AFTER_DOCTYPE_SYSTEM_KEYWORD","_stateAfterDoctypeSystemKeyword","BEFORE_DOCTYPE_SYSTEM_IDENTIFIER","_stateBeforeDoctypeSystemIdentifier","DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED","_stateDoctypeSystemIdentifierDoubleQuoted","DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED","_stateDoctypeSystemIdentifierSingleQuoted","AFTER_DOCTYPE_SYSTEM_IDENTIFIER","_stateAfterDoctypeSystemIdentifier","BOGUS_DOCTYPE","_stateBogusDoctype","_stateCdataSection","CDATA_SECTION_BRACKET","_stateCdataSectionBracket","CDATA_SECTION_END","_stateCdataSectionEnd","CHARACTER_REFERENCE","_stateCharacterReference","NAMED_CHARACTER_REFERENCE","_stateNamedCharacterReference","AMBIGUOUS_AMPERSAND","_stateAmbiguousAmpersand","NUMERIC_CHARACTER_REFERENCE","_stateNumericCharacterReference","HEXADEMICAL_CHARACTER_REFERENCE_START","_stateHexademicalCharacterReferenceStart","HEXADEMICAL_CHARACTER_REFERENCE","_stateHexademicalCharacterReference","DECIMAL_CHARACTER_REFERENCE","_stateDecimalCharacterReference","NUMERIC_CHARACTER_REFERENCE_END","_stateNumericCharacterReferenceEnd","LESS_THAN_SIGN","unexpectedNullCharacter","EXCLAMATION_MARK","QUESTION_MARK","unexpectedQuestionMarkInsteadOfTagName","eofBeforeTagName","invalidFirstCharacterOfTagName","missingEndTagName","eofInTag","handleSpecialEndTag","_cp","HYPHEN_MINUS","eofInScriptHtmlCommentLikeText","unexpectedEqualsSignBeforeAttributeName","QUOTATION_MARK","APOSTROPHE","unexpectedCharacterInAttributeName","missingAttributeValue","GRAVE_ACCENT","unexpectedCharacterInUnquotedAttributeValue","missingWhitespaceBetweenAttributes","unexpectedSolidusInTag","cdataInHtmlContent","incorrectlyOpenedComment","abruptClosingOfEmptyComment","eofInComment","nestedComment","incorrectlyClosedComment","eofInDoctype","missingWhitespaceBeforeDoctypeName","missingDoctypeName","invalidCharacterSequenceAfterDoctypeName","missingWhitespaceAfterDoctypePublicKeyword","missingDoctypePublicIdentifier","missingQuoteBeforeDoctypePublicIdentifier","abruptDoctypePublicIdentifier","missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers","missingQuoteBeforeDoctypeSystemIdentifier","missingWhitespaceAfterDoctypeSystemKeyword","missingDoctypeSystemIdentifier","abruptDoctypeSystemIdentifier","unexpectedCharacterAfterDoctypeSystemIdentifier","RIGHT_SQUARE_BRACKET","eofInCdata","NUMBER_SIGN","matchResult","unknownNamedCharacterReference","LATIN_SMALL_X","LATIN_CAPITAL_X","isAsciiHexDigit","nullCharacterReference","characterReferenceOutsideUnicodeRange","surrogateCharacterReference","noncharacterCharacterReference","controlCharacterReference","replacement","IMPLICIT_END_TAG_REQUIRED","IMPLICIT_END_TAG_REQUIRED_THOROUGHLY","SCOPING_ELEMENT_NS","NAMED_HEADERS","TABLE_ROW_CONTEXT","TABLE_BODY_CONTEXT","TABLE_CONTEXT","TABLE_CELLS","OpenElementStack","currentTmplContentOrNode","_isInTemplate","treeAdapter","getTemplateContent","tagIDs","stackTop","tmplCount","currentTagId","_indexOf","element","getNamespaceURI","_updateCurrentElement","onItemPush","popped","onItemPop","oldElement","newElement","idx","insertAfter","referenceElement","newElementID","insertionIdx","popUntilTagNamePopped","targetIdx","shortenToLength","popUntilElementPopped","popUntilPopped","tagNames","targetNS","_indexOfTagNames","popUntilNumberedHeaderPopped","popUntilTableCellPopped","popAllUpToHtmlElement","clearBackTo","clearBackToTableContext","clearBackToTableBodyContext","clearBackToTableRowContext","tryPeekProperlyNestedBodyElement","contains","getCommonAncestor","elementIdx","isRootHtmlElementCurrent","hasInScope","ns","hasNumberedHeaderInScope","hasInListItemScope","hasInButtonScope","hasInTableScope","hasTableBodyContextInTableScope","hasInSelectScope","generateImpliedEndTags","generateImpliedEndTagsThoroughly","generateImpliedEndTagsWithExclusion","exclusionId","EntryType","MARKER","Marker","FormattingElementList","bookmark","_getNoahArkConditionCandidates","neAttrs","candidates","neAttrsLength","neTagName","getTagName","neNamespaceURI","elementAttrs","getAttrList","_ensureNoahArkCondition","neAttrsMap","neAttr","validCandidates","candidate","every","cAttr","insertMarker","pushElement","Element","insertElementAfterBookmark","bookmarkIdx","removeEntry","clearToLastMarker","markerIdx","getElementEntryInScopeWithTagName","getElementEntry","createTextNode","defaultTreeAdapter","createDocument","NO_QUIRKS","createDocumentFragment","createCommentNode","appendChild","newNode","insertBefore","referenceNode","setTemplateContent","templateElement","contentElement","setDocumentType","doctypeNode","setDocumentMode","getDocumentMode","detachNode","insertText","prevNode","isTextNode","insertTextBefore","adoptAttributes","recipient","recipientAttrsMap","attr","j","getFirstChild","getChildNodes","getParentNode","getTextNodeContent","textNode","getCommentNodeContent","commentNode","getDocumentTypeNodeName","getDocumentTypeNodePublicId","getDocumentTypeNodeSystemId","isCommentNode","isDocumentTypeNode","isElementNode","setNodeSourceCodeLocation","getNodeSourceCodeLocation","updateNodeSourceCodeLocation","endLocation","VALID_DOCTYPE_NAME","VALID_SYSTEM_ID","QUIRKS_MODE_SYSTEM_ID","QUIRKS_MODE_PUBLIC_ID_PREFIXES","QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES","QUIRKS_MODE_PUBLIC_IDS","LIMITED_QUIRKS_PUBLIC_ID_PREFIXES","LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES","hasPrefix","prefixes","some","MIME_TYPES","TEXT_HTML","APPLICATION_XML","DEFINITION_URL_ATTR","ADJUSTED_DEFINITION_URL_ATTR","SVG_ATTRS_ADJUSTMENT_MAP","XML_ATTRS_ADJUSTMENT_MAP","SVG_TAG_NAMES_ADJUSTMENT_MAP","EXITS_FOREIGN_CONTENT","adjustTokenMathMLAttrs","adjustTokenSVGAttrs","adjustedAttrName","adjustTokenXMLAttrs","adjustedAttrEntry","isIntegrationPoint","foreignNS","ENCODING","isHtmlIntegrationPoint","isMathMLTextIntegrationPoint","HIDDEN_INPUT_TYPE","AA_OUTER_LOOP_ITER","AA_INNER_LOOP_ITER","InsertionMode","BASE_LOC","TABLE_STRUCTURE_TAGS","defaultParserOptions","scriptingEnabled","fragmentContext","scriptHandler","stopped","insertionMode","INITIAL","originalInsertionMode","headElement","formElement","currentNotInHTML","tmplInsertionModeStack","pendingCharacterTokens","hasNonWhitespacePendingCharacterToken","framesetOk","fosterParentingEnabled","activeFormattingElements","fragmentContextID","_setContextModes","openElements","getFragmentParser","opts","documentMock","IN_TEMPLATE","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","getFragment","rootElement","_adoptNodes","beforeToken","err","tid","isTop","_setEndLocation","isHTML","_isIntegrationPoint","_switchToTextParsing","nextTokenizerState","_insertElement","TEXT","switchToPlaintextParsing","IN_BODY","_getAdjustedCurrentElement","_setDocumentType","docTypeNode","_attachElementToTree","_shouldFosterParentOnInsertion","_fosterParentElement","_appendElement","_insertFakeElement","_insertTemplate","tmpl","_appendCommentNode","_insertCharacters","beforeElement","_findFosterParentingLocation","textNodeIdx","donor","closingToken","ctLoc","endLoc","shouldProcessStartTagTokenInForeignContent","_processToken","_processStartTag","_reconstructActiveFormattingElements","listLength","findIndex","_closeTableCell","IN_ROW","_closePElement","IN_TABLE_BODY","IN_CAPTION","IN_COLUMN_GROUP","IN_TABLE","IN_FRAMESET","_resetInsertionModeForSelect","AFTER_HEAD","BEFORE_HEAD","IN_CELL","IN_HEAD","selectIdx","IN_SELECT_IN_TABLE","IN_SELECT","_isElementCausesFosterParenting","openElement","_isSpecialElement","characterInForeignContent","tokenInInitialMode","BEFORE_HTML","tokenBeforeHtml","tokenBeforeHead","tokenInHead","IN_HEAD_NO_SCRIPT","tokenInHeadNoScript","tokenAfterHead","characterInBody","characterInTable","IN_TABLE_TEXT","characterInTableText","tokenInColumnGroup","AFTER_BODY","tokenAfterBody","AFTER_AFTER_BODY","tokenAfterAfterBody","nullCharacterInForeignContent","appendComment","AFTER_FRAMESET","tokenInTableText","appendCommentToRootHtmlElement","AFTER_AFTER_FRAMESET","appendCommentToDocument","QUIRKS","LIMITED_QUIRKS","nonConformingDoctype","doctypeInInitialMode","misplacedDoctype","nonVoidHtmlElementStartTagWithTrailingSolidus","startTagToken","COLOR","SIZE","FACE","popUntilHtmlOrIntegrationPoint","_startTagOutsideForeignContent","currentNs","adjustedTagName","startTagInForeignContent","startTagBeforeHtml","startTagInBody","startTagBeforeHead","startTagInHead","nestedNoscriptInHead","startTagInHeadNoScript","abandonedHeadElementChild","misplacedStartTagForHeadElement","startTagAfterHead","startTagInTable","TABLE_VOID_ELEMENTS","startTagInCaption","startTagInColumnGroup","startTagInTableBody","startTagInRow","startTagInCell","startTagInSelect","startTagInSelectInTable","startTagInTemplate","startTagAfterBody","startTagInFrameset","startTagAfterFrameset","startTagAfterAfterBody","startTagAfterAfterFrameset","_endTagOutsideForeignContent","endTagInForeignContent","endTagBeforeHtml","endTagWithoutMatchingOpenElement","endTagBeforeHead","templateEndTagInHead","endTagInHead","endTagInHeadNoScript","endTagAfterHead","endTagInBody","endTagInText","endTagInTable","endTagInCaption","endTagInColumnGroup","endTagInTableBody","endTagInRow","endTagInCell","endTagInSelect","endTagInSelectInTable","endTagInTemplate","endTagAfterBody","endTagInFrameset","endTagAfterFrameset","eofInBody","eofInElementThatCanContainOnlyText","eofInText","eofInTemplate","stopParsing","whitespaceCharacterInBody","whitespaceCharacterInTableText","aaObtainFormattingElementEntry","formattingElementEntry","genericEndTagInBody","aaObtainFurthestBlock","furthestBlock","aaInnerLoop","formattingElement","lastElement","nextElement","elementEntry","counterOverflow","aaRecreateElementFromEntry","aaInsertLastNodeInCommonAncestor","commonAncestor","aaReplaceFormattingElement","callAdoptionAgency","htmlElement","htmlLocation","bodyElement","bodyLocation","missingDoctype","closingOfElementWithOpenChildElements","errCode","openElementsLeftAfterEof","disallowedContentInNoscriptInHead","modeInBody","areaStartTagInBody","isHiddenInput","inputType","noembedStartTagInBody","genericStartTagInBody","bStartTagInBody","activeElementEntry","aStartTagInBody","numberedHeaderStartTagInBody","addressStartTagInBody","elementId","listItemStartTagInBody","hrStartTagInBody","rbStartTagInBody","rtStartTagInBody","preStartTagInBody","xmpStartTagInBody","svgStartTagInBody","htmlStartTagInBody","bodyStartTagInBody","inTemplate","formStartTagInBody","nobrStartTagInBody","mathStartTagInBody","tableStartTagInBody","inputStartTagInBody","paramStartTagInBody","imageStartTagInBody","buttonStartTagInBody","appletStartTagInBody","iframeStartTagInBody","selectStartTagInBody","optgroupStartTagInBody","framesetStartTagInBody","textareaStartTagInBody","plaintextStartTagInBody","pEndTagInBody","addressEndTagInBody","liEndTagInBody","ddEndTagInBody","numberedHeaderEndTagInBody","brEndTagInBody","bodyEndTagInBody","htmlEndTagInBody","formEndTagInBody","appletEndTagInBody","tokenInTable","tdStartTagInTable","colStartTagInTable","formStartTagInTable","tableStartTagInTable","tbodyStartTagInTable","inputStartTagInTable","captionStartTagInTable","colgroupStartTagInTable","savedFosterParentingState","xmlCodeMap","getEscaper","lastIdx","knownMdxNames","parseOptions","documentMode","stitches","resetTokenizer","fromParse5","stitch","toParse5","tag","createParse5Location","cloneWithoutChildren","fakeRoot","handleRaw","setPoint","node_","extra","rehypeRaw","ccount","character","findAndReplace","ignored","pairs","tupleOrList","tuple","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","inConstruct","notInConstruct","enterLiteralAutolink","enterLiteralAutolinkValue","exitLiteralAutolinkHttp","exitLiteralAutolinkWww","exitLiteralAutolinkEmail","exitLiteralAutolink","transformGfmAutolinkLiterals","findUrl","findEmail","domain","parts","isCorrectDomain","trailExec","trail","closingParenIndex","openingParens","closingParens","splitUrl","atext","email","enterFootnoteDefinition","enterFootnoteDefinitionLabelString","exitFootnoteDefinitionLabelString","exitFootnoteDefinition","enterFootnoteCall","enterFootnoteCallString","exitFootnoteCallString","exitFootnoteCall","tracker","createTracker","move","subexit","safe","associationId","indentLines","containerFlow","blank","constructsWithoutStrikethrough","enterStrikethrough","exitStrikethrough","handleDelete","containerPhrasing","defaultStringLength","toAlignment","listInScope","none","_1","unsafe","checkQuote","quote","checkEmphasis","compilePattern","formatLinkAsAutolink","resourceLink","checkBullet","bullet","checkRule","rule","phrasing","checkStrong","fence","checkFence","fences","formatCodeAsIndented","repeat","longestStreak","encode","rank","literalWithBreak","setext","formatHeadingAsSetext","closeAtx","bulletCurrent","bulletOrdered","checkBulletOrdered","bulletOther","checkBulletOther","useDifferentMarker","bulletLastUsed","firstListItem","indexStack","listItemIndent","checkListItemIndent","incrementListMarker","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","enterTable","_align","inTable","exitTable","enterRow","enterCell","exitCodeText","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","handleTableCell","row","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","columnIndex","delimiterStart","delimiterEnd","markdownTable","exitCheck","exitParagraphWithTaskListItem","firstParaghraph","sibling","listItemWithTaskListItem","checkable","checkbox","wwwPrefix","wwwPrefixInside","wwwPrefixAfter","underscoreInLastSegment","underscoreInLastLastSegment","domainInside","domainAfter","domainAtPunctuation","sizeClose","pathInside","pathAtPunctuation","trailCharRefStart","trailBracketAfter","trailCharRefInside","emailDomainDotTrail","wwwAutolink","previousWww","previousUnbalanced","wwwAfter","protocolAutolink","previousProtocol","protocolPrefixInside","protocolSlashesInside","afterProtocol","protocolAfter","emailAutolink","dot","gfmAtext","previousEmail","emailDomain","emailDomainAfter","emailDomainDot","_gfmAutolinkLiteralWalkedInto","indent","tokenizePotentialGfmFootnoteCall","gfmFootnotes","resolveToPotentialGfmFootnoteCall","tokenizeGfmFootnoteCall","callStart","callData","callEscape","tokenizeDefinitionStart","labelAtMarker","whitespaceAfter","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","gfmStrikethrough","single","singleTilde","strikethrough","EditMap","editMap","at","addImpl","sort","a","b","vecs","gfmTableAlign","inDelimiterRow","alignIndex","tokenizeTable","sizeB","bodyRowStart","headRowBefore","headRowBreak","headRowStart","headDelimiterStart","headRowData","headRowEscape","headDelimiterBefore","headDelimiterValueBefore","headDelimiterCellBefore","headDelimiterNok","headDelimiterLeftAlignmentAfter","headDelimiterCellAfter","headDelimiterFiller","headDelimiterRightAlignmentAfter","bodyRowBreak","bodyRowData","bodyRowEscape","resolveTable","currentTable","currentBody","currentCell","inFirstCellAwaitingPipe","rowKind","lastCell","afterHeadAwaitingFirstBodyRow","lastTableEnd","flushTableEnd","flushCell","range","rowEnd","previousCell","groupName","getPoint","relatedStart","relatedEnd","valueToken","tableBody","exits","related","tasklistCheck","spaceThenNonSpace","remarkGfm","micromarkExtensions","fromMarkdownExtensions","toMarkdownExtensions","gfm","literalAutolink","literalAutolinkEmail","literalAutolinkHttp","literalAutolinkWww","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","tableData","tableHeader","taskListCheckValueChecked","taskListCheckValueUnchecked","gfmToMarkdown","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","classNameCombinations","createStyleObject","classNames","elementStyle","stylesheet","arrLength","getClassNameCombinations","reduce","createClassNameString","_ref","_ref$style","useInlineStyles","TagName","childrenCreator","childrenCount","allStylesheetSelectors","classes","startingClassName","astGenerator","listLanguages","_excluded","newLineRegex","AllLineNumbers","_ref2","codeString","codeStyle","_ref2$containerStyle","containerStyle","paddingRight","_ref2$numberStyle","numberStyle","startingLineNumber","getAllLineNumbers","getInlineLineNumber","inlineLineNumberStyle","assembleLineNumberStyles","lineNumberStyle","largestLineNumber","num","defaultLineNumberStyle","minWidth","textAlign","userSelect","customLineNumberStyle","createLineElement","_ref3","showInlineLineNumbers","_ref3$lineProps","lineProps","_ref3$className","showLineNumbers","wrapLongLines","flattenCodeTree","newTree","processLines","codeTree","wrapLines","_ref4","lastLineBreakIndex","createLine","createWrappedLine","createUnwrappedLine","_loop","splitValue","newChild","_line","stringChild","lastLineInPreviousSpan","newElem","_line2","_line3","defaultRenderer","_ref5","isHighlightJs","highlightAuto","defaultAstGenerator","defaultStyle","highlighter","_ref7","_ref7$style","_ref7$customStyle","customStyle","_ref7$codeTagProps","codeTagProps","_ref7$useInlineStyles","_ref7$showLineNumbers","_ref7$showInlineLineN","_ref7$startingLineNum","lineNumberContainerStyle","_ref7$lineNumberStyle","_ref7$wrapLongLines","_ref7$lineProps","renderer","_ref7$PreTag","PreTag","_ref7$CodeTag","CodeTag","_ref7$code","allLineNumbers","defaultPreStyle","hljs","backgroundColor","generatorClassName","preProps","whiteSpace","defaultCodeValue","_ref6","hasLanguage","checkForListedLanguage","highlight","e","getCodeTree","supportedLanguages","MarkdownRenderer","SyntaxHighlighter","post","post__content","post__side","post__side__title","Post","pageContext","postContent","setPostContent","useState","setLoading","useEffect","fetch","path_resolved","mediaPath","console","fetchData","ContentsTree","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","whitespace","errorsList","msg","filename","silent","m","comments","val","decl","decls","declarations","__importDefault","mod","__esModule","inline_style_parser_1","hasIterator","spaces","commas","isNode","isChildren","parsePrimitives","positiveNumber","displayName","comma","datasetToProperty","datasetToAttribute","types","checksLength","xtend","ctx","window","g","Prism","manual","disableWorkerMessageHandler","markup","css","clike","js","Refractor","refract","register","grammar","languages","util","alias","registered","Token","stringifyAll","hooks","refractor","abap","lookbehind","keyword","punctuation","aliases","abnf","coreRules","greedy","terminal","actionscript","ada","variable","agda","function","al","antlr4","command","annotation","constant","g4","apacheconf","refractorSql","apex","keywords","insertClassName","classNameInside","sql","trigger","apl","statement","assignment","dfn","applescript","aql","refractorCpp","arduino","builtin","ino","arff","asciidoc","quoted","interpreted","specifiers","hr","admonition","callout","macro","inline","italic","bold","entity","copyFromAsciiDoc","o","l","adoc","asm6502","directive","asmatmel","refractorCsharp","aspnet","csharp","javascript","autohotkey","symbol","important","autoit","avisynth","replacements","allinternals","avs","avroIdl","avdl","bash","envVars","commandAfterHeredoc","insideString","environment","shebang","toBeCopied","shell","basic","batch","parameter","bbcode","shortcode","bicep","interpolation","datatype","decorator","birb","metadata","refractorC","bison","delimiter","bnf","rbnf","brainfuck","pointer","decrement","branching","brightscript","bro","bsl","oscript","cfscript","cfc","chaiscript","cpp","cil","clojure","cmake","inserted","cobol","level","coffeescript","script","coffee","concurnas","langext","conc","coq","commentSource","punct","modName","generic","refractorRuby","crystal","ruby","args","expansion","nested","depthLog2","keywordKinds","keywordsToPattern","words","typeDeclarationKeywords","nonTypeKeywords","nonContextualKeywords","nestedRound","genericName","array","typeExpressionWithoutTuple","tupleElement","typeExpression","typeInside","regularString","verbatimString","regularStringOrCharacter","regularStringCharacterOrComment","roundExpression","attrTarget","formatString","mInterpolationRound","mInterpolation","sInterpolationRound","sInterpolation","createInterpolationInside","interpolationRound","dotnet","cs","cshtml","commentLike","stringLike","round","square","curly","angle","tagAttrs","tagContent","tagRegion","block","razor","csp","hash","host","cssExtras","selectorInside","class","combinator","unit","hexcode","atrule","addInlined","addAttribute","csv","cypher","relationship","dart","packagePrefix","generics","dataweave","date","dax","measure","dhall","diff","coord","PREFIXES","unchanged","refractorMarkupTemplating","django","markupTemplating","buildPlaceholders","tokenizePlaceholders","jinja2","dnsZoneFile","docker","spaceAfterBackSlash","option","stringRule","commentRule","dockerfile","ID","IDInside","withID","gv","ebnf","special","editorconfig","section","eiffel","ejs","eta","elixir","atom","elm","hvariable","erb","erlang","refractorLua","etlua","lua","excelFormula","sheet","factor","comment_inside","string_inside","regexp","combinators","arrToWordsRegExp","builtins","$false","firestoreSecurityRules","fortran","fsharp","ftl","FTL_EXPR","gap","gcode","checksum","gdscript","gedcom","gherkin","pystring","feature","scenario","outline","td","th","git","deleted","glsl","gml","gamemakerlanguage","gn","gni","goModule","graphql","description","markdown","scalar","validTokens","currentIndex","startToken","inputVariables","isTokenType","getToken","definitionEnd","findClosingBracket","t","addAlias","mutationEnd","varToken","stackHeight","groovy","haml","doctype","filters","all_filters","handlebars","brackets","hbs","haskell","hs","haxe","reification","hcl","heredoc","hlsl","hoon","hpkp","hsts","http","headerValueOf","uri","header","langs","httpLanguages","plain","suffixTypes","getSuffixPattern","ichigojam","icuMessageFormat","stringPattern","argumentSource","nestedMessage","refractorHaskell","idris","idr","iecst","address","gitignore","hgignore","npmignore","inform7","substitution","verb","ini","io","adverb","conjunction","java","classNamePrefix","refractorJava","refractorJavadoclike","javadoc","codeLinePattern","memberReference","javadoclike","addSupport","javaDocLike","docLanguage","tokenName","docCommentSupport","hashbang","javastacktrace","exceptions","jexl","jolie","aggregates","redirects","jq","stringInterpolation","jsExtras","withId","imports","arrow","dom","maybeClassNameTokens","jsTemplates","templateString","templateLiteralPattern","interpolationObject","interpolationPunctuationObject","interpolationPattern","createTemplate","getPlaceholder","tokenizeWithHooks","tokenizeInterpolationExpression","tempGrammar","tokenizeEmbedded","_tokens","placeholderCounter","placeholderMap","embeddedTokens","interpolationExpression","placeholders","walkTokens","middle","afterTokens","typescript","ts","tsx","stringContent","findTemplateStrings","embedded","refractorTypescript","jsdoc","parameterPrefix","example","webmanifest","refractorJson","json5","jsonp","jsstacktrace","braces","stringifyToken","openedTags","notTagNorBrace","openedBraces","plainText","julia","keepalived","ip","keyman","kotlin","interpolationInside","kt","kts","kumir","nonId","wrapId","prolog","kum","kusto","datetime","latex","funcPattern","insideEqu","equation","headline","tex","refractorPhp","latte","php","markupLatte","less","refractorScheme","lilypond","schemeExpression","ly","liquid","insideRaw","tagMatch","lisp","simple_form","primitive","par","nestedPar","interactive","defvar","defun","lambda","car","arg","varform","forms","arglist","sublist","elisp","emacs","livescript","llvm","log","exception","separator","uuid","time","lolcode","magma","generator","makefile","inner","createInline","tableLine","strike","codeLang","codeBlock","cls","tagPattern","known","KNOWN_ENTITY_NAMES","autoloader","floor","random","loadLanguages","ele","getElementById","amp","lt","gt","quot","md","placeholderPattern","replaceFilter","includedCdataInside","ssml","rss","matlab","maxscript","mel","flag","mermaid","mizar","mongodb","operators","operatorsSource","monkey","moonscript","moon","n1ql","n4js","n4jsd","nand2tetrisHdl","naniscript","expressionDef","params","getTextContent","define","nani","bracket","bracketsIndex","isBracketsBalanced","nasm","neon","literal","nevod","quantifier","nginx","nim","nix","antiquotation","nsis","objectivec","objc","ocaml","variant","opencl","openqasm","qasm","oz","parigp","pascal","asm","objectpascal","pascaligo","accum","pcaxis","tlist","px","peoplecode","pcode","perl","filehandle","phpExtras","package","string_interpolation","phpdoc","plsql","powerquery","pq","mscript","powershell","processing","promql","vectorMatching","protobuf","builtinTypes","psl","pug","each","branch","mixin","filter_pattern","puppet","pure","inlineLanguageRe","purebasic","pbfasm","purescript","purs","python","py","q","qml","jsString","jsComment","jsExpr","qore","qsharp","qualifiedName","interpolationExpr","qs","ellipsis","racket","rkt","specialEscape","rangeChar","backreference","anchor","alternation","rego","renpy","rpy","rip","roboconf","component","wildcard","robotframework","createSection","extendecInside","docTag","testNameLike","testPropertyLike","documentation","variables","tasks","robot","percentExpression","symbolName","rb","rust","multilineComment","sas","numericConstant","macroVariable","macroKeyword","equals","altformat","globalStatements","submitStatement","actionSets","casActions","datalines","sass","scala","SortedBNF","scss","refractorBash","shellSession","strings","user","smali","smalltalk","smarty","smartyPattern","smartyLiteralMode","sml","word","smlnj","solidity","sol","solutionFile","guid","soy","numberPattern","soyLitteralMode","refractorTurtle","sparql","rq","splunkSpl","sqf","squirrel","stan","higherOrderFunctions","constraint","stylus","swift","nil","omit","systemd","quotesSource","refractorT4Templating","t4Cs","t4","createT4","t4Templating","createBlock","contentAlias","insideLang","standard","refractorVbnet","t4Vb","refractorYaml","tap","pass","pragma","bailout","plan","subtest","yamlish","tcl","textile","modifierRegex","parenthesesRegex","withModifier","modifierTokens","phrase","modifier","footnote","acronym","phraseInside","nestedPatterns","phraseInlineInside","phraseTableInside","insertKey","tremor","extractor","troy","trickle","refractorJsx","tt2","turtle","trig","twig","typoscript","tsconfig","unrealscript","category","uc","uscript","uorazor","query","authority","port","v","vala","refractorBasic","vbnet","velocity","unparsed","verilog","vhdl","vim","visualBasic","vb","vba","warpscript","wasm","webIdl","wiki","nowiki","wolfram","mathematica","wl","nb","wren","xeora","xeoracube","xmlDoc","insertDocComment","docComment","slashDocComment","tickDocComment","xojo","xquery","anchorOrAlias","plainKey","createValuePattern","yml","yang","zig","IDENTIFIER","ALIGN","alphabetical","decimal","el","characters","legacy","hexadecimal","alphanumerical","decodeEntity","defaults","entityCharacters","namedEntity","terminated","following","warning","prev","additional","nonTerminated","handleText","handleReference","handleWarning","textContext","referenceContext","warningContext","queue","parseError","noop","lineFeed","ampersand","formFeed","lessThan","uppercaseX","lowercaseX","hexa","deci","semicolon","namedUnknown","namedNotTerminated","namedEmpty","equalsTo","numericNotTerminated","prohibited","bases","numericProhibited","replacementCharacter","numericDisallowed","disallowed","numericEmpty","flush","Function","_self","uniqueId","plainTextGrammar","objId","deepClone","visited","getLanguage","parentElement","setLanguage","classList","currentScript","scripts","getElementsByTagName","isActive","defaultActivation","no","plaintext","txt","redef","insert","newToken","old","DFS","propertyType","highlightAll","highlightAllUnder","container","elements","querySelectorAll","highlightElement","insertHighlightedCode","highlightedCode","hasAttribute","setAttribute","Worker","worker","onmessage","evt","postMessage","immediateClose","tokenList","LinkedList","addAfter","matchGrammar","toArray","callbacks","matchedStr","matchPattern","lookbehindLength","startNode","startPos","rematch","patterns","patternObj","currentNode","reach","removeCount","matchStr","removeFrom","removeRange","nestedRematch","addEventListener","highlightAutomaticallyCallback","readyState","requestAnimationFrame","setTimeout","WorkerGlobalScope","arr2","arrayLikeToArray","toPropertyKey","_extends","bind","iter","objectWithoutPropertiesLoose","excluded","sourceSymbolKeys","propertyIsEnumerable","sourceKeys","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","_typeof","toPrimitive","minLen","n"],"sourceRoot":""}