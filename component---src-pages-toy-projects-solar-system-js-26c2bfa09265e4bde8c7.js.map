{"version":3,"file":"component---src-pages-toy-projects-solar-system-js-26c2bfa09265e4bde8c7.js","mappings":"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","sources":["webpack://my-blog/./node_modules/@react-three/drei/core/BBAnchor.js","webpack://my-blog/./src/components/Planet.js","webpack://my-blog/./src/pages/toy-projects/SolarSystem.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useFrame } from '@react-three/fiber';\n\nconst boundingBox = /* @__PURE__ */new THREE.Box3();\nconst boundingBoxSize = /* @__PURE__ */new THREE.Vector3();\nconst BBAnchor = ({\n  anchor,\n  ...props\n}) => {\n  const ref = React.useRef(null);\n  const parentRef = React.useRef(null);\n\n  // Reattach group created by this component to the parent's parent,\n  // so it becomes a sibling of its initial parent.\n  // We do that so the children have no impact on a bounding box of a parent.\n  React.useEffect(() => {\n    var _ref$current;\n    if ((_ref$current = ref.current) != null && (_ref$current = _ref$current.parent) != null && _ref$current.parent) {\n      parentRef.current = ref.current.parent;\n      ref.current.parent.parent.add(ref.current);\n    }\n  }, []);\n  useFrame(() => {\n    if (parentRef.current) {\n      boundingBox.setFromObject(parentRef.current);\n      boundingBox.getSize(boundingBoxSize);\n      ref.current.position.set(parentRef.current.position.x + boundingBoxSize.x * (Array.isArray(anchor) ? anchor[0] : anchor.x) / 2, parentRef.current.position.y + boundingBoxSize.y * (Array.isArray(anchor) ? anchor[1] : anchor.y) / 2, parentRef.current.position.z + boundingBoxSize.z * (Array.isArray(anchor) ? anchor[2] : anchor.z) / 2);\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: ref\n  }, props));\n};\n\nexport { BBAnchor };\n","import React, { useState, useRef } from \"react\";\r\nimport { useFrame } from \"@react-three/fiber\";\r\nimport { useGLTF, Text3D, BBAnchor } from \"@react-three/drei\";\r\n\r\nimport taebaekJsonPath from \"../../static/fonts/TAEBAEK-Regular.json\";\r\nimport { MeshNormalMaterial, Vector3 } from \"three\";\r\n\r\nexport default function Planet(props) {\r\n  const { name, link, filePath, heightOffset, rotateSpeed, orbitRadius, orbitSpeed, defaultScale } = props;\r\n  const [isHovered, setHover] = useState(false);\r\n  const hoverStartTime = useRef(0);\r\n  const totalHoverTime = useRef(0);\r\n  const cameraPosition = useRef({});\r\n  const cameraAngle = useRef({});\r\n\r\n  const handleHover = () => setHover(true);\r\n  const handleLeave = () => setHover(false);\r\n  const handleClick = () => {\r\n    window.location.href = `${process.env.GATSBY_PUBLIC_URL}/${link}`; \r\n  };\r\n\r\n  const { scene } = useGLTF(`${process.env.GATSBY_FILESERVER_URL}/${filePath}`);\r\n  const planetRef = useRef();\r\n  useFrame((state) => {\r\n    if (planetRef.current) {\r\n      planetRef.current.position.y = heightOffset; // set y axis offset\r\n      cameraAngle.current = state.camera.rotation; // save current camera angle\r\n      cameraPosition.current = state.camera.position; // save current camera position\r\n      \r\n      const elapsedTime = state.clock.getElapsedTime(); // get the elapsed time\r\n\r\n      if (isHovered && hoverStartTime.current === 0) {\r\n        hoverStartTime.current = elapsedTime;\r\n      } else if (!isHovered && hoverStartTime.current) {\r\n        totalHoverTime.current += elapsedTime - hoverStartTime.current;\r\n        hoverStartTime.current = 0;\r\n      } else if (!isHovered) {\r\n        hoverStartTime.current = 0;\r\n      }\r\n\r\n      // Update the scale based on time elased after hover\r\n      const hoverElapsedTime = elapsedTime - hoverStartTime.current;\r\n      const scaleMotionFrame = 1;\r\n      const scaleMotionSpeed = 4;\r\n      const maxScaleRatio = 1.5;\r\n      var scaleRatio;\r\n      if (hoverStartTime.current) { // hoverStartTime used instead of isHovered because isHovered cause flickering in motion \r\n        scaleRatio = Math.max(1, maxScaleRatio - Math.pow(Math.max(0, scaleMotionFrame - hoverElapsedTime), scaleMotionSpeed));\r\n      } else {\r\n        scaleRatio = 1;\r\n      }\r\n      const scale = [defaultScale*scaleRatio, defaultScale*scaleRatio, defaultScale*scaleRatio];\r\n      planetRef.current.scale.set(...scale);\r\n\r\n      if (!hoverStartTime.current) {\r\n        // Update the position based on the orbit equation (when not hovered)\r\n        planetRef.current.position.x = Math.cos((elapsedTime - totalHoverTime.current)* orbitSpeed) * orbitRadius;\r\n        planetRef.current.position.z = Math.sin((elapsedTime - totalHoverTime.current)* orbitSpeed) * orbitRadius;\r\n      \r\n        // Rotate by given speed (when not hovered)\r\n        planetRef.current.rotation.y -= rotateSpeed;\r\n      }\r\n    }\r\n  });\r\n\r\n  var textVec = new Vector3(0, 0, 0);\r\n  const textDistance = 200;\r\n  if (planetRef.current && cameraAngle.current) {\r\n    const vecCurr = new Vector3(\r\n      cameraPosition.current.x-planetRef.current.position.x,\r\n      cameraPosition.current.y-planetRef.current.position.y,\r\n      cameraPosition.current.z-planetRef.current.position.z,\r\n    );\r\n    textVec = vecCurr.normalize().multiplyScalar(textDistance);\r\n  }\r\n\r\n  const planetMaterial = new MeshNormalMaterial();\r\n  return (\r\n    <group>\r\n      {isHovered && planetRef.current && cameraAngle.current && (\r\n        <BBAnchor anchor={[0.3, 0.3, 0.3]}> \r\n          <Text3D\r\n          position={[ // set the position of the text same as object\r\n            planetRef.current.position.x+textVec.x,\r\n            planetRef.current.position.y+textVec.y,\r\n            planetRef.current.position.z+textVec.z\r\n          ]}\r\n          rotation={[ // set the angle of the text to face camera\r\n            cameraAngle.current.x,\r\n            cameraAngle.current.y,\r\n            cameraAngle.current.z\r\n          ]}\r\n          font={taebaekJsonPath} // font type\r\n          size={50} // set the font size\r\n          height={40}\r\n          material={planetMaterial}>\r\n          {name}\r\n          </Text3D>\r\n        </BBAnchor>\r\n      )}\r\n      \r\n      <primitive \r\n        onPointerOver={handleHover}\r\n        onPointerOut={handleLeave}\r\n        onClick={handleClick}\r\n        object={scene}\r\n        ref={planetRef}\r\n        {...props}\r\n      />\r\n    </group>\r\n  );\r\n}","import React, { useRef } from \"react\";\r\nimport { Canvas } from \"@react-three/fiber\";\r\nimport { Stage, PerspectiveCamera, CameraControls } from \"@react-three/drei\";\r\n\r\nimport Planet from \"../../components/Planet\";\r\n\r\nexport default function SolarSystem() {\r\n  const cameraRef = useRef();\r\n\r\n  return (\r\n    <div style={{\r\n      width: \"100vw\", \r\n      height:\"100vh\", \r\n      backgroundImage:\"linear-gradient(to top left, rgb(40, 40, 60), rgb(0, 0, 20)\"}}>\r\n      <Canvas dpr={[1,2]} shadows={false}>\r\n        <PerspectiveCamera ref={cameraRef} makeDefault fov={45} near={1} far={100000} position={[0, 500, 1000]} />\r\n        <CameraControls camera={cameraRef.current} minDistance={750} maxDistance={2500} azimuthRotateSpeed={0.3} polarRotateSpeed={0.5} dollySpeed={0.5} />\r\n        <Stage camera={cameraRef.current} preset={\"soft\"} shadows={false} adjustCamera={false}>\r\n          <Planet name={\"bill0077\"} link={`/`} filePath={\"models/solarsystem/Earth.glb\"} heightOffset={150} rotateSpeed={0.002} orbitRadius={0} orbitSpeed={0} defaultScale={15}/>\r\n          <Planet name={\"my-blog\"} link={`myblog-dev-log`} filePath={\"models/solarsystem/Moon.glb\"} heightOffset={150} rotateSpeed={0.025} orbitRadius={250} orbitSpeed={1} defaultScale={1.2}/>\r\n          <Planet name={\"devops\"} link={`devops`} filePath={\"models/solarsystem/Jupiter.glb\"} heightOffset={150} rotateSpeed={-0.01} orbitRadius={400} orbitSpeed={-0.5} defaultScale={0.6}/>\r\n          <Planet name={\"etc\"} link={`etc`} filePath={\"models/solarsystem/Venus.glb\"} heightOffset={150} rotateSpeed={0.02} orbitRadius={550} orbitSpeed={0.25} defaultScale={0.4}/>              \r\n          <Planet name={\"etc\"} link={`etc`} filePath={\"models/solarsystem/Neptune.glb\"} heightOffset={150} rotateSpeed={0.005} orbitRadius={650} orbitSpeed={0.05} defaultScale={1.75}/>\r\n          <Planet name={\"etc\"} link={`etc`} filePath={\"models/solarsystem/Saturn.glb\"} heightOffset={150} rotateSpeed={0} orbitRadius={800} orbitSpeed={-0.1} defaultScale={100}/>\r\n        </Stage>\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}"],"names":["boundingBox","boundingBoxSize","BBAnchor","anchor","props","ref","parentRef","_ref$current","current","parent","add","setFromObject","getSize","position","set","x","Array","isArray","y","z","Planet","name","link","filePath","heightOffset","rotateSpeed","orbitRadius","orbitSpeed","defaultScale","isHovered","setHover","useState","hoverStartTime","useRef","totalHoverTime","cameraPosition","cameraAngle","scene","useGLTF","process","planetRef","useFrame","state","_planetRef$current$sc","camera","rotation","elapsedTime","clock","getElapsedTime","hoverElapsedTime","scaleMotionFrame","scaleMotionSpeed","maxScaleRatio","scaleRatio","Math","max","pow","scale","apply","cos","sin","textVec","Vector3","normalize","multiplyScalar","planetMaterial","MeshNormalMaterial","React","Text3D","font","taebaekJsonPath","size","height","material","Object","assign","onPointerOver","handleHover","onPointerOut","handleLeave","onClick","handleClick","window","location","href","object","SolarSystem","cameraRef","style","width","backgroundImage","Canvas","dpr","shadows","PerspectiveCamera","makeDefault","fov","near","far","CameraControls","minDistance","maxDistance","azimuthRotateSpeed","polarRotateSpeed","dollySpeed","Stage","preset","adjustCamera"],"sourceRoot":""}